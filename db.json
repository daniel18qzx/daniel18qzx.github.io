{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/keep/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/keep/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/images/avatar.svg","path":"images/avatar.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/bg.svg","path":"images/bg.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/loading.svg","path":"images/loading.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/js/back2top.js","path":"js/back2top.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/code-copy.js","path":"js/code-copy.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/dark-light-toggle.js","path":"js/dark-light-toggle.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/header-shrink.js","path":"js/header-shrink.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/lazyload.js","path":"js/lazyload.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/left-side-toggle.js","path":"js/left-side-toggle.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.eot","path":"webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.svg","path":"webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.ttf","path":"webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff","path":"webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff2","path":"webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.eot","path":"webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.svg","path":"webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.ttf","path":"webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff","path":"webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff2","path":"webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.eot","path":"webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.svg","path":"webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.ttf","path":"webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff","path":"webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff2","path":"webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/basic.styl","path":"css/common/basic.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/animated.styl","path":"css/common/animated.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/keep-theme.styl","path":"css/common/keep-theme.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/markdown.styl","path":"css/common/markdown.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/js/libs/anime.min.js","path":"js/libs/anime.min.js","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/variables.styl","path":"css/common/variables.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/js/libs/pjax.min.js","path":"js/libs/pjax.min.js","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/archive-content.styl","path":"css/layout/archive-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/article-content.styl","path":"css/layout/article-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/category-content.styl","path":"css/layout/category-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/category-list.styl","path":"css/layout/category-list.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/home-content.styl","path":"css/layout/home-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/page.styl","path":"css/layout/page.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/tag-content.styl","path":"css/layout/tag-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/code-theme.styl","path":"css/common/codeblock/code-theme.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/highlight.styl","path":"css/common/codeblock/highlight.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/copy-code.styl","path":"css/common/codeblock/copy-code.styl","modified":0,"renderable":1},{"_id":"source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":0},{"_id":"source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":0},{"_id":"source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":0},{"_id":"source/images/pasted-0.png","path":"images/pasted-0.png","modified":0,"renderable":0},{"_id":"source/ipynb/2019-06-23_Python基本语法.ipynb","path":"ipynb/2019-06-23_Python基本语法.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-06-24_Matplotlib基本语法.ipynb","path":"ipynb/2019-06-24_Matplotlib基本语法.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-06-25_Numpy基本语法.ipynb","path":"ipynb/2019-06-25_Numpy基本语法.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-06-28_Pandas基本语法.ipynb","path":"ipynb/2019-06-28_Pandas基本语法.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-06-30_数据抽取.ipynb","path":"ipynb/2019-06-30_数据抽取.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-06-30_数据抽取_data1.csv","path":"ipynb/2019-06-30_数据抽取_data1.csv","modified":0,"renderable":0},{"_id":"source/ipynb/2019-06-30_数据抽取_data2.csv","path":"ipynb/2019-06-30_数据抽取_data2.csv","modified":0,"renderable":0},{"_id":"source/ipynb/2019-07-01_两股票历史价格比较.ipynb","path":"ipynb/2019-07-01_两股票历史价格比较.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-07-02_基本爬虫.ipynb","path":"ipynb/2019-07-02_基本爬虫.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-07-05_链家网房源.ipynb","path":"ipynb/2019-07-05_链家网房源.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-07-06_正則表達式.ipynb","path":"ipynb/2019-07-06_正則表達式.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-07-14_Scipy基本语法.ipynb","path":"ipynb/2019-07-14_Scipy基本语法.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-07-14_线性回归.ipynb","path":"ipynb/2019-07-14_线性回归.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-07-20_梯度下降.ipynb","path":"ipynb/2019-07-20_梯度下降.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-07-21_支持向量机.ipynb","path":"ipynb/2019-07-21_支持向量机.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-07-23_朴素贝叶斯.ipynb","path":"ipynb/2019-07-23_朴素贝叶斯.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-07-29_决策树.ipynb","path":"ipynb/2019-07-29_决策树.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-08-01_数据理解与清洗.ipynb","path":"ipynb/2019-08-01_数据理解与清洗.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-08-01_金融数据描述_data1.csv","path":"ipynb/2019-08-01_金融数据描述_data1.csv","modified":0,"renderable":0},{"_id":"source/ipynb/2019-08-04_特征工程.ipynb","path":"ipynb/2019-08-04_特征工程.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-08-07_6种分类模型比较.ipynb","path":"ipynb/2019-08-07_6种分类模型比较.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-08-10_网格搜寻.ipynb","path":"ipynb/2019-08-10_网格搜寻.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-08-15_泰坦尼克之灾_gender_submission.csv","path":"ipynb/2019-08-15_泰坦尼克之灾_gender_submission.csv","modified":0,"renderable":0},{"_id":"source/ipynb/2019-08-15_泰坦尼克之灾_predictions.csv","path":"ipynb/2019-08-15_泰坦尼克之灾_predictions.csv","modified":0,"renderable":0},{"_id":"source/ipynb/2019-08-15_泰坦尼克之灾_test.csv","path":"ipynb/2019-08-15_泰坦尼克之灾_test.csv","modified":0,"renderable":0},{"_id":"source/ipynb/2019-08-15_泰坦尼克之灾_train.csv","path":"ipynb/2019-08-15_泰坦尼克之灾_train.csv","modified":0,"renderable":0},{"_id":"source/ipynb/2019-08-15_泰坦尼克之灾（六大模型baseline）.ipynb","path":"ipynb/2019-08-15_泰坦尼克之灾（六大模型baseline）.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-08-17_集成学习（以随机森林与adaboosting为例）.ipynb","path":"ipynb/2019-08-17_集成学习（以随机森林与adaboosting为例）.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-08-22_数据仓库设计.ipynb","path":"ipynb/2019-08-22_数据仓库设计.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-08-26_堆糖图片多线程抓取.ipynb","path":"ipynb/2019-08-26_堆糖图片多线程抓取.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-08-28_Sklearn基本语法.ipynb","path":"ipynb/2019-08-28_Sklearn基本语法.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-09-01_Pandas移动窗口.ipynb","path":"ipynb/2019-09-01_Pandas移动窗口.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-09-03_随机森林.ipynb","path":"ipynb/2019-09-03_随机森林.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-09-06_AdaBoost.ipynb","path":"ipynb/2019-09-06_AdaBoost.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-09-08_LeetCode 262_行程和用户.ipynb","path":"ipynb/2019-09-08_LeetCode 262_行程和用户.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-09-10_LeetCode 185_部门工资前三高的所有员工.ipynb","path":"ipynb/2019-09-10_LeetCode 185_部门工资前三高的所有员工.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/2019-09-11_LeetCode 601_体育馆的人流量.ipynb","path":"ipynb/2019-09-11_LeetCode 601_体育馆的人流量.ipynb","modified":0,"renderable":0},{"_id":"source/ipynb/[范例] 2019-07-14_线性回归.ipynb","path":"ipynb/[范例] 2019-07-14_线性回归.ipynb","modified":0,"renderable":0},{"_id":"source/img/2019-06-24_Matplotlib基本语法_1.png","path":"img/2019-06-24_Matplotlib基本语法_1.png","modified":0,"renderable":0},{"_id":"source/img/2019-06-24_Matplotlib基本语法_2.png","path":"img/2019-06-24_Matplotlib基本语法_2.png","modified":0,"renderable":0},{"_id":"source/img/2019-06-24_Matplotlib基本语法_3.png","path":"img/2019-06-24_Matplotlib基本语法_3.png","modified":0,"renderable":0},{"_id":"source/img/2019-06-24_Matplotlib基本语法_4.png","path":"img/2019-06-24_Matplotlib基本语法_4.png","modified":0,"renderable":0},{"_id":"source/img/2019-06-24_Matplotlib基本语法_5.png","path":"img/2019-06-24_Matplotlib基本语法_5.png","modified":0,"renderable":0},{"_id":"source/img/2019-06-24_Matplotlib基本语法_6.png","path":"img/2019-06-24_Matplotlib基本语法_6.png","modified":0,"renderable":0},{"_id":"source/img/2019-07-01_两股票历史价格比较_1.png","path":"img/2019-07-01_两股票历史价格比较_1.png","modified":0,"renderable":0},{"_id":"source/img/2019-07-14_线性回归_1.png","path":"img/2019-07-14_线性回归_1.png","modified":0,"renderable":0},{"_id":"source/img/2019-07-14_线性回归_2.png","path":"img/2019-07-14_线性回归_2.png","modified":0,"renderable":0},{"_id":"source/img/2019-07-14_线性回归_3.png","path":"img/2019-07-14_线性回归_3.png","modified":0,"renderable":0},{"_id":"source/img/2019-07-29_决策树_1.png","path":"img/2019-07-29_决策树_1.png","modified":0,"renderable":0},{"_id":"source/img/2019-07-29_决策树_2.png","path":"img/2019-07-29_决策树_2.png","modified":0,"renderable":0},{"_id":"source/img/2019-07-29_决策树_3.png","path":"img/2019-07-29_决策树_3.png","modified":0,"renderable":0},{"_id":"source/img/2019-07-29_决策树_4.png","path":"img/2019-07-29_决策树_4.png","modified":0,"renderable":0},{"_id":"source/img/2019-07-29_决策树_5.png","path":"img/2019-07-29_决策树_5.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-01_金融数据描述_1.png","path":"img/2019-08-01_金融数据描述_1.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-01_金融数据描述_10.png","path":"img/2019-08-01_金融数据描述_10.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-01_金融数据描述_2.png","path":"img/2019-08-01_金融数据描述_2.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-01_金融数据描述_3.png","path":"img/2019-08-01_金融数据描述_3.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-01_金融数据描述_4.png","path":"img/2019-08-01_金融数据描述_4.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-01_金融数据描述_5.png","path":"img/2019-08-01_金融数据描述_5.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-01_金融数据描述_6.png","path":"img/2019-08-01_金融数据描述_6.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-01_金融数据描述_7.png","path":"img/2019-08-01_金融数据描述_7.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-01_金融数据描述_8.png","path":"img/2019-08-01_金融数据描述_8.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-01_金融数据描述_9.png","path":"img/2019-08-01_金融数据描述_9.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-07_5种分类模型比较_1.png","path":"img/2019-08-07_5种分类模型比较_1.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-07_5种分类模型比较_2.png","path":"img/2019-08-07_5种分类模型比较_2.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-07_5种分类模型比较_3.png","path":"img/2019-08-07_5种分类模型比较_3.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-07_5种分类模型比较_4.png","path":"img/2019-08-07_5种分类模型比较_4.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-07_5种分类模型比较_5.png","path":"img/2019-08-07_5种分类模型比较_5.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-07_5种分类模型比较_6.png","path":"img/2019-08-07_5种分类模型比较_6.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-10_网格搜寻_1.png","path":"img/2019-08-10_网格搜寻_1.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-15_泰坦尼克之灾_1.png","path":"img/2019-08-15_泰坦尼克之灾_1.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-15_泰坦尼克之灾_10.png","path":"img/2019-08-15_泰坦尼克之灾_10.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-15_泰坦尼克之灾_11.png","path":"img/2019-08-15_泰坦尼克之灾_11.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-15_泰坦尼克之灾_12.png","path":"img/2019-08-15_泰坦尼克之灾_12.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-15_泰坦尼克之灾_13.png","path":"img/2019-08-15_泰坦尼克之灾_13.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-15_泰坦尼克之灾_2.png","path":"img/2019-08-15_泰坦尼克之灾_2.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-15_泰坦尼克之灾_3.png","path":"img/2019-08-15_泰坦尼克之灾_3.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-15_泰坦尼克之灾_4.png","path":"img/2019-08-15_泰坦尼克之灾_4.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-15_泰坦尼克之灾_5.png","path":"img/2019-08-15_泰坦尼克之灾_5.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-15_泰坦尼克之灾_6.png","path":"img/2019-08-15_泰坦尼克之灾_6.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-15_泰坦尼克之灾_7.png","path":"img/2019-08-15_泰坦尼克之灾_7.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-15_泰坦尼克之灾_8.png","path":"img/2019-08-15_泰坦尼克之灾_8.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-15_泰坦尼克之灾_9.png","path":"img/2019-08-15_泰坦尼克之灾_9.png","modified":0,"renderable":0},{"_id":"source/img/2019-08-22_数据仓库设计_1.png","path":"img/2019-08-22_数据仓库设计_1.png","modified":0,"renderable":0},{"_id":"source/img/2019-09-01_Pandas移动窗口.png","path":"img/2019-09-01_Pandas移动窗口.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/2019-06-24_Matplotlib.md","hash":"16f85ddd56864140dd0a160b22ec591234b327f7","modified":1617717449935},{"_id":"source/_posts/2019-06-23_Python.md","hash":"29bc5e3bf5a1d84f9c98252f2eb11db015e5ff47","modified":1617717447839},{"_id":"source/_posts/2019-06-25_Numpy.md","hash":"478d73f9aa794f7d5eeff37a7a2b876c6941929e","modified":1617717451992},{"_id":"source/_posts/2019-06-28_Pandas.md","hash":"c7d1caa93226ef094cd0c330c77e3343408cd068","modified":1617717454574},{"_id":"source/_posts/2019-06-30_数据抽取.md","hash":"9a09620c6885c69f74d38ccdde4a6e9185683d25","modified":1617717037333},{"_id":"source/_posts/2019-07-01_两股票历史价格比较.md","hash":"192a0b699722c9d08612f54543bef58aeaa9fbfd","modified":1617298587032},{"_id":"source/_posts/2019-07-05_链家网房源.md","hash":"c6d47836e2f3d7e2a989772ff4a49206bf3c2c19","modified":1617298591260},{"_id":"source/_posts/2019-07-06_正則表達式.md","hash":"2d7f638a54b5f2373447dfbaa2290335cb8f33a6","modified":1617717466053},{"_id":"source/_posts/2019-07-14_线性回归.md","hash":"660bf8f5400363d405641dc9266eb9574a7fe676","modified":1617717378568},{"_id":"source/_posts/2019-07-14_Scipy.md","hash":"3f2db43291393012cc4b6eddad474d61f4111116","modified":1617717468083},{"_id":"source/_posts/2019-07-20_梯度下降.md","hash":"25b892ae1fcb3d6304a3355f15f31a7ad44d7939","modified":1617717357421},{"_id":"source/_posts/2019-07-21_支持向量机.md","hash":"67d973c29a70bb8e9fe1fa14d3807e23051be971","modified":1617717257081},{"_id":"source/_posts/2019-07-23_朴素贝叶斯.md","hash":"284678878bfbc50a18832852d6b3552ae06734ab","modified":1617729693100},{"_id":"source/_posts/2019-07-29_决策树.md","hash":"24eeda21383d33c2c8b56dca9eb0e908be9ab1db","modified":1617717242171},{"_id":"source/_posts/2019-08-04_特征工程.md","hash":"14d89c2aee8b37db88d398da407c9fa0cf562f95","modified":1617717049382},{"_id":"source/_posts/2019-08-07_6种分类模型比较.md","hash":"a5eef80a86d1705f4842c15814a94a1354938c42","modified":1617716978273},{"_id":"source/_posts/2019-08-10_网格搜寻.md","hash":"faa3719c11ed44d868441763fa1f6e60f0e2f186","modified":1617716974423},{"_id":"source/_posts/2019-08-17_集成學習基本介紹.md","hash":"87ba1dc5ac9c9db8798e13a821573c059318087c","modified":1617718659742},{"_id":"source/_posts/2019-08-15_泰坦尼克之灾.md","hash":"8778bb6059b82bc059def10d531d413cd46ab8a8","modified":1617298608145},{"_id":"source/_posts/2019-08-22_数据仓库设计.md","hash":"4971b5d4af1f53f426f81ff5b7a027e0e9d63920","modified":1617298611842},{"_id":"source/_posts/2019-08-26_堆糖图片多线程抓取.md","hash":"6192c100f7e6283eacfa910bfb0c7c7c4c780c5c","modified":1617298613294},{"_id":"source/_posts/2019-08-28_Sklearn.md","hash":"0bcd083168881ed06e5c01cb55865b8b289b8673","modified":1617717479081},{"_id":"source/_posts/2019-09-01_Pandas移动窗口.md","hash":"18fc2ac0e90d22304e6d129f583af65590dee679","modified":1617717481486},{"_id":"source/_posts/2019-09-03_随机森林.md","hash":"6b32f7c6eb3b20fd635bf4e0858ac148700d84a6","modified":1617717139177},{"_id":"source/_posts/2019-09-06_AdaBoost.md","hash":"de5b8fef730517f821daa3cb896d24cd24da8717","modified":1617717090681},{"_id":"source/_posts/2019-09-08_LeetCode+262_行程和用户.md","hash":"f38118264ba8874eeafc8d2c0cce7d3a89094603","modified":1617298621031},{"_id":"source/_posts/2019-09-10_LeetCode+185_部门工资前三高的所有员工.md","hash":"93f4f2bdad911593dc5dc869b2e788ab9c0dc055","modified":1617298622065},{"_id":"source/_posts/2019-09-11_LeetCode+601_体育馆的人流量.md","hash":"7178ed6fc9f242f9d8259d7c3621217b8ef55cbb","modified":1617298623496},{"_id":"source/_posts/2021-04-06_探索性数据分析.md","hash":"3d0c75157046b423a3a412b26f4cabd7d86a5b58","modified":1617732022978},{"_id":"source/categories/index.md","hash":"602c1caee51c47a02e72ed2c001d1f17adbed69f","modified":1566576520281},{"_id":"source/_drafts/算法目录.md","hash":"d54e3e1be41f6e52d279fb18207aaff60d17f2cf","modified":1617718111420},{"_id":"source/archives/index.md","hash":"4902d455a0827213771602038c227370c9af1600","modified":1566576520280},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1569000614113},{"_id":"source/images/avatar.jpg","hash":"5926dfb121fd97163750f202bd339e73ead750a4","modified":1617293870645},{"_id":"source/images/favicon.png","hash":"caaf7612f00fe478dd99884a286af0ddeabb8777","modified":1617263498000},{"_id":"source/images/favicon.ico","hash":"d15f2570b45221394404c76c60e085ac30f06e04","modified":1617263498000},{"_id":"source/.DS_Store","hash":"589954fc90e806489e15952a60e44f8923a752ae","modified":1617293790581},{"_id":"source/ipynb/2019-06-23_Python基本语法.ipynb","hash":"cceb6cb625ad267076274ffb2dce9228b6f807da","modified":1566576520315},{"_id":"source/ipynb/2019-06-24_Matplotlib基本语法.ipynb","hash":"84cc80a1a0f44ea170c3ee4268f1cb43e68e5bcb","modified":1566576520315},{"_id":"source/ipynb/.DS_Store","hash":"0db8832692d72409a9471beb111139af53f5db50","modified":1617285194894},{"_id":"source/ipynb/2019-06-25_Numpy基本语法.ipynb","hash":"85dc9d478ebd04e6b8079878c1d1305c24abbbba","modified":1566576520316},{"_id":"source/ipynb/2019-06-28_Pandas基本语法.ipynb","hash":"41e5b014ec2aa640d33ae3b6a78912ec3d635f4a","modified":1566576520316},{"_id":"source/ipynb/2019-06-30_数据抽取.ipynb","hash":"b990a30252cd3db68bb67d85ea50a0f1113dea8f","modified":1566576520318},{"_id":"source/ipynb/2019-06-30_数据抽取_data1.csv","hash":"0d30fcf72c64638cbb2d793983db9a1272b1feb0","modified":1566576520318},{"_id":"source/ipynb/2019-06-30_数据抽取_data2.csv","hash":"8e4e280ef2879b9e4ae3e9261db354d980c378c4","modified":1566576520318},{"_id":"source/ipynb/2019-07-01_两股票历史价格比较.ipynb","hash":"4b8ed638d519cdefdb50372510e43e1830f185ca","modified":1566576520318},{"_id":"source/ipynb/2019-07-05_链家网房源.ipynb","hash":"b8db897fe36de386333b71861b4c25e7bfaf8d50","modified":1566576520319},{"_id":"source/ipynb/2019-07-06_正則表達式.ipynb","hash":"c26b6700c9fa29eff2a0ad29935770d418df7905","modified":1566576520319},{"_id":"source/ipynb/2019-07-14_Scipy基本语法.ipynb","hash":"bc3e88cf9295f521a977511ee6172e9558e02642","modified":1566576520319},{"_id":"source/ipynb/2019-07-14_线性回归.ipynb","hash":"f52bf55e695f1dcc26a0e65ac11e36a389fc8941","modified":1566576520319},{"_id":"source/ipynb/2019-07-20_梯度下降.ipynb","hash":"63663ac28ff204013d98546afc96e998e3e2c387","modified":1567342809132},{"_id":"source/ipynb/2019-07-21_支持向量机.ipynb","hash":"949307313097f71914a8c5fff0f9e0925221230c","modified":1566627470526},{"_id":"source/ipynb/2019-07-23_朴素贝叶斯.ipynb","hash":"43192e0ca8491476fb836eac31d3fd01cbfe68c3","modified":1566576520320},{"_id":"source/ipynb/2019-07-29_决策树.ipynb","hash":"ccda3abb8efdccabecc52e4bb4cd6b57fe7f6316","modified":1568044688731},{"_id":"source/ipynb/2019-08-07_6种分类模型比较.ipynb","hash":"3cafbb7ba2703d12f56f4cf93c2b3e82384c3671","modified":1568044743448},{"_id":"source/ipynb/2019-08-10_网格搜寻.ipynb","hash":"cac5e28153ae02b398bb62bde71c66b88fe910c2","modified":1566628015214},{"_id":"source/ipynb/2019-08-15_泰坦尼克之灾_gender_submission.csv","hash":"96a9b7fa91cb6d01fba20cd8713d140f884f0b84","modified":1566576520347},{"_id":"source/ipynb/2019-08-15_泰坦尼克之灾_predictions.csv","hash":"a131cf0ec1f3883963a8ee2ef518ea55d45b7af7","modified":1567028285563},{"_id":"source/ipynb/2019-08-15_泰坦尼克之灾_test.csv","hash":"ab6c9d308f7c31f2cf37066aab6a0551f8673564","modified":1566576520348},{"_id":"source/ipynb/2019-08-15_泰坦尼克之灾_train.csv","hash":"ea08b483790c2a7bc9b95b0f923526f8e60eae44","modified":1566576520349},{"_id":"source/ipynb/2019-08-17_集成学习（以随机森林与adaboosting为例）.ipynb","hash":"6f10914de309d0e805c7489f08d4f496f5a22544","modified":1568044688741},{"_id":"source/ipynb/2019-08-22_数据仓库设计.ipynb","hash":"13b30765906b374388d79869b01a6cb2be3f5c49","modified":1567032400492},{"_id":"source/ipynb/2019-08-26_堆糖图片多线程抓取.ipynb","hash":"4e6f6b73494539d69f2a8516ab8fad07ae50f110","modified":1567033617000},{"_id":"source/ipynb/2019-09-01_Pandas移动窗口.ipynb","hash":"0e70ec95b13e418b8d26315553bcd89d71872210","modified":1567863958962},{"_id":"source/ipynb/2019-08-28_Sklearn基本语法.ipynb","hash":"d5b3a1b510c5027479001761eccf2be8122987f5","modified":1567342809134},{"_id":"source/ipynb/2019-09-03_随机森林.ipynb","hash":"cc3657b70c59152fbfb1db9118149292cc780c3e","modified":1568044688742},{"_id":"source/ipynb/2019-09-06_AdaBoost.ipynb","hash":"41e822aeb76876899cd58c158a42e0f6d6354721","modified":1568044688742},{"_id":"source/ipynb/2019-09-08_LeetCode 262_行程和用户.ipynb","hash":"8cce444e5dc487e988eb34d0588f225fe17f152b","modified":1569000602146},{"_id":"source/ipynb/2019-09-10_LeetCode 185_部门工资前三高的所有员工.ipynb","hash":"4e1fbbc063ade831598b130463f87535d3be777e","modified":1569000678848},{"_id":"source/ipynb/2019-09-11_LeetCode 601_体育馆的人流量.ipynb","hash":"d2c19776929710bb17b2a3f7457f4135309e2428","modified":1569001281692},{"_id":"source/ipynb/[范例] 2019-07-14_线性回归.ipynb","hash":"26c8a253905c1fb4062e6f5682f39dca7f3bd6ef","modified":1566576520350},{"_id":"source/img/2019-06-24_Matplotlib基本语法_2.png","hash":"e2c91b1062c127949ac3f83a81f8b0221993bcba","modified":1566576520282},{"_id":"source/img/2019-06-24_Matplotlib基本语法_3.png","hash":"a2f7b2c3770996fdef3445222c80bb827e628875","modified":1566576520282},{"_id":"source/img/2019-06-24_Matplotlib基本语法_4.png","hash":"f816fb68fa0feb396c88f44492c764f4d7d04b42","modified":1566576520282},{"_id":"source/img/2019-06-24_Matplotlib基本语法_1.png","hash":"d29643ac7394b0b517b9f92f5f8fe5ebfbbc03e3","modified":1566576520281},{"_id":"source/img/2019-06-24_Matplotlib基本语法_5.png","hash":"b96321680ea62e373682e0ce64c428401b54c335","modified":1566576520282},{"_id":"source/img/2019-07-14_线性回归_1.png","hash":"e6dfa2eb9adb61d7cf457a1e01414315099dbd96","modified":1566576520285},{"_id":"source/img/2019-07-14_线性回归_2.png","hash":"9ce03ff202f934c11fbdebebecc5dee5c57a1816","modified":1566576520286},{"_id":"source/img/2019-07-14_线性回归_3.png","hash":"99c36ab93435f239d75373788d73fa7e27030932","modified":1566576520286},{"_id":"source/img/2019-07-29_决策树_1.png","hash":"702befc4ae9a2579cedb3dff8be0b27fe8963d22","modified":1568044688723},{"_id":"source/img/2019-07-29_决策树_2.png","hash":"f4af034bac2f9b4dfb3c8adbbe71263d0412ca08","modified":1568044688723},{"_id":"source/img/2019-07-29_决策树_3.png","hash":"411331c1173b18101a8a58672acebbe75d29c41b","modified":1568044688724},{"_id":"source/img/2019-07-29_决策树_4.png","hash":"65d49b99b7c209f9b5e205ad6b10624928b5f64b","modified":1568044688724},{"_id":"source/img/2019-07-29_决策树_5.png","hash":"f93b02f6c130ad0fea6f21b7f289547f4bcd164f","modified":1568044688726},{"_id":"source/img/2019-08-01_金融数据描述_8.png","hash":"28f52003c21e2f60e67a7674899cc76d51bbbb89","modified":1566576520296},{"_id":"source/img/2019-08-01_金融数据描述_9.png","hash":"8b6f7721f550a79914da73a526071ec6f2d7958c","modified":1566576520296},{"_id":"source/img/2019-08-07_5种分类模型比较_1.png","hash":"f1370d4b036572ebc39e4158ad9e55daad1d3505","modified":1566576520297},{"_id":"source/img/2019-08-07_5种分类模型比较_2.png","hash":"a7946edfbb98266bec7fb6b258e32a1d673f0fd2","modified":1566576520297},{"_id":"source/img/2019-08-01_金融数据描述_7.png","hash":"01061033098fec0fe1871af63c4b9f616343c911","modified":1566576520296},{"_id":"source/img/2019-08-07_5种分类模型比较_3.png","hash":"dfbdf200e73ff4dda8a07e257d8dc0192fc6da09","modified":1566576520297},{"_id":"source/img/2019-08-07_5种分类模型比较_4.png","hash":"87f53180b415fcf652c91b9f4a21eda5fe69f487","modified":1566576520298},{"_id":"source/img/2019-08-07_5种分类模型比较_5.png","hash":"78648663c6483539db76885a65ea1d2ac09433e5","modified":1566576520298},{"_id":"source/img/2019-08-07_5种分类模型比较_6.png","hash":"71d2321b96d4946f08533e1fe23b50b91772b7ba","modified":1566576520298},{"_id":"source/img/2019-08-15_泰坦尼克之灾_10.png","hash":"20d36810ba62d0756047f17114481d45d274892a","modified":1567028285546},{"_id":"source/img/2019-08-15_泰坦尼克之灾_1.png","hash":"47df83913cfb283cb96e8d3adc498d7400862188","modified":1567028285545},{"_id":"source/img/2019-08-15_泰坦尼克之灾_12.png","hash":"d5a3efbd6f82d1ae78891271c04f0f326c49da93","modified":1567028285547},{"_id":"source/img/2019-08-15_泰坦尼克之灾_11.png","hash":"b04e5d8e3af28bde6d98bccea61cca63d565ff87","modified":1567342809126},{"_id":"source/img/2019-08-15_泰坦尼克之灾_13.png","hash":"11b97c9871bccd98111b6894eeeda1392efdf923","modified":1567028285548},{"_id":"source/img/2019-08-15_泰坦尼克之灾_3.png","hash":"ac0fa541d641e74d0a59a1cb46604b0f14cd67e9","modified":1567028285549},{"_id":"source/img/2019-08-15_泰坦尼克之灾_2.png","hash":"87b2ea33858e9471f9028be2efc30e0278bd84c3","modified":1567342809127},{"_id":"source/img/2019-08-15_泰坦尼克之灾_4.png","hash":"cc0bb4f95f6be2ba09b3e6f26d1656f45ac22846","modified":1567028285549},{"_id":"source/img/2019-08-15_泰坦尼克之灾_5.png","hash":"1801128d392d9b20ff993f806053fc17a077a1f7","modified":1567342809127},{"_id":"source/img/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1566576520281},{"_id":"source/img/2019-08-15_泰坦尼克之灾_6.png","hash":"54e7863c9e46c10a4d87f79b0940a82aec3e32a2","modified":1567028285551},{"_id":"source/img/2019-08-15_泰坦尼克之灾_7.png","hash":"25139da198d1a8e1983daad7fb4c8333263794a6","modified":1567028285552},{"_id":"source/img/2019-08-15_泰坦尼克之灾_8.png","hash":"62337ce837d5a72db88c7fda3b8d2c9527b2ec19","modified":1567028285554},{"_id":"source/img/2019-08-15_泰坦尼克之灾_9.png","hash":"5814fcf42826163a9dfa5972229dbbcf08b175dc","modified":1567342809128},{"_id":"source/img/2019-09-01_Pandas移动窗口.png","hash":"2360a2d4beed691da52a9c8b40f51620359bb2cd","modified":1567863957432},{"_id":"source/_posts/.ipynb_checkpoints/2019-06-28_基本数据处理-checkpoint.ipynb","hash":"8216259d4cc4ff59e772b2837add6212e7dd4b7e","modified":1566576520266},{"_id":"source/_posts/.ipynb_checkpoints/2019-06-28_基本爬虫-checkpoint.ipynb","hash":"8216259d4cc4ff59e772b2837add6212e7dd4b7e","modified":1566576520266},{"_id":"source/_posts/.ipynb_checkpoints/2019-07-06_正則表達式-checkpoint.ipynb","hash":"04abc77972197b14da15bc513def544dd0b43e77","modified":1566576520267},{"_id":"source/_posts/.ipynb_checkpoints/2019-06-29_链家网房源-checkpoint.ipynb","hash":"bfc251ece02e54e49464204c406b62212bc33155","modified":1566576520266},{"_id":"source/_posts/.ipynb_checkpoints/2019-06-24_Matplotlib基本语法-checkpoint.ipynb","hash":"c1050e1f36cb54edce4d96fb730425ca520a373a","modified":1566576520266},{"_id":"source/_posts/.ipynb_checkpoints/2019-06-23_Python基本语法-checkpoint.ipynb","hash":"250db2d4db4de1145dd28f2b7fd9cbfae7ceab7e","modified":1566576520265},{"_id":"source/ipynb/.ipynb_checkpoints/2019-06-23_Python基本语法-checkpoint.ipynb","hash":"cceb6cb625ad267076274ffb2dce9228b6f807da","modified":1566576520309},{"_id":"source/ipynb/.ipynb_checkpoints/2019-06-24_Matplotlib基本语法-checkpoint.ipynb","hash":"84cc80a1a0f44ea170c3ee4268f1cb43e68e5bcb","modified":1566576520310},{"_id":"source/ipynb/.ipynb_checkpoints/2019-06-25_Numpy基本语法-checkpoint.ipynb","hash":"85dc9d478ebd04e6b8079878c1d1305c24abbbba","modified":1566576520310},{"_id":"source/ipynb/.ipynb_checkpoints/2019-06-28_Pandas基本语法-checkpoint.ipynb","hash":"41e5b014ec2aa640d33ae3b6a78912ec3d635f4a","modified":1566576520310},{"_id":"source/ipynb/.ipynb_checkpoints/2019-06-30_数据抽取-checkpoint.ipynb","hash":"ae0ec81ea362c59412f1814d5ee53aaa98e10a90","modified":1566576520311},{"_id":"source/ipynb/.ipynb_checkpoints/2019-07-05_链家网房源-checkpoint.ipynb","hash":"b8db897fe36de386333b71861b4c25e7bfaf8d50","modified":1566576520312},{"_id":"source/ipynb/.ipynb_checkpoints/2019-07-01_两股票历史价格比较-checkpoint.ipynb","hash":"4b8ed638d519cdefdb50372510e43e1830f185ca","modified":1566576520311},{"_id":"source/ipynb/.ipynb_checkpoints/2019-07-06_正則表達式-checkpoint.ipynb","hash":"b7706733c10fb9aebeeb134536d568a8d9f90a14","modified":1566576520312},{"_id":"source/ipynb/.ipynb_checkpoints/2019-07-14_Scipy基本语法-checkpoint.ipynb","hash":"bc3e88cf9295f521a977511ee6172e9558e02642","modified":1566576520312},{"_id":"source/ipynb/.ipynb_checkpoints/2019-07-14_线性回归-checkpoint.ipynb","hash":"f52bf55e695f1dcc26a0e65ac11e36a389fc8941","modified":1566576520312},{"_id":"source/ipynb/.ipynb_checkpoints/2019-07-21_支持向量机-checkpoint.ipynb","hash":"d3dd200519de23644036e1674167e30aeb1206b2","modified":1566576520313},{"_id":"source/ipynb/.ipynb_checkpoints/2019-07-23_朴素贝叶斯-checkpoint.ipynb","hash":"43192e0ca8491476fb836eac31d3fd01cbfe68c3","modified":1566576520313},{"_id":"source/ipynb/.ipynb_checkpoints/2019-07-20_梯度下降-checkpoint.ipynb","hash":"ba0c3b87245b745f1677ee0e63a0496518540f85","modified":1566576520312},{"_id":"source/ipynb/.ipynb_checkpoints/2019-08-03_数据探索性分析与处理常见问题-checkpoint.ipynb","hash":"523956359f4223d5e9afd347ef1f073086b8b85a","modified":1566576520314},{"_id":"source/ipynb/.ipynb_checkpoints/2019-07-29_决策树-checkpoint.ipynb","hash":"ccda3abb8efdccabecc52e4bb4cd6b57fe7f6316","modified":1568044688727},{"_id":"source/ipynb/.ipynb_checkpoints/2019-08-07_6种分类模型比较-checkpoint.ipynb","hash":"3cafbb7ba2703d12f56f4cf93c2b3e82384c3671","modified":1566576520314},{"_id":"source/ipynb/.ipynb_checkpoints/2019-08-10_网格搜寻-checkpoint.ipynb","hash":"fc7f113d65a4d48708785291c4255502cdba264a","modified":1566576520314},{"_id":"source/ipynb/.ipynb_checkpoints/2019-08-17_集成学习（以随机森林与adaboosting为例）-checkpoint.ipynb","hash":"6f10914de309d0e805c7489f08d4f496f5a22544","modified":1568044688729},{"_id":"source/ipynb/.ipynb_checkpoints/2019-08-22_数据仓库设计-checkpoint.ipynb","hash":"13b30765906b374388d79869b01a6cb2be3f5c49","modified":1567032400492},{"_id":"source/ipynb/.ipynb_checkpoints/2019-08-26_堆糖图片多线程抓取-checkpoint.ipynb","hash":"4e6f6b73494539d69f2a8516ab8fad07ae50f110","modified":1567033617000},{"_id":"source/ipynb/.ipynb_checkpoints/2019-08-28_Sklearn基本语法-checkpoint.ipynb","hash":"d5b3a1b510c5027479001761eccf2be8122987f5","modified":1567342809128},{"_id":"source/ipynb/.ipynb_checkpoints/2019-09-06_AdaBoost-checkpoint.ipynb","hash":"41e822aeb76876899cd58c158a42e0f6d6354721","modified":1568044688730},{"_id":"source/ipynb/.ipynb_checkpoints/2019-09-03_随机森林-checkpoint.ipynb","hash":"cc3657b70c59152fbfb1db9118149292cc780c3e","modified":1568044688730},{"_id":"source/ipynb/.ipynb_checkpoints/2019-09-01_Pandas移动窗口-checkpoint.ipynb","hash":"0e70ec95b13e418b8d26315553bcd89d71872210","modified":1567863958962},{"_id":"source/ipynb/.ipynb_checkpoints/[范例] 2019-07-14_线性回归-checkpoint.ipynb","hash":"1908a3f78fec1f1e3af5479cf45557676db136a0","modified":1566576520315},{"_id":"source/ipynb/.ipynb_checkpoints/2019-09-11_LeetCode 601_体育馆的人流量-checkpoint.ipynb","hash":"d2c19776929710bb17b2a3f7457f4135309e2428","modified":1569001281692},{"_id":"source/ipynb/.ipynb_checkpoints/2019-09-10_LeetCode 185_部门工资前三高的所有员工-checkpoint.ipynb","hash":"4e1fbbc063ade831598b130463f87535d3be777e","modified":1569000678848},{"_id":"source/ipynb/.ipynb_checkpoints/2019-09-08_LeetCode 262_行程和用户-checkpoint.ipynb","hash":"8cce444e5dc487e988eb34d0588f225fe17f152b","modified":1569000602146},{"_id":"source/_posts/2019-08-01_数据理解与清洗.md","hash":"8efc5e13031e3cf7aabe42aaba47edda38c1bb68","modified":1617717044840},{"_id":"source/ipynb/2019-08-04_特征工程.ipynb","hash":"7168da0582b44d4778e8bae5b21f800b67b98dc3","modified":1568044688739},{"_id":"source/ipynb/2019-08-15_泰坦尼克之灾（六大模型baseline）.ipynb","hash":"f582c53bf2c149ef837d1b7f7647be1a638c5fef","modified":1567342809134},{"_id":"source/img/2019-06-24_Matplotlib基本语法_6.png","hash":"03108c95679d72cfd9088a52985ff9eb57e684ee","modified":1566576520283},{"_id":"source/img/2019-07-01_两股票历史价格比较_1.png","hash":"4e73faed0aee2f329c03d0b0e87b62d2ffbb3fca","modified":1566576520284},{"_id":"source/img/2019-08-01_金融数据描述_2.png","hash":"5dd7ec731b46a0f2cb192c6a995a8b7ad6ba1adc","modified":1566576520291},{"_id":"source/img/2019-08-01_金融数据描述_3.png","hash":"3c06e9b7d88a20b242e7d9c3c0cb7067cf4327e8","modified":1566576520292},{"_id":"source/img/2019-08-01_金融数据描述_6.png","hash":"f93708dddee40c8a9324e9a1b69fa5a032e4a39b","modified":1566576520296},{"_id":"source/_posts/.ipynb_checkpoints/两股票历史价格比较-checkpoint.ipynb","hash":"b1dba2c5c47bacd397b3f4be89c298f2f4c3732f","modified":1566576520271},{"_id":"source/ipynb/.ipynb_checkpoints/2019-08-04_特征工程-checkpoint.ipynb","hash":"7168da0582b44d4778e8bae5b21f800b67b98dc3","modified":1566576520314},{"_id":"source/ipynb/.ipynb_checkpoints/2019-08-15_泰坦尼克之灾（六大模型baseline）-checkpoint.ipynb","hash":"b2dc43d50146e1ee276ef4c92051de562622f38c","modified":1567028285559},{"_id":"source/_posts/2019-07-02_BeautifulSoup.md","hash":"893e1c1dc81ec5c4a74c43f01ed7b1956a38e492","modified":1617717460677},{"_id":"source/img/2019-08-01_金融数据描述_10.png","hash":"d473ee993abf8517e3ab3c4f8662378bc0322d5c","modified":1566576520290},{"_id":"source/img/2019-08-01_金融数据描述_4.png","hash":"257daaf23c5469e5972b672c36d292d76e44bdc6","modified":1566576520294},{"_id":"source/img/2019-08-01_金融数据描述_1.png","hash":"2cf7a8cd6885858b70167214f4661d8c9a2fd8fe","modified":1566576520288},{"_id":"source/img/2019-08-01_金融数据描述_5.png","hash":"3ead59fc7adb32c77f1151db215deef763479004","modified":1566576520295},{"_id":"source/img/2019-08-22_数据仓库设计_1.png","hash":"bb727ddb75cfa013e74a9b926cbc457de26db3f8","modified":1567028285557},{"_id":"source/ipynb/2019-07-02_基本爬虫.ipynb","hash":"4afbc9bf4785a0b5446fe5f9c61b72335edfa339","modified":1566576520319},{"_id":"source/ipynb/2019-08-01_数据理解与清洗.ipynb","hash":"75b3882612c5b9435233e5bfebf4d478cd340a81","modified":1568044688734},{"_id":"source/ipynb/.ipynb_checkpoints/2019-08-01_数据理解与清洗-checkpoint.ipynb","hash":"574216219a9f75be6929a5a5bf653da04f0beba2","modified":1566576520313},{"_id":"source/ipynb/.ipynb_checkpoints/2019-07-02_基本爬虫-checkpoint.ipynb","hash":"4afbc9bf4785a0b5446fe5f9c61b72335edfa339","modified":1566576520312},{"_id":"themes/keep/.gitignore","hash":"b49daa26b8121cc0c7074d61b377c8e7e0880d03","modified":1617298698244},{"_id":"themes/keep/LICENSE","hash":"98b8bd28e54ab36ee12396687dfdf88807c6cfdd","modified":1617298698244},{"_id":"themes/keep/_config.yml","hash":"3aa86d7e24b860a239e5b3c7004bcf8602b0f5ed","modified":1617729599958},{"_id":"themes/keep/package.json","hash":"693c502436956faf74738f75ec236fefa9ec1e70","modified":1617298698257},{"_id":"themes/keep/languages/en.yml","hash":"e4f42cfda0ed6ea1715d28fd4b1bba6f89b8cdb0","modified":1617298698245},{"_id":"themes/keep/languages/zh-CN.yml","hash":"de8aec3e9960fa489c0a290cda825dfc1e7528dd","modified":1617298698246},{"_id":"themes/keep/layout/archive-content.ejs","hash":"cfa8f29b8863534f407136ea3deb18a4b2ff722c","modified":1617298698254},{"_id":"themes/keep/layout/archive.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1617298698254},{"_id":"themes/keep/layout/article-content.ejs","hash":"ae9fc0712b89af58e80b6c6daf749d01624c4a3c","modified":1617298698254},{"_id":"themes/keep/.editorconfig","hash":"a1c91f0a086bf92fddb02ccf23578ec2b51c099c","modified":1617298698244},{"_id":"themes/keep/README.md","hash":"f1f4cec957dced139cfbfe4fefcdc5cb438d4bfc","modified":1617298698245},{"_id":"themes/keep/layout/category-content.ejs","hash":"aef0c90a395f909be7d2c358eb41d5558a10406f","modified":1617298698254},{"_id":"themes/keep/layout/category-list.ejs","hash":"a9390b25238332417fd554d32563a4d9999db90f","modified":1617298698255},{"_id":"themes/keep/layout/category.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1617298698255},{"_id":"themes/keep/layout/home-content.ejs","hash":"79e16c3baa6569afbc07ac6a5d2e3f37b273016a","modified":1617298698255},{"_id":"themes/keep/layout/index.ejs","hash":"f5fee4e079a9c2c23059ebde4cd89ec723e310c6","modified":1617298698255},{"_id":"themes/keep/layout/layout.ejs","hash":"da9dbeba541ad19fed35c41fe187f4016e41f0db","modified":1617298698256},{"_id":"themes/keep/layout/page.ejs","hash":"4bf34f19bcf18efb5f6e76fcbe7cd36b25ceee6a","modified":1617298698256},{"_id":"themes/keep/layout/tag.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1617298698256},{"_id":"themes/keep/layout/tag-content.ejs","hash":"ce4c8192a4ccd6a626af412a7ba258d1edbc0b95","modified":1617298698256},{"_id":"themes/keep/layout/tags.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1617298698257},{"_id":"themes/keep/layout/_partial/archive-list.ejs","hash":"7c33e49286d54824cd8f3483e30de5579951edc6","modified":1617298698246},{"_id":"themes/keep/scripts/use-source-data.js","hash":"21f6a49e47b7e4d792d67503079ea5b509f18311","modified":1617298698259},{"_id":"themes/keep/layout/_partial/article-copyright-info.ejs","hash":"77e13720374efb902ee3d4d04d13b62de033a3ae","modified":1617298698246},{"_id":"themes/keep/layout/_partial/article-meta-info.ejs","hash":"54f77621034e39809911a184f15006ce80e0f67b","modified":1617298698246},{"_id":"themes/keep/layout/_partial/first-screen.ejs","hash":"106683de71f01b368c6f0c5417952b54fcdc9611","modified":1617298698248},{"_id":"themes/keep/layout/_partial/head.ejs","hash":"8fb592456f1c22d6b3aaa617fd40494168396d42","modified":1617298698249},{"_id":"themes/keep/layout/_partial/footer.ejs","hash":"993acd8c84733a9d758459fd62ac3f168978a691","modified":1617299385713},{"_id":"themes/keep/layout/_partial/friends-link.ejs","hash":"fe35aa6dabeb31bc677270062eed569f37472c2c","modified":1617298698249},{"_id":"themes/keep/layout/_partial/home-article-meta-info.ejs","hash":"0aceb1c7c29b65bd5fc2d79a285a564da8c09b63","modified":1617298698250},{"_id":"themes/keep/layout/_partial/image-viewer.ejs","hash":"beb3dec5e08856a29d585fe0eb94a8a6ddade4dd","modified":1617298698250},{"_id":"themes/keep/layout/_partial/header.ejs","hash":"8f2d389c6db5c9e8e6d30fb1579d99ee1660a485","modified":1617298698250},{"_id":"themes/keep/layout/_partial/page-template.ejs","hash":"8fd596f871326b03e707d7defcc96f639cdd628e","modified":1617298698251},{"_id":"themes/keep/layout/_partial/local-search.ejs","hash":"6fbcc0a14467da8362a2eaa490d84acb1336d21b","modified":1617298698251},{"_id":"themes/keep/layout/_partial/paginator.ejs","hash":"cfd4d9a30bd20ee0750b79226cb94562439013bf","modified":1617298698251},{"_id":"themes/keep/layout/_partial/post-tools.ejs","hash":"e8a303fa393a1716c5ff1f731923781eb12322ab","modified":1617298698252},{"_id":"themes/keep/layout/_partial/progress-bar.ejs","hash":"44af04816b86546e0260e73c2df61353e7404208","modified":1617298698253},{"_id":"themes/keep/layout/_partial/scripts.ejs","hash":"ad75de7966c4d9d923c9ac8cfbfe26b38fbe7aed","modified":1617298698253},{"_id":"themes/keep/layout/_partial/tagcloud.ejs","hash":"5968618b53a029922f2255b0c76bf8a9f11712ff","modified":1617298698253},{"_id":"themes/keep/README_zh-CN.md","hash":"4c81a27599e592610ba4f2a5520fe422c448e7fd","modified":1617298698245},{"_id":"themes/keep/layout/_partial/side-tools.ejs","hash":"e55d2034d7e2b8b0c1bd5ac7fdc56ffb8bbd4e60","modified":1617298698253},{"_id":"themes/keep/layout/_partial/toc.ejs","hash":"aefc9db612c0fceb4a02fdbed9fa47a6c4e144b5","modified":1617298698253},{"_id":"themes/keep/scripts/filters/lazyload-handle.js","hash":"2eb08e3b66b57deed5a8645eb804fede0253317d","modified":1617298698258},{"_id":"themes/keep/scripts/helpers/export-config.js","hash":"e7c5417a1cd61f0b7c3f97030d4a77419c41b8a5","modified":1617298698258},{"_id":"themes/keep/scripts/filters/link-handle.js","hash":"b39cfa42d156b7ad4d4e8246b6f934cd51d8db55","modified":1617298698258},{"_id":"themes/keep/scripts/helpers/helper.js","hash":"9d657770648def555884eebbcecbf333e405ff8b","modified":1617298698259},{"_id":"themes/keep/source/css/style.styl","hash":"77b61baccadc3f71d1d06598f5c2b7fc506d77d4","modified":1617298698272},{"_id":"themes/keep/source/images/avatar.svg","hash":"aba8367cd7550e75279f707671d7146813c2a776","modified":1617298698272},{"_id":"themes/keep/source/images/bg.svg","hash":"f3106cd334dc2ceef885c19012bf59a48498af42","modified":1617298698272},{"_id":"themes/keep/source/images/logo.svg","hash":"b618728f9964a5698b1dc2548db35b3d06dd115f","modified":1617298698273},{"_id":"themes/keep/source/images/loading.svg","hash":"eedfa204e08a60ca5c80c620cfe9a3eaa6201585","modified":1617298698272},{"_id":"themes/keep/source/js/code-copy.js","hash":"3fdabac26f6406a4592336f1f444ec966201b5d9","modified":1617298698273},{"_id":"themes/keep/source/js/back2top.js","hash":"fc8e85f6704e39ae3a613bbec5dd51d449be8010","modified":1617298698273},{"_id":"themes/keep/source/js/dark-light-toggle.js","hash":"223e6f1d4e6e70956e4661b58c430e1c68def125","modified":1617298698273},{"_id":"themes/keep/source/js/header-shrink.js","hash":"167b9b6a9ed63c6cf4081cb3c201dd16bbbfb9ad","modified":1617298698274},{"_id":"themes/keep/source/js/lazyload.js","hash":"95aad532f17d7a8119979fc61ade9e626308a2af","modified":1617298698274},{"_id":"themes/keep/source/js/left-side-toggle.js","hash":"618f7cfc45db4d82b2f1d00d8e9ee936bcf9043b","modified":1617298698274},{"_id":"themes/keep/source/js/local-search.js","hash":"9509ec6d2d7d4466fe37ad624cf606f6639fb3fe","modified":1617298698275},{"_id":"themes/keep/source/js/main.js","hash":"ca8ed228cc0bc234be74428d029cfd047eec0ed6","modified":1617298698276},{"_id":"themes/keep/source/js/toc.js","hash":"ae69bf65d2b30d299b6ca9e2361d3b6e0db3a077","modified":1617298698276},{"_id":"themes/keep/source/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1617298698312},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1617298698317},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1617298698318},{"_id":"themes/keep/layout/_partial/pjax/pjax.ejs","hash":"2060f13718b4c9f79f52de7e47ce262f06c19bd0","modified":1617298698252},{"_id":"themes/keep/layout/_partial/comment/comment.ejs","hash":"4a7294bbe9aa4be22878e8a638668ed7ade25e2c","modified":1617298698247},{"_id":"themes/keep/layout/_partial/comment/gitalk.ejs","hash":"28a0c8b1da66a9b6863e5444aa0b50c8f6b862f0","modified":1617298698247},{"_id":"themes/keep/layout/_partial/comment/twikoo.ejs","hash":"92d858874543c4ba149acd04374d84e784ba0aaf","modified":1617298698247},{"_id":"themes/keep/layout/_partial/comment/valine.ejs","hash":"467cafd412837af791b4c353646cf44ac4458a3f","modified":1617298698248},{"_id":"themes/keep/source/css/common/basic.styl","hash":"12fcd65c501ab3899d2694556e1cbfc197e067bb","modified":1617298698260},{"_id":"themes/keep/source/css/common/animated.styl","hash":"982afcd440646eff077834e42bb03405a8aab637","modified":1617298698259},{"_id":"themes/keep/source/css/common/keep-theme.styl","hash":"9b6bf080299102571a6667ca99a62f53c9684246","modified":1617298698261},{"_id":"themes/keep/source/css/common/markdown.styl","hash":"46da948479968fb8c8ce38d5d1ce7f4fa0db02a8","modified":1617728412856},{"_id":"themes/keep/source/css/common/variables.styl","hash":"0b4b42d3440274760b7a567f01901f00aa82571a","modified":1617298698261},{"_id":"themes/keep/source/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1617298698275},{"_id":"themes/keep/source/css/layout/archive-content.styl","hash":"515ebe2a251f3b53f0cf130cdc48b8bb1fb85952","modified":1617298698270},{"_id":"themes/keep/source/css/layout/article-content.styl","hash":"327bb874968feaa981093c3f218b48aa34cd1d44","modified":1617298698270},{"_id":"themes/keep/source/css/layout/category-content.styl","hash":"638c3b50d8203c76106f3010fbfeed9a29bfde5c","modified":1617298698270},{"_id":"themes/keep/source/css/layout/category-list.styl","hash":"bea0a03fe3de16ed08e7b3b541a46d2074561841","modified":1617298698271},{"_id":"themes/keep/source/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1617298698275},{"_id":"themes/keep/source/css/layout/home-content.styl","hash":"2f2ee2f70020cf5e2ffb5612607bd58772e785a4","modified":1617298698271},{"_id":"themes/keep/source/css/layout/tag-content.styl","hash":"0d1cc0cc0d263f55b9c7245c1dc023abdcfcd69f","modified":1617298698271},{"_id":"themes/keep/source/css/layout/page.styl","hash":"f58cede20abbf250dfe7d38f594632c5b46a61e9","modified":1617298698271},{"_id":"themes/keep/source/css/common/codeblock/code-theme.styl","hash":"fd81f8a76ae4f55bf5da38116bbc4f0e973daad2","modified":1617298698260},{"_id":"themes/keep/source/css/common/codeblock/highlight.styl","hash":"64ea39fa5503f6c5a21a9ed7c9d3d5103cccad5a","modified":1617298698261},{"_id":"themes/keep/source/css/common/codeblock/copy-code.styl","hash":"1edcb0ece1bf4b9838c1937e98eaa845de7f4b3b","modified":1617298698260},{"_id":"themes/keep/source/css/layout/_partial/archive-list.styl","hash":"95c41684691a849d102c5a30efb365300d3d5c6d","modified":1617298698262},{"_id":"themes/keep/source/css/layout/_partial/article-meta-info.styl","hash":"91bf4f2f58217c0d0c6d51ad4792e5e0a00c3165","modified":1617298698263},{"_id":"themes/keep/source/css/layout/_partial/article-copyright-info.styl","hash":"6eaa067231bd9e9faa5de2260b8974142faae510","modified":1617298698263},{"_id":"themes/keep/source/css/layout/_partial/first-screen.styl","hash":"d73c088e639d2d4e076552ff92e611682ce2380b","modified":1617298698264},{"_id":"themes/keep/source/css/layout/_partial/footer.styl","hash":"19a8fc0a01bf1efed637e90530c412d57137dfc4","modified":1617298698265},{"_id":"themes/keep/source/css/layout/_partial/header.styl","hash":"4d77c69a897df137b8a1a0c451e95e6aad7d2ad7","modified":1617298698266},{"_id":"themes/keep/source/css/layout/_partial/image-viewer.styl","hash":"59525fcc1f88c78abf8c1f0b06e24b16a088698c","modified":1617298698266},{"_id":"themes/keep/source/css/layout/_partial/local-search.styl","hash":"98aa2e22f16b98b2ffdbf36e1ea24363f8e5045b","modified":1617298698267},{"_id":"themes/keep/source/css/layout/_partial/page-template.styl","hash":"27d1e19691867a09283facd2983afb9a3404e999","modified":1617298698267},{"_id":"themes/keep/source/css/layout/_partial/paginator.styl","hash":"da5df38b09138af28cb8b3fe9a05aeda9dae5011","modified":1617298698268},{"_id":"themes/keep/source/css/layout/_partial/post-tools.styl","hash":"f78a13e3b03b19cb72b03db0a5659f8c734e742e","modified":1617298698268},{"_id":"themes/keep/source/css/layout/_partial/progress-bar.styl","hash":"a64df5515c60a3a0993c427dc50facee33215f2b","modified":1617298698268},{"_id":"themes/keep/source/css/layout/_partial/side-tools.styl","hash":"a68a1e3f21da63ee2d387035e91f9f60e956e234","modified":1617298698268},{"_id":"themes/keep/source/js/utils.js","hash":"47c6d222a116498359345777aea383c429975abf","modified":1617298698277},{"_id":"themes/keep/source/css/layout/_partial/tagcloud.styl","hash":"61016e73c8e420c74800b3afdbd6c2f890400e51","modified":1617298698269},{"_id":"themes/keep/source/css/layout/_partial/toc.styl","hash":"029ac31a21203a8b86027e67a3ff3a977579325d","modified":1617298698269},{"_id":"themes/keep/source/css/layout/_partial/comment/comment.styl","hash":"f6d9a37520566e38738fc1184ed76817273c3ee5","modified":1617298698263},{"_id":"themes/keep/source/css/layout/_partial/comment/twikoo.styl","hash":"5844874c50a93239031e58b23856698ca9af2725","modified":1617298698264},{"_id":"themes/keep/source/css/layout/_partial/comment/valine.styl","hash":"6b0c7d69fc3f819610576b41e987ec655411ca44","modified":1617298698264},{"_id":"themes/keep/source/css/layout/_partial/comment/gitalk.styl","hash":"b8fccd13e2753c9fe891fb88a6413087048ab830","modified":1617298698263},{"_id":"themes/keep/source/css/font-awesome.min.css","hash":"c508528feb9fd540454f838653cd4863b290df2e","modified":1617298698262},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1617298698310},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1617298698311},{"_id":"themes/keep/source/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1617298698317},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1617298698335},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1617298698335},{"_id":"themes/keep/source/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1617298698287},{"_id":"themes/keep/source/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1617298698305},{"_id":"themes/keep/source/webfonts/fa-regular-400.svg","hash":"c41a688158d577e3a2738137992d49b05b17ab8f","modified":1617298698315},{"_id":"themes/keep/source/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1617298698334},{"_id":"source/img/2019-08-10_网格搜寻_1.png","hash":"46e741fb627f2898994057249a5bf93a6cfedbb8","modified":1566576520303},{"_id":"themes/keep/source/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1617298698321},{"_id":"themes/keep/source/webfonts/fa-brands-400.svg","hash":"69a0ff79a9d93a451e9fa90bd79ae7008d2a9da5","modified":1617298698301},{"_id":"themes/keep/source/webfonts/fa-solid-900.svg","hash":"36de6a298660ed3feaab37900f7b28c3e981d80e","modified":1617298698330},{"_id":"source/images/pasted-0.png","hash":"104c6a221493a2faa9e2c798f8ab1d91a922926d","modified":1617718075095},{"_id":"source/ipynb/2019-08-01_金融数据描述_data1.csv","hash":"b115e597a9de4b0d133a3b7ea9a262c070db20d3","modified":1566576520333},{"_id":"public/search.xml","hash":"c7f4e276e86710d3555d5664932b54f21ae27864","modified":1617771705603},{"_id":"public/categories/统计与机器学习/page/2/index.html","hash":"c26766db71b0ba3dd62841eeec284bac987a9b1d","modified":1617771705603},{"_id":"public/categories/项目/金融分析/index.html","hash":"c97b54c70910d46d93b3846620fad1c649d5945e","modified":1617771705603},{"_id":"public/categories/项目/爬虫/index.html","hash":"0eff3e6527fdec06e5491f8b27e776e9b1b3d50f","modified":1617771705603},{"_id":"public/categories/统计与机器学习/集成算法（Ensemble-algorithms）/index.html","hash":"eac308ca42e53a6a0ba208cc13537b324e152c9d","modified":1617771705603},{"_id":"public/categories/统计与机器学习/回归算法（Regression）/index.html","hash":"020ae80d5e979e1952803529d16347cb0e8bc852","modified":1617771705603},{"_id":"public/categories/数据仓库/index.html","hash":"c813b56fffe9b5a10936d7b4b0516a0f3d3392a5","modified":1617771705603},{"_id":"public/categories/统计与机器学习/贝叶斯算法（Bayesian-Algorithms）/index.html","hash":"663488faa3f2742f4b5b2891c17892542705b9fa","modified":1617771705603},{"_id":"public/categories/项目/LeetCode/index.html","hash":"60c2b8c1c65359a85ce4d0d854ea4c9f6ec0aadc","modified":1617771705603},{"_id":"public/categories/统计与机器学习/支持向量机（Support-Vector-Machines）/index.html","hash":"1900d2fc3680a7172d087defe0f21fe084d4abf4","modified":1617771705603},{"_id":"public/categories/统计与机器学习/决策树算法（Decision-Tree-Algorithm）/index.html","hash":"b3c3eefdcf73bc8b94a0a67a38e7a07c3cf1e7f3","modified":1617771705603},{"_id":"public/categories/统计与机器学习/商業統計/index.html","hash":"d580ccdf22e052bd20d4356ebb369a2b6414da66","modified":1617771705603},{"_id":"public/categories/项目/数据科学/index.html","hash":"2b72153b40df4ba0a162daaa67f022e5c95e910f","modified":1617771705603},{"_id":"public/page/4/index.html","hash":"ff5b8ca9c733eb8568fee1de5f391a68bc27636c","modified":1617771705603},{"_id":"public/categories/index.html","hash":"f085eabb85f35e3619d70292027eb2d71db59478","modified":1617771705603},{"_id":"public/archives/index.html","hash":"1967c2199c2ab42a1421916d90007ee6516ecdba","modified":1617771705603},{"_id":"public/统计与机器学习/商業統計/8366/index.html","hash":"a488bef2b79b1db81a4f8760dee80d8da6a5578d","modified":1617771705603},{"_id":"public/项目/LeetCode/7348/index.html","hash":"c96d7f63c8af02c0aabacb7402d7435aee7f5770","modified":1617771705603},{"_id":"public/项目/LeetCode/61684/index.html","hash":"2807f4f34b306fa570d2192a2210846eeb0d904f","modified":1617771705603},{"_id":"public/项目/LeetCode/15284/index.html","hash":"de83f4f4f51c2253712115045c3248d8fb35e3f2","modified":1617771705603},{"_id":"public/统计与机器学习/集成算法（Ensemble-algorithms）/23192/index.html","hash":"e56dc724e49ba87768b14914105890fadef56de5","modified":1617771705603},{"_id":"public/统计与机器学习/集成算法（Ensemble-algorithms）/47295/index.html","hash":"18b148043269f6c8b0e9206eae2a5a144d28b1b2","modified":1617771705603},{"_id":"public/Python/24354/index.html","hash":"798ca275e26a1b2b1beeb80644beb2113e56ea81","modified":1617771705603},{"_id":"public/Python/53999/index.html","hash":"b19664f59caad45383aba2daf6e8d1ecf084d9cd","modified":1617771705603},{"_id":"public/项目/爬虫/46912/index.html","hash":"4845c4b2647da9afdc03068d84887aa7ba5c3af9","modified":1617771705603},{"_id":"public/数据仓库/22639/index.html","hash":"c27d7ab398507daa040a0d2615c6a7857d5e00cb","modified":1617771705603},{"_id":"public/统计与机器学习/集成算法（Ensemble-algorithms）/45240/index.html","hash":"64f86a9cccfd72d81d13ad9b86f1c4645cc2c49d","modified":1617771705603},{"_id":"public/项目/数据科学/12954/index.html","hash":"862f941eb2ffb3adee1c5eaab9c42a212890e299","modified":1617771705603},{"_id":"public/统计与机器学习/其他/2828/index.html","hash":"ff51f20f1e43cac98eba37182318188a9451d44a","modified":1617771705603},{"_id":"public/统计与机器学习/其他/32513/index.html","hash":"fe19782e85042f6a62f60050f36758406e0dd820","modified":1617771705603},{"_id":"public/统计与机器学习/其他/17541/index.html","hash":"50d90ecc7cf61997a1f050a2ac4b75a013ce2fb5","modified":1617771705603},{"_id":"public/统计与机器学习/其他/17314/index.html","hash":"63d943923ea7554f666a04949ec28ac845d1e602","modified":1617771705603},{"_id":"public/统计与机器学习/决策树算法（Decision-Tree-Algorithm）/51507/index.html","hash":"3a57ca550e3c3a47cbc2809998c9ab19e71d3da4","modified":1617771705603},{"_id":"public/统计与机器学习/贝叶斯算法（Bayesian-Algorithms）/58685/index.html","hash":"a2e21ecef6e72bd6a8566e231e2ce755a9db9f92","modified":1617771705603},{"_id":"public/统计与机器学习/支持向量机（Support-Vector-Machines）/49110/index.html","hash":"bcc612613e2be2c329786cc4de962552d493a1eb","modified":1617771705603},{"_id":"public/统计与机器学习/其他/45545/index.html","hash":"4b1864c04752466f0cc091e04315971471160ab1","modified":1617771705603},{"_id":"public/统计与机器学习/回归算法（Regression）/52662/index.html","hash":"02192e187baabe89857bf3a032db083fb698249d","modified":1617771705603},{"_id":"public/Python/61322/index.html","hash":"3bf21a33936dadfba5874764b4dc86f8b514d7ec","modified":1617771705603},{"_id":"public/Python/58780/index.html","hash":"6b2950d115e474285f20debe82ad5ff4b98836e4","modified":1617771705603},{"_id":"public/项目/爬虫/38058/index.html","hash":"13c5b1b9d04b97ecf56c5d982d636ee5b884fc01","modified":1617771705603},{"_id":"public/Python/51103/index.html","hash":"4d9911ffeb40d4c5903052e4382131e430c639bb","modified":1617771705603},{"_id":"public/项目/金融分析/29975/index.html","hash":"7ffa5b04f5700cf267b398aa716db14f385c131b","modified":1617771705603},{"_id":"public/统计与机器学习/其他/25692/index.html","hash":"d1d172e85dc3b44b881a3094a7869b957db6586d","modified":1617771705603},{"_id":"public/Python/6703/index.html","hash":"e9bd8df2157ec351b32260b42b49a257a4f77ebf","modified":1617771705603},{"_id":"public/Python/54426/index.html","hash":"e9b634b6484fe24d70515b34052b663c93f6c2d9","modified":1617771705603},{"_id":"public/Python/16372/index.html","hash":"a042c86c1e3cf8cd9d850a23f497fcc6d06ff84b","modified":1617771705603},{"_id":"public/Python/24578/index.html","hash":"e58f9e8e2e104f0712874454affdd98babd7c891","modified":1617771705603},{"_id":"public/archives/page/2/index.html","hash":"1967c2199c2ab42a1421916d90007ee6516ecdba","modified":1617771705603},{"_id":"public/archives/page/3/index.html","hash":"1967c2199c2ab42a1421916d90007ee6516ecdba","modified":1617771705603},{"_id":"public/archives/page/4/index.html","hash":"1967c2199c2ab42a1421916d90007ee6516ecdba","modified":1617771705603},{"_id":"public/archives/2019/index.html","hash":"09ef8171aba107ac1c7dd7cd67e50a5bac796fab","modified":1617771705603},{"_id":"public/archives/2019/page/2/index.html","hash":"09ef8171aba107ac1c7dd7cd67e50a5bac796fab","modified":1617771705603},{"_id":"public/archives/2019/page/3/index.html","hash":"09ef8171aba107ac1c7dd7cd67e50a5bac796fab","modified":1617771705603},{"_id":"public/archives/2019/06/index.html","hash":"64eb2692fdc4be610794f3decafbeba0d1afb04c","modified":1617771705603},{"_id":"public/archives/2019/07/index.html","hash":"53b89a4d8f6895bc85d2d4e97cba03e2eb237200","modified":1617771705603},{"_id":"public/archives/2019/08/index.html","hash":"6757142132949e8de5aa6548998e1c9b7aa3daf0","modified":1617771705603},{"_id":"public/archives/2019/09/index.html","hash":"200258b13f4d8813d1b0a275f087a0a092042d50","modified":1617771705603},{"_id":"public/archives/2021/index.html","hash":"1548986677f18a478724c38d5edc5239b0e8ad04","modified":1617771705603},{"_id":"public/archives/2021/04/index.html","hash":"90fcb66b3276c27188e6541dcc7ab251a17d3af3","modified":1617771705603},{"_id":"public/categories/Python/index.html","hash":"12930978c476b05843509648befec03aa0398fba","modified":1617771705603},{"_id":"public/categories/项目/index.html","hash":"41c9c27f313d023dea3cd750ac027afac48a3cda","modified":1617771705603},{"_id":"public/categories/统计与机器学习/index.html","hash":"cb3f8b8011b4b2f99bcaafd22b72212f9bbfdbd1","modified":1617771705603},{"_id":"public/categories/统计与机器学习/其他/index.html","hash":"7a59c7c45d3725f2b3e95fee9928a09a0c0119e3","modified":1617771705603},{"_id":"public/index.html","hash":"fe73a5225898c165ea2c0e2eda51f1b42084a36d","modified":1617771705603},{"_id":"public/page/2/index.html","hash":"c6c49ec4a6e638b437e6966f52c8864b9dac9e11","modified":1617771705603},{"_id":"public/page/3/index.html","hash":"527d3dc93c8ab3d35284e41858f0b72dad937fa1","modified":1617771705603},{"_id":"public/images/avatar.svg","hash":"aba8367cd7550e75279f707671d7146813c2a776","modified":1617771705603},{"_id":"public/images/bg.svg","hash":"f3106cd334dc2ceef885c19012bf59a48498af42","modified":1617771705603},{"_id":"public/images/loading.svg","hash":"eedfa204e08a60ca5c80c620cfe9a3eaa6201585","modified":1617771705603},{"_id":"public/images/logo.svg","hash":"b618728f9964a5698b1dc2548db35b3d06dd115f","modified":1617771705603},{"_id":"public/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1617771705603},{"_id":"public/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1617771705603},{"_id":"public/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1617771705603},{"_id":"public/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1617771705603},{"_id":"public/images/avatar.jpg","hash":"5926dfb121fd97163750f202bd339e73ead750a4","modified":1617771705603},{"_id":"public/images/favicon.png","hash":"caaf7612f00fe478dd99884a286af0ddeabb8777","modified":1617771705603},{"_id":"public/images/favicon.ico","hash":"d15f2570b45221394404c76c60e085ac30f06e04","modified":1617771705603},{"_id":"public/ipynb/2019-06-23_Python基本语法.ipynb","hash":"cceb6cb625ad267076274ffb2dce9228b6f807da","modified":1617771705603},{"_id":"public/ipynb/2019-06-24_Matplotlib基本语法.ipynb","hash":"84cc80a1a0f44ea170c3ee4268f1cb43e68e5bcb","modified":1617771705603},{"_id":"public/ipynb/2019-06-25_Numpy基本语法.ipynb","hash":"85dc9d478ebd04e6b8079878c1d1305c24abbbba","modified":1617771705603},{"_id":"public/ipynb/2019-06-28_Pandas基本语法.ipynb","hash":"41e5b014ec2aa640d33ae3b6a78912ec3d635f4a","modified":1617771705603},{"_id":"public/ipynb/2019-06-30_数据抽取.ipynb","hash":"b990a30252cd3db68bb67d85ea50a0f1113dea8f","modified":1617771705603},{"_id":"public/ipynb/2019-06-30_数据抽取_data1.csv","hash":"0d30fcf72c64638cbb2d793983db9a1272b1feb0","modified":1617771705603},{"_id":"public/ipynb/2019-07-01_两股票历史价格比较.ipynb","hash":"4b8ed638d519cdefdb50372510e43e1830f185ca","modified":1617771705603},{"_id":"public/ipynb/2019-06-30_数据抽取_data2.csv","hash":"8e4e280ef2879b9e4ae3e9261db354d980c378c4","modified":1617771705603},{"_id":"public/ipynb/2019-07-05_链家网房源.ipynb","hash":"b8db897fe36de386333b71861b4c25e7bfaf8d50","modified":1617771705603},{"_id":"public/ipynb/2019-07-06_正則表達式.ipynb","hash":"c26b6700c9fa29eff2a0ad29935770d418df7905","modified":1617771705603},{"_id":"public/ipynb/2019-07-14_Scipy基本语法.ipynb","hash":"bc3e88cf9295f521a977511ee6172e9558e02642","modified":1617771705603},{"_id":"public/ipynb/2019-07-14_线性回归.ipynb","hash":"f52bf55e695f1dcc26a0e65ac11e36a389fc8941","modified":1617771705603},{"_id":"public/ipynb/2019-07-20_梯度下降.ipynb","hash":"63663ac28ff204013d98546afc96e998e3e2c387","modified":1617771705603},{"_id":"public/ipynb/2019-07-21_支持向量机.ipynb","hash":"949307313097f71914a8c5fff0f9e0925221230c","modified":1617771705603},{"_id":"public/ipynb/2019-07-23_朴素贝叶斯.ipynb","hash":"43192e0ca8491476fb836eac31d3fd01cbfe68c3","modified":1617771705603},{"_id":"public/ipynb/2019-07-29_决策树.ipynb","hash":"ccda3abb8efdccabecc52e4bb4cd6b57fe7f6316","modified":1617771705603},{"_id":"public/ipynb/2019-08-07_6种分类模型比较.ipynb","hash":"3cafbb7ba2703d12f56f4cf93c2b3e82384c3671","modified":1617771705603},{"_id":"public/ipynb/2019-08-10_网格搜寻.ipynb","hash":"cac5e28153ae02b398bb62bde71c66b88fe910c2","modified":1617771705603},{"_id":"public/ipynb/2019-08-15_泰坦尼克之灾_gender_submission.csv","hash":"96a9b7fa91cb6d01fba20cd8713d140f884f0b84","modified":1617771705603},{"_id":"public/ipynb/2019-08-15_泰坦尼克之灾_predictions.csv","hash":"a131cf0ec1f3883963a8ee2ef518ea55d45b7af7","modified":1617771705603},{"_id":"public/ipynb/2019-08-15_泰坦尼克之灾_test.csv","hash":"ab6c9d308f7c31f2cf37066aab6a0551f8673564","modified":1617771705603},{"_id":"public/ipynb/2019-08-15_泰坦尼克之灾_train.csv","hash":"ea08b483790c2a7bc9b95b0f923526f8e60eae44","modified":1617771705603},{"_id":"public/ipynb/2019-08-17_集成学习（以随机森林与adaboosting为例）.ipynb","hash":"6f10914de309d0e805c7489f08d4f496f5a22544","modified":1617771705603},{"_id":"public/ipynb/2019-08-22_数据仓库设计.ipynb","hash":"13b30765906b374388d79869b01a6cb2be3f5c49","modified":1617771705603},{"_id":"public/ipynb/2019-08-26_堆糖图片多线程抓取.ipynb","hash":"4e6f6b73494539d69f2a8516ab8fad07ae50f110","modified":1617771705603},{"_id":"public/ipynb/2019-08-28_Sklearn基本语法.ipynb","hash":"d5b3a1b510c5027479001761eccf2be8122987f5","modified":1617771705603},{"_id":"public/ipynb/2019-09-01_Pandas移动窗口.ipynb","hash":"0e70ec95b13e418b8d26315553bcd89d71872210","modified":1617771705603},{"_id":"public/ipynb/2019-09-03_随机森林.ipynb","hash":"cc3657b70c59152fbfb1db9118149292cc780c3e","modified":1617771705603},{"_id":"public/ipynb/2019-09-06_AdaBoost.ipynb","hash":"41e822aeb76876899cd58c158a42e0f6d6354721","modified":1617771705603},{"_id":"public/ipynb/2019-09-08_LeetCode 262_行程和用户.ipynb","hash":"8cce444e5dc487e988eb34d0588f225fe17f152b","modified":1617771705603},{"_id":"public/ipynb/2019-09-10_LeetCode 185_部门工资前三高的所有员工.ipynb","hash":"4e1fbbc063ade831598b130463f87535d3be777e","modified":1617771705603},{"_id":"public/ipynb/2019-09-11_LeetCode 601_体育馆的人流量.ipynb","hash":"d2c19776929710bb17b2a3f7457f4135309e2428","modified":1617771705603},{"_id":"public/ipynb/[范例] 2019-07-14_线性回归.ipynb","hash":"26c8a253905c1fb4062e6f5682f39dca7f3bd6ef","modified":1617771705603},{"_id":"public/img/2019-06-24_Matplotlib基本语法_1.png","hash":"d29643ac7394b0b517b9f92f5f8fe5ebfbbc03e3","modified":1617771705603},{"_id":"public/img/2019-06-24_Matplotlib基本语法_2.png","hash":"e2c91b1062c127949ac3f83a81f8b0221993bcba","modified":1617771705603},{"_id":"public/img/2019-06-24_Matplotlib基本语法_3.png","hash":"a2f7b2c3770996fdef3445222c80bb827e628875","modified":1617771705603},{"_id":"public/img/2019-06-24_Matplotlib基本语法_4.png","hash":"f816fb68fa0feb396c88f44492c764f4d7d04b42","modified":1617771705603},{"_id":"public/img/2019-06-24_Matplotlib基本语法_5.png","hash":"b96321680ea62e373682e0ce64c428401b54c335","modified":1617771705603},{"_id":"public/img/2019-07-14_线性回归_1.png","hash":"e6dfa2eb9adb61d7cf457a1e01414315099dbd96","modified":1617771705603},{"_id":"public/img/2019-07-14_线性回归_2.png","hash":"9ce03ff202f934c11fbdebebecc5dee5c57a1816","modified":1617771705603},{"_id":"public/img/2019-07-14_线性回归_3.png","hash":"99c36ab93435f239d75373788d73fa7e27030932","modified":1617771705603},{"_id":"public/img/2019-07-29_决策树_1.png","hash":"702befc4ae9a2579cedb3dff8be0b27fe8963d22","modified":1617771705603},{"_id":"public/img/2019-07-29_决策树_2.png","hash":"f4af034bac2f9b4dfb3c8adbbe71263d0412ca08","modified":1617771705603},{"_id":"public/img/2019-07-29_决策树_3.png","hash":"411331c1173b18101a8a58672acebbe75d29c41b","modified":1617771705603},{"_id":"public/img/2019-07-29_决策树_4.png","hash":"65d49b99b7c209f9b5e205ad6b10624928b5f64b","modified":1617771705603},{"_id":"public/img/2019-07-29_决策树_5.png","hash":"f93b02f6c130ad0fea6f21b7f289547f4bcd164f","modified":1617771705603},{"_id":"public/img/2019-08-01_金融数据描述_7.png","hash":"01061033098fec0fe1871af63c4b9f616343c911","modified":1617771705603},{"_id":"public/img/2019-08-01_金融数据描述_8.png","hash":"28f52003c21e2f60e67a7674899cc76d51bbbb89","modified":1617771705603},{"_id":"public/img/2019-08-01_金融数据描述_9.png","hash":"8b6f7721f550a79914da73a526071ec6f2d7958c","modified":1617771705603},{"_id":"public/img/2019-08-07_5种分类模型比较_1.png","hash":"f1370d4b036572ebc39e4158ad9e55daad1d3505","modified":1617771705603},{"_id":"public/img/2019-08-07_5种分类模型比较_3.png","hash":"dfbdf200e73ff4dda8a07e257d8dc0192fc6da09","modified":1617771705603},{"_id":"public/img/2019-08-07_5种分类模型比较_2.png","hash":"a7946edfbb98266bec7fb6b258e32a1d673f0fd2","modified":1617771705603},{"_id":"public/img/2019-08-07_5种分类模型比较_4.png","hash":"87f53180b415fcf652c91b9f4a21eda5fe69f487","modified":1617771705603},{"_id":"public/img/2019-08-07_5种分类模型比较_5.png","hash":"78648663c6483539db76885a65ea1d2ac09433e5","modified":1617771705603},{"_id":"public/img/2019-08-07_5种分类模型比较_6.png","hash":"71d2321b96d4946f08533e1fe23b50b91772b7ba","modified":1617771705603},{"_id":"public/img/2019-08-15_泰坦尼克之灾_1.png","hash":"47df83913cfb283cb96e8d3adc498d7400862188","modified":1617771705603},{"_id":"public/img/2019-08-15_泰坦尼克之灾_10.png","hash":"20d36810ba62d0756047f17114481d45d274892a","modified":1617771705603},{"_id":"public/img/2019-08-15_泰坦尼克之灾_11.png","hash":"b04e5d8e3af28bde6d98bccea61cca63d565ff87","modified":1617771705603},{"_id":"public/img/2019-08-15_泰坦尼克之灾_12.png","hash":"d5a3efbd6f82d1ae78891271c04f0f326c49da93","modified":1617771705603},{"_id":"public/img/2019-08-15_泰坦尼克之灾_13.png","hash":"11b97c9871bccd98111b6894eeeda1392efdf923","modified":1617771705603},{"_id":"public/img/2019-08-15_泰坦尼克之灾_2.png","hash":"87b2ea33858e9471f9028be2efc30e0278bd84c3","modified":1617771705603},{"_id":"public/img/2019-08-15_泰坦尼克之灾_3.png","hash":"ac0fa541d641e74d0a59a1cb46604b0f14cd67e9","modified":1617771705603},{"_id":"public/img/2019-08-15_泰坦尼克之灾_4.png","hash":"cc0bb4f95f6be2ba09b3e6f26d1656f45ac22846","modified":1617771705603},{"_id":"public/img/2019-08-15_泰坦尼克之灾_5.png","hash":"1801128d392d9b20ff993f806053fc17a077a1f7","modified":1617771705603},{"_id":"public/img/2019-08-15_泰坦尼克之灾_6.png","hash":"54e7863c9e46c10a4d87f79b0940a82aec3e32a2","modified":1617771705603},{"_id":"public/img/2019-08-15_泰坦尼克之灾_7.png","hash":"25139da198d1a8e1983daad7fb4c8333263794a6","modified":1617771705603},{"_id":"public/img/2019-08-15_泰坦尼克之灾_9.png","hash":"5814fcf42826163a9dfa5972229dbbcf08b175dc","modified":1617771705603},{"_id":"public/img/2019-08-15_泰坦尼克之灾_8.png","hash":"62337ce837d5a72db88c7fda3b8d2c9527b2ec19","modified":1617771705603},{"_id":"public/img/2019-09-01_Pandas移动窗口.png","hash":"2360a2d4beed691da52a9c8b40f51620359bb2cd","modified":1617771705603},{"_id":"public/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1617771705603},{"_id":"public/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1617771705603},{"_id":"public/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1617771705603},{"_id":"public/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1617771705603},{"_id":"public/ipynb/2019-08-04_特征工程.ipynb","hash":"7168da0582b44d4778e8bae5b21f800b67b98dc3","modified":1617771705603},{"_id":"public/ipynb/2019-08-15_泰坦尼克之灾（六大模型baseline）.ipynb","hash":"f582c53bf2c149ef837d1b7f7647be1a638c5fef","modified":1617771705603},{"_id":"public/img/2019-06-24_Matplotlib基本语法_6.png","hash":"03108c95679d72cfd9088a52985ff9eb57e684ee","modified":1617771705603},{"_id":"public/img/2019-07-01_两股票历史价格比较_1.png","hash":"4e73faed0aee2f329c03d0b0e87b62d2ffbb3fca","modified":1617771705603},{"_id":"public/img/2019-08-01_金融数据描述_2.png","hash":"5dd7ec731b46a0f2cb192c6a995a8b7ad6ba1adc","modified":1617771705603},{"_id":"public/img/2019-08-01_金融数据描述_3.png","hash":"3c06e9b7d88a20b242e7d9c3c0cb7067cf4327e8","modified":1617771705603},{"_id":"public/img/2019-08-01_金融数据描述_6.png","hash":"f93708dddee40c8a9324e9a1b69fa5a032e4a39b","modified":1617771705603},{"_id":"public/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1617771705603},{"_id":"public/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1617771705603},{"_id":"public/img/2019-08-01_金融数据描述_1.png","hash":"2cf7a8cd6885858b70167214f4661d8c9a2fd8fe","modified":1617771705603},{"_id":"public/img/2019-08-01_金融数据描述_10.png","hash":"d473ee993abf8517e3ab3c4f8662378bc0322d5c","modified":1617771705603},{"_id":"public/img/2019-08-01_金融数据描述_4.png","hash":"257daaf23c5469e5972b672c36d292d76e44bdc6","modified":1617771705603},{"_id":"public/img/2019-08-01_金融数据描述_5.png","hash":"3ead59fc7adb32c77f1151db215deef763479004","modified":1617771705603},{"_id":"public/js/back2top.js","hash":"fc8e85f6704e39ae3a613bbec5dd51d449be8010","modified":1617771705603},{"_id":"public/js/code-copy.js","hash":"3fdabac26f6406a4592336f1f444ec966201b5d9","modified":1617771705603},{"_id":"public/js/dark-light-toggle.js","hash":"223e6f1d4e6e70956e4661b58c430e1c68def125","modified":1617771705603},{"_id":"public/js/header-shrink.js","hash":"167b9b6a9ed63c6cf4081cb3c201dd16bbbfb9ad","modified":1617771705603},{"_id":"public/js/lazyload.js","hash":"95aad532f17d7a8119979fc61ade9e626308a2af","modified":1617771705603},{"_id":"public/js/left-side-toggle.js","hash":"618f7cfc45db4d82b2f1d00d8e9ee936bcf9043b","modified":1617771705603},{"_id":"public/js/local-search.js","hash":"9509ec6d2d7d4466fe37ad624cf606f6639fb3fe","modified":1617771705603},{"_id":"public/js/main.js","hash":"ca8ed228cc0bc234be74428d029cfd047eec0ed6","modified":1617771705603},{"_id":"public/js/toc.js","hash":"ae69bf65d2b30d299b6ca9e2361d3b6e0db3a077","modified":1617771705603},{"_id":"public/js/utils.js","hash":"47c6d222a116498359345777aea383c429975abf","modified":1617771705603},{"_id":"public/css/common/basic.css","hash":"823f98adccd0b91b88a56dd8356f166f64efd83b","modified":1617771705603},{"_id":"public/css/common/animated.css","hash":"061e145f3c7ac90dd305bd5260aaee71b1833167","modified":1617771705603},{"_id":"public/css/common/keep-theme.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1617771705603},{"_id":"public/css/common/markdown.css","hash":"a5868b405a869356c0cabc56d2a0190dcbb59a25","modified":1617771705603},{"_id":"public/css/common/variables.css","hash":"157311f7b38a76721f2b6a2a9bd5229fac60df41","modified":1617771705603},{"_id":"public/css/layout/archive-content.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1617771705603},{"_id":"public/css/layout/article-content.css","hash":"bb2e9b90086c4a014d0dbeb97cd0beedab27fe9c","modified":1617771705603},{"_id":"public/css/layout/category-content.css","hash":"9687f9cbe029092b633fb804c28ecdcb54860511","modified":1617771705603},{"_id":"public/css/layout/category-list.css","hash":"672859a61a4e93c0514772112fb557395306e940","modified":1617771705603},{"_id":"public/css/layout/home-content.css","hash":"be1438b849ebf82cea573986fbbd1deed5334a72","modified":1617771705603},{"_id":"public/css/layout/page.css","hash":"dc57eee2b360ad0e9910d69653d547f033dbbd4c","modified":1617771705603},{"_id":"public/css/layout/tag-content.css","hash":"90b0cff1ef0228035cdca9ade2adef71c6c8fb5e","modified":1617771705603},{"_id":"public/css/common/codeblock/code-theme.css","hash":"0edc6d498dc0abbaadb152b48e9e7bebb6fd15f4","modified":1617771705603},{"_id":"public/css/common/codeblock/highlight.css","hash":"a6584196f859d00cdd962f43c809e44ed89319e4","modified":1617771705603},{"_id":"public/css/common/codeblock/copy-code.css","hash":"b89f31aee2da7a9abe05293391a90602094095b8","modified":1617771705603},{"_id":"public/css/style.css","hash":"0d01cd7d76e68d31ecccce748d7226cacc822189","modified":1617771705603},{"_id":"public/webfonts/fa-regular-400.svg","hash":"c41a688158d577e3a2738137992d49b05b17ab8f","modified":1617771705603},{"_id":"public/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1617771705603},{"_id":"public/ipynb/2019-07-02_基本爬虫.ipynb","hash":"4afbc9bf4785a0b5446fe5f9c61b72335edfa339","modified":1617771705603},{"_id":"public/ipynb/2019-08-01_数据理解与清洗.ipynb","hash":"75b3882612c5b9435233e5bfebf4d478cd340a81","modified":1617771705603},{"_id":"public/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1617771705603},{"_id":"public/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1617771705603},{"_id":"public/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1617771705603},{"_id":"public/img/2019-08-22_数据仓库设计_1.png","hash":"bb727ddb75cfa013e74a9b926cbc457de26db3f8","modified":1617771705603},{"_id":"public/css/font-awesome.min.css","hash":"c508528feb9fd540454f838653cd4863b290df2e","modified":1617771705603},{"_id":"public/img/2019-08-10_网格搜寻_1.png","hash":"46e741fb627f2898994057249a5bf93a6cfedbb8","modified":1617771705603},{"_id":"public/webfonts/fa-brands-400.svg","hash":"69a0ff79a9d93a451e9fa90bd79ae7008d2a9da5","modified":1617771705603},{"_id":"public/webfonts/fa-solid-900.svg","hash":"36de6a298660ed3feaab37900f7b28c3e981d80e","modified":1617771705603},{"_id":"public/ipynb/2019-08-01_金融数据描述_data1.csv","hash":"b115e597a9de4b0d133a3b7ea9a262c070db20d3","modified":1617771705603},{"_id":"public/images/pasted-0.png","hash":"104c6a221493a2faa9e2c798f8ab1d91a922926d","modified":1617771705603}],"Category":[{"name":"Python","_id":"ckn6zi5q500049ohz7jma0dpq"},{"name":"项目","_id":"ckn6zi5qi000g9ohz2043h6j2"},{"name":"统计与机器学习","_id":"ckn6zi5qo000p9ohzcb9sbxj7"},{"name":"金融分析","parent":"ckn6zi5qi000g9ohz2043h6j2","_id":"ckn6zi5qw000y9ohzg34j4ci9"},{"name":"爬虫","parent":"ckn6zi5qi000g9ohz2043h6j2","_id":"ckn6zi5r200169ohz7ixpe9hj"},{"name":"集成算法（Ensemble algorithms）","parent":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5r300189ohz7lkma8ry"},{"name":"回归算法（Regression）","parent":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5r4001b9ohzh7yc8k5l"},{"name":"数据仓库","_id":"ckn6zi5r6001f9ohzfip083a6"},{"name":"其他","parent":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5r6001j9ohz4ecu3phi"},{"name":"贝叶斯算法（Bayesian Algorithms）","parent":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5r8001n9ohz3jd3eb32"},{"name":"LeetCode","parent":"ckn6zi5qi000g9ohz2043h6j2","_id":"ckn6zi5ra001t9ohzdrnv9tbc"},{"name":"支持向量机（Support Vector Machines）","parent":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5rb001z9ohz5fm6c80l"},{"name":"决策树算法（Decision Tree Algorithm）","parent":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5rc00239ohz72wbadxb"},{"name":"商業統計","parent":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5rn002i9ohz8j02fd2r"},{"name":"数据科学","parent":"ckn6zi5qi000g9ohz2043h6j2","_id":"ckn6zi5rv002w9ohzfz0s7vt6"}],"Data":[],"Page":[{"title":"categories","date":"2019-06-22T15:40:38.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-06-22 23:40:38\ntype: \"categories\"\ncomments: false\n---\n","updated":"2019-08-23T16:08:40.281Z","path":"categories/index.html","layout":"page","_id":"ckn6zi5pv00009ohz4a551k37","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"archives","date":"2019-06-20T15:48:17.000Z","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2019-06-20 23:48:17\n---\n","updated":"2019-08-23T16:08:40.280Z","path":"archives/index.html","comments":1,"layout":"page","_id":"ckn6zi5q200029ohzcehfcy5f","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Matplotlib","abbrlink":16372,"date":"2019-06-23T16:00:00.000Z","_content":"\n## 基本配置与标记\n\n\n```python\n#coding:utf-8\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom pylab import *\n\n# 定义数据部分\nx = np.arange(0., 10, 0.2)\ny1 = np.cos(x)\ny2 = np.sin(x)\ny3 = np.sqrt(x)\n\n# 绘制 3 条函数曲线\nplt.plot(x, y1, color='blue', linewidth=1.5, linestyle='-', marker='.', label=r'$y = cos{x}$')\nplt.plot(x, y2, color='green', linewidth=1.5, linestyle='-', marker='*', label=r'$y = sin{x}$')\nplt.plot(x, y3, color='m', linewidth=1.5, linestyle='-', marker='x', label=r'$y = \\sqrt{x}$')\n\n# 坐标轴上移\nax = plt.subplot(111)\nax.spines['right'].set_color('none')     # 去掉右边的边框线\nax.spines['top'].set_color('none')       # 去掉上边的边框线\n\n# 移动下边边框线，相当于移动 X 轴\nax.xaxis.set_ticks_position('bottom')    \nax.spines['bottom'].set_position(('data', 0))\n\n# 移动左边边框线，相当于移动 y 轴\nax.yaxis.set_ticks_position('left')\nax.spines['left'].set_position(('data', 0))\n\n# 设置 x, y 轴的取值范围\nplt.xlim(x.min()*1.1, x.max()*1.1)\nplt.ylim(-1.5, 4.0)\n\n# 设置 x, y 轴的刻度值\nplt.xticks([2, 4, 6, 8, 10], [r'2', r'4', r'6', r'8', r'10'])\nplt.yticks([-1.0, 0.0, 1.0, 2.0, 3.0, 4.0], \n    [r'-1.0', r'0.0', r'1.0', r'2.0', r'3.0', r'4.0'])\n\n# 添加文字\nplt.text(4, 1.68, r'$x \\in [0.0, \\ 10.0]$', color='k', fontsize=15)\nplt.text(4, 1.38, r'$y \\in [-1.0, \\ 4.0]$', color='k', fontsize=15)\n\n# 特殊点添加注解\nplt.scatter([8,],[np.sqrt(8),], 50, color ='m')  # 使用散点图放大当前点\nplt.annotate(r'$2\\sqrt{2}$', xy=(8, np.sqrt(8)), xytext=(8.5, 2.2), fontsize=16, color='#090909', arrowprops=dict(arrowstyle='->', connectionstyle='arc3, rad=0.1', color='#090909'))\n\n# 设置标题、x轴、y轴\nplt.title(r'$the \\ function \\ figure \\ of \\ cos(), \\ sin() \\ and \\ sqrt()$', fontsize=19)\nplt.xlabel(r'$the \\ input \\ value \\ of \\ x$', fontsize=18, labelpad=88.8)\nplt.ylabel(r'$y = f(x)$', fontsize=18, labelpad=12.5)\n\n# 设置图例及位置\nplt.legend(loc='upper right')    \n# plt.legend(['cos(x)', 'sin(x)', 'sqrt(x)'], loc='up right')\n\n# 显示网格线\nplt.grid(True)    \n\n# 绘图\nplt.savefig(\"../img/2019-06-24_Matplotlib基本语法_1.png\")\nplt.close()\n```\n\n![](/img/2019-06-24_Matplotlib基本语法_1.png)\n\n## 曲线图\n\n\n```python\nx = np.arange(-5,5,0.1)\ny = x ** 2\nplt.plot(x,y)\n\n# 绘图\nplt.savefig(\"../img/2019-06-24_Matplotlib基本语法_2.png\")\nplt.close()\n```\n\n![](/img/2019-06-24_Matplotlib基本语法_2.png)\n\n## 散布图\n\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nn = 1024\nX = np.random.normal(0, 1, n)\nY = np.random.normal(0, 1, n)\n\nplt.scatter(X,Y)\n\n# 绘图\nplt.savefig(\"../img/2019-06-24_Matplotlib基本语法_3.png\")\nplt.close()\n```\n\n![](/img/2019-06-24_Matplotlib基本语法_3.png)\n\n## 柱状图\n\n\n```python\nx = np.random.normal(size=1000)\nplt.hist(x, bins=10)\n\n# 绘图\nplt.savefig(\"../img/2019-06-24_Matplotlib基本语法_4.png\")\nplt.close()\n```\n\n![](/img/2019-06-24_Matplotlib基本语法_4.png)\n\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nn = 12\nX = np.arange(n)\nY1 = (1- X / float(n)) * np.random.uniform(0.5, 1.0, n)\nY2 = (1- X/ float(n)) * np.random.uniform(0.5, 1.0, n)\n\nplt.axes([0.025, 0.025, 0.95, 0.95])\nplt.bar(X, +Y1, facecolor = '#9999ff', edgecolor = 'white')\nplt.bar(X, -Y2, facecolor = '#ff9999', edgecolor = 'white')\n\nfor x,y in zip(X,Y1):\n    plt.text(x, y + 0.08, '%.2f' % y, ha = 'center', va = 'bottom')\n\nfor x,y in zip(X,Y2):\n    plt.text(x, -y - 0.08, '%.2f' % y, ha = 'center', va= 'top')\n\nplt.xlim(-.5, n), \nplt.ylim(-1.25, +1.25), \nplt.xticks([])\nplt.yticks([])\n\n# 绘图\nplt.savefig(\"../img/2019-06-24_Matplotlib基本语法_5.png\")\nplt.close()\n```\n\n![](/img/2019-06-24_Matplotlib基本语法_5.png)\n\n## 3D图\n\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\nfig = plt.figure()\nax = Axes3D(fig)\nX = np.arange(-4, 4, 0.25)\nY = np.arange(-4, 4, 0.25)\nX, Y = np.meshgrid(X, Y)\nR = np.sqrt(X ** 2 + Y ** 2)\nZ = np.sin(R)\n\nax.plot_surface(X, Y, Z, rstride = 1, cstride=1, cmap = plt.cm.hot)\nax.contourf(X, Y, Z, zdir = 'z', offset = -2, cmap = plt.cm.hot)\nax.set_zlim(-2,2)\n\n# 绘图\nplt.savefig(\"../img/2019-06-24_Matplotlib基本语法_6.png\")\nplt.close()\n```\n\n![](/img/2019-06-24_Matplotlib基本语法_6.png)\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n","source":"_posts/2019-06-24_Matplotlib.md","raw":"---\ntitle: Matplotlib\ncategories:\n  - Python\nabbrlink: 16372\ndate: 2019-06-24 00:00:00\n---\n\n## 基本配置与标记\n\n\n```python\n#coding:utf-8\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom pylab import *\n\n# 定义数据部分\nx = np.arange(0., 10, 0.2)\ny1 = np.cos(x)\ny2 = np.sin(x)\ny3 = np.sqrt(x)\n\n# 绘制 3 条函数曲线\nplt.plot(x, y1, color='blue', linewidth=1.5, linestyle='-', marker='.', label=r'$y = cos{x}$')\nplt.plot(x, y2, color='green', linewidth=1.5, linestyle='-', marker='*', label=r'$y = sin{x}$')\nplt.plot(x, y3, color='m', linewidth=1.5, linestyle='-', marker='x', label=r'$y = \\sqrt{x}$')\n\n# 坐标轴上移\nax = plt.subplot(111)\nax.spines['right'].set_color('none')     # 去掉右边的边框线\nax.spines['top'].set_color('none')       # 去掉上边的边框线\n\n# 移动下边边框线，相当于移动 X 轴\nax.xaxis.set_ticks_position('bottom')    \nax.spines['bottom'].set_position(('data', 0))\n\n# 移动左边边框线，相当于移动 y 轴\nax.yaxis.set_ticks_position('left')\nax.spines['left'].set_position(('data', 0))\n\n# 设置 x, y 轴的取值范围\nplt.xlim(x.min()*1.1, x.max()*1.1)\nplt.ylim(-1.5, 4.0)\n\n# 设置 x, y 轴的刻度值\nplt.xticks([2, 4, 6, 8, 10], [r'2', r'4', r'6', r'8', r'10'])\nplt.yticks([-1.0, 0.0, 1.0, 2.0, 3.0, 4.0], \n    [r'-1.0', r'0.0', r'1.0', r'2.0', r'3.0', r'4.0'])\n\n# 添加文字\nplt.text(4, 1.68, r'$x \\in [0.0, \\ 10.0]$', color='k', fontsize=15)\nplt.text(4, 1.38, r'$y \\in [-1.0, \\ 4.0]$', color='k', fontsize=15)\n\n# 特殊点添加注解\nplt.scatter([8,],[np.sqrt(8),], 50, color ='m')  # 使用散点图放大当前点\nplt.annotate(r'$2\\sqrt{2}$', xy=(8, np.sqrt(8)), xytext=(8.5, 2.2), fontsize=16, color='#090909', arrowprops=dict(arrowstyle='->', connectionstyle='arc3, rad=0.1', color='#090909'))\n\n# 设置标题、x轴、y轴\nplt.title(r'$the \\ function \\ figure \\ of \\ cos(), \\ sin() \\ and \\ sqrt()$', fontsize=19)\nplt.xlabel(r'$the \\ input \\ value \\ of \\ x$', fontsize=18, labelpad=88.8)\nplt.ylabel(r'$y = f(x)$', fontsize=18, labelpad=12.5)\n\n# 设置图例及位置\nplt.legend(loc='upper right')    \n# plt.legend(['cos(x)', 'sin(x)', 'sqrt(x)'], loc='up right')\n\n# 显示网格线\nplt.grid(True)    \n\n# 绘图\nplt.savefig(\"../img/2019-06-24_Matplotlib基本语法_1.png\")\nplt.close()\n```\n\n![](/img/2019-06-24_Matplotlib基本语法_1.png)\n\n## 曲线图\n\n\n```python\nx = np.arange(-5,5,0.1)\ny = x ** 2\nplt.plot(x,y)\n\n# 绘图\nplt.savefig(\"../img/2019-06-24_Matplotlib基本语法_2.png\")\nplt.close()\n```\n\n![](/img/2019-06-24_Matplotlib基本语法_2.png)\n\n## 散布图\n\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nn = 1024\nX = np.random.normal(0, 1, n)\nY = np.random.normal(0, 1, n)\n\nplt.scatter(X,Y)\n\n# 绘图\nplt.savefig(\"../img/2019-06-24_Matplotlib基本语法_3.png\")\nplt.close()\n```\n\n![](/img/2019-06-24_Matplotlib基本语法_3.png)\n\n## 柱状图\n\n\n```python\nx = np.random.normal(size=1000)\nplt.hist(x, bins=10)\n\n# 绘图\nplt.savefig(\"../img/2019-06-24_Matplotlib基本语法_4.png\")\nplt.close()\n```\n\n![](/img/2019-06-24_Matplotlib基本语法_4.png)\n\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nn = 12\nX = np.arange(n)\nY1 = (1- X / float(n)) * np.random.uniform(0.5, 1.0, n)\nY2 = (1- X/ float(n)) * np.random.uniform(0.5, 1.0, n)\n\nplt.axes([0.025, 0.025, 0.95, 0.95])\nplt.bar(X, +Y1, facecolor = '#9999ff', edgecolor = 'white')\nplt.bar(X, -Y2, facecolor = '#ff9999', edgecolor = 'white')\n\nfor x,y in zip(X,Y1):\n    plt.text(x, y + 0.08, '%.2f' % y, ha = 'center', va = 'bottom')\n\nfor x,y in zip(X,Y2):\n    plt.text(x, -y - 0.08, '%.2f' % y, ha = 'center', va= 'top')\n\nplt.xlim(-.5, n), \nplt.ylim(-1.25, +1.25), \nplt.xticks([])\nplt.yticks([])\n\n# 绘图\nplt.savefig(\"../img/2019-06-24_Matplotlib基本语法_5.png\")\nplt.close()\n```\n\n![](/img/2019-06-24_Matplotlib基本语法_5.png)\n\n## 3D图\n\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\nfig = plt.figure()\nax = Axes3D(fig)\nX = np.arange(-4, 4, 0.25)\nY = np.arange(-4, 4, 0.25)\nX, Y = np.meshgrid(X, Y)\nR = np.sqrt(X ** 2 + Y ** 2)\nZ = np.sin(R)\n\nax.plot_surface(X, Y, Z, rstride = 1, cstride=1, cmap = plt.cm.hot)\nax.contourf(X, Y, Z, zdir = 'z', offset = -2, cmap = plt.cm.hot)\nax.set_zlim(-2,2)\n\n# 绘图\nplt.savefig(\"../img/2019-06-24_Matplotlib基本语法_6.png\")\nplt.close()\n```\n\n![](/img/2019-06-24_Matplotlib基本语法_6.png)\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n","slug":"2019-06-24_Matplotlib","published":1,"updated":"2021-04-06T13:57:29.935Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5pz00019ohz7abvhwc5","content":"<h2 id=\"基本配置与标记\"><a href=\"#基本配置与标记\" class=\"headerlink\" title=\"基本配置与标记\"></a>基本配置与标记</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#coding:utf-8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> pylab <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义数据部分</span></span><br><span class=\"line\">x = np.arange(<span class=\"number\">0.</span>, <span class=\"number\">10</span>, <span class=\"number\">0.2</span>)</span><br><span class=\"line\">y1 = np.cos(x)</span><br><span class=\"line\">y2 = np.sin(x)</span><br><span class=\"line\">y3 = np.sqrt(x)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘制 3 条函数曲线</span></span><br><span class=\"line\">plt.plot(x, y1, color=<span class=\"string\">&#x27;blue&#x27;</span>, linewidth=<span class=\"number\">1.5</span>, linestyle=<span class=\"string\">&#x27;-&#x27;</span>, marker=<span class=\"string\">&#x27;.&#x27;</span>, label=<span class=\"string\">r&#x27;$y = cos&#123;x&#125;$&#x27;</span>)</span><br><span class=\"line\">plt.plot(x, y2, color=<span class=\"string\">&#x27;green&#x27;</span>, linewidth=<span class=\"number\">1.5</span>, linestyle=<span class=\"string\">&#x27;-&#x27;</span>, marker=<span class=\"string\">&#x27;*&#x27;</span>, label=<span class=\"string\">r&#x27;$y = sin&#123;x&#125;$&#x27;</span>)</span><br><span class=\"line\">plt.plot(x, y3, color=<span class=\"string\">&#x27;m&#x27;</span>, linewidth=<span class=\"number\">1.5</span>, linestyle=<span class=\"string\">&#x27;-&#x27;</span>, marker=<span class=\"string\">&#x27;x&#x27;</span>, label=<span class=\"string\">r&#x27;$y = \\sqrt&#123;x&#125;$&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 坐标轴上移</span></span><br><span class=\"line\">ax = plt.subplot(<span class=\"number\">111</span>)</span><br><span class=\"line\">ax.spines[<span class=\"string\">&#x27;right&#x27;</span>].set_color(<span class=\"string\">&#x27;none&#x27;</span>)     <span class=\"comment\"># 去掉右边的边框线</span></span><br><span class=\"line\">ax.spines[<span class=\"string\">&#x27;top&#x27;</span>].set_color(<span class=\"string\">&#x27;none&#x27;</span>)       <span class=\"comment\"># 去掉上边的边框线</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 移动下边边框线，相当于移动 X 轴</span></span><br><span class=\"line\">ax.xaxis.set_ticks_position(<span class=\"string\">&#x27;bottom&#x27;</span>)    </span><br><span class=\"line\">ax.spines[<span class=\"string\">&#x27;bottom&#x27;</span>].set_position((<span class=\"string\">&#x27;data&#x27;</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 移动左边边框线，相当于移动 y 轴</span></span><br><span class=\"line\">ax.yaxis.set_ticks_position(<span class=\"string\">&#x27;left&#x27;</span>)</span><br><span class=\"line\">ax.spines[<span class=\"string\">&#x27;left&#x27;</span>].set_position((<span class=\"string\">&#x27;data&#x27;</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置 x, y 轴的取值范围</span></span><br><span class=\"line\">plt.xlim(x.<span class=\"built_in\">min</span>()*<span class=\"number\">1.1</span>, x.<span class=\"built_in\">max</span>()*<span class=\"number\">1.1</span>)</span><br><span class=\"line\">plt.ylim(-<span class=\"number\">1.5</span>, <span class=\"number\">4.0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置 x, y 轴的刻度值</span></span><br><span class=\"line\">plt.xticks([<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>], [<span class=\"string\">r&#x27;2&#x27;</span>, <span class=\"string\">r&#x27;4&#x27;</span>, <span class=\"string\">r&#x27;6&#x27;</span>, <span class=\"string\">r&#x27;8&#x27;</span>, <span class=\"string\">r&#x27;10&#x27;</span>])</span><br><span class=\"line\">plt.yticks([-<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>, <span class=\"number\">4.0</span>], </span><br><span class=\"line\">    [<span class=\"string\">r&#x27;-1.0&#x27;</span>, <span class=\"string\">r&#x27;0.0&#x27;</span>, <span class=\"string\">r&#x27;1.0&#x27;</span>, <span class=\"string\">r&#x27;2.0&#x27;</span>, <span class=\"string\">r&#x27;3.0&#x27;</span>, <span class=\"string\">r&#x27;4.0&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加文字</span></span><br><span class=\"line\">plt.text(<span class=\"number\">4</span>, <span class=\"number\">1.68</span>, <span class=\"string\">r&#x27;$x \\in [0.0, \\ 10.0]$&#x27;</span>, color=<span class=\"string\">&#x27;k&#x27;</span>, fontsize=<span class=\"number\">15</span>)</span><br><span class=\"line\">plt.text(<span class=\"number\">4</span>, <span class=\"number\">1.38</span>, <span class=\"string\">r&#x27;$y \\in [-1.0, \\ 4.0]$&#x27;</span>, color=<span class=\"string\">&#x27;k&#x27;</span>, fontsize=<span class=\"number\">15</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 特殊点添加注解</span></span><br><span class=\"line\">plt.scatter([<span class=\"number\">8</span>,],[np.sqrt(<span class=\"number\">8</span>),], <span class=\"number\">50</span>, color =<span class=\"string\">&#x27;m&#x27;</span>)  <span class=\"comment\"># 使用散点图放大当前点</span></span><br><span class=\"line\">plt.annotate(<span class=\"string\">r&#x27;$2\\sqrt&#123;2&#125;$&#x27;</span>, xy=(<span class=\"number\">8</span>, np.sqrt(<span class=\"number\">8</span>)), xytext=(<span class=\"number\">8.5</span>, <span class=\"number\">2.2</span>), fontsize=<span class=\"number\">16</span>, color=<span class=\"string\">&#x27;#090909&#x27;</span>, arrowprops=<span class=\"built_in\">dict</span>(arrowstyle=<span class=\"string\">&#x27;-&gt;&#x27;</span>, connectionstyle=<span class=\"string\">&#x27;arc3, rad=0.1&#x27;</span>, color=<span class=\"string\">&#x27;#090909&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置标题、x轴、y轴</span></span><br><span class=\"line\">plt.title(<span class=\"string\">r&#x27;$the \\ function \\ figure \\ of \\ cos(), \\ sin() \\ and \\ sqrt()$&#x27;</span>, fontsize=<span class=\"number\">19</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">r&#x27;$the \\ input \\ value \\ of \\ x$&#x27;</span>, fontsize=<span class=\"number\">18</span>, labelpad=<span class=\"number\">88.8</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">r&#x27;$y = f(x)$&#x27;</span>, fontsize=<span class=\"number\">18</span>, labelpad=<span class=\"number\">12.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置图例及位置</span></span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;upper right&#x27;</span>)    </span><br><span class=\"line\"><span class=\"comment\"># plt.legend([&#x27;cos(x)&#x27;, &#x27;sin(x)&#x27;, &#x27;sqrt(x)&#x27;], loc=&#x27;up right&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示网格线</span></span><br><span class=\"line\">plt.grid(<span class=\"literal\">True</span>)    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-06-24_Matplotlib基本语法_1.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-06-24_Matplotlib基本语法_1.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"曲线图\"><a href=\"#曲线图\" class=\"headerlink\" title=\"曲线图\"></a>曲线图</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = np.arange(-<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">0.1</span>)</span><br><span class=\"line\">y = x ** <span class=\"number\">2</span></span><br><span class=\"line\">plt.plot(x,y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-06-24_Matplotlib基本语法_2.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-06-24_Matplotlib基本语法_2.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"散布图\"><a href=\"#散布图\" class=\"headerlink\" title=\"散布图\"></a>散布图</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">n = <span class=\"number\">1024</span></span><br><span class=\"line\">X = np.random.normal(<span class=\"number\">0</span>, <span class=\"number\">1</span>, n)</span><br><span class=\"line\">Y = np.random.normal(<span class=\"number\">0</span>, <span class=\"number\">1</span>, n)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.scatter(X,Y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-06-24_Matplotlib基本语法_3.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-06-24_Matplotlib基本语法_3.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"柱状图\"><a href=\"#柱状图\" class=\"headerlink\" title=\"柱状图\"></a>柱状图</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = np.random.normal(size=<span class=\"number\">1000</span>)</span><br><span class=\"line\">plt.hist(x, bins=<span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-06-24_Matplotlib基本语法_4.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-06-24_Matplotlib基本语法_4.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">n = <span class=\"number\">12</span></span><br><span class=\"line\">X = np.arange(n)</span><br><span class=\"line\">Y1 = (<span class=\"number\">1</span>- X / <span class=\"built_in\">float</span>(n)) * np.random.uniform(<span class=\"number\">0.5</span>, <span class=\"number\">1.0</span>, n)</span><br><span class=\"line\">Y2 = (<span class=\"number\">1</span>- X/ <span class=\"built_in\">float</span>(n)) * np.random.uniform(<span class=\"number\">0.5</span>, <span class=\"number\">1.0</span>, n)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.axes([<span class=\"number\">0.025</span>, <span class=\"number\">0.025</span>, <span class=\"number\">0.95</span>, <span class=\"number\">0.95</span>])</span><br><span class=\"line\">plt.bar(X, +Y1, facecolor = <span class=\"string\">&#x27;#9999ff&#x27;</span>, edgecolor = <span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">plt.bar(X, -Y2, facecolor = <span class=\"string\">&#x27;#ff9999&#x27;</span>, edgecolor = <span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> x,y <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(X,Y1):</span><br><span class=\"line\">    plt.text(x, y + <span class=\"number\">0.08</span>, <span class=\"string\">&#x27;%.2f&#x27;</span> % y, ha = <span class=\"string\">&#x27;center&#x27;</span>, va = <span class=\"string\">&#x27;bottom&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> x,y <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(X,Y2):</span><br><span class=\"line\">    plt.text(x, -y - <span class=\"number\">0.08</span>, <span class=\"string\">&#x27;%.2f&#x27;</span> % y, ha = <span class=\"string\">&#x27;center&#x27;</span>, va= <span class=\"string\">&#x27;top&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.xlim(-<span class=\"number\">.5</span>, n), </span><br><span class=\"line\">plt.ylim(-<span class=\"number\">1.25</span>, +<span class=\"number\">1.25</span>), </span><br><span class=\"line\">plt.xticks([])</span><br><span class=\"line\">plt.yticks([])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-06-24_Matplotlib基本语法_5.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-06-24_Matplotlib基本语法_5.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"3D图\"><a href=\"#3D图\" class=\"headerlink\" title=\"3D图\"></a>3D图</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> mpl_toolkits.mplot3d <span class=\"keyword\">import</span> Axes3D</span><br><span class=\"line\"></span><br><span class=\"line\">fig = plt.figure()</span><br><span class=\"line\">ax = Axes3D(fig)</span><br><span class=\"line\">X = np.arange(-<span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">0.25</span>)</span><br><span class=\"line\">Y = np.arange(-<span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">0.25</span>)</span><br><span class=\"line\">X, Y = np.meshgrid(X, Y)</span><br><span class=\"line\">R = np.sqrt(X ** <span class=\"number\">2</span> + Y ** <span class=\"number\">2</span>)</span><br><span class=\"line\">Z = np.sin(R)</span><br><span class=\"line\"></span><br><span class=\"line\">ax.plot_surface(X, Y, Z, rstride = <span class=\"number\">1</span>, cstride=<span class=\"number\">1</span>, cmap = plt.cm.hot)</span><br><span class=\"line\">ax.contourf(X, Y, Z, zdir = <span class=\"string\">&#x27;z&#x27;</span>, offset = -<span class=\"number\">2</span>, cmap = plt.cm.hot)</span><br><span class=\"line\">ax.set_zlim(-<span class=\"number\">2</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-06-24_Matplotlib基本语法_6.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-06-24_Matplotlib基本语法_6.png\"\n                      alt=\"\"\n                ></p>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.julyedu.com/course/getDetail/66/\" >廖雪峰Python数据分析<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基本配置与标记\"><a href=\"#基本配置与标记\" class=\"headerlink\" title=\"基本配置与标记\"></a>基本配置与标记</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#coding:utf-8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> pylab <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义数据部分</span></span><br><span class=\"line\">x = np.arange(<span class=\"number\">0.</span>, <span class=\"number\">10</span>, <span class=\"number\">0.2</span>)</span><br><span class=\"line\">y1 = np.cos(x)</span><br><span class=\"line\">y2 = np.sin(x)</span><br><span class=\"line\">y3 = np.sqrt(x)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘制 3 条函数曲线</span></span><br><span class=\"line\">plt.plot(x, y1, color=<span class=\"string\">&#x27;blue&#x27;</span>, linewidth=<span class=\"number\">1.5</span>, linestyle=<span class=\"string\">&#x27;-&#x27;</span>, marker=<span class=\"string\">&#x27;.&#x27;</span>, label=<span class=\"string\">r&#x27;$y = cos&#123;x&#125;$&#x27;</span>)</span><br><span class=\"line\">plt.plot(x, y2, color=<span class=\"string\">&#x27;green&#x27;</span>, linewidth=<span class=\"number\">1.5</span>, linestyle=<span class=\"string\">&#x27;-&#x27;</span>, marker=<span class=\"string\">&#x27;*&#x27;</span>, label=<span class=\"string\">r&#x27;$y = sin&#123;x&#125;$&#x27;</span>)</span><br><span class=\"line\">plt.plot(x, y3, color=<span class=\"string\">&#x27;m&#x27;</span>, linewidth=<span class=\"number\">1.5</span>, linestyle=<span class=\"string\">&#x27;-&#x27;</span>, marker=<span class=\"string\">&#x27;x&#x27;</span>, label=<span class=\"string\">r&#x27;$y = \\sqrt&#123;x&#125;$&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 坐标轴上移</span></span><br><span class=\"line\">ax = plt.subplot(<span class=\"number\">111</span>)</span><br><span class=\"line\">ax.spines[<span class=\"string\">&#x27;right&#x27;</span>].set_color(<span class=\"string\">&#x27;none&#x27;</span>)     <span class=\"comment\"># 去掉右边的边框线</span></span><br><span class=\"line\">ax.spines[<span class=\"string\">&#x27;top&#x27;</span>].set_color(<span class=\"string\">&#x27;none&#x27;</span>)       <span class=\"comment\"># 去掉上边的边框线</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 移动下边边框线，相当于移动 X 轴</span></span><br><span class=\"line\">ax.xaxis.set_ticks_position(<span class=\"string\">&#x27;bottom&#x27;</span>)    </span><br><span class=\"line\">ax.spines[<span class=\"string\">&#x27;bottom&#x27;</span>].set_position((<span class=\"string\">&#x27;data&#x27;</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 移动左边边框线，相当于移动 y 轴</span></span><br><span class=\"line\">ax.yaxis.set_ticks_position(<span class=\"string\">&#x27;left&#x27;</span>)</span><br><span class=\"line\">ax.spines[<span class=\"string\">&#x27;left&#x27;</span>].set_position((<span class=\"string\">&#x27;data&#x27;</span>, <span class=\"number\">0</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置 x, y 轴的取值范围</span></span><br><span class=\"line\">plt.xlim(x.<span class=\"built_in\">min</span>()*<span class=\"number\">1.1</span>, x.<span class=\"built_in\">max</span>()*<span class=\"number\">1.1</span>)</span><br><span class=\"line\">plt.ylim(-<span class=\"number\">1.5</span>, <span class=\"number\">4.0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置 x, y 轴的刻度值</span></span><br><span class=\"line\">plt.xticks([<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">8</span>, <span class=\"number\">10</span>], [<span class=\"string\">r&#x27;2&#x27;</span>, <span class=\"string\">r&#x27;4&#x27;</span>, <span class=\"string\">r&#x27;6&#x27;</span>, <span class=\"string\">r&#x27;8&#x27;</span>, <span class=\"string\">r&#x27;10&#x27;</span>])</span><br><span class=\"line\">plt.yticks([-<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>, <span class=\"number\">4.0</span>], </span><br><span class=\"line\">    [<span class=\"string\">r&#x27;-1.0&#x27;</span>, <span class=\"string\">r&#x27;0.0&#x27;</span>, <span class=\"string\">r&#x27;1.0&#x27;</span>, <span class=\"string\">r&#x27;2.0&#x27;</span>, <span class=\"string\">r&#x27;3.0&#x27;</span>, <span class=\"string\">r&#x27;4.0&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加文字</span></span><br><span class=\"line\">plt.text(<span class=\"number\">4</span>, <span class=\"number\">1.68</span>, <span class=\"string\">r&#x27;$x \\in [0.0, \\ 10.0]$&#x27;</span>, color=<span class=\"string\">&#x27;k&#x27;</span>, fontsize=<span class=\"number\">15</span>)</span><br><span class=\"line\">plt.text(<span class=\"number\">4</span>, <span class=\"number\">1.38</span>, <span class=\"string\">r&#x27;$y \\in [-1.0, \\ 4.0]$&#x27;</span>, color=<span class=\"string\">&#x27;k&#x27;</span>, fontsize=<span class=\"number\">15</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 特殊点添加注解</span></span><br><span class=\"line\">plt.scatter([<span class=\"number\">8</span>,],[np.sqrt(<span class=\"number\">8</span>),], <span class=\"number\">50</span>, color =<span class=\"string\">&#x27;m&#x27;</span>)  <span class=\"comment\"># 使用散点图放大当前点</span></span><br><span class=\"line\">plt.annotate(<span class=\"string\">r&#x27;$2\\sqrt&#123;2&#125;$&#x27;</span>, xy=(<span class=\"number\">8</span>, np.sqrt(<span class=\"number\">8</span>)), xytext=(<span class=\"number\">8.5</span>, <span class=\"number\">2.2</span>), fontsize=<span class=\"number\">16</span>, color=<span class=\"string\">&#x27;#090909&#x27;</span>, arrowprops=<span class=\"built_in\">dict</span>(arrowstyle=<span class=\"string\">&#x27;-&gt;&#x27;</span>, connectionstyle=<span class=\"string\">&#x27;arc3, rad=0.1&#x27;</span>, color=<span class=\"string\">&#x27;#090909&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置标题、x轴、y轴</span></span><br><span class=\"line\">plt.title(<span class=\"string\">r&#x27;$the \\ function \\ figure \\ of \\ cos(), \\ sin() \\ and \\ sqrt()$&#x27;</span>, fontsize=<span class=\"number\">19</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">r&#x27;$the \\ input \\ value \\ of \\ x$&#x27;</span>, fontsize=<span class=\"number\">18</span>, labelpad=<span class=\"number\">88.8</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">r&#x27;$y = f(x)$&#x27;</span>, fontsize=<span class=\"number\">18</span>, labelpad=<span class=\"number\">12.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置图例及位置</span></span><br><span class=\"line\">plt.legend(loc=<span class=\"string\">&#x27;upper right&#x27;</span>)    </span><br><span class=\"line\"><span class=\"comment\"># plt.legend([&#x27;cos(x)&#x27;, &#x27;sin(x)&#x27;, &#x27;sqrt(x)&#x27;], loc=&#x27;up right&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示网格线</span></span><br><span class=\"line\">plt.grid(<span class=\"literal\">True</span>)    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-06-24_Matplotlib基本语法_1.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-06-24_Matplotlib基本语法_1.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"曲线图\"><a href=\"#曲线图\" class=\"headerlink\" title=\"曲线图\"></a>曲线图</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = np.arange(-<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">0.1</span>)</span><br><span class=\"line\">y = x ** <span class=\"number\">2</span></span><br><span class=\"line\">plt.plot(x,y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-06-24_Matplotlib基本语法_2.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-06-24_Matplotlib基本语法_2.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"散布图\"><a href=\"#散布图\" class=\"headerlink\" title=\"散布图\"></a>散布图</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">n = <span class=\"number\">1024</span></span><br><span class=\"line\">X = np.random.normal(<span class=\"number\">0</span>, <span class=\"number\">1</span>, n)</span><br><span class=\"line\">Y = np.random.normal(<span class=\"number\">0</span>, <span class=\"number\">1</span>, n)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.scatter(X,Y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-06-24_Matplotlib基本语法_3.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-06-24_Matplotlib基本语法_3.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"柱状图\"><a href=\"#柱状图\" class=\"headerlink\" title=\"柱状图\"></a>柱状图</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = np.random.normal(size=<span class=\"number\">1000</span>)</span><br><span class=\"line\">plt.hist(x, bins=<span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-06-24_Matplotlib基本语法_4.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-06-24_Matplotlib基本语法_4.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">n = <span class=\"number\">12</span></span><br><span class=\"line\">X = np.arange(n)</span><br><span class=\"line\">Y1 = (<span class=\"number\">1</span>- X / <span class=\"built_in\">float</span>(n)) * np.random.uniform(<span class=\"number\">0.5</span>, <span class=\"number\">1.0</span>, n)</span><br><span class=\"line\">Y2 = (<span class=\"number\">1</span>- X/ <span class=\"built_in\">float</span>(n)) * np.random.uniform(<span class=\"number\">0.5</span>, <span class=\"number\">1.0</span>, n)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.axes([<span class=\"number\">0.025</span>, <span class=\"number\">0.025</span>, <span class=\"number\">0.95</span>, <span class=\"number\">0.95</span>])</span><br><span class=\"line\">plt.bar(X, +Y1, facecolor = <span class=\"string\">&#x27;#9999ff&#x27;</span>, edgecolor = <span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\">plt.bar(X, -Y2, facecolor = <span class=\"string\">&#x27;#ff9999&#x27;</span>, edgecolor = <span class=\"string\">&#x27;white&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> x,y <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(X,Y1):</span><br><span class=\"line\">    plt.text(x, y + <span class=\"number\">0.08</span>, <span class=\"string\">&#x27;%.2f&#x27;</span> % y, ha = <span class=\"string\">&#x27;center&#x27;</span>, va = <span class=\"string\">&#x27;bottom&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> x,y <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(X,Y2):</span><br><span class=\"line\">    plt.text(x, -y - <span class=\"number\">0.08</span>, <span class=\"string\">&#x27;%.2f&#x27;</span> % y, ha = <span class=\"string\">&#x27;center&#x27;</span>, va= <span class=\"string\">&#x27;top&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.xlim(-<span class=\"number\">.5</span>, n), </span><br><span class=\"line\">plt.ylim(-<span class=\"number\">1.25</span>, +<span class=\"number\">1.25</span>), </span><br><span class=\"line\">plt.xticks([])</span><br><span class=\"line\">plt.yticks([])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-06-24_Matplotlib基本语法_5.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-06-24_Matplotlib基本语法_5.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"3D图\"><a href=\"#3D图\" class=\"headerlink\" title=\"3D图\"></a>3D图</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">from</span> mpl_toolkits.mplot3d <span class=\"keyword\">import</span> Axes3D</span><br><span class=\"line\"></span><br><span class=\"line\">fig = plt.figure()</span><br><span class=\"line\">ax = Axes3D(fig)</span><br><span class=\"line\">X = np.arange(-<span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">0.25</span>)</span><br><span class=\"line\">Y = np.arange(-<span class=\"number\">4</span>, <span class=\"number\">4</span>, <span class=\"number\">0.25</span>)</span><br><span class=\"line\">X, Y = np.meshgrid(X, Y)</span><br><span class=\"line\">R = np.sqrt(X ** <span class=\"number\">2</span> + Y ** <span class=\"number\">2</span>)</span><br><span class=\"line\">Z = np.sin(R)</span><br><span class=\"line\"></span><br><span class=\"line\">ax.plot_surface(X, Y, Z, rstride = <span class=\"number\">1</span>, cstride=<span class=\"number\">1</span>, cmap = plt.cm.hot)</span><br><span class=\"line\">ax.contourf(X, Y, Z, zdir = <span class=\"string\">&#x27;z&#x27;</span>, offset = -<span class=\"number\">2</span>, cmap = plt.cm.hot)</span><br><span class=\"line\">ax.set_zlim(-<span class=\"number\">2</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-06-24_Matplotlib基本语法_6.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-06-24_Matplotlib基本语法_6.png\"\n                      alt=\"\"\n                ></p>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.julyedu.com/course/getDetail/66/\" >廖雪峰Python数据分析<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"基本语法","abbrlink":24578,"date":"2019-06-22T16:00:00.000Z","_content":"\n## 数组\n\n\n```python\nprint(\"===一维数组===\")\nprint([i * 2 for i in range(10)])\nprint([i * i for i in range(10)])\nprint([i * i for i in range(10) if (i % 3) == 0])\nprint([(x, y) for x in range(3) for y in range(3)])\nprint('')\n\nprint(\"===二维数组===\")\na = [[3] * (i + 1) for i in range(3)]\nprint(a[2])\nprint('')\n\nprint(\"===乘法的问题===\")\na = [[1, 2, 3]] * 3\na[1][1] = 100\nprint(a)\nprint('')\n\nprint(\"===解决方法===\")\na = [[1, 2, 3] for i in range(3)]\na[1][1] = 100\nprint(a)\n\n```\n\n    ===一维数组===\n    [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n    [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n    [0, 9, 36, 81]\n    [(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]\n    \n    ===二维数组===\n    [3, 3, 3]\n    \n    ===乘法的问题===\n    [[1, 100, 3], [1, 100, 3], [1, 100, 3]]\n    \n    ===解决方法===\n    [[1, 2, 3], [1, 100, 3], [1, 2, 3]]\n\n\n## 字典\n\n\n```python\nprint(\"===初始化===\")\nd = {'a':1, 2:'b', 'c':3, 4:'d'}\nprint(d)\nprint('')\n\nprint(\"===获取长度===\")\nprint(len(d))\nprint('')\n\nprint(\"===根据key读写===\")\nd['a'] = 100\nd[4] = 'dd'\nprint(d)\nprint('')\n\nprint(\"===添加元素===\")\nd['e'] = 5\nd[6] = 'f'\nprint(d)\nprint('')\n\nprint(\"===删除元素===\")\nd = {'a':1, 2:'b', 'c':3, 4:'d'}\ndel(d['a'])\ndel(d[2])\nprint(d)\nprint('')\n\nprint(\"===判断key是否存在===\")\nd = {'a':1, 2:'b', 'c':3, 4:'d'}\nif 'a' in d:\n    print('a in d')\nif 2 in d:\n    print('2 in d')\nif not ('x' in d):\n    print('x not in d')\nprint('')\n\nprint(\"===判断字典是否为空===\")\nd = {}\nif not d:\n    print('d is empty')\nprint('')\n\nprint(\"===遍历===\")\nd = {'a':1, 2:'b', 'c':3, 4:'d'}\nfor k in d.keys():\n    print(str(k) + ': ' + str(d[k]))\nfor k, v in d.items():\n    print(str(k) + ': ' + str(v))\n\n```\n\n    ===初始化===\n    {'a': 1, 2: 'b', 'c': 3, 4: 'd'}\n    \n    ===获取长度===\n    4\n    \n    ===根据key读写===\n    {'a': 100, 2: 'b', 'c': 3, 4: 'dd'}\n    \n    ===添加元素===\n    {'a': 100, 2: 'b', 'c': 3, 4: 'dd', 'e': 5, 6: 'f'}\n    \n    ===删除元素===\n    {'c': 3, 4: 'd'}\n    \n    ===判断key是否存在===\n    a in d\n    2 in d\n    x not in d\n    \n    ===判断字典是否为空===\n    d is empty\n    \n    ===遍历===\n    a: 1\n    2: b\n    c: 3\n    4: d\n    a: 1\n    2: b\n    c: 3\n    4: d\n\n\n## 集合\n\n\n```python\nprint(\"===初始化===\")\ns_a = set([1, 2, 3, 4, 5])\ns_b = set([1, 1, 2, 2, 3, 4, 5])\nprint(s_a)\nprint(s_b)\nprint('')\n\nprint(\"===获取长度===\")\nprint(len(s_a))\nprint(len(s_b))\nprint('')\n\nprint(\"===添加元素===\")\ns_a.add(6)\ns_a.add(6)\ns_a.update([5, 6, 7, 8, 9])\nprint(s_a)\nprint('')\n\nprint(\"===删除元素===\")\ns_a.remove(8)\ns_a.remove(9)\nprint(s_a)\nprint('')\n\nprint(\"===判断元素是否存在===\")\nprint(1 in s_a)\nprint(10 in s_a)\nprint('')\n\nprint(\"===判断集合是否为空===\")\ns_a = set([])\nif not s_a:\n    print('set is empty')\nelse:\n    print('set is not empty')\nprint('')\n\nprint(\"===遍历===\")\ns_a = set([1, 2, 3, 4, 5])\nfor i in s_a:\n    print(i)\nprint('')\n\nprint(\"===集合操作===\")\ns_a = set([1, 2, 3, 4, 5])\ns_b = set([4, 5, 6, 7, 8])\n\nprint(\"===并集===\")\nprint(s_a | s_b)\nprint(s_a.union(s_b))\nprint(\"\")\n\nprint(\"===交集===\")\nprint(s_a & s_b)\nprint(s_a.intersection(s_b))\nprint(\"\")\n\nprint(\"===差集 s_a - (s_a and s_b)===\")\nprint(s_a - s_b)\nprint(s_a.difference(s_b))\nprint(\"\")\n\nprint(\"===对称差===\")\nprint(s_a ^ s_b)\nprint((s_a | s_b) - (s_a & s_b))\nprint(s_a.symmetric_difference(s_b))\n```\n\n    ===初始化===\n    {1, 2, 3, 4, 5}\n    {1, 2, 3, 4, 5}\n    \n    ===获取长度===\n    5\n    5\n    \n    ===添加元素===\n    {1, 2, 3, 4, 5, 6, 7, 8, 9}\n    \n    ===删除元素===\n    {1, 2, 3, 4, 5, 6, 7}\n    \n    ===判断元素是否存在===\n    True\n    False\n    \n    ===判断集合是否为空===\n    set is empty\n    \n    ===遍历===\n    1\n    2\n    3\n    4\n    5\n    \n    ===集合操作===\n    ===并集===\n    {1, 2, 3, 4, 5, 6, 7, 8}\n    {1, 2, 3, 4, 5, 6, 7, 8}\n    \n    ===交集===\n    {4, 5}\n    {4, 5}\n    \n    ===差集 s_a - (s_a and s_b)===\n    {1, 2, 3}\n    {1, 2, 3}\n    \n    ===对称差===\n    {1, 2, 3, 6, 7, 8}\n    {1, 2, 3, 6, 7, 8}\n    {1, 2, 3, 6, 7, 8}\n\n\n## 列表\n\n\n```python\nprint(\"===初始化列表===\")\nli = [1, 2, 3, 'abc', 4.5, [2, 3, 4], {1:'one'}]\n\nprint(\"===获取长度===\")\nprint(len(li))\nprint('')\n\nprint(\"===根据索引读写===\")\nprint(li[0])\nprint(li[3])\nprint(li[-1])\nprint('')\n\nprint(\"===添加元素===\")\nli = [1, 2, 3]\nli.append('a')\nli.append('b')\nprint(li)\nli.append([4, 5, 6])\nprint(li)\nli = [1, 2, 3]\nli.extend([4, 5, 6])\nprint(li)\nprint('')\n\nprint(\"===删除元素===\")\nli = [1, 2, 3, 4, 5]\nli.pop()\nprint(li)\ndel(li[0])\ndel(li[1])\nprint(li)\nprint('')\n\nprint(\"===元素是否存在===\")\nli = [1, 2, 3, 4, 5]\nprint(1 in li)\nprint(6 in li)\nprint('')\n\nprint(\"===列表是否为空===\")\nli = []\nif not li:\n    print('Empty')\nelse:\n    print('Not empty')\nprint('')\n\nprint(\"===字符串===\")\ns = 'abcdefg'\nli = list(s)\nli[4] = 'E'\nli[5] = 'F'\nprint(li)\ns = ''.join(li)\nprint(s)\nprint('')\n\nprint(\"===遍历===\")\nli = [1, 2, 3]\nfor i in li:\n    print(i)\nfor i in range(len(li)):\n    print(li[i])\n\n```\n\n    ===初始化列表===\n    ===获取长度===\n    7\n    \n    ===根据索引读写===\n    1\n    abc\n    {1: 'one'}\n    \n    ===添加元素===\n    [1, 2, 3, 'a', 'b']\n    [1, 2, 3, 'a', 'b', [4, 5, 6]]\n    [1, 2, 3, 4, 5, 6]\n    \n    ===删除元素===\n    [1, 2, 3, 4]\n    [2, 4]\n    \n    ===元素是否存在===\n    True\n    False\n    \n    ===列表是否为空===\n    Empty\n    \n    ===字符串===\n    ['a', 'b', 'c', 'd', 'E', 'F', 'g']\n    abcdEFg\n    \n    ===遍历===\n    1\n    2\n    3\n    1\n    2\n    3\n\n\n## 切片\n\n\n```python\nli = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nprint(\"===切片===\")\nprint(li[2:5])\nprint(li[:4])\nprint(li[5:])\nprint(li[:])\nprint(li[0:6:2])\nprint(li[3::2])\nprint('')\n\nprint(\"===负数索引和step===\")\nprint(li[::-1])\nprint(li[::-2])\nprint(li[-6:-1:1])\nprint(li[-1::-1])\n```\n\n    ===切片===\n    [2, 3, 4]\n    [0, 1, 2, 3]\n    [5, 6, 7, 8, 9, 10]\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    [0, 2, 4]\n    [3, 5, 7, 9]\n    \n    ===负数索引和step===\n    [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n    [10, 8, 6, 4, 2, 0]\n    [5, 6, 7, 8, 9]\n    [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n\n\n## json处理\n\n\n```python\nimport json\n\nprint(\"===dict与json互转===\")\nd = {'Python':100, 'C++':70, 'Basic':60, 'others':{'C':65, 'Java':50}}\njtxt = json.dumps(d)\ndd = json.loads(jtxt)\nprint(jtxt)\nprint(dd)\nprint('')\n\nprint(\"===用json序列化非dict对象===\")\nclass Student:\n    def __init__(self, name, age, score):\n        self.name = name\n        self.age = age\n        self.score = score\n\n    def __str__(self):\n        return '%s: %d, %d' % (self.name, self.age, self.score)\n\ns = Student('Tom', 15, 85)\nprint(s)\nprint(s.__dict__)\nprint(\"\")\n\nprint(\"===方法1===\")\njtxt = json.dumps(s, default = lambda obj: obj.__dict__)\nprint(jtxt)\ndef d2s(d):\n    return Student(d['name'], d['age'], d['score'])\nprint(json.loads(jtxt, object_hook = d2s))\nprint(\"\")\n\nprint(\"===方法2===\")\ndef s2d(s):\n    return s.__dict__\njtxt = json.dumps(s, default = s2d)\nprint(jtxt)\n\n```\n\n    ===dict与json互转===\n    {\"Python\": 100, \"C++\": 70, \"Basic\": 60, \"others\": {\"C\": 65, \"Java\": 50}}\n    {'Python': 100, 'C++': 70, 'Basic': 60, 'others': {'C': 65, 'Java': 50}}\n    \n    ===用json序列化非dict对象===\n    Tom: 15, 85\n    {'name': 'Tom', 'age': 15, 'score': 85}\n    \n    ===方法1===\n    {\"name\": \"Tom\", \"age\": 15, \"score\": 85}\n    Tom: 15, 85\n    \n    ===方法2===\n    {\"name\": \"Tom\", \"age\": 15, \"score\": 85}\n\n\n## class\n\n\n```python\nclass MyClass:\n    def __init__(self, val):\n        self.val = val\n\n    def display(self, s):\n        print('%s: %d' % (s, self.val))\n\nm = MyClass(100)\nprint(m.val)\nm.display('hello')\nprint('')\n\nm2 = m\nprint(id(m))\nprint(id(m2))\n\nfn = m.display\nfn('hey')\n```\n\n    100\n    hello: 100\n    \n    4539482520\n    4539482520\n    hey: 100\n\n\n## generator\n\n\n```python\ndef fab(max): \n    n, a, b = 0, 0, 1 \n    while n < max: \n        yield b \n        # print b \n        a, b = b, a + b \n        n = n + 1\n    return n\n        \nfor n in fab(5):\n    print(n)\n```\n\n    1\n    1\n    2\n    3\n    5\n\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n2. [yield讲解](https://www.ibm.com/developerworks/cn/opensource/os-cn-python-yield/)\n","source":"_posts/2019-06-23_Python.md","raw":"---\ntitle: 基本语法\ncategories:\n  - Python\nabbrlink: 24578\ndate: 2019-06-23 00:00:00\n---\n\n## 数组\n\n\n```python\nprint(\"===一维数组===\")\nprint([i * 2 for i in range(10)])\nprint([i * i for i in range(10)])\nprint([i * i for i in range(10) if (i % 3) == 0])\nprint([(x, y) for x in range(3) for y in range(3)])\nprint('')\n\nprint(\"===二维数组===\")\na = [[3] * (i + 1) for i in range(3)]\nprint(a[2])\nprint('')\n\nprint(\"===乘法的问题===\")\na = [[1, 2, 3]] * 3\na[1][1] = 100\nprint(a)\nprint('')\n\nprint(\"===解决方法===\")\na = [[1, 2, 3] for i in range(3)]\na[1][1] = 100\nprint(a)\n\n```\n\n    ===一维数组===\n    [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n    [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n    [0, 9, 36, 81]\n    [(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]\n    \n    ===二维数组===\n    [3, 3, 3]\n    \n    ===乘法的问题===\n    [[1, 100, 3], [1, 100, 3], [1, 100, 3]]\n    \n    ===解决方法===\n    [[1, 2, 3], [1, 100, 3], [1, 2, 3]]\n\n\n## 字典\n\n\n```python\nprint(\"===初始化===\")\nd = {'a':1, 2:'b', 'c':3, 4:'d'}\nprint(d)\nprint('')\n\nprint(\"===获取长度===\")\nprint(len(d))\nprint('')\n\nprint(\"===根据key读写===\")\nd['a'] = 100\nd[4] = 'dd'\nprint(d)\nprint('')\n\nprint(\"===添加元素===\")\nd['e'] = 5\nd[6] = 'f'\nprint(d)\nprint('')\n\nprint(\"===删除元素===\")\nd = {'a':1, 2:'b', 'c':3, 4:'d'}\ndel(d['a'])\ndel(d[2])\nprint(d)\nprint('')\n\nprint(\"===判断key是否存在===\")\nd = {'a':1, 2:'b', 'c':3, 4:'d'}\nif 'a' in d:\n    print('a in d')\nif 2 in d:\n    print('2 in d')\nif not ('x' in d):\n    print('x not in d')\nprint('')\n\nprint(\"===判断字典是否为空===\")\nd = {}\nif not d:\n    print('d is empty')\nprint('')\n\nprint(\"===遍历===\")\nd = {'a':1, 2:'b', 'c':3, 4:'d'}\nfor k in d.keys():\n    print(str(k) + ': ' + str(d[k]))\nfor k, v in d.items():\n    print(str(k) + ': ' + str(v))\n\n```\n\n    ===初始化===\n    {'a': 1, 2: 'b', 'c': 3, 4: 'd'}\n    \n    ===获取长度===\n    4\n    \n    ===根据key读写===\n    {'a': 100, 2: 'b', 'c': 3, 4: 'dd'}\n    \n    ===添加元素===\n    {'a': 100, 2: 'b', 'c': 3, 4: 'dd', 'e': 5, 6: 'f'}\n    \n    ===删除元素===\n    {'c': 3, 4: 'd'}\n    \n    ===判断key是否存在===\n    a in d\n    2 in d\n    x not in d\n    \n    ===判断字典是否为空===\n    d is empty\n    \n    ===遍历===\n    a: 1\n    2: b\n    c: 3\n    4: d\n    a: 1\n    2: b\n    c: 3\n    4: d\n\n\n## 集合\n\n\n```python\nprint(\"===初始化===\")\ns_a = set([1, 2, 3, 4, 5])\ns_b = set([1, 1, 2, 2, 3, 4, 5])\nprint(s_a)\nprint(s_b)\nprint('')\n\nprint(\"===获取长度===\")\nprint(len(s_a))\nprint(len(s_b))\nprint('')\n\nprint(\"===添加元素===\")\ns_a.add(6)\ns_a.add(6)\ns_a.update([5, 6, 7, 8, 9])\nprint(s_a)\nprint('')\n\nprint(\"===删除元素===\")\ns_a.remove(8)\ns_a.remove(9)\nprint(s_a)\nprint('')\n\nprint(\"===判断元素是否存在===\")\nprint(1 in s_a)\nprint(10 in s_a)\nprint('')\n\nprint(\"===判断集合是否为空===\")\ns_a = set([])\nif not s_a:\n    print('set is empty')\nelse:\n    print('set is not empty')\nprint('')\n\nprint(\"===遍历===\")\ns_a = set([1, 2, 3, 4, 5])\nfor i in s_a:\n    print(i)\nprint('')\n\nprint(\"===集合操作===\")\ns_a = set([1, 2, 3, 4, 5])\ns_b = set([4, 5, 6, 7, 8])\n\nprint(\"===并集===\")\nprint(s_a | s_b)\nprint(s_a.union(s_b))\nprint(\"\")\n\nprint(\"===交集===\")\nprint(s_a & s_b)\nprint(s_a.intersection(s_b))\nprint(\"\")\n\nprint(\"===差集 s_a - (s_a and s_b)===\")\nprint(s_a - s_b)\nprint(s_a.difference(s_b))\nprint(\"\")\n\nprint(\"===对称差===\")\nprint(s_a ^ s_b)\nprint((s_a | s_b) - (s_a & s_b))\nprint(s_a.symmetric_difference(s_b))\n```\n\n    ===初始化===\n    {1, 2, 3, 4, 5}\n    {1, 2, 3, 4, 5}\n    \n    ===获取长度===\n    5\n    5\n    \n    ===添加元素===\n    {1, 2, 3, 4, 5, 6, 7, 8, 9}\n    \n    ===删除元素===\n    {1, 2, 3, 4, 5, 6, 7}\n    \n    ===判断元素是否存在===\n    True\n    False\n    \n    ===判断集合是否为空===\n    set is empty\n    \n    ===遍历===\n    1\n    2\n    3\n    4\n    5\n    \n    ===集合操作===\n    ===并集===\n    {1, 2, 3, 4, 5, 6, 7, 8}\n    {1, 2, 3, 4, 5, 6, 7, 8}\n    \n    ===交集===\n    {4, 5}\n    {4, 5}\n    \n    ===差集 s_a - (s_a and s_b)===\n    {1, 2, 3}\n    {1, 2, 3}\n    \n    ===对称差===\n    {1, 2, 3, 6, 7, 8}\n    {1, 2, 3, 6, 7, 8}\n    {1, 2, 3, 6, 7, 8}\n\n\n## 列表\n\n\n```python\nprint(\"===初始化列表===\")\nli = [1, 2, 3, 'abc', 4.5, [2, 3, 4], {1:'one'}]\n\nprint(\"===获取长度===\")\nprint(len(li))\nprint('')\n\nprint(\"===根据索引读写===\")\nprint(li[0])\nprint(li[3])\nprint(li[-1])\nprint('')\n\nprint(\"===添加元素===\")\nli = [1, 2, 3]\nli.append('a')\nli.append('b')\nprint(li)\nli.append([4, 5, 6])\nprint(li)\nli = [1, 2, 3]\nli.extend([4, 5, 6])\nprint(li)\nprint('')\n\nprint(\"===删除元素===\")\nli = [1, 2, 3, 4, 5]\nli.pop()\nprint(li)\ndel(li[0])\ndel(li[1])\nprint(li)\nprint('')\n\nprint(\"===元素是否存在===\")\nli = [1, 2, 3, 4, 5]\nprint(1 in li)\nprint(6 in li)\nprint('')\n\nprint(\"===列表是否为空===\")\nli = []\nif not li:\n    print('Empty')\nelse:\n    print('Not empty')\nprint('')\n\nprint(\"===字符串===\")\ns = 'abcdefg'\nli = list(s)\nli[4] = 'E'\nli[5] = 'F'\nprint(li)\ns = ''.join(li)\nprint(s)\nprint('')\n\nprint(\"===遍历===\")\nli = [1, 2, 3]\nfor i in li:\n    print(i)\nfor i in range(len(li)):\n    print(li[i])\n\n```\n\n    ===初始化列表===\n    ===获取长度===\n    7\n    \n    ===根据索引读写===\n    1\n    abc\n    {1: 'one'}\n    \n    ===添加元素===\n    [1, 2, 3, 'a', 'b']\n    [1, 2, 3, 'a', 'b', [4, 5, 6]]\n    [1, 2, 3, 4, 5, 6]\n    \n    ===删除元素===\n    [1, 2, 3, 4]\n    [2, 4]\n    \n    ===元素是否存在===\n    True\n    False\n    \n    ===列表是否为空===\n    Empty\n    \n    ===字符串===\n    ['a', 'b', 'c', 'd', 'E', 'F', 'g']\n    abcdEFg\n    \n    ===遍历===\n    1\n    2\n    3\n    1\n    2\n    3\n\n\n## 切片\n\n\n```python\nli = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nprint(\"===切片===\")\nprint(li[2:5])\nprint(li[:4])\nprint(li[5:])\nprint(li[:])\nprint(li[0:6:2])\nprint(li[3::2])\nprint('')\n\nprint(\"===负数索引和step===\")\nprint(li[::-1])\nprint(li[::-2])\nprint(li[-6:-1:1])\nprint(li[-1::-1])\n```\n\n    ===切片===\n    [2, 3, 4]\n    [0, 1, 2, 3]\n    [5, 6, 7, 8, 9, 10]\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    [0, 2, 4]\n    [3, 5, 7, 9]\n    \n    ===负数索引和step===\n    [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n    [10, 8, 6, 4, 2, 0]\n    [5, 6, 7, 8, 9]\n    [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n\n\n## json处理\n\n\n```python\nimport json\n\nprint(\"===dict与json互转===\")\nd = {'Python':100, 'C++':70, 'Basic':60, 'others':{'C':65, 'Java':50}}\njtxt = json.dumps(d)\ndd = json.loads(jtxt)\nprint(jtxt)\nprint(dd)\nprint('')\n\nprint(\"===用json序列化非dict对象===\")\nclass Student:\n    def __init__(self, name, age, score):\n        self.name = name\n        self.age = age\n        self.score = score\n\n    def __str__(self):\n        return '%s: %d, %d' % (self.name, self.age, self.score)\n\ns = Student('Tom', 15, 85)\nprint(s)\nprint(s.__dict__)\nprint(\"\")\n\nprint(\"===方法1===\")\njtxt = json.dumps(s, default = lambda obj: obj.__dict__)\nprint(jtxt)\ndef d2s(d):\n    return Student(d['name'], d['age'], d['score'])\nprint(json.loads(jtxt, object_hook = d2s))\nprint(\"\")\n\nprint(\"===方法2===\")\ndef s2d(s):\n    return s.__dict__\njtxt = json.dumps(s, default = s2d)\nprint(jtxt)\n\n```\n\n    ===dict与json互转===\n    {\"Python\": 100, \"C++\": 70, \"Basic\": 60, \"others\": {\"C\": 65, \"Java\": 50}}\n    {'Python': 100, 'C++': 70, 'Basic': 60, 'others': {'C': 65, 'Java': 50}}\n    \n    ===用json序列化非dict对象===\n    Tom: 15, 85\n    {'name': 'Tom', 'age': 15, 'score': 85}\n    \n    ===方法1===\n    {\"name\": \"Tom\", \"age\": 15, \"score\": 85}\n    Tom: 15, 85\n    \n    ===方法2===\n    {\"name\": \"Tom\", \"age\": 15, \"score\": 85}\n\n\n## class\n\n\n```python\nclass MyClass:\n    def __init__(self, val):\n        self.val = val\n\n    def display(self, s):\n        print('%s: %d' % (s, self.val))\n\nm = MyClass(100)\nprint(m.val)\nm.display('hello')\nprint('')\n\nm2 = m\nprint(id(m))\nprint(id(m2))\n\nfn = m.display\nfn('hey')\n```\n\n    100\n    hello: 100\n    \n    4539482520\n    4539482520\n    hey: 100\n\n\n## generator\n\n\n```python\ndef fab(max): \n    n, a, b = 0, 0, 1 \n    while n < max: \n        yield b \n        # print b \n        a, b = b, a + b \n        n = n + 1\n    return n\n        \nfor n in fab(5):\n    print(n)\n```\n\n    1\n    1\n    2\n    3\n    5\n\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n2. [yield讲解](https://www.ibm.com/developerworks/cn/opensource/os-cn-python-yield/)\n","slug":"2019-06-23_Python","published":1,"updated":"2021-04-06T13:57:27.839Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5q300039ohz9ob7des9","content":"<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===一维数组===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>([i * <span class=\"number\">2</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>)])</span><br><span class=\"line\"><span class=\"built_in\">print</span>([i * i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>)])</span><br><span class=\"line\"><span class=\"built_in\">print</span>([i * i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>) <span class=\"keyword\">if</span> (i % <span class=\"number\">3</span>) == <span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>([(x, y) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>) <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>)])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===二维数组===&quot;</span>)</span><br><span class=\"line\">a = [[<span class=\"number\">3</span>] * (i + <span class=\"number\">1</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>)]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a[<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===乘法的问题===&quot;</span>)</span><br><span class=\"line\">a = [[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]] * <span class=\"number\">3</span></span><br><span class=\"line\">a[<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===解决方法===&quot;</span>)</span><br><span class=\"line\">a = [[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>)]</span><br><span class=\"line\">a[<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>===一维数组===\n[0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n[0, 9, 36, 81]\n[(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]\n\n===二维数组===\n[3, 3, 3]\n\n===乘法的问题===\n[[1, 100, 3], [1, 100, 3], [1, 100, 3]]\n\n===解决方法===\n[[1, 2, 3], [1, 100, 3], [1, 2, 3]]\n</code></pre><h2 id=\"字典\"><a href=\"#字典\" class=\"headerlink\" title=\"字典\"></a>字典</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===初始化===&quot;</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">&#x27;a&#x27;</span>:<span class=\"number\">1</span>, <span class=\"number\">2</span>:<span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>:<span class=\"number\">3</span>, <span class=\"number\">4</span>:<span class=\"string\">&#x27;d&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(d)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===获取长度===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(d))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===根据key读写===&quot;</span>)</span><br><span class=\"line\">d[<span class=\"string\">&#x27;a&#x27;</span>] = <span class=\"number\">100</span></span><br><span class=\"line\">d[<span class=\"number\">4</span>] = <span class=\"string\">&#x27;dd&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(d)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===添加元素===&quot;</span>)</span><br><span class=\"line\">d[<span class=\"string\">&#x27;e&#x27;</span>] = <span class=\"number\">5</span></span><br><span class=\"line\">d[<span class=\"number\">6</span>] = <span class=\"string\">&#x27;f&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(d)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===删除元素===&quot;</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">&#x27;a&#x27;</span>:<span class=\"number\">1</span>, <span class=\"number\">2</span>:<span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>:<span class=\"number\">3</span>, <span class=\"number\">4</span>:<span class=\"string\">&#x27;d&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">del</span>(d[<span class=\"string\">&#x27;a&#x27;</span>])</span><br><span class=\"line\"><span class=\"keyword\">del</span>(d[<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(d)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===判断key是否存在===&quot;</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">&#x27;a&#x27;</span>:<span class=\"number\">1</span>, <span class=\"number\">2</span>:<span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>:<span class=\"number\">3</span>, <span class=\"number\">4</span>:<span class=\"string\">&#x27;d&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"string\">&#x27;a&#x27;</span> <span class=\"keyword\">in</span> d:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;a in d&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"number\">2</span> <span class=\"keyword\">in</span> d:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;2 in d&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> (<span class=\"string\">&#x27;x&#x27;</span> <span class=\"keyword\">in</span> d):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;x not in d&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===判断字典是否为空===&quot;</span>)</span><br><span class=\"line\">d = &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> d:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;d is empty&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===遍历===&quot;</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">&#x27;a&#x27;</span>:<span class=\"number\">1</span>, <span class=\"number\">2</span>:<span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>:<span class=\"number\">3</span>, <span class=\"number\">4</span>:<span class=\"string\">&#x27;d&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> d.keys():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">str</span>(k) + <span class=\"string\">&#x27;: &#x27;</span> + <span class=\"built_in\">str</span>(d[k]))</span><br><span class=\"line\"><span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> d.items():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">str</span>(k) + <span class=\"string\">&#x27;: &#x27;</span> + <span class=\"built_in\">str</span>(v))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>===初始化===\n&#123;&#39;a&#39;: 1, 2: &#39;b&#39;, &#39;c&#39;: 3, 4: &#39;d&#39;&#125;\n\n===获取长度===\n4\n\n===根据key读写===\n&#123;&#39;a&#39;: 100, 2: &#39;b&#39;, &#39;c&#39;: 3, 4: &#39;dd&#39;&#125;\n\n===添加元素===\n&#123;&#39;a&#39;: 100, 2: &#39;b&#39;, &#39;c&#39;: 3, 4: &#39;dd&#39;, &#39;e&#39;: 5, 6: &#39;f&#39;&#125;\n\n===删除元素===\n&#123;&#39;c&#39;: 3, 4: &#39;d&#39;&#125;\n\n===判断key是否存在===\na in d\n2 in d\nx not in d\n\n===判断字典是否为空===\nd is empty\n\n===遍历===\na: 1\n2: b\nc: 3\n4: d\na: 1\n2: b\nc: 3\n4: d\n</code></pre><h2 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===初始化===&quot;</span>)</span><br><span class=\"line\">s_a = <span class=\"built_in\">set</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>])</span><br><span class=\"line\">s_b = <span class=\"built_in\">set</span>([<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===获取长度===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(s_a))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(s_b))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===添加元素===&quot;</span>)</span><br><span class=\"line\">s_a.add(<span class=\"number\">6</span>)</span><br><span class=\"line\">s_a.add(<span class=\"number\">6</span>)</span><br><span class=\"line\">s_a.update([<span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===删除元素===&quot;</span>)</span><br><span class=\"line\">s_a.remove(<span class=\"number\">8</span>)</span><br><span class=\"line\">s_a.remove(<span class=\"number\">9</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===判断元素是否存在===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">1</span> <span class=\"keyword\">in</span> s_a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">10</span> <span class=\"keyword\">in</span> s_a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===判断集合是否为空===&quot;</span>)</span><br><span class=\"line\">s_a = <span class=\"built_in\">set</span>([])</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> s_a:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;set is empty&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;set is not empty&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===遍历===&quot;</span>)</span><br><span class=\"line\">s_a = <span class=\"built_in\">set</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s_a:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===集合操作===&quot;</span>)</span><br><span class=\"line\">s_a = <span class=\"built_in\">set</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>])</span><br><span class=\"line\">s_b = <span class=\"built_in\">set</span>([<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===并集===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a | s_b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a.union(s_b))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===交集===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a &amp; s_b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a.intersection(s_b))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===差集 s_a - (s_a and s_b)===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a - s_b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a.difference(s_b))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===对称差===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a ^ s_b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>((s_a | s_b) - (s_a &amp; s_b))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a.symmetric_difference(s_b))</span><br></pre></td></tr></table></figure>\n<pre><code>===初始化===\n&#123;1, 2, 3, 4, 5&#125;\n&#123;1, 2, 3, 4, 5&#125;\n\n===获取长度===\n5\n5\n\n===添加元素===\n&#123;1, 2, 3, 4, 5, 6, 7, 8, 9&#125;\n\n===删除元素===\n&#123;1, 2, 3, 4, 5, 6, 7&#125;\n\n===判断元素是否存在===\nTrue\nFalse\n\n===判断集合是否为空===\nset is empty\n\n===遍历===\n1\n2\n3\n4\n5\n\n===集合操作===\n===并集===\n&#123;1, 2, 3, 4, 5, 6, 7, 8&#125;\n&#123;1, 2, 3, 4, 5, 6, 7, 8&#125;\n\n===交集===\n&#123;4, 5&#125;\n&#123;4, 5&#125;\n\n===差集 s_a - (s_a and s_b)===\n&#123;1, 2, 3&#125;\n&#123;1, 2, 3&#125;\n\n===对称差===\n&#123;1, 2, 3, 6, 7, 8&#125;\n&#123;1, 2, 3, 6, 7, 8&#125;\n&#123;1, 2, 3, 6, 7, 8&#125;\n</code></pre><h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===初始化列表===&quot;</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"string\">&#x27;abc&#x27;</span>, <span class=\"number\">4.5</span>, [<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], &#123;<span class=\"number\">1</span>:<span class=\"string\">&#x27;one&#x27;</span>&#125;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===获取长度===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(li))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===根据索引读写===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[<span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[-<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===添加元素===&quot;</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">li.append(<span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\">li.append(<span class=\"string\">&#x27;b&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\">li.append([<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">li.extend([<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===删除元素===&quot;</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\">li.pop()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\"><span class=\"keyword\">del</span>(li[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">del</span>(li[<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===元素是否存在===&quot;</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">1</span> <span class=\"keyword\">in</span> li)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">6</span> <span class=\"keyword\">in</span> li)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===列表是否为空===&quot;</span>)</span><br><span class=\"line\">li = []</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> li:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Empty&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Not empty&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===字符串===&quot;</span>)</span><br><span class=\"line\">s = <span class=\"string\">&#x27;abcdefg&#x27;</span></span><br><span class=\"line\">li = <span class=\"built_in\">list</span>(s)</span><br><span class=\"line\">li[<span class=\"number\">4</span>] = <span class=\"string\">&#x27;E&#x27;</span></span><br><span class=\"line\">li[<span class=\"number\">5</span>] = <span class=\"string\">&#x27;F&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\">s = <span class=\"string\">&#x27;&#x27;</span>.join(li)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===遍历===&quot;</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> li:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(li)):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(li[i])</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>===初始化列表===\n===获取长度===\n7\n\n===根据索引读写===\n1\nabc\n&#123;1: &#39;one&#39;&#125;\n\n===添加元素===\n[1, 2, 3, &#39;a&#39;, &#39;b&#39;]\n[1, 2, 3, &#39;a&#39;, &#39;b&#39;, [4, 5, 6]]\n[1, 2, 3, 4, 5, 6]\n\n===删除元素===\n[1, 2, 3, 4]\n[2, 4]\n\n===元素是否存在===\nTrue\nFalse\n\n===列表是否为空===\nEmpty\n\n===字符串===\n[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;E&#39;, &#39;F&#39;, &#39;g&#39;]\nabcdEFg\n\n===遍历===\n1\n2\n3\n1\n2\n3\n</code></pre><h2 id=\"切片\"><a href=\"#切片\" class=\"headerlink\" title=\"切片\"></a>切片</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">li = [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===切片===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[<span class=\"number\">2</span>:<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[:<span class=\"number\">4</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[<span class=\"number\">5</span>:])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[:])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[<span class=\"number\">0</span>:<span class=\"number\">6</span>:<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[<span class=\"number\">3</span>::<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===负数索引和step===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[::-<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[::-<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[-<span class=\"number\">6</span>:-<span class=\"number\">1</span>:<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[-<span class=\"number\">1</span>::-<span class=\"number\">1</span>])</span><br></pre></td></tr></table></figure>\n<pre><code>===切片===\n[2, 3, 4]\n[0, 1, 2, 3]\n[5, 6, 7, 8, 9, 10]\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n[0, 2, 4]\n[3, 5, 7, 9]\n\n===负数索引和step===\n[10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n[10, 8, 6, 4, 2, 0]\n[5, 6, 7, 8, 9]\n[10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n</code></pre><h2 id=\"json处理\"><a href=\"#json处理\" class=\"headerlink\" title=\"json处理\"></a>json处理</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===dict与json互转===&quot;</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">&#x27;Python&#x27;</span>:<span class=\"number\">100</span>, <span class=\"string\">&#x27;C++&#x27;</span>:<span class=\"number\">70</span>, <span class=\"string\">&#x27;Basic&#x27;</span>:<span class=\"number\">60</span>, <span class=\"string\">&#x27;others&#x27;</span>:&#123;<span class=\"string\">&#x27;C&#x27;</span>:<span class=\"number\">65</span>, <span class=\"string\">&#x27;Java&#x27;</span>:<span class=\"number\">50</span>&#125;&#125;</span><br><span class=\"line\">jtxt = json.dumps(d)</span><br><span class=\"line\">dd = json.loads(jtxt)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(jtxt)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(dd)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===用json序列化非dict对象===&quot;</span>)</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, name, age, score</span>):</span></span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\">        self.score = score</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;%s: %d, %d&#x27;</span> % (self.name, self.age, self.score)</span><br><span class=\"line\"></span><br><span class=\"line\">s = Student(<span class=\"string\">&#x27;Tom&#x27;</span>, <span class=\"number\">15</span>, <span class=\"number\">85</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s.__dict__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===方法1===&quot;</span>)</span><br><span class=\"line\">jtxt = json.dumps(s, default = <span class=\"keyword\">lambda</span> obj: obj.__dict__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(jtxt)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">d2s</span>(<span class=\"params\">d</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> Student(d[<span class=\"string\">&#x27;name&#x27;</span>], d[<span class=\"string\">&#x27;age&#x27;</span>], d[<span class=\"string\">&#x27;score&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(json.loads(jtxt, object_hook = d2s))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===方法2===&quot;</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">s2d</span>(<span class=\"params\">s</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.__dict__</span><br><span class=\"line\">jtxt = json.dumps(s, default = s2d)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(jtxt)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>===dict与json互转===\n&#123;&quot;Python&quot;: 100, &quot;C++&quot;: 70, &quot;Basic&quot;: 60, &quot;others&quot;: &#123;&quot;C&quot;: 65, &quot;Java&quot;: 50&#125;&#125;\n&#123;&#39;Python&#39;: 100, &#39;C++&#39;: 70, &#39;Basic&#39;: 60, &#39;others&#39;: &#123;&#39;C&#39;: 65, &#39;Java&#39;: 50&#125;&#125;\n\n===用json序列化非dict对象===\nTom: 15, 85\n&#123;&#39;name&#39;: &#39;Tom&#39;, &#39;age&#39;: 15, &#39;score&#39;: 85&#125;\n\n===方法1===\n&#123;&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;: 15, &quot;score&quot;: 85&#125;\nTom: 15, 85\n\n===方法2===\n&#123;&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;: 15, &quot;score&quot;: 85&#125;\n</code></pre><h2 id=\"class\"><a href=\"#class\" class=\"headerlink\" title=\"class\"></a>class</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, val</span>):</span></span><br><span class=\"line\">        self.val = val</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">display</span>(<span class=\"params\">self, s</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;%s: %d&#x27;</span> % (s, self.val))</span><br><span class=\"line\"></span><br><span class=\"line\">m = MyClass(<span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(m.val)</span><br><span class=\"line\">m.display(<span class=\"string\">&#x27;hello&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">m2 = m</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">id</span>(m))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">id</span>(m2))</span><br><span class=\"line\"></span><br><span class=\"line\">fn = m.display</span><br><span class=\"line\">fn(<span class=\"string\">&#x27;hey&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>100\nhello: 100\n\n4539482520\n4539482520\nhey: 100\n</code></pre><h2 id=\"generator\"><a href=\"#generator\" class=\"headerlink\" title=\"generator\"></a>generator</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fab</span>(<span class=\"params\"><span class=\"built_in\">max</span></span>):</span> </span><br><span class=\"line\">    n, a, b = <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span> </span><br><span class=\"line\">    <span class=\"keyword\">while</span> n &lt; <span class=\"built_in\">max</span>: </span><br><span class=\"line\">        <span class=\"keyword\">yield</span> b </span><br><span class=\"line\">        <span class=\"comment\"># print b </span></span><br><span class=\"line\">        a, b = b, a + b </span><br><span class=\"line\">        n = n + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> n</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> fab(<span class=\"number\">5</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(n)</span><br></pre></td></tr></table></figure>\n<pre><code>1\n1\n2\n3\n5\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.julyedu.com/course/getDetail/66/\" >廖雪峰Python数据分析<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.ibm.com/developerworks/cn/opensource/os-cn-python-yield/\" >yield讲解<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===一维数组===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>([i * <span class=\"number\">2</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>)])</span><br><span class=\"line\"><span class=\"built_in\">print</span>([i * i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>)])</span><br><span class=\"line\"><span class=\"built_in\">print</span>([i * i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>) <span class=\"keyword\">if</span> (i % <span class=\"number\">3</span>) == <span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>([(x, y) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>) <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>)])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===二维数组===&quot;</span>)</span><br><span class=\"line\">a = [[<span class=\"number\">3</span>] * (i + <span class=\"number\">1</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>)]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a[<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===乘法的问题===&quot;</span>)</span><br><span class=\"line\">a = [[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]] * <span class=\"number\">3</span></span><br><span class=\"line\">a[<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===解决方法===&quot;</span>)</span><br><span class=\"line\">a = [[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>)]</span><br><span class=\"line\">a[<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>===一维数组===\n[0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n[0, 9, 36, 81]\n[(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]\n\n===二维数组===\n[3, 3, 3]\n\n===乘法的问题===\n[[1, 100, 3], [1, 100, 3], [1, 100, 3]]\n\n===解决方法===\n[[1, 2, 3], [1, 100, 3], [1, 2, 3]]\n</code></pre><h2 id=\"字典\"><a href=\"#字典\" class=\"headerlink\" title=\"字典\"></a>字典</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===初始化===&quot;</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">&#x27;a&#x27;</span>:<span class=\"number\">1</span>, <span class=\"number\">2</span>:<span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>:<span class=\"number\">3</span>, <span class=\"number\">4</span>:<span class=\"string\">&#x27;d&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(d)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===获取长度===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(d))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===根据key读写===&quot;</span>)</span><br><span class=\"line\">d[<span class=\"string\">&#x27;a&#x27;</span>] = <span class=\"number\">100</span></span><br><span class=\"line\">d[<span class=\"number\">4</span>] = <span class=\"string\">&#x27;dd&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(d)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===添加元素===&quot;</span>)</span><br><span class=\"line\">d[<span class=\"string\">&#x27;e&#x27;</span>] = <span class=\"number\">5</span></span><br><span class=\"line\">d[<span class=\"number\">6</span>] = <span class=\"string\">&#x27;f&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(d)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===删除元素===&quot;</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">&#x27;a&#x27;</span>:<span class=\"number\">1</span>, <span class=\"number\">2</span>:<span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>:<span class=\"number\">3</span>, <span class=\"number\">4</span>:<span class=\"string\">&#x27;d&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">del</span>(d[<span class=\"string\">&#x27;a&#x27;</span>])</span><br><span class=\"line\"><span class=\"keyword\">del</span>(d[<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(d)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===判断key是否存在===&quot;</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">&#x27;a&#x27;</span>:<span class=\"number\">1</span>, <span class=\"number\">2</span>:<span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>:<span class=\"number\">3</span>, <span class=\"number\">4</span>:<span class=\"string\">&#x27;d&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"string\">&#x27;a&#x27;</span> <span class=\"keyword\">in</span> d:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;a in d&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"number\">2</span> <span class=\"keyword\">in</span> d:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;2 in d&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> (<span class=\"string\">&#x27;x&#x27;</span> <span class=\"keyword\">in</span> d):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;x not in d&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===判断字典是否为空===&quot;</span>)</span><br><span class=\"line\">d = &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> d:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;d is empty&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===遍历===&quot;</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">&#x27;a&#x27;</span>:<span class=\"number\">1</span>, <span class=\"number\">2</span>:<span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>:<span class=\"number\">3</span>, <span class=\"number\">4</span>:<span class=\"string\">&#x27;d&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> d.keys():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">str</span>(k) + <span class=\"string\">&#x27;: &#x27;</span> + <span class=\"built_in\">str</span>(d[k]))</span><br><span class=\"line\"><span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> d.items():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">str</span>(k) + <span class=\"string\">&#x27;: &#x27;</span> + <span class=\"built_in\">str</span>(v))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>===初始化===\n&#123;&#39;a&#39;: 1, 2: &#39;b&#39;, &#39;c&#39;: 3, 4: &#39;d&#39;&#125;\n\n===获取长度===\n4\n\n===根据key读写===\n&#123;&#39;a&#39;: 100, 2: &#39;b&#39;, &#39;c&#39;: 3, 4: &#39;dd&#39;&#125;\n\n===添加元素===\n&#123;&#39;a&#39;: 100, 2: &#39;b&#39;, &#39;c&#39;: 3, 4: &#39;dd&#39;, &#39;e&#39;: 5, 6: &#39;f&#39;&#125;\n\n===删除元素===\n&#123;&#39;c&#39;: 3, 4: &#39;d&#39;&#125;\n\n===判断key是否存在===\na in d\n2 in d\nx not in d\n\n===判断字典是否为空===\nd is empty\n\n===遍历===\na: 1\n2: b\nc: 3\n4: d\na: 1\n2: b\nc: 3\n4: d\n</code></pre><h2 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===初始化===&quot;</span>)</span><br><span class=\"line\">s_a = <span class=\"built_in\">set</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>])</span><br><span class=\"line\">s_b = <span class=\"built_in\">set</span>([<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===获取长度===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(s_a))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(s_b))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===添加元素===&quot;</span>)</span><br><span class=\"line\">s_a.add(<span class=\"number\">6</span>)</span><br><span class=\"line\">s_a.add(<span class=\"number\">6</span>)</span><br><span class=\"line\">s_a.update([<span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===删除元素===&quot;</span>)</span><br><span class=\"line\">s_a.remove(<span class=\"number\">8</span>)</span><br><span class=\"line\">s_a.remove(<span class=\"number\">9</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===判断元素是否存在===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">1</span> <span class=\"keyword\">in</span> s_a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">10</span> <span class=\"keyword\">in</span> s_a)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===判断集合是否为空===&quot;</span>)</span><br><span class=\"line\">s_a = <span class=\"built_in\">set</span>([])</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> s_a:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;set is empty&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;set is not empty&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===遍历===&quot;</span>)</span><br><span class=\"line\">s_a = <span class=\"built_in\">set</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s_a:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===集合操作===&quot;</span>)</span><br><span class=\"line\">s_a = <span class=\"built_in\">set</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>])</span><br><span class=\"line\">s_b = <span class=\"built_in\">set</span>([<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===并集===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a | s_b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a.union(s_b))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===交集===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a &amp; s_b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a.intersection(s_b))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===差集 s_a - (s_a and s_b)===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a - s_b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a.difference(s_b))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===对称差===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a ^ s_b)</span><br><span class=\"line\"><span class=\"built_in\">print</span>((s_a | s_b) - (s_a &amp; s_b))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s_a.symmetric_difference(s_b))</span><br></pre></td></tr></table></figure>\n<pre><code>===初始化===\n&#123;1, 2, 3, 4, 5&#125;\n&#123;1, 2, 3, 4, 5&#125;\n\n===获取长度===\n5\n5\n\n===添加元素===\n&#123;1, 2, 3, 4, 5, 6, 7, 8, 9&#125;\n\n===删除元素===\n&#123;1, 2, 3, 4, 5, 6, 7&#125;\n\n===判断元素是否存在===\nTrue\nFalse\n\n===判断集合是否为空===\nset is empty\n\n===遍历===\n1\n2\n3\n4\n5\n\n===集合操作===\n===并集===\n&#123;1, 2, 3, 4, 5, 6, 7, 8&#125;\n&#123;1, 2, 3, 4, 5, 6, 7, 8&#125;\n\n===交集===\n&#123;4, 5&#125;\n&#123;4, 5&#125;\n\n===差集 s_a - (s_a and s_b)===\n&#123;1, 2, 3&#125;\n&#123;1, 2, 3&#125;\n\n===对称差===\n&#123;1, 2, 3, 6, 7, 8&#125;\n&#123;1, 2, 3, 6, 7, 8&#125;\n&#123;1, 2, 3, 6, 7, 8&#125;\n</code></pre><h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===初始化列表===&quot;</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"string\">&#x27;abc&#x27;</span>, <span class=\"number\">4.5</span>, [<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], &#123;<span class=\"number\">1</span>:<span class=\"string\">&#x27;one&#x27;</span>&#125;]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===获取长度===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(li))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===根据索引读写===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[<span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[-<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===添加元素===&quot;</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">li.append(<span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\">li.append(<span class=\"string\">&#x27;b&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\">li.append([<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">li.extend([<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===删除元素===&quot;</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\">li.pop()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\"><span class=\"keyword\">del</span>(li[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">del</span>(li[<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===元素是否存在===&quot;</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">1</span> <span class=\"keyword\">in</span> li)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">6</span> <span class=\"keyword\">in</span> li)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===列表是否为空===&quot;</span>)</span><br><span class=\"line\">li = []</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> li:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Empty&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Not empty&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===字符串===&quot;</span>)</span><br><span class=\"line\">s = <span class=\"string\">&#x27;abcdefg&#x27;</span></span><br><span class=\"line\">li = <span class=\"built_in\">list</span>(s)</span><br><span class=\"line\">li[<span class=\"number\">4</span>] = <span class=\"string\">&#x27;E&#x27;</span></span><br><span class=\"line\">li[<span class=\"number\">5</span>] = <span class=\"string\">&#x27;F&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(li)</span><br><span class=\"line\">s = <span class=\"string\">&#x27;&#x27;</span>.join(li)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===遍历===&quot;</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> li:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(li)):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(li[i])</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>===初始化列表===\n===获取长度===\n7\n\n===根据索引读写===\n1\nabc\n&#123;1: &#39;one&#39;&#125;\n\n===添加元素===\n[1, 2, 3, &#39;a&#39;, &#39;b&#39;]\n[1, 2, 3, &#39;a&#39;, &#39;b&#39;, [4, 5, 6]]\n[1, 2, 3, 4, 5, 6]\n\n===删除元素===\n[1, 2, 3, 4]\n[2, 4]\n\n===元素是否存在===\nTrue\nFalse\n\n===列表是否为空===\nEmpty\n\n===字符串===\n[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;E&#39;, &#39;F&#39;, &#39;g&#39;]\nabcdEFg\n\n===遍历===\n1\n2\n3\n1\n2\n3\n</code></pre><h2 id=\"切片\"><a href=\"#切片\" class=\"headerlink\" title=\"切片\"></a>切片</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">li = [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===切片===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[<span class=\"number\">2</span>:<span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[:<span class=\"number\">4</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[<span class=\"number\">5</span>:])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[:])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[<span class=\"number\">0</span>:<span class=\"number\">6</span>:<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[<span class=\"number\">3</span>::<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===负数索引和step===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[::-<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[::-<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[-<span class=\"number\">6</span>:-<span class=\"number\">1</span>:<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(li[-<span class=\"number\">1</span>::-<span class=\"number\">1</span>])</span><br></pre></td></tr></table></figure>\n<pre><code>===切片===\n[2, 3, 4]\n[0, 1, 2, 3]\n[5, 6, 7, 8, 9, 10]\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n[0, 2, 4]\n[3, 5, 7, 9]\n\n===负数索引和step===\n[10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n[10, 8, 6, 4, 2, 0]\n[5, 6, 7, 8, 9]\n[10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n</code></pre><h2 id=\"json处理\"><a href=\"#json处理\" class=\"headerlink\" title=\"json处理\"></a>json处理</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===dict与json互转===&quot;</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">&#x27;Python&#x27;</span>:<span class=\"number\">100</span>, <span class=\"string\">&#x27;C++&#x27;</span>:<span class=\"number\">70</span>, <span class=\"string\">&#x27;Basic&#x27;</span>:<span class=\"number\">60</span>, <span class=\"string\">&#x27;others&#x27;</span>:&#123;<span class=\"string\">&#x27;C&#x27;</span>:<span class=\"number\">65</span>, <span class=\"string\">&#x27;Java&#x27;</span>:<span class=\"number\">50</span>&#125;&#125;</span><br><span class=\"line\">jtxt = json.dumps(d)</span><br><span class=\"line\">dd = json.loads(jtxt)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(jtxt)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(dd)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===用json序列化非dict对象===&quot;</span>)</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, name, age, score</span>):</span></span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\">        self.score = score</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;%s: %d, %d&#x27;</span> % (self.name, self.age, self.score)</span><br><span class=\"line\"></span><br><span class=\"line\">s = Student(<span class=\"string\">&#x27;Tom&#x27;</span>, <span class=\"number\">15</span>, <span class=\"number\">85</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s.__dict__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===方法1===&quot;</span>)</span><br><span class=\"line\">jtxt = json.dumps(s, default = <span class=\"keyword\">lambda</span> obj: obj.__dict__)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(jtxt)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">d2s</span>(<span class=\"params\">d</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> Student(d[<span class=\"string\">&#x27;name&#x27;</span>], d[<span class=\"string\">&#x27;age&#x27;</span>], d[<span class=\"string\">&#x27;score&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(json.loads(jtxt, object_hook = d2s))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===方法2===&quot;</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">s2d</span>(<span class=\"params\">s</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.__dict__</span><br><span class=\"line\">jtxt = json.dumps(s, default = s2d)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(jtxt)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>===dict与json互转===\n&#123;&quot;Python&quot;: 100, &quot;C++&quot;: 70, &quot;Basic&quot;: 60, &quot;others&quot;: &#123;&quot;C&quot;: 65, &quot;Java&quot;: 50&#125;&#125;\n&#123;&#39;Python&#39;: 100, &#39;C++&#39;: 70, &#39;Basic&#39;: 60, &#39;others&#39;: &#123;&#39;C&#39;: 65, &#39;Java&#39;: 50&#125;&#125;\n\n===用json序列化非dict对象===\nTom: 15, 85\n&#123;&#39;name&#39;: &#39;Tom&#39;, &#39;age&#39;: 15, &#39;score&#39;: 85&#125;\n\n===方法1===\n&#123;&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;: 15, &quot;score&quot;: 85&#125;\nTom: 15, 85\n\n===方法2===\n&#123;&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;: 15, &quot;score&quot;: 85&#125;\n</code></pre><h2 id=\"class\"><a href=\"#class\" class=\"headerlink\" title=\"class\"></a>class</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, val</span>):</span></span><br><span class=\"line\">        self.val = val</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">display</span>(<span class=\"params\">self, s</span>):</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;%s: %d&#x27;</span> % (s, self.val))</span><br><span class=\"line\"></span><br><span class=\"line\">m = MyClass(<span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(m.val)</span><br><span class=\"line\">m.display(<span class=\"string\">&#x27;hello&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">m2 = m</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">id</span>(m))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">id</span>(m2))</span><br><span class=\"line\"></span><br><span class=\"line\">fn = m.display</span><br><span class=\"line\">fn(<span class=\"string\">&#x27;hey&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>100\nhello: 100\n\n4539482520\n4539482520\nhey: 100\n</code></pre><h2 id=\"generator\"><a href=\"#generator\" class=\"headerlink\" title=\"generator\"></a>generator</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fab</span>(<span class=\"params\"><span class=\"built_in\">max</span></span>):</span> </span><br><span class=\"line\">    n, a, b = <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span> </span><br><span class=\"line\">    <span class=\"keyword\">while</span> n &lt; <span class=\"built_in\">max</span>: </span><br><span class=\"line\">        <span class=\"keyword\">yield</span> b </span><br><span class=\"line\">        <span class=\"comment\"># print b </span></span><br><span class=\"line\">        a, b = b, a + b </span><br><span class=\"line\">        n = n + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> n</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> fab(<span class=\"number\">5</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(n)</span><br></pre></td></tr></table></figure>\n<pre><code>1\n1\n2\n3\n5\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.julyedu.com/course/getDetail/66/\" >廖雪峰Python数据分析<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.ibm.com/developerworks/cn/opensource/os-cn-python-yield/\" >yield讲解<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"Numpy","abbrlink":54426,"date":"2019-06-24T16:00:00.000Z","_content":"\n## 生成数组\n\n\n```python\n# -*- coding: utf-8 -*-\nimport numpy as np\n\nprint(\"===使用普通一维数组生成NumPy一维数组===\")\ndata = [6, 7.5, 8, 0, 1]\narr = np.array(data)\nprint(arr)\nprint(arr.dtype) # 类型\nprint('')\n\nprint(\"===使用普通二维数组生成NumPy二维数组===\")\ndata = [[1, 2, 3, 4], [5, 6, 7, 8]]\narr = np.array(data)\nprint(arr)\nprint(arr.shape) # 维度\nprint('')\n\nprint(\"===使用内置函数创建数组===\")\nprint(np.zeros(10)) # 生成包含10个0的一维数组\nprint(np.zeros((3, 6))) # 生成3*6的二维数组\nprint(np.empty((2, 3, 2))) # 生成2*3*2的三维数组，所有元素未初始化。\nprint(np.empty_like((2, 3, 2))) # 生成2*3*2的三维数组，所有元素未初始化。\nprint(np.ones((1,2)))\nprint(np.full((2,2), 8))\nprint(np.eye(3))\nprint(np.random.random((3,2)))\nprint('')\n\nprint(\"===使用arrange生成连续元素===\")\nprint(np.arange(15))  # [0, 1, 2, ..., 14]\nprint('')\n\nprint(\"===broadcasting===\")\nprint(np.arange(3).reshape((3,1))+np.arange(3))\n```\n\n    ===使用普通一维数组生成NumPy一维数组===\n    [6.  7.5 8.  0.  1. ]\n    float64\n    \n    ===使用普通二维数组生成NumPy二维数组===\n    [[1 2 3 4]\n     [5 6 7 8]]\n    (2, 4)\n    \n    ===使用内置函数创建数组===\n    [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n    [[0. 0. 0. 0. 0. 0.]\n     [0. 0. 0. 0. 0. 0.]\n     [0. 0. 0. 0. 0. 0.]]\n    [[[4.9e-324 9.9e-324]\n      [1.5e-323 2.0e-323]\n      [2.5e-323 3.0e-323]]\n    \n     [[3.5e-323 4.0e-323]\n      [4.4e-323 4.9e-323]\n      [5.4e-323 5.9e-323]]]\n    [4607182418800017408 4607182418800017408 4607182418800017408]\n    [[1. 1.]]\n    [[8 8]\n     [8 8]]\n    [[1. 0. 0.]\n     [0. 1. 0.]\n     [0. 0. 1.]]\n    [[0.46824109 0.9710855 ]\n     [0.41688259 0.20446181]\n     [0.31828888 0.2797158 ]]\n    \n    ===使用arrange生成连续元素===\n    [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14]\n    \n    ===broadcasting===\n    [[0 1 2]\n     [1 2 3]\n     [2 3 4]]\n\n\n## 堆叠\n\n\n```python\nx = np.array([[1,2],[3,4]], dtype=np.float64)\ny = np.array([[5,6],[7,8]], dtype=np.float64)\n\nprint(np.hstack((x,y)))\nprint(np.vstack((x,y)))\n```\n\n    [[1. 2. 5. 6.]\n     [3. 4. 7. 8.]]\n    [[1. 2.]\n     [3. 4.]\n     [5. 6.]\n     [7. 8.]]\n\n\n## 运算\n\n\n```python\nx = np.array([[1,2],[3,4]], dtype=np.float64)\ny = np.array([[5,6],[7,8]], dtype=np.float64)\n\nprint(\"===逐元素运算===\")\nprint(x+y)\nprint(x-y)\nprint(x*y)\nprint(x/y)\nprint(np.sqrt(x))\nprint('')\n\nprint(\"===矩阵内元素运算===\")\nprint(x.sum())\nprint(np.sum(x, axis=0))\nprint(np.sum(x, axis=1))\nprint(np.mean(x))\nprint(np.mean(x, axis=0))\nprint(np.mean(x, axis=1))\nprint(x.cumsum(axis=0))\nprint(x.cumsum(axis=1))\nprint(x.cumprod(axis=0))\nprint(x.cumprod(axis=1))\n```\n\n    ===逐元素运算===\n    [[ 6.  8.]\n     [10. 12.]]\n    [[-4. -4.]\n     [-4. -4.]]\n    [[ 5. 12.]\n     [21. 32.]]\n    [[0.2        0.33333333]\n     [0.42857143 0.5       ]]\n    [[1.         1.41421356]\n     [1.73205081 2.        ]]\n    ===矩阵内元素运算===\n    10.0\n    [4. 6.]\n    [3. 7.]\n\n\n## 索引/切片\n\n\n```python\nprint(\"===通过索引访问二维数组某一行或某个元素===\")\narr = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\nprint(arr[2])\nprint(arr[0][2])\nprint(arr[0, 2]) # 普通Python数组不能用。\nprint('')\n\nprint(\"===对更高维数组的访问和操作===\")\narr = np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])\nprint(arr[0])  # 结果是个2维数组\nprint(arr[1, 0]) # 结果是个2维数组\nold_values = arr[0].copy()  # 复制arr[0]的值\narr[0] = 42 # 把arr[0]所有的元素都设置为同一个值\nprint(arr)\narr[0] = old_values # 把原来的数组写回去\nprint(arr)\nprint('')\n\nprint(\"===使用切片访问和操作数组===\")\narr = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\nprint(arr[1:6])  # 打印元素arr[1]到arr[5]，和list切片不同，这里是引用。\narr = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\nprint(arr[:2]) # 打印第1、2行\nprint(arr[:2, 1:]) # 打印第1、2行，第2、3列\nprint(arr[:, :1])  # 打印第一列的所有元素\narr[:2, 1:] = 0 # 第1、2行，第2、3列的元素设置为0\nprint(arr)\n\n```\n\n    ===通过索引访问二维数组某一行或某个元素===\n    [7 8 9]\n    3\n    3\n    \n    ===对更高维数组的访问和操作===\n    [[1 2 3]\n     [4 5 6]]\n    [7 8 9]\n    [[[42 42 42]\n      [42 42 42]]\n    \n     [[ 7  8  9]\n      [10 11 12]]]\n    [[[ 1  2  3]\n      [ 4  5  6]]\n    \n     [[ 7  8  9]\n      [10 11 12]]]\n    \n    ===使用切片访问和操作数组===\n    [2 3 4 5 6]\n    [[1 2 3]\n     [4 5 6]]\n    [[2 3]\n     [5 6]]\n    [[1]\n     [4]\n     [7]]\n    [[1 0 0]\n     [4 0 0]\n     [7 8 9]]\n\n\n## 矩阵\n\n\n```python\nimport numpy as np\nimport numpy.linalg as la\nimport time\n\nX = np.array([range(0, 500), range(500, 1000)])\nm, n = X.shape\nprint(m, n)\n\n'''\nD(i, j) = ||xi - xj||^2\n'''\nt = time.time()\nD = np.zeros([n, n])\nfor i in range(n):\n    for j in range(i + 1, n):\n        D[i, j] = la.norm(X[:, i] - X[:, j]) ** 2\n        D[j, i] = D[i, j]\nprint(time.time() - t)\n\n'''\n|xi - xi| = sqrt((xi - xj) * (xi - xj).T)\nD(i, j) = (xi - xj) * (xi - xj).T\n'''\nt = time.time()\nD = np.zeros([n, n])\nfor i in range(n):\n    for j in range(i + 1, n):\n        d = X[:, i] - X[:, j]\n        D[i, j] = np.dot(d, d)\n        D[j, i] = D[i, j]\nprint(time.time() - t)\n\n'''\nD(i, j) = (xi - xj) * (xi - xj).T\n        = xi * xi.T - xi * xj.T - xj * xi.T + xj * xj.T\n        = xi * xi.T - 2 * xi * xj.T + xj * xj.T\nG(i,j) = xi.T * xj\n'''\nt = time.time()\nG = np.dot(X.T, X)\nD = np.zeros([n, n])\nfor i in range(n):\n    for j in range(i + 1, n):\n        D[i, j] = G[i, i] - G[i, j] * 2 + G[j,j]\n        D[j, i] = D[i, j]\nprint(time.time() - t)\n\n'''\nH(i, j) = G(i, i)\nK(i, j) = G(j, j) = H(i, j).T\nD(i, j) = H(i, j) + K(i, j) - 2 * G(i, j)\n'''\nt = time.time()\nG = np.dot(X.T, X)\nH = np.tile(np.diag(G), (n, 1)) # n rows, 1 for each row\nD = H + H.T - G * 2\nprint(time.time() - t)\n\n```\n\n    2 500\n    1.8900527954101562\n    0.6348848342895508\n    0.25273704528808594\n    0.02255988121032715\n\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n","source":"_posts/2019-06-25_Numpy.md","raw":"---\ntitle: Numpy\ncategories:\n  - Python\nabbrlink: 54426\ndate: 2019-06-25 00:00:00\n---\n\n## 生成数组\n\n\n```python\n# -*- coding: utf-8 -*-\nimport numpy as np\n\nprint(\"===使用普通一维数组生成NumPy一维数组===\")\ndata = [6, 7.5, 8, 0, 1]\narr = np.array(data)\nprint(arr)\nprint(arr.dtype) # 类型\nprint('')\n\nprint(\"===使用普通二维数组生成NumPy二维数组===\")\ndata = [[1, 2, 3, 4], [5, 6, 7, 8]]\narr = np.array(data)\nprint(arr)\nprint(arr.shape) # 维度\nprint('')\n\nprint(\"===使用内置函数创建数组===\")\nprint(np.zeros(10)) # 生成包含10个0的一维数组\nprint(np.zeros((3, 6))) # 生成3*6的二维数组\nprint(np.empty((2, 3, 2))) # 生成2*3*2的三维数组，所有元素未初始化。\nprint(np.empty_like((2, 3, 2))) # 生成2*3*2的三维数组，所有元素未初始化。\nprint(np.ones((1,2)))\nprint(np.full((2,2), 8))\nprint(np.eye(3))\nprint(np.random.random((3,2)))\nprint('')\n\nprint(\"===使用arrange生成连续元素===\")\nprint(np.arange(15))  # [0, 1, 2, ..., 14]\nprint('')\n\nprint(\"===broadcasting===\")\nprint(np.arange(3).reshape((3,1))+np.arange(3))\n```\n\n    ===使用普通一维数组生成NumPy一维数组===\n    [6.  7.5 8.  0.  1. ]\n    float64\n    \n    ===使用普通二维数组生成NumPy二维数组===\n    [[1 2 3 4]\n     [5 6 7 8]]\n    (2, 4)\n    \n    ===使用内置函数创建数组===\n    [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n    [[0. 0. 0. 0. 0. 0.]\n     [0. 0. 0. 0. 0. 0.]\n     [0. 0. 0. 0. 0. 0.]]\n    [[[4.9e-324 9.9e-324]\n      [1.5e-323 2.0e-323]\n      [2.5e-323 3.0e-323]]\n    \n     [[3.5e-323 4.0e-323]\n      [4.4e-323 4.9e-323]\n      [5.4e-323 5.9e-323]]]\n    [4607182418800017408 4607182418800017408 4607182418800017408]\n    [[1. 1.]]\n    [[8 8]\n     [8 8]]\n    [[1. 0. 0.]\n     [0. 1. 0.]\n     [0. 0. 1.]]\n    [[0.46824109 0.9710855 ]\n     [0.41688259 0.20446181]\n     [0.31828888 0.2797158 ]]\n    \n    ===使用arrange生成连续元素===\n    [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14]\n    \n    ===broadcasting===\n    [[0 1 2]\n     [1 2 3]\n     [2 3 4]]\n\n\n## 堆叠\n\n\n```python\nx = np.array([[1,2],[3,4]], dtype=np.float64)\ny = np.array([[5,6],[7,8]], dtype=np.float64)\n\nprint(np.hstack((x,y)))\nprint(np.vstack((x,y)))\n```\n\n    [[1. 2. 5. 6.]\n     [3. 4. 7. 8.]]\n    [[1. 2.]\n     [3. 4.]\n     [5. 6.]\n     [7. 8.]]\n\n\n## 运算\n\n\n```python\nx = np.array([[1,2],[3,4]], dtype=np.float64)\ny = np.array([[5,6],[7,8]], dtype=np.float64)\n\nprint(\"===逐元素运算===\")\nprint(x+y)\nprint(x-y)\nprint(x*y)\nprint(x/y)\nprint(np.sqrt(x))\nprint('')\n\nprint(\"===矩阵内元素运算===\")\nprint(x.sum())\nprint(np.sum(x, axis=0))\nprint(np.sum(x, axis=1))\nprint(np.mean(x))\nprint(np.mean(x, axis=0))\nprint(np.mean(x, axis=1))\nprint(x.cumsum(axis=0))\nprint(x.cumsum(axis=1))\nprint(x.cumprod(axis=0))\nprint(x.cumprod(axis=1))\n```\n\n    ===逐元素运算===\n    [[ 6.  8.]\n     [10. 12.]]\n    [[-4. -4.]\n     [-4. -4.]]\n    [[ 5. 12.]\n     [21. 32.]]\n    [[0.2        0.33333333]\n     [0.42857143 0.5       ]]\n    [[1.         1.41421356]\n     [1.73205081 2.        ]]\n    ===矩阵内元素运算===\n    10.0\n    [4. 6.]\n    [3. 7.]\n\n\n## 索引/切片\n\n\n```python\nprint(\"===通过索引访问二维数组某一行或某个元素===\")\narr = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\nprint(arr[2])\nprint(arr[0][2])\nprint(arr[0, 2]) # 普通Python数组不能用。\nprint('')\n\nprint(\"===对更高维数组的访问和操作===\")\narr = np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])\nprint(arr[0])  # 结果是个2维数组\nprint(arr[1, 0]) # 结果是个2维数组\nold_values = arr[0].copy()  # 复制arr[0]的值\narr[0] = 42 # 把arr[0]所有的元素都设置为同一个值\nprint(arr)\narr[0] = old_values # 把原来的数组写回去\nprint(arr)\nprint('')\n\nprint(\"===使用切片访问和操作数组===\")\narr = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\nprint(arr[1:6])  # 打印元素arr[1]到arr[5]，和list切片不同，这里是引用。\narr = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\nprint(arr[:2]) # 打印第1、2行\nprint(arr[:2, 1:]) # 打印第1、2行，第2、3列\nprint(arr[:, :1])  # 打印第一列的所有元素\narr[:2, 1:] = 0 # 第1、2行，第2、3列的元素设置为0\nprint(arr)\n\n```\n\n    ===通过索引访问二维数组某一行或某个元素===\n    [7 8 9]\n    3\n    3\n    \n    ===对更高维数组的访问和操作===\n    [[1 2 3]\n     [4 5 6]]\n    [7 8 9]\n    [[[42 42 42]\n      [42 42 42]]\n    \n     [[ 7  8  9]\n      [10 11 12]]]\n    [[[ 1  2  3]\n      [ 4  5  6]]\n    \n     [[ 7  8  9]\n      [10 11 12]]]\n    \n    ===使用切片访问和操作数组===\n    [2 3 4 5 6]\n    [[1 2 3]\n     [4 5 6]]\n    [[2 3]\n     [5 6]]\n    [[1]\n     [4]\n     [7]]\n    [[1 0 0]\n     [4 0 0]\n     [7 8 9]]\n\n\n## 矩阵\n\n\n```python\nimport numpy as np\nimport numpy.linalg as la\nimport time\n\nX = np.array([range(0, 500), range(500, 1000)])\nm, n = X.shape\nprint(m, n)\n\n'''\nD(i, j) = ||xi - xj||^2\n'''\nt = time.time()\nD = np.zeros([n, n])\nfor i in range(n):\n    for j in range(i + 1, n):\n        D[i, j] = la.norm(X[:, i] - X[:, j]) ** 2\n        D[j, i] = D[i, j]\nprint(time.time() - t)\n\n'''\n|xi - xi| = sqrt((xi - xj) * (xi - xj).T)\nD(i, j) = (xi - xj) * (xi - xj).T\n'''\nt = time.time()\nD = np.zeros([n, n])\nfor i in range(n):\n    for j in range(i + 1, n):\n        d = X[:, i] - X[:, j]\n        D[i, j] = np.dot(d, d)\n        D[j, i] = D[i, j]\nprint(time.time() - t)\n\n'''\nD(i, j) = (xi - xj) * (xi - xj).T\n        = xi * xi.T - xi * xj.T - xj * xi.T + xj * xj.T\n        = xi * xi.T - 2 * xi * xj.T + xj * xj.T\nG(i,j) = xi.T * xj\n'''\nt = time.time()\nG = np.dot(X.T, X)\nD = np.zeros([n, n])\nfor i in range(n):\n    for j in range(i + 1, n):\n        D[i, j] = G[i, i] - G[i, j] * 2 + G[j,j]\n        D[j, i] = D[i, j]\nprint(time.time() - t)\n\n'''\nH(i, j) = G(i, i)\nK(i, j) = G(j, j) = H(i, j).T\nD(i, j) = H(i, j) + K(i, j) - 2 * G(i, j)\n'''\nt = time.time()\nG = np.dot(X.T, X)\nH = np.tile(np.diag(G), (n, 1)) # n rows, 1 for each row\nD = H + H.T - G * 2\nprint(time.time() - t)\n\n```\n\n    2 500\n    1.8900527954101562\n    0.6348848342895508\n    0.25273704528808594\n    0.02255988121032715\n\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n","slug":"2019-06-25_Numpy","published":1,"updated":"2021-04-06T13:57:31.992Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5q700059ohz0xbtcbnm","content":"<h2 id=\"生成数组\"><a href=\"#生成数组\" class=\"headerlink\" title=\"生成数组\"></a>生成数组</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===使用普通一维数组生成NumPy一维数组===&quot;</span>)</span><br><span class=\"line\">data = [<span class=\"number\">6</span>, <span class=\"number\">7.5</span>, <span class=\"number\">8</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>]</span><br><span class=\"line\">arr = np.array(data)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr.dtype) <span class=\"comment\"># 类型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===使用普通二维数组生成NumPy二维数组===&quot;</span>)</span><br><span class=\"line\">data = [[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], [<span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>]]</span><br><span class=\"line\">arr = np.array(data)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr.shape) <span class=\"comment\"># 维度</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===使用内置函数创建数组===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.zeros(<span class=\"number\">10</span>)) <span class=\"comment\"># 生成包含10个0的一维数组</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.zeros((<span class=\"number\">3</span>, <span class=\"number\">6</span>))) <span class=\"comment\"># 生成3*6的二维数组</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.empty((<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>))) <span class=\"comment\"># 生成2*3*2的三维数组，所有元素未初始化。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.empty_like((<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>))) <span class=\"comment\"># 生成2*3*2的三维数组，所有元素未初始化。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.ones((<span class=\"number\">1</span>,<span class=\"number\">2</span>)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.full((<span class=\"number\">2</span>,<span class=\"number\">2</span>), <span class=\"number\">8</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.eye(<span class=\"number\">3</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.random.random((<span class=\"number\">3</span>,<span class=\"number\">2</span>)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===使用arrange生成连续元素===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.arange(<span class=\"number\">15</span>))  <span class=\"comment\"># [0, 1, 2, ..., 14]</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===broadcasting===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.arange(<span class=\"number\">3</span>).reshape((<span class=\"number\">3</span>,<span class=\"number\">1</span>))+np.arange(<span class=\"number\">3</span>))</span><br></pre></td></tr></table></figure>\n<pre><code>===使用普通一维数组生成NumPy一维数组===\n[6.  7.5 8.  0.  1. ]\nfloat64\n\n===使用普通二维数组生成NumPy二维数组===\n[[1 2 3 4]\n [5 6 7 8]]\n(2, 4)\n\n===使用内置函数创建数组===\n[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n[[0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0.]]\n[[[4.9e-324 9.9e-324]\n  [1.5e-323 2.0e-323]\n  [2.5e-323 3.0e-323]]\n\n [[3.5e-323 4.0e-323]\n  [4.4e-323 4.9e-323]\n  [5.4e-323 5.9e-323]]]\n[4607182418800017408 4607182418800017408 4607182418800017408]\n[[1. 1.]]\n[[8 8]\n [8 8]]\n[[1. 0. 0.]\n [0. 1. 0.]\n [0. 0. 1.]]\n[[0.46824109 0.9710855 ]\n [0.41688259 0.20446181]\n [0.31828888 0.2797158 ]]\n\n===使用arrange生成连续元素===\n[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14]\n\n===broadcasting===\n[[0 1 2]\n [1 2 3]\n [2 3 4]]\n</code></pre><h2 id=\"堆叠\"><a href=\"#堆叠\" class=\"headerlink\" title=\"堆叠\"></a>堆叠</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = np.array([[<span class=\"number\">1</span>,<span class=\"number\">2</span>],[<span class=\"number\">3</span>,<span class=\"number\">4</span>]], dtype=np.float64)</span><br><span class=\"line\">y = np.array([[<span class=\"number\">5</span>,<span class=\"number\">6</span>],[<span class=\"number\">7</span>,<span class=\"number\">8</span>]], dtype=np.float64)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.hstack((x,y)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.vstack((x,y)))</span><br></pre></td></tr></table></figure>\n<pre><code>[[1. 2. 5. 6.]\n [3. 4. 7. 8.]]\n[[1. 2.]\n [3. 4.]\n [5. 6.]\n [7. 8.]]\n</code></pre><h2 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = np.array([[<span class=\"number\">1</span>,<span class=\"number\">2</span>],[<span class=\"number\">3</span>,<span class=\"number\">4</span>]], dtype=np.float64)</span><br><span class=\"line\">y = np.array([[<span class=\"number\">5</span>,<span class=\"number\">6</span>],[<span class=\"number\">7</span>,<span class=\"number\">8</span>]], dtype=np.float64)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===逐元素运算===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x+y)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x-y)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x*y)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x/y)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.sqrt(x))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===矩阵内元素运算===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x.<span class=\"built_in\">sum</span>())</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">sum</span>(x, axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">sum</span>(x, axis=<span class=\"number\">1</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.mean(x))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.mean(x, axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.mean(x, axis=<span class=\"number\">1</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x.cumsum(axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x.cumsum(axis=<span class=\"number\">1</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x.cumprod(axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x.cumprod(axis=<span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure>\n<pre><code>===逐元素运算===\n[[ 6.  8.]\n [10. 12.]]\n[[-4. -4.]\n [-4. -4.]]\n[[ 5. 12.]\n [21. 32.]]\n[[0.2        0.33333333]\n [0.42857143 0.5       ]]\n[[1.         1.41421356]\n [1.73205081 2.        ]]\n===矩阵内元素运算===\n10.0\n[4. 6.]\n[3. 7.]\n</code></pre><h2 id=\"索引-切片\"><a href=\"#索引-切片\" class=\"headerlink\" title=\"索引/切片\"></a>索引/切片</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===通过索引访问二维数组某一行或某个元素===&quot;</span>)</span><br><span class=\"line\">arr = np.array([[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>], [<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[<span class=\"number\">0</span>][<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[<span class=\"number\">0</span>, <span class=\"number\">2</span>]) <span class=\"comment\"># 普通Python数组不能用。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===对更高维数组的访问和操作===&quot;</span>)</span><br><span class=\"line\">arr = np.array([[[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]], [[<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>], [<span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>]]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[<span class=\"number\">0</span>])  <span class=\"comment\"># 结果是个2维数组</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[<span class=\"number\">1</span>, <span class=\"number\">0</span>]) <span class=\"comment\"># 结果是个2维数组</span></span><br><span class=\"line\">old_values = arr[<span class=\"number\">0</span>].copy()  <span class=\"comment\"># 复制arr[0]的值</span></span><br><span class=\"line\">arr[<span class=\"number\">0</span>] = <span class=\"number\">42</span> <span class=\"comment\"># 把arr[0]所有的元素都设置为同一个值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr)</span><br><span class=\"line\">arr[<span class=\"number\">0</span>] = old_values <span class=\"comment\"># 把原来的数组写回去</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===使用切片访问和操作数组===&quot;</span>)</span><br><span class=\"line\">arr = np.array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[<span class=\"number\">1</span>:<span class=\"number\">6</span>])  <span class=\"comment\"># 打印元素arr[1]到arr[5]，和list切片不同，这里是引用。</span></span><br><span class=\"line\">arr = np.array([[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>], [<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[:<span class=\"number\">2</span>]) <span class=\"comment\"># 打印第1、2行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[:<span class=\"number\">2</span>, <span class=\"number\">1</span>:]) <span class=\"comment\"># 打印第1、2行，第2、3列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[:, :<span class=\"number\">1</span>])  <span class=\"comment\"># 打印第一列的所有元素</span></span><br><span class=\"line\">arr[:<span class=\"number\">2</span>, <span class=\"number\">1</span>:] = <span class=\"number\">0</span> <span class=\"comment\"># 第1、2行，第2、3列的元素设置为0</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>===通过索引访问二维数组某一行或某个元素===\n[7 8 9]\n3\n3\n\n===对更高维数组的访问和操作===\n[[1 2 3]\n [4 5 6]]\n[7 8 9]\n[[[42 42 42]\n  [42 42 42]]\n\n [[ 7  8  9]\n  [10 11 12]]]\n[[[ 1  2  3]\n  [ 4  5  6]]\n\n [[ 7  8  9]\n  [10 11 12]]]\n\n===使用切片访问和操作数组===\n[2 3 4 5 6]\n[[1 2 3]\n [4 5 6]]\n[[2 3]\n [5 6]]\n[[1]\n [4]\n [7]]\n[[1 0 0]\n [4 0 0]\n [7 8 9]]\n</code></pre><h2 id=\"矩阵\"><a href=\"#矩阵\" class=\"headerlink\" title=\"矩阵\"></a>矩阵</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy.linalg <span class=\"keyword\">as</span> la</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">X = np.array([<span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">500</span>), <span class=\"built_in\">range</span>(<span class=\"number\">500</span>, <span class=\"number\">1000</span>)])</span><br><span class=\"line\">m, n = X.shape</span><br><span class=\"line\"><span class=\"built_in\">print</span>(m, n)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">D(i, j) = ||xi - xj||^2</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">t = time.time()</span><br><span class=\"line\">D = np.zeros([n, n])</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(i + <span class=\"number\">1</span>, n):</span><br><span class=\"line\">        D[i, j] = la.norm(X[:, i] - X[:, j]) ** <span class=\"number\">2</span></span><br><span class=\"line\">        D[j, i] = D[i, j]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.time() - t)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">|xi - xi| = sqrt((xi - xj) * (xi - xj).T)</span></span><br><span class=\"line\"><span class=\"string\">D(i, j) = (xi - xj) * (xi - xj).T</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">t = time.time()</span><br><span class=\"line\">D = np.zeros([n, n])</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(i + <span class=\"number\">1</span>, n):</span><br><span class=\"line\">        d = X[:, i] - X[:, j]</span><br><span class=\"line\">        D[i, j] = np.dot(d, d)</span><br><span class=\"line\">        D[j, i] = D[i, j]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.time() - t)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">D(i, j) = (xi - xj) * (xi - xj).T</span></span><br><span class=\"line\"><span class=\"string\">        = xi * xi.T - xi * xj.T - xj * xi.T + xj * xj.T</span></span><br><span class=\"line\"><span class=\"string\">        = xi * xi.T - 2 * xi * xj.T + xj * xj.T</span></span><br><span class=\"line\"><span class=\"string\">G(i,j) = xi.T * xj</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">t = time.time()</span><br><span class=\"line\">G = np.dot(X.T, X)</span><br><span class=\"line\">D = np.zeros([n, n])</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(i + <span class=\"number\">1</span>, n):</span><br><span class=\"line\">        D[i, j] = G[i, i] - G[i, j] * <span class=\"number\">2</span> + G[j,j]</span><br><span class=\"line\">        D[j, i] = D[i, j]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.time() - t)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">H(i, j) = G(i, i)</span></span><br><span class=\"line\"><span class=\"string\">K(i, j) = G(j, j) = H(i, j).T</span></span><br><span class=\"line\"><span class=\"string\">D(i, j) = H(i, j) + K(i, j) - 2 * G(i, j)</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">t = time.time()</span><br><span class=\"line\">G = np.dot(X.T, X)</span><br><span class=\"line\">H = np.tile(np.diag(G), (n, <span class=\"number\">1</span>)) <span class=\"comment\"># n rows, 1 for each row</span></span><br><span class=\"line\">D = H + H.T - G * <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.time() - t)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>2 500\n1.8900527954101562\n0.6348848342895508\n0.25273704528808594\n0.02255988121032715\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.julyedu.com/course/getDetail/66/\" >廖雪峰Python数据分析<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"生成数组\"><a href=\"#生成数组\" class=\"headerlink\" title=\"生成数组\"></a>生成数组</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===使用普通一维数组生成NumPy一维数组===&quot;</span>)</span><br><span class=\"line\">data = [<span class=\"number\">6</span>, <span class=\"number\">7.5</span>, <span class=\"number\">8</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>]</span><br><span class=\"line\">arr = np.array(data)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr.dtype) <span class=\"comment\"># 类型</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===使用普通二维数组生成NumPy二维数组===&quot;</span>)</span><br><span class=\"line\">data = [[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], [<span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>]]</span><br><span class=\"line\">arr = np.array(data)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr.shape) <span class=\"comment\"># 维度</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===使用内置函数创建数组===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.zeros(<span class=\"number\">10</span>)) <span class=\"comment\"># 生成包含10个0的一维数组</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.zeros((<span class=\"number\">3</span>, <span class=\"number\">6</span>))) <span class=\"comment\"># 生成3*6的二维数组</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.empty((<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>))) <span class=\"comment\"># 生成2*3*2的三维数组，所有元素未初始化。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.empty_like((<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>))) <span class=\"comment\"># 生成2*3*2的三维数组，所有元素未初始化。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.ones((<span class=\"number\">1</span>,<span class=\"number\">2</span>)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.full((<span class=\"number\">2</span>,<span class=\"number\">2</span>), <span class=\"number\">8</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.eye(<span class=\"number\">3</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.random.random((<span class=\"number\">3</span>,<span class=\"number\">2</span>)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===使用arrange生成连续元素===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.arange(<span class=\"number\">15</span>))  <span class=\"comment\"># [0, 1, 2, ..., 14]</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===broadcasting===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.arange(<span class=\"number\">3</span>).reshape((<span class=\"number\">3</span>,<span class=\"number\">1</span>))+np.arange(<span class=\"number\">3</span>))</span><br></pre></td></tr></table></figure>\n<pre><code>===使用普通一维数组生成NumPy一维数组===\n[6.  7.5 8.  0.  1. ]\nfloat64\n\n===使用普通二维数组生成NumPy二维数组===\n[[1 2 3 4]\n [5 6 7 8]]\n(2, 4)\n\n===使用内置函数创建数组===\n[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n[[0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0.]]\n[[[4.9e-324 9.9e-324]\n  [1.5e-323 2.0e-323]\n  [2.5e-323 3.0e-323]]\n\n [[3.5e-323 4.0e-323]\n  [4.4e-323 4.9e-323]\n  [5.4e-323 5.9e-323]]]\n[4607182418800017408 4607182418800017408 4607182418800017408]\n[[1. 1.]]\n[[8 8]\n [8 8]]\n[[1. 0. 0.]\n [0. 1. 0.]\n [0. 0. 1.]]\n[[0.46824109 0.9710855 ]\n [0.41688259 0.20446181]\n [0.31828888 0.2797158 ]]\n\n===使用arrange生成连续元素===\n[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14]\n\n===broadcasting===\n[[0 1 2]\n [1 2 3]\n [2 3 4]]\n</code></pre><h2 id=\"堆叠\"><a href=\"#堆叠\" class=\"headerlink\" title=\"堆叠\"></a>堆叠</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = np.array([[<span class=\"number\">1</span>,<span class=\"number\">2</span>],[<span class=\"number\">3</span>,<span class=\"number\">4</span>]], dtype=np.float64)</span><br><span class=\"line\">y = np.array([[<span class=\"number\">5</span>,<span class=\"number\">6</span>],[<span class=\"number\">7</span>,<span class=\"number\">8</span>]], dtype=np.float64)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.hstack((x,y)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.vstack((x,y)))</span><br></pre></td></tr></table></figure>\n<pre><code>[[1. 2. 5. 6.]\n [3. 4. 7. 8.]]\n[[1. 2.]\n [3. 4.]\n [5. 6.]\n [7. 8.]]\n</code></pre><h2 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = np.array([[<span class=\"number\">1</span>,<span class=\"number\">2</span>],[<span class=\"number\">3</span>,<span class=\"number\">4</span>]], dtype=np.float64)</span><br><span class=\"line\">y = np.array([[<span class=\"number\">5</span>,<span class=\"number\">6</span>],[<span class=\"number\">7</span>,<span class=\"number\">8</span>]], dtype=np.float64)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===逐元素运算===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x+y)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x-y)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x*y)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x/y)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.sqrt(x))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===矩阵内元素运算===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x.<span class=\"built_in\">sum</span>())</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">sum</span>(x, axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.<span class=\"built_in\">sum</span>(x, axis=<span class=\"number\">1</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.mean(x))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.mean(x, axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(np.mean(x, axis=<span class=\"number\">1</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x.cumsum(axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x.cumsum(axis=<span class=\"number\">1</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x.cumprod(axis=<span class=\"number\">0</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(x.cumprod(axis=<span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure>\n<pre><code>===逐元素运算===\n[[ 6.  8.]\n [10. 12.]]\n[[-4. -4.]\n [-4. -4.]]\n[[ 5. 12.]\n [21. 32.]]\n[[0.2        0.33333333]\n [0.42857143 0.5       ]]\n[[1.         1.41421356]\n [1.73205081 2.        ]]\n===矩阵内元素运算===\n10.0\n[4. 6.]\n[3. 7.]\n</code></pre><h2 id=\"索引-切片\"><a href=\"#索引-切片\" class=\"headerlink\" title=\"索引/切片\"></a>索引/切片</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===通过索引访问二维数组某一行或某个元素===&quot;</span>)</span><br><span class=\"line\">arr = np.array([[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>], [<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[<span class=\"number\">0</span>][<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[<span class=\"number\">0</span>, <span class=\"number\">2</span>]) <span class=\"comment\"># 普通Python数组不能用。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===对更高维数组的访问和操作===&quot;</span>)</span><br><span class=\"line\">arr = np.array([[[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]], [[<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>], [<span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>]]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[<span class=\"number\">0</span>])  <span class=\"comment\"># 结果是个2维数组</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[<span class=\"number\">1</span>, <span class=\"number\">0</span>]) <span class=\"comment\"># 结果是个2维数组</span></span><br><span class=\"line\">old_values = arr[<span class=\"number\">0</span>].copy()  <span class=\"comment\"># 复制arr[0]的值</span></span><br><span class=\"line\">arr[<span class=\"number\">0</span>] = <span class=\"number\">42</span> <span class=\"comment\"># 把arr[0]所有的元素都设置为同一个值</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr)</span><br><span class=\"line\">arr[<span class=\"number\">0</span>] = old_values <span class=\"comment\"># 把原来的数组写回去</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===使用切片访问和操作数组===&quot;</span>)</span><br><span class=\"line\">arr = np.array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[<span class=\"number\">1</span>:<span class=\"number\">6</span>])  <span class=\"comment\"># 打印元素arr[1]到arr[5]，和list切片不同，这里是引用。</span></span><br><span class=\"line\">arr = np.array([[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>], [<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>], [<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[:<span class=\"number\">2</span>]) <span class=\"comment\"># 打印第1、2行</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[:<span class=\"number\">2</span>, <span class=\"number\">1</span>:]) <span class=\"comment\"># 打印第1、2行，第2、3列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr[:, :<span class=\"number\">1</span>])  <span class=\"comment\"># 打印第一列的所有元素</span></span><br><span class=\"line\">arr[:<span class=\"number\">2</span>, <span class=\"number\">1</span>:] = <span class=\"number\">0</span> <span class=\"comment\"># 第1、2行，第2、3列的元素设置为0</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>===通过索引访问二维数组某一行或某个元素===\n[7 8 9]\n3\n3\n\n===对更高维数组的访问和操作===\n[[1 2 3]\n [4 5 6]]\n[7 8 9]\n[[[42 42 42]\n  [42 42 42]]\n\n [[ 7  8  9]\n  [10 11 12]]]\n[[[ 1  2  3]\n  [ 4  5  6]]\n\n [[ 7  8  9]\n  [10 11 12]]]\n\n===使用切片访问和操作数组===\n[2 3 4 5 6]\n[[1 2 3]\n [4 5 6]]\n[[2 3]\n [5 6]]\n[[1]\n [4]\n [7]]\n[[1 0 0]\n [4 0 0]\n [7 8 9]]\n</code></pre><h2 id=\"矩阵\"><a href=\"#矩阵\" class=\"headerlink\" title=\"矩阵\"></a>矩阵</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy.linalg <span class=\"keyword\">as</span> la</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">X = np.array([<span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">500</span>), <span class=\"built_in\">range</span>(<span class=\"number\">500</span>, <span class=\"number\">1000</span>)])</span><br><span class=\"line\">m, n = X.shape</span><br><span class=\"line\"><span class=\"built_in\">print</span>(m, n)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">D(i, j) = ||xi - xj||^2</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">t = time.time()</span><br><span class=\"line\">D = np.zeros([n, n])</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(i + <span class=\"number\">1</span>, n):</span><br><span class=\"line\">        D[i, j] = la.norm(X[:, i] - X[:, j]) ** <span class=\"number\">2</span></span><br><span class=\"line\">        D[j, i] = D[i, j]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.time() - t)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">|xi - xi| = sqrt((xi - xj) * (xi - xj).T)</span></span><br><span class=\"line\"><span class=\"string\">D(i, j) = (xi - xj) * (xi - xj).T</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">t = time.time()</span><br><span class=\"line\">D = np.zeros([n, n])</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(i + <span class=\"number\">1</span>, n):</span><br><span class=\"line\">        d = X[:, i] - X[:, j]</span><br><span class=\"line\">        D[i, j] = np.dot(d, d)</span><br><span class=\"line\">        D[j, i] = D[i, j]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.time() - t)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">D(i, j) = (xi - xj) * (xi - xj).T</span></span><br><span class=\"line\"><span class=\"string\">        = xi * xi.T - xi * xj.T - xj * xi.T + xj * xj.T</span></span><br><span class=\"line\"><span class=\"string\">        = xi * xi.T - 2 * xi * xj.T + xj * xj.T</span></span><br><span class=\"line\"><span class=\"string\">G(i,j) = xi.T * xj</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">t = time.time()</span><br><span class=\"line\">G = np.dot(X.T, X)</span><br><span class=\"line\">D = np.zeros([n, n])</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(i + <span class=\"number\">1</span>, n):</span><br><span class=\"line\">        D[i, j] = G[i, i] - G[i, j] * <span class=\"number\">2</span> + G[j,j]</span><br><span class=\"line\">        D[j, i] = D[i, j]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.time() - t)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">H(i, j) = G(i, i)</span></span><br><span class=\"line\"><span class=\"string\">K(i, j) = G(j, j) = H(i, j).T</span></span><br><span class=\"line\"><span class=\"string\">D(i, j) = H(i, j) + K(i, j) - 2 * G(i, j)</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">t = time.time()</span><br><span class=\"line\">G = np.dot(X.T, X)</span><br><span class=\"line\">H = np.tile(np.diag(G), (n, <span class=\"number\">1</span>)) <span class=\"comment\"># n rows, 1 for each row</span></span><br><span class=\"line\">D = H + H.T - G * <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.time() - t)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>2 500\n1.8900527954101562\n0.6348848342895508\n0.25273704528808594\n0.02255988121032715\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.julyedu.com/course/getDetail/66/\" >廖雪峰Python数据分析<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"两股票历史价格比较","abbrlink":29975,"date":"2019-06-30T16:00:00.000Z","_content":"\n## 项目任务\n1. 获取财务数据\n2. 填充缺失值\n3. 数据归一化\n4. 折线图\n\n## 代码\n\n### 依赖\n\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport tushare as ts\nimport ssl\ncontext = ssl._create_unverified_context()\n```\n\n### 获取财务数据\n\n\n```python\ns_pf = '600000'\ns_gd = '601818'\nsdate = '2018-01-01'\nedate = '2018-12-31'\n\ndf_pf = ts.get_hist_data(s_pf, start = sdate, end = edate).sort_index(axis = 0, ascending = True)\ndf_gd = ts.get_hist_data(s_gd, start = sdate, end = edate).sort_index(axis = 0, ascending = True)\n```\n\n### 数据处理\n\n\n```python\ndf = pd.concat([df_pf.close, df_gd.close], axis = 1, keys = ['pf_clse','gd_close'])\ndf.ffill(axis = 0, inplace = True)\n\ndf['pf_one'] = df_pf.close / float(df_pf.close[0]) * 100\ndf['gd_one'] = df_gd.close / float(df_gd.close[0]) * 100\n\ndisplay(df.corr(method = 'pearson', min_periods = 1))\n```\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pf_clse</th>\n      <th>gd_close</th>\n      <th>pf_one</th>\n      <th>gd_one</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>pf_clse</th>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n    </tr>\n    <tr>\n      <th>gd_close</th>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>pf_one</th>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n    </tr>\n    <tr>\n      <th>gd_one</th>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n### 画图\n\n\n```python\ndf.pf_one.plot(figsize = (20,15))\ndf.gd_one.plot(figsize = (20,15))\n\n# 绘图\nplt.savefig(\"../img/2019-07-01_两股票历史价格比较_1.png\")\nplt.close()\n```\n\n![](/img/2019-07-01_两股票历史价格比较_1.png)\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n2. [Tushare官网](http://tushare.org/)\n","source":"_posts/2019-07-01_两股票历史价格比较.md","raw":"---\ntitle: 两股票历史价格比较\ncategories:\n  - 项目\n  - 金融分析\nabbrlink: 29975\ndate: 2019-07-01 00:00:00\n---\n\n## 项目任务\n1. 获取财务数据\n2. 填充缺失值\n3. 数据归一化\n4. 折线图\n\n## 代码\n\n### 依赖\n\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport tushare as ts\nimport ssl\ncontext = ssl._create_unverified_context()\n```\n\n### 获取财务数据\n\n\n```python\ns_pf = '600000'\ns_gd = '601818'\nsdate = '2018-01-01'\nedate = '2018-12-31'\n\ndf_pf = ts.get_hist_data(s_pf, start = sdate, end = edate).sort_index(axis = 0, ascending = True)\ndf_gd = ts.get_hist_data(s_gd, start = sdate, end = edate).sort_index(axis = 0, ascending = True)\n```\n\n### 数据处理\n\n\n```python\ndf = pd.concat([df_pf.close, df_gd.close], axis = 1, keys = ['pf_clse','gd_close'])\ndf.ffill(axis = 0, inplace = True)\n\ndf['pf_one'] = df_pf.close / float(df_pf.close[0]) * 100\ndf['gd_one'] = df_gd.close / float(df_gd.close[0]) * 100\n\ndisplay(df.corr(method = 'pearson', min_periods = 1))\n```\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pf_clse</th>\n      <th>gd_close</th>\n      <th>pf_one</th>\n      <th>gd_one</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>pf_clse</th>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n    </tr>\n    <tr>\n      <th>gd_close</th>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>pf_one</th>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n    </tr>\n    <tr>\n      <th>gd_one</th>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n### 画图\n\n\n```python\ndf.pf_one.plot(figsize = (20,15))\ndf.gd_one.plot(figsize = (20,15))\n\n# 绘图\nplt.savefig(\"../img/2019-07-01_两股票历史价格比较_1.png\")\nplt.close()\n```\n\n![](/img/2019-07-01_两股票历史价格比较_1.png)\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n2. [Tushare官网](http://tushare.org/)\n","slug":"2019-07-01_两股票历史价格比较","published":1,"updated":"2021-04-01T17:36:27.032Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5q900069ohzhly7brdq","content":"<h2 id=\"项目任务\"><a href=\"#项目任务\" class=\"headerlink\" title=\"项目任务\"></a>项目任务</h2><ol>\n<li>获取财务数据</li>\n<li>填充缺失值</li>\n<li>数据归一化</li>\n<li>折线图</li>\n</ol>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> tushare <span class=\"keyword\">as</span> ts</span><br><span class=\"line\"><span class=\"keyword\">import</span> ssl</span><br><span class=\"line\">context = ssl._create_unverified_context()</span><br></pre></td></tr></table></figure>\n<h3 id=\"获取财务数据\"><a href=\"#获取财务数据\" class=\"headerlink\" title=\"获取财务数据\"></a>获取财务数据</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s_pf = <span class=\"string\">&#x27;600000&#x27;</span></span><br><span class=\"line\">s_gd = <span class=\"string\">&#x27;601818&#x27;</span></span><br><span class=\"line\">sdate = <span class=\"string\">&#x27;2018-01-01&#x27;</span></span><br><span class=\"line\">edate = <span class=\"string\">&#x27;2018-12-31&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">df_pf = ts.get_hist_data(s_pf, start = sdate, end = edate).sort_index(axis = <span class=\"number\">0</span>, ascending = <span class=\"literal\">True</span>)</span><br><span class=\"line\">df_gd = ts.get_hist_data(s_gd, start = sdate, end = edate).sort_index(axis = <span class=\"number\">0</span>, ascending = <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"数据处理\"><a href=\"#数据处理\" class=\"headerlink\" title=\"数据处理\"></a>数据处理</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df = pd.concat([df_pf.close, df_gd.close], axis = <span class=\"number\">1</span>, keys = [<span class=\"string\">&#x27;pf_clse&#x27;</span>,<span class=\"string\">&#x27;gd_close&#x27;</span>])</span><br><span class=\"line\">df.ffill(axis = <span class=\"number\">0</span>, inplace = <span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df[<span class=\"string\">&#x27;pf_one&#x27;</span>] = df_pf.close / <span class=\"built_in\">float</span>(df_pf.close[<span class=\"number\">0</span>]) * <span class=\"number\">100</span></span><br><span class=\"line\">df[<span class=\"string\">&#x27;gd_one&#x27;</span>] = df_gd.close / <span class=\"built_in\">float</span>(df_gd.close[<span class=\"number\">0</span>]) * <span class=\"number\">100</span></span><br><span class=\"line\"></span><br><span class=\"line\">display(df.corr(method = <span class=\"string\">&#x27;pearson&#x27;</span>, min_periods = <span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pf_clse</th>\n      <th>gd_close</th>\n      <th>pf_one</th>\n      <th>gd_one</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>pf_clse</th>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n    </tr>\n    <tr>\n      <th>gd_close</th>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>pf_one</th>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n    </tr>\n    <tr>\n      <th>gd_one</th>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<h3 id=\"画图\"><a href=\"#画图\" class=\"headerlink\" title=\"画图\"></a>画图</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.pf_one.plot(figsize = (<span class=\"number\">20</span>,<span class=\"number\">15</span>))</span><br><span class=\"line\">df.gd_one.plot(figsize = (<span class=\"number\">20</span>,<span class=\"number\">15</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-07-01_两股票历史价格比较_1.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-01_两股票历史价格比较_1.png\"\n                      alt=\"\"\n                ></p>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.julyedu.com/course/getDetail/66/\" >廖雪峰Python数据分析<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"http://tushare.org/\" >Tushare官网<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"项目任务\"><a href=\"#项目任务\" class=\"headerlink\" title=\"项目任务\"></a>项目任务</h2><ol>\n<li>获取财务数据</li>\n<li>填充缺失值</li>\n<li>数据归一化</li>\n<li>折线图</li>\n</ol>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> tushare <span class=\"keyword\">as</span> ts</span><br><span class=\"line\"><span class=\"keyword\">import</span> ssl</span><br><span class=\"line\">context = ssl._create_unverified_context()</span><br></pre></td></tr></table></figure>\n<h3 id=\"获取财务数据\"><a href=\"#获取财务数据\" class=\"headerlink\" title=\"获取财务数据\"></a>获取财务数据</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s_pf = <span class=\"string\">&#x27;600000&#x27;</span></span><br><span class=\"line\">s_gd = <span class=\"string\">&#x27;601818&#x27;</span></span><br><span class=\"line\">sdate = <span class=\"string\">&#x27;2018-01-01&#x27;</span></span><br><span class=\"line\">edate = <span class=\"string\">&#x27;2018-12-31&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">df_pf = ts.get_hist_data(s_pf, start = sdate, end = edate).sort_index(axis = <span class=\"number\">0</span>, ascending = <span class=\"literal\">True</span>)</span><br><span class=\"line\">df_gd = ts.get_hist_data(s_gd, start = sdate, end = edate).sort_index(axis = <span class=\"number\">0</span>, ascending = <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"数据处理\"><a href=\"#数据处理\" class=\"headerlink\" title=\"数据处理\"></a>数据处理</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df = pd.concat([df_pf.close, df_gd.close], axis = <span class=\"number\">1</span>, keys = [<span class=\"string\">&#x27;pf_clse&#x27;</span>,<span class=\"string\">&#x27;gd_close&#x27;</span>])</span><br><span class=\"line\">df.ffill(axis = <span class=\"number\">0</span>, inplace = <span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df[<span class=\"string\">&#x27;pf_one&#x27;</span>] = df_pf.close / <span class=\"built_in\">float</span>(df_pf.close[<span class=\"number\">0</span>]) * <span class=\"number\">100</span></span><br><span class=\"line\">df[<span class=\"string\">&#x27;gd_one&#x27;</span>] = df_gd.close / <span class=\"built_in\">float</span>(df_gd.close[<span class=\"number\">0</span>]) * <span class=\"number\">100</span></span><br><span class=\"line\"></span><br><span class=\"line\">display(df.corr(method = <span class=\"string\">&#x27;pearson&#x27;</span>, min_periods = <span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pf_clse</th>\n      <th>gd_close</th>\n      <th>pf_one</th>\n      <th>gd_one</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>pf_clse</th>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n    </tr>\n    <tr>\n      <th>gd_close</th>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>pf_one</th>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n    </tr>\n    <tr>\n      <th>gd_one</th>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<h3 id=\"画图\"><a href=\"#画图\" class=\"headerlink\" title=\"画图\"></a>画图</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.pf_one.plot(figsize = (<span class=\"number\">20</span>,<span class=\"number\">15</span>))</span><br><span class=\"line\">df.gd_one.plot(figsize = (<span class=\"number\">20</span>,<span class=\"number\">15</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绘图</span></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-07-01_两股票历史价格比较_1.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-01_两股票历史价格比较_1.png\"\n                      alt=\"\"\n                ></p>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.julyedu.com/course/getDetail/66/\" >廖雪峰Python数据分析<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"http://tushare.org/\" >Tushare官网<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"链家网房源","abbrlink":38058,"date":"2019-07-04T16:00:00.000Z","_content":"\n\n```python\nimport requests\nimport time\nfrom bs4 import BeautifulSoup\n```\n\n## request\n\n### 设置列表页URL的固定部分\n\n\n```python\nurl = 'http://bj.lianjia.com/ershoufang/'\n\n#设置页面页的可变部分\npage = ('pg')\n```\n\n### 设置请求头部信息\n\n\n```python\nheaders = {'User-Agent':'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11',\n'Accept':'text/html;q=0.9,*/*;q=0.8',\n'Accept-Charset':'ISO-8859-1,utf-8;q=0.7,*;q=0.3',\n'Accept-Encoding':'gzip',\n'Connection':'close',\n'Referer':'http://www.baidu.com/link?url=_andhfsjjjKRgEWkj7i9cFmYYGsisrnm2A-TN3XZDQXxvGsM9k9ZZSnikW2Yds4s&amp;amp;wd=&amp;amp;eqid=c3435a7d00146bd600000003582bfd1f'\n}\n```\n\n### 循环抓取列表页信息\n\n\n```python\nfor i in range(1,2):\n     if i == 1:\n          i=str(i)\n          a=(url+page+i+'/')\n          r=requests.get(url=a,headers=headers)\n          html=r.content\n     else:\n          i=str(i)\n          a=(url+page+i+'/')\n          r=requests.get(url=a,headers=headers)\n          html2=r.content\n          html = html + html2\n     #每次间隔1秒\n     time.sleep(1)\n```\n\n### 解析抓取的页面内容\n\n\n```python\nlj=BeautifulSoup(html,'html.parser')\n```\n\n### 提取房源总价\n\n\n```python\nprice=lj.find_all('div','priceInfo')\ntp=[]\nfor a in price:\n    totalPrice=a.span.string\n    tp.append(totalPrice)\n```\n\n### 提取房源信息\n\n\n```python\nhouseInfo=lj.find_all('div',attrs={'class':'houseInfo'})\n \nhi=[]\nfor b in houseInfo:\n    house=b.get_text()\n    hi.append(house)\n```\n\n### 提取房源关注度\n\n\n```python\nfollowInfo=lj.find_all('div',attrs={'class':'followInfo'})\n \nfi=[]\nfor c in followInfo:\n    follow=c.get_text()\n    fi.append(follow)\n```\n\n### DataFrame\n\n\n```python\nimport pandas as pd\nhouse=pd.DataFrame({'totalprice':tp,'houseinfo':hi,'followinfo':fi})\nhouse.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>totalprice</th>\n      <th>houseinfo</th>\n      <th>followinfo</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>268</td>\n      <td>农光东里  | 1室1厅 | 37.55平米 | 南 | 精装</td>\n      <td>150人关注 / 6天以前发布</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>381</td>\n      <td>平乐园小区  | 2室1厅 | 60.52平米 | 南 北 | 精装</td>\n      <td>135人关注 / 18天以前发布</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>570</td>\n      <td>科源小区  | 2室1厅 | 65.1平米 | 东 西 | 简装</td>\n      <td>70人关注 / 5个月以前发布</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>365</td>\n      <td>劲松南路  | 2室1厅 | 57.49平米 | 南 北 | 简装</td>\n      <td>97人关注 / 10天以前发布</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>688</td>\n      <td>大井胡同  | 1室1厅 | 38平米 | 南 | 精装</td>\n      <td>18人关注 / 12天以前发布</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n### 对房源信息进行分列\n\n\n```python\nhouseinfo_split = pd.DataFrame((x.split('|') for x in house.houseinfo),index=house.index,columns=['小区','户型','面积','朝向','装修'])\nhouseinfo_split.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>小区</th>\n      <th>户型</th>\n      <th>面积</th>\n      <th>朝向</th>\n      <th>装修</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>农光东里</td>\n      <td>1室1厅</td>\n      <td>37.55平米</td>\n      <td>南</td>\n      <td>精装</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>平乐园小区</td>\n      <td>2室1厅</td>\n      <td>60.52平米</td>\n      <td>南 北</td>\n      <td>精装</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>科源小区</td>\n      <td>2室1厅</td>\n      <td>65.1平米</td>\n      <td>东 西</td>\n      <td>简装</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>劲松南路</td>\n      <td>2室1厅</td>\n      <td>57.49平米</td>\n      <td>南 北</td>\n      <td>简装</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>大井胡同</td>\n      <td>1室1厅</td>\n      <td>38平米</td>\n      <td>南</td>\n      <td>精装</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n### 将分列结果拼接回原数据表\n\n\n```python\nhouse=pd.merge(house,houseinfo_split,right_index=True, left_index=True)\nhouse.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>totalprice</th>\n      <th>houseinfo</th>\n      <th>followinfo</th>\n      <th>小区</th>\n      <th>户型</th>\n      <th>面积</th>\n      <th>朝向</th>\n      <th>装修</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>268</td>\n      <td>农光东里  | 1室1厅 | 37.55平米 | 南 | 精装</td>\n      <td>150人关注 / 6天以前发布</td>\n      <td>农光东里</td>\n      <td>1室1厅</td>\n      <td>37.55平米</td>\n      <td>南</td>\n      <td>精装</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>381</td>\n      <td>平乐园小区  | 2室1厅 | 60.52平米 | 南 北 | 精装</td>\n      <td>135人关注 / 18天以前发布</td>\n      <td>平乐园小区</td>\n      <td>2室1厅</td>\n      <td>60.52平米</td>\n      <td>南 北</td>\n      <td>精装</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>570</td>\n      <td>科源小区  | 2室1厅 | 65.1平米 | 东 西 | 简装</td>\n      <td>70人关注 / 5个月以前发布</td>\n      <td>科源小区</td>\n      <td>2室1厅</td>\n      <td>65.1平米</td>\n      <td>东 西</td>\n      <td>简装</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>365</td>\n      <td>劲松南路  | 2室1厅 | 57.49平米 | 南 北 | 简装</td>\n      <td>97人关注 / 10天以前发布</td>\n      <td>劲松南路</td>\n      <td>2室1厅</td>\n      <td>57.49平米</td>\n      <td>南 北</td>\n      <td>简装</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>688</td>\n      <td>大井胡同  | 1室1厅 | 38平米 | 南 | 精装</td>\n      <td>18人关注 / 12天以前发布</td>\n      <td>大井胡同</td>\n      <td>1室1厅</td>\n      <td>38平米</td>\n      <td>南</td>\n      <td>精装</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n### 对房源关注度进行分列\n\n\n```python\nfollowinfo_split = pd.DataFrame((x.split('/') for x in house.followinfo),index=house.index,columns=['guanzhu','fabu'])\nhouse=pd.merge(house,followinfo_split,right_index=True, left_index=True)\nhouse.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>totalprice</th>\n      <th>houseinfo</th>\n      <th>followinfo</th>\n      <th>小区</th>\n      <th>户型</th>\n      <th>面积</th>\n      <th>朝向</th>\n      <th>装修</th>\n      <th>guanzhu</th>\n      <th>fabu</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>268</td>\n      <td>农光东里  | 1室1厅 | 37.55平米 | 南 | 精装</td>\n      <td>150人关注 / 6天以前发布</td>\n      <td>农光东里</td>\n      <td>1室1厅</td>\n      <td>37.55平米</td>\n      <td>南</td>\n      <td>精装</td>\n      <td>150人关注</td>\n      <td>6天以前发布</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>381</td>\n      <td>平乐园小区  | 2室1厅 | 60.52平米 | 南 北 | 精装</td>\n      <td>135人关注 / 18天以前发布</td>\n      <td>平乐园小区</td>\n      <td>2室1厅</td>\n      <td>60.52平米</td>\n      <td>南 北</td>\n      <td>精装</td>\n      <td>135人关注</td>\n      <td>18天以前发布</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>570</td>\n      <td>科源小区  | 2室1厅 | 65.1平米 | 东 西 | 简装</td>\n      <td>70人关注 / 5个月以前发布</td>\n      <td>科源小区</td>\n      <td>2室1厅</td>\n      <td>65.1平米</td>\n      <td>东 西</td>\n      <td>简装</td>\n      <td>70人关注</td>\n      <td>5个月以前发布</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>365</td>\n      <td>劲松南路  | 2室1厅 | 57.49平米 | 南 北 | 简装</td>\n      <td>97人关注 / 10天以前发布</td>\n      <td>劲松南路</td>\n      <td>2室1厅</td>\n      <td>57.49平米</td>\n      <td>南 北</td>\n      <td>简装</td>\n      <td>97人关注</td>\n      <td>10天以前发布</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>688</td>\n      <td>大井胡同  | 1室1厅 | 38平米 | 南 | 精装</td>\n      <td>18人关注 / 12天以前发布</td>\n      <td>大井胡同</td>\n      <td>1室1厅</td>\n      <td>38平米</td>\n      <td>南</td>\n      <td>精装</td>\n      <td>18人关注</td>\n      <td>12天以前发布</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n","source":"_posts/2019-07-05_链家网房源.md","raw":"---\ntitle: 链家网房源\ncategories:\n  - 项目\n  - 爬虫\nabbrlink: 38058\ndate: 2019-07-05 00:00:00\n---\n\n\n```python\nimport requests\nimport time\nfrom bs4 import BeautifulSoup\n```\n\n## request\n\n### 设置列表页URL的固定部分\n\n\n```python\nurl = 'http://bj.lianjia.com/ershoufang/'\n\n#设置页面页的可变部分\npage = ('pg')\n```\n\n### 设置请求头部信息\n\n\n```python\nheaders = {'User-Agent':'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11',\n'Accept':'text/html;q=0.9,*/*;q=0.8',\n'Accept-Charset':'ISO-8859-1,utf-8;q=0.7,*;q=0.3',\n'Accept-Encoding':'gzip',\n'Connection':'close',\n'Referer':'http://www.baidu.com/link?url=_andhfsjjjKRgEWkj7i9cFmYYGsisrnm2A-TN3XZDQXxvGsM9k9ZZSnikW2Yds4s&amp;amp;wd=&amp;amp;eqid=c3435a7d00146bd600000003582bfd1f'\n}\n```\n\n### 循环抓取列表页信息\n\n\n```python\nfor i in range(1,2):\n     if i == 1:\n          i=str(i)\n          a=(url+page+i+'/')\n          r=requests.get(url=a,headers=headers)\n          html=r.content\n     else:\n          i=str(i)\n          a=(url+page+i+'/')\n          r=requests.get(url=a,headers=headers)\n          html2=r.content\n          html = html + html2\n     #每次间隔1秒\n     time.sleep(1)\n```\n\n### 解析抓取的页面内容\n\n\n```python\nlj=BeautifulSoup(html,'html.parser')\n```\n\n### 提取房源总价\n\n\n```python\nprice=lj.find_all('div','priceInfo')\ntp=[]\nfor a in price:\n    totalPrice=a.span.string\n    tp.append(totalPrice)\n```\n\n### 提取房源信息\n\n\n```python\nhouseInfo=lj.find_all('div',attrs={'class':'houseInfo'})\n \nhi=[]\nfor b in houseInfo:\n    house=b.get_text()\n    hi.append(house)\n```\n\n### 提取房源关注度\n\n\n```python\nfollowInfo=lj.find_all('div',attrs={'class':'followInfo'})\n \nfi=[]\nfor c in followInfo:\n    follow=c.get_text()\n    fi.append(follow)\n```\n\n### DataFrame\n\n\n```python\nimport pandas as pd\nhouse=pd.DataFrame({'totalprice':tp,'houseinfo':hi,'followinfo':fi})\nhouse.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>totalprice</th>\n      <th>houseinfo</th>\n      <th>followinfo</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>268</td>\n      <td>农光东里  | 1室1厅 | 37.55平米 | 南 | 精装</td>\n      <td>150人关注 / 6天以前发布</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>381</td>\n      <td>平乐园小区  | 2室1厅 | 60.52平米 | 南 北 | 精装</td>\n      <td>135人关注 / 18天以前发布</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>570</td>\n      <td>科源小区  | 2室1厅 | 65.1平米 | 东 西 | 简装</td>\n      <td>70人关注 / 5个月以前发布</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>365</td>\n      <td>劲松南路  | 2室1厅 | 57.49平米 | 南 北 | 简装</td>\n      <td>97人关注 / 10天以前发布</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>688</td>\n      <td>大井胡同  | 1室1厅 | 38平米 | 南 | 精装</td>\n      <td>18人关注 / 12天以前发布</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n### 对房源信息进行分列\n\n\n```python\nhouseinfo_split = pd.DataFrame((x.split('|') for x in house.houseinfo),index=house.index,columns=['小区','户型','面积','朝向','装修'])\nhouseinfo_split.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>小区</th>\n      <th>户型</th>\n      <th>面积</th>\n      <th>朝向</th>\n      <th>装修</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>农光东里</td>\n      <td>1室1厅</td>\n      <td>37.55平米</td>\n      <td>南</td>\n      <td>精装</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>平乐园小区</td>\n      <td>2室1厅</td>\n      <td>60.52平米</td>\n      <td>南 北</td>\n      <td>精装</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>科源小区</td>\n      <td>2室1厅</td>\n      <td>65.1平米</td>\n      <td>东 西</td>\n      <td>简装</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>劲松南路</td>\n      <td>2室1厅</td>\n      <td>57.49平米</td>\n      <td>南 北</td>\n      <td>简装</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>大井胡同</td>\n      <td>1室1厅</td>\n      <td>38平米</td>\n      <td>南</td>\n      <td>精装</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n### 将分列结果拼接回原数据表\n\n\n```python\nhouse=pd.merge(house,houseinfo_split,right_index=True, left_index=True)\nhouse.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>totalprice</th>\n      <th>houseinfo</th>\n      <th>followinfo</th>\n      <th>小区</th>\n      <th>户型</th>\n      <th>面积</th>\n      <th>朝向</th>\n      <th>装修</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>268</td>\n      <td>农光东里  | 1室1厅 | 37.55平米 | 南 | 精装</td>\n      <td>150人关注 / 6天以前发布</td>\n      <td>农光东里</td>\n      <td>1室1厅</td>\n      <td>37.55平米</td>\n      <td>南</td>\n      <td>精装</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>381</td>\n      <td>平乐园小区  | 2室1厅 | 60.52平米 | 南 北 | 精装</td>\n      <td>135人关注 / 18天以前发布</td>\n      <td>平乐园小区</td>\n      <td>2室1厅</td>\n      <td>60.52平米</td>\n      <td>南 北</td>\n      <td>精装</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>570</td>\n      <td>科源小区  | 2室1厅 | 65.1平米 | 东 西 | 简装</td>\n      <td>70人关注 / 5个月以前发布</td>\n      <td>科源小区</td>\n      <td>2室1厅</td>\n      <td>65.1平米</td>\n      <td>东 西</td>\n      <td>简装</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>365</td>\n      <td>劲松南路  | 2室1厅 | 57.49平米 | 南 北 | 简装</td>\n      <td>97人关注 / 10天以前发布</td>\n      <td>劲松南路</td>\n      <td>2室1厅</td>\n      <td>57.49平米</td>\n      <td>南 北</td>\n      <td>简装</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>688</td>\n      <td>大井胡同  | 1室1厅 | 38平米 | 南 | 精装</td>\n      <td>18人关注 / 12天以前发布</td>\n      <td>大井胡同</td>\n      <td>1室1厅</td>\n      <td>38平米</td>\n      <td>南</td>\n      <td>精装</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n### 对房源关注度进行分列\n\n\n```python\nfollowinfo_split = pd.DataFrame((x.split('/') for x in house.followinfo),index=house.index,columns=['guanzhu','fabu'])\nhouse=pd.merge(house,followinfo_split,right_index=True, left_index=True)\nhouse.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>totalprice</th>\n      <th>houseinfo</th>\n      <th>followinfo</th>\n      <th>小区</th>\n      <th>户型</th>\n      <th>面积</th>\n      <th>朝向</th>\n      <th>装修</th>\n      <th>guanzhu</th>\n      <th>fabu</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>268</td>\n      <td>农光东里  | 1室1厅 | 37.55平米 | 南 | 精装</td>\n      <td>150人关注 / 6天以前发布</td>\n      <td>农光东里</td>\n      <td>1室1厅</td>\n      <td>37.55平米</td>\n      <td>南</td>\n      <td>精装</td>\n      <td>150人关注</td>\n      <td>6天以前发布</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>381</td>\n      <td>平乐园小区  | 2室1厅 | 60.52平米 | 南 北 | 精装</td>\n      <td>135人关注 / 18天以前发布</td>\n      <td>平乐园小区</td>\n      <td>2室1厅</td>\n      <td>60.52平米</td>\n      <td>南 北</td>\n      <td>精装</td>\n      <td>135人关注</td>\n      <td>18天以前发布</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>570</td>\n      <td>科源小区  | 2室1厅 | 65.1平米 | 东 西 | 简装</td>\n      <td>70人关注 / 5个月以前发布</td>\n      <td>科源小区</td>\n      <td>2室1厅</td>\n      <td>65.1平米</td>\n      <td>东 西</td>\n      <td>简装</td>\n      <td>70人关注</td>\n      <td>5个月以前发布</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>365</td>\n      <td>劲松南路  | 2室1厅 | 57.49平米 | 南 北 | 简装</td>\n      <td>97人关注 / 10天以前发布</td>\n      <td>劲松南路</td>\n      <td>2室1厅</td>\n      <td>57.49平米</td>\n      <td>南 北</td>\n      <td>简装</td>\n      <td>97人关注</td>\n      <td>10天以前发布</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>688</td>\n      <td>大井胡同  | 1室1厅 | 38平米 | 南 | 精装</td>\n      <td>18人关注 / 12天以前发布</td>\n      <td>大井胡同</td>\n      <td>1室1厅</td>\n      <td>38平米</td>\n      <td>南</td>\n      <td>精装</td>\n      <td>18人关注</td>\n      <td>12天以前发布</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n","slug":"2019-07-05_链家网房源","published":1,"updated":"2021-04-01T17:36:31.260Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5qa00079ohz09m83j4v","content":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br></pre></td></tr></table></figure>\n<h2 id=\"request\"><a href=\"#request\" class=\"headerlink\" title=\"request\"></a>request</h2><h3 id=\"设置列表页URL的固定部分\"><a href=\"#设置列表页URL的固定部分\" class=\"headerlink\" title=\"设置列表页URL的固定部分\"></a>设置列表页URL的固定部分</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url = <span class=\"string\">&#x27;http://bj.lianjia.com/ershoufang/&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置页面页的可变部分</span></span><br><span class=\"line\">page = (<span class=\"string\">&#x27;pg&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置请求头部信息\"><a href=\"#设置请求头部信息\" class=\"headerlink\" title=\"设置请求头部信息\"></a>设置请求头部信息</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">headers = &#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>:<span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;Accept&#x27;</span>:<span class=\"string\">&#x27;text/html;q=0.9,*/*;q=0.8&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;Accept-Charset&#x27;</span>:<span class=\"string\">&#x27;ISO-8859-1,utf-8;q=0.7,*;q=0.3&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;Accept-Encoding&#x27;</span>:<span class=\"string\">&#x27;gzip&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;Connection&#x27;</span>:<span class=\"string\">&#x27;close&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;Referer&#x27;</span>:<span class=\"string\">&#x27;http://www.baidu.com/link?url=_andhfsjjjKRgEWkj7i9cFmYYGsisrnm2A-TN3XZDQXxvGsM9k9ZZSnikW2Yds4s&amp;amp;amp;wd=&amp;amp;amp;eqid=c3435a7d00146bd600000003582bfd1f&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"循环抓取列表页信息\"><a href=\"#循环抓取列表页信息\" class=\"headerlink\" title=\"循环抓取列表页信息\"></a>循环抓取列表页信息</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>):</span><br><span class=\"line\">     <span class=\"keyword\">if</span> i == <span class=\"number\">1</span>:</span><br><span class=\"line\">          i=<span class=\"built_in\">str</span>(i)</span><br><span class=\"line\">          a=(url+page+i+<span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\">          r=requests.get(url=a,headers=headers)</span><br><span class=\"line\">          html=r.content</span><br><span class=\"line\">     <span class=\"keyword\">else</span>:</span><br><span class=\"line\">          i=<span class=\"built_in\">str</span>(i)</span><br><span class=\"line\">          a=(url+page+i+<span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\">          r=requests.get(url=a,headers=headers)</span><br><span class=\"line\">          html2=r.content</span><br><span class=\"line\">          html = html + html2</span><br><span class=\"line\">     <span class=\"comment\">#每次间隔1秒</span></span><br><span class=\"line\">     time.sleep(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"解析抓取的页面内容\"><a href=\"#解析抓取的页面内容\" class=\"headerlink\" title=\"解析抓取的页面内容\"></a>解析抓取的页面内容</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lj=BeautifulSoup(html,<span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"提取房源总价\"><a href=\"#提取房源总价\" class=\"headerlink\" title=\"提取房源总价\"></a>提取房源总价</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">price=lj.find_all(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"string\">&#x27;priceInfo&#x27;</span>)</span><br><span class=\"line\">tp=[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> a <span class=\"keyword\">in</span> price:</span><br><span class=\"line\">    totalPrice=a.span.string</span><br><span class=\"line\">    tp.append(totalPrice)</span><br></pre></td></tr></table></figure>\n<h3 id=\"提取房源信息\"><a href=\"#提取房源信息\" class=\"headerlink\" title=\"提取房源信息\"></a>提取房源信息</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">houseInfo=lj.find_all(<span class=\"string\">&#x27;div&#x27;</span>,attrs=&#123;<span class=\"string\">&#x27;class&#x27;</span>:<span class=\"string\">&#x27;houseInfo&#x27;</span>&#125;)</span><br><span class=\"line\"> </span><br><span class=\"line\">hi=[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> b <span class=\"keyword\">in</span> houseInfo:</span><br><span class=\"line\">    house=b.get_text()</span><br><span class=\"line\">    hi.append(house)</span><br></pre></td></tr></table></figure>\n<h3 id=\"提取房源关注度\"><a href=\"#提取房源关注度\" class=\"headerlink\" title=\"提取房源关注度\"></a>提取房源关注度</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">followInfo=lj.find_all(<span class=\"string\">&#x27;div&#x27;</span>,attrs=&#123;<span class=\"string\">&#x27;class&#x27;</span>:<span class=\"string\">&#x27;followInfo&#x27;</span>&#125;)</span><br><span class=\"line\"> </span><br><span class=\"line\">fi=[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> followInfo:</span><br><span class=\"line\">    follow=c.get_text()</span><br><span class=\"line\">    fi.append(follow)</span><br></pre></td></tr></table></figure>\n<h3 id=\"DataFrame\"><a href=\"#DataFrame\" class=\"headerlink\" title=\"DataFrame\"></a>DataFrame</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\">house=pd.DataFrame(&#123;<span class=\"string\">&#x27;totalprice&#x27;</span>:tp,<span class=\"string\">&#x27;houseinfo&#x27;</span>:hi,<span class=\"string\">&#x27;followinfo&#x27;</span>:fi&#125;)</span><br><span class=\"line\">house.head()</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>totalprice</th>\n      <th>houseinfo</th>\n      <th>followinfo</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>268</td>\n      <td>农光东里  | 1室1厅 | 37.55平米 | 南 | 精装</td>\n      <td>150人关注 / 6天以前发布</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>381</td>\n      <td>平乐园小区  | 2室1厅 | 60.52平米 | 南 北 | 精装</td>\n      <td>135人关注 / 18天以前发布</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>570</td>\n      <td>科源小区  | 2室1厅 | 65.1平米 | 东 西 | 简装</td>\n      <td>70人关注 / 5个月以前发布</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>365</td>\n      <td>劲松南路  | 2室1厅 | 57.49平米 | 南 北 | 简装</td>\n      <td>97人关注 / 10天以前发布</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>688</td>\n      <td>大井胡同  | 1室1厅 | 38平米 | 南 | 精装</td>\n      <td>18人关注 / 12天以前发布</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<h3 id=\"对房源信息进行分列\"><a href=\"#对房源信息进行分列\" class=\"headerlink\" title=\"对房源信息进行分列\"></a>对房源信息进行分列</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">houseinfo_split = pd.DataFrame((x.split(<span class=\"string\">&#x27;|&#x27;</span>) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> house.houseinfo),index=house.index,columns=[<span class=\"string\">&#x27;小区&#x27;</span>,<span class=\"string\">&#x27;户型&#x27;</span>,<span class=\"string\">&#x27;面积&#x27;</span>,<span class=\"string\">&#x27;朝向&#x27;</span>,<span class=\"string\">&#x27;装修&#x27;</span>])</span><br><span class=\"line\">houseinfo_split.head()</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>小区</th>\n      <th>户型</th>\n      <th>面积</th>\n      <th>朝向</th>\n      <th>装修</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>农光东里</td>\n      <td>1室1厅</td>\n      <td>37.55平米</td>\n      <td>南</td>\n      <td>精装</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>平乐园小区</td>\n      <td>2室1厅</td>\n      <td>60.52平米</td>\n      <td>南 北</td>\n      <td>精装</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>科源小区</td>\n      <td>2室1厅</td>\n      <td>65.1平米</td>\n      <td>东 西</td>\n      <td>简装</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>劲松南路</td>\n      <td>2室1厅</td>\n      <td>57.49平米</td>\n      <td>南 北</td>\n      <td>简装</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>大井胡同</td>\n      <td>1室1厅</td>\n      <td>38平米</td>\n      <td>南</td>\n      <td>精装</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<h3 id=\"将分列结果拼接回原数据表\"><a href=\"#将分列结果拼接回原数据表\" class=\"headerlink\" title=\"将分列结果拼接回原数据表\"></a>将分列结果拼接回原数据表</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">house=pd.merge(house,houseinfo_split,right_index=<span class=\"literal\">True</span>, left_index=<span class=\"literal\">True</span>)</span><br><span class=\"line\">house.head()</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>totalprice</th>\n      <th>houseinfo</th>\n      <th>followinfo</th>\n      <th>小区</th>\n      <th>户型</th>\n      <th>面积</th>\n      <th>朝向</th>\n      <th>装修</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>268</td>\n      <td>农光东里  | 1室1厅 | 37.55平米 | 南 | 精装</td>\n      <td>150人关注 / 6天以前发布</td>\n      <td>农光东里</td>\n      <td>1室1厅</td>\n      <td>37.55平米</td>\n      <td>南</td>\n      <td>精装</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>381</td>\n      <td>平乐园小区  | 2室1厅 | 60.52平米 | 南 北 | 精装</td>\n      <td>135人关注 / 18天以前发布</td>\n      <td>平乐园小区</td>\n      <td>2室1厅</td>\n      <td>60.52平米</td>\n      <td>南 北</td>\n      <td>精装</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>570</td>\n      <td>科源小区  | 2室1厅 | 65.1平米 | 东 西 | 简装</td>\n      <td>70人关注 / 5个月以前发布</td>\n      <td>科源小区</td>\n      <td>2室1厅</td>\n      <td>65.1平米</td>\n      <td>东 西</td>\n      <td>简装</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>365</td>\n      <td>劲松南路  | 2室1厅 | 57.49平米 | 南 北 | 简装</td>\n      <td>97人关注 / 10天以前发布</td>\n      <td>劲松南路</td>\n      <td>2室1厅</td>\n      <td>57.49平米</td>\n      <td>南 北</td>\n      <td>简装</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>688</td>\n      <td>大井胡同  | 1室1厅 | 38平米 | 南 | 精装</td>\n      <td>18人关注 / 12天以前发布</td>\n      <td>大井胡同</td>\n      <td>1室1厅</td>\n      <td>38平米</td>\n      <td>南</td>\n      <td>精装</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<h3 id=\"对房源关注度进行分列\"><a href=\"#对房源关注度进行分列\" class=\"headerlink\" title=\"对房源关注度进行分列\"></a>对房源关注度进行分列</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">followinfo_split = pd.DataFrame((x.split(<span class=\"string\">&#x27;/&#x27;</span>) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> house.followinfo),index=house.index,columns=[<span class=\"string\">&#x27;guanzhu&#x27;</span>,<span class=\"string\">&#x27;fabu&#x27;</span>])</span><br><span class=\"line\">house=pd.merge(house,followinfo_split,right_index=<span class=\"literal\">True</span>, left_index=<span class=\"literal\">True</span>)</span><br><span class=\"line\">house.head()</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>totalprice</th>\n      <th>houseinfo</th>\n      <th>followinfo</th>\n      <th>小区</th>\n      <th>户型</th>\n      <th>面积</th>\n      <th>朝向</th>\n      <th>装修</th>\n      <th>guanzhu</th>\n      <th>fabu</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>268</td>\n      <td>农光东里  | 1室1厅 | 37.55平米 | 南 | 精装</td>\n      <td>150人关注 / 6天以前发布</td>\n      <td>农光东里</td>\n      <td>1室1厅</td>\n      <td>37.55平米</td>\n      <td>南</td>\n      <td>精装</td>\n      <td>150人关注</td>\n      <td>6天以前发布</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>381</td>\n      <td>平乐园小区  | 2室1厅 | 60.52平米 | 南 北 | 精装</td>\n      <td>135人关注 / 18天以前发布</td>\n      <td>平乐园小区</td>\n      <td>2室1厅</td>\n      <td>60.52平米</td>\n      <td>南 北</td>\n      <td>精装</td>\n      <td>135人关注</td>\n      <td>18天以前发布</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>570</td>\n      <td>科源小区  | 2室1厅 | 65.1平米 | 东 西 | 简装</td>\n      <td>70人关注 / 5个月以前发布</td>\n      <td>科源小区</td>\n      <td>2室1厅</td>\n      <td>65.1平米</td>\n      <td>东 西</td>\n      <td>简装</td>\n      <td>70人关注</td>\n      <td>5个月以前发布</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>365</td>\n      <td>劲松南路  | 2室1厅 | 57.49平米 | 南 北 | 简装</td>\n      <td>97人关注 / 10天以前发布</td>\n      <td>劲松南路</td>\n      <td>2室1厅</td>\n      <td>57.49平米</td>\n      <td>南 北</td>\n      <td>简装</td>\n      <td>97人关注</td>\n      <td>10天以前发布</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>688</td>\n      <td>大井胡同  | 1室1厅 | 38平米 | 南 | 精装</td>\n      <td>18人关注 / 12天以前发布</td>\n      <td>大井胡同</td>\n      <td>1室1厅</td>\n      <td>38平米</td>\n      <td>南</td>\n      <td>精装</td>\n      <td>18人关注</td>\n      <td>12天以前发布</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.julyedu.com/course/getDetail/66/\" >廖雪峰Python数据分析<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br></pre></td></tr></table></figure>\n<h2 id=\"request\"><a href=\"#request\" class=\"headerlink\" title=\"request\"></a>request</h2><h3 id=\"设置列表页URL的固定部分\"><a href=\"#设置列表页URL的固定部分\" class=\"headerlink\" title=\"设置列表页URL的固定部分\"></a>设置列表页URL的固定部分</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url = <span class=\"string\">&#x27;http://bj.lianjia.com/ershoufang/&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置页面页的可变部分</span></span><br><span class=\"line\">page = (<span class=\"string\">&#x27;pg&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置请求头部信息\"><a href=\"#设置请求头部信息\" class=\"headerlink\" title=\"设置请求头部信息\"></a>设置请求头部信息</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">headers = &#123;<span class=\"string\">&#x27;User-Agent&#x27;</span>:<span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;Accept&#x27;</span>:<span class=\"string\">&#x27;text/html;q=0.9,*/*;q=0.8&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;Accept-Charset&#x27;</span>:<span class=\"string\">&#x27;ISO-8859-1,utf-8;q=0.7,*;q=0.3&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;Accept-Encoding&#x27;</span>:<span class=\"string\">&#x27;gzip&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;Connection&#x27;</span>:<span class=\"string\">&#x27;close&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;Referer&#x27;</span>:<span class=\"string\">&#x27;http://www.baidu.com/link?url=_andhfsjjjKRgEWkj7i9cFmYYGsisrnm2A-TN3XZDQXxvGsM9k9ZZSnikW2Yds4s&amp;amp;amp;wd=&amp;amp;amp;eqid=c3435a7d00146bd600000003582bfd1f&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"循环抓取列表页信息\"><a href=\"#循环抓取列表页信息\" class=\"headerlink\" title=\"循环抓取列表页信息\"></a>循环抓取列表页信息</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>):</span><br><span class=\"line\">     <span class=\"keyword\">if</span> i == <span class=\"number\">1</span>:</span><br><span class=\"line\">          i=<span class=\"built_in\">str</span>(i)</span><br><span class=\"line\">          a=(url+page+i+<span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\">          r=requests.get(url=a,headers=headers)</span><br><span class=\"line\">          html=r.content</span><br><span class=\"line\">     <span class=\"keyword\">else</span>:</span><br><span class=\"line\">          i=<span class=\"built_in\">str</span>(i)</span><br><span class=\"line\">          a=(url+page+i+<span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\">          r=requests.get(url=a,headers=headers)</span><br><span class=\"line\">          html2=r.content</span><br><span class=\"line\">          html = html + html2</span><br><span class=\"line\">     <span class=\"comment\">#每次间隔1秒</span></span><br><span class=\"line\">     time.sleep(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"解析抓取的页面内容\"><a href=\"#解析抓取的页面内容\" class=\"headerlink\" title=\"解析抓取的页面内容\"></a>解析抓取的页面内容</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lj=BeautifulSoup(html,<span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"提取房源总价\"><a href=\"#提取房源总价\" class=\"headerlink\" title=\"提取房源总价\"></a>提取房源总价</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">price=lj.find_all(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"string\">&#x27;priceInfo&#x27;</span>)</span><br><span class=\"line\">tp=[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> a <span class=\"keyword\">in</span> price:</span><br><span class=\"line\">    totalPrice=a.span.string</span><br><span class=\"line\">    tp.append(totalPrice)</span><br></pre></td></tr></table></figure>\n<h3 id=\"提取房源信息\"><a href=\"#提取房源信息\" class=\"headerlink\" title=\"提取房源信息\"></a>提取房源信息</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">houseInfo=lj.find_all(<span class=\"string\">&#x27;div&#x27;</span>,attrs=&#123;<span class=\"string\">&#x27;class&#x27;</span>:<span class=\"string\">&#x27;houseInfo&#x27;</span>&#125;)</span><br><span class=\"line\"> </span><br><span class=\"line\">hi=[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> b <span class=\"keyword\">in</span> houseInfo:</span><br><span class=\"line\">    house=b.get_text()</span><br><span class=\"line\">    hi.append(house)</span><br></pre></td></tr></table></figure>\n<h3 id=\"提取房源关注度\"><a href=\"#提取房源关注度\" class=\"headerlink\" title=\"提取房源关注度\"></a>提取房源关注度</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">followInfo=lj.find_all(<span class=\"string\">&#x27;div&#x27;</span>,attrs=&#123;<span class=\"string\">&#x27;class&#x27;</span>:<span class=\"string\">&#x27;followInfo&#x27;</span>&#125;)</span><br><span class=\"line\"> </span><br><span class=\"line\">fi=[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> followInfo:</span><br><span class=\"line\">    follow=c.get_text()</span><br><span class=\"line\">    fi.append(follow)</span><br></pre></td></tr></table></figure>\n<h3 id=\"DataFrame\"><a href=\"#DataFrame\" class=\"headerlink\" title=\"DataFrame\"></a>DataFrame</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\">house=pd.DataFrame(&#123;<span class=\"string\">&#x27;totalprice&#x27;</span>:tp,<span class=\"string\">&#x27;houseinfo&#x27;</span>:hi,<span class=\"string\">&#x27;followinfo&#x27;</span>:fi&#125;)</span><br><span class=\"line\">house.head()</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>totalprice</th>\n      <th>houseinfo</th>\n      <th>followinfo</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>268</td>\n      <td>农光东里  | 1室1厅 | 37.55平米 | 南 | 精装</td>\n      <td>150人关注 / 6天以前发布</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>381</td>\n      <td>平乐园小区  | 2室1厅 | 60.52平米 | 南 北 | 精装</td>\n      <td>135人关注 / 18天以前发布</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>570</td>\n      <td>科源小区  | 2室1厅 | 65.1平米 | 东 西 | 简装</td>\n      <td>70人关注 / 5个月以前发布</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>365</td>\n      <td>劲松南路  | 2室1厅 | 57.49平米 | 南 北 | 简装</td>\n      <td>97人关注 / 10天以前发布</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>688</td>\n      <td>大井胡同  | 1室1厅 | 38平米 | 南 | 精装</td>\n      <td>18人关注 / 12天以前发布</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<h3 id=\"对房源信息进行分列\"><a href=\"#对房源信息进行分列\" class=\"headerlink\" title=\"对房源信息进行分列\"></a>对房源信息进行分列</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">houseinfo_split = pd.DataFrame((x.split(<span class=\"string\">&#x27;|&#x27;</span>) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> house.houseinfo),index=house.index,columns=[<span class=\"string\">&#x27;小区&#x27;</span>,<span class=\"string\">&#x27;户型&#x27;</span>,<span class=\"string\">&#x27;面积&#x27;</span>,<span class=\"string\">&#x27;朝向&#x27;</span>,<span class=\"string\">&#x27;装修&#x27;</span>])</span><br><span class=\"line\">houseinfo_split.head()</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>小区</th>\n      <th>户型</th>\n      <th>面积</th>\n      <th>朝向</th>\n      <th>装修</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>农光东里</td>\n      <td>1室1厅</td>\n      <td>37.55平米</td>\n      <td>南</td>\n      <td>精装</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>平乐园小区</td>\n      <td>2室1厅</td>\n      <td>60.52平米</td>\n      <td>南 北</td>\n      <td>精装</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>科源小区</td>\n      <td>2室1厅</td>\n      <td>65.1平米</td>\n      <td>东 西</td>\n      <td>简装</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>劲松南路</td>\n      <td>2室1厅</td>\n      <td>57.49平米</td>\n      <td>南 北</td>\n      <td>简装</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>大井胡同</td>\n      <td>1室1厅</td>\n      <td>38平米</td>\n      <td>南</td>\n      <td>精装</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<h3 id=\"将分列结果拼接回原数据表\"><a href=\"#将分列结果拼接回原数据表\" class=\"headerlink\" title=\"将分列结果拼接回原数据表\"></a>将分列结果拼接回原数据表</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">house=pd.merge(house,houseinfo_split,right_index=<span class=\"literal\">True</span>, left_index=<span class=\"literal\">True</span>)</span><br><span class=\"line\">house.head()</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>totalprice</th>\n      <th>houseinfo</th>\n      <th>followinfo</th>\n      <th>小区</th>\n      <th>户型</th>\n      <th>面积</th>\n      <th>朝向</th>\n      <th>装修</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>268</td>\n      <td>农光东里  | 1室1厅 | 37.55平米 | 南 | 精装</td>\n      <td>150人关注 / 6天以前发布</td>\n      <td>农光东里</td>\n      <td>1室1厅</td>\n      <td>37.55平米</td>\n      <td>南</td>\n      <td>精装</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>381</td>\n      <td>平乐园小区  | 2室1厅 | 60.52平米 | 南 北 | 精装</td>\n      <td>135人关注 / 18天以前发布</td>\n      <td>平乐园小区</td>\n      <td>2室1厅</td>\n      <td>60.52平米</td>\n      <td>南 北</td>\n      <td>精装</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>570</td>\n      <td>科源小区  | 2室1厅 | 65.1平米 | 东 西 | 简装</td>\n      <td>70人关注 / 5个月以前发布</td>\n      <td>科源小区</td>\n      <td>2室1厅</td>\n      <td>65.1平米</td>\n      <td>东 西</td>\n      <td>简装</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>365</td>\n      <td>劲松南路  | 2室1厅 | 57.49平米 | 南 北 | 简装</td>\n      <td>97人关注 / 10天以前发布</td>\n      <td>劲松南路</td>\n      <td>2室1厅</td>\n      <td>57.49平米</td>\n      <td>南 北</td>\n      <td>简装</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>688</td>\n      <td>大井胡同  | 1室1厅 | 38平米 | 南 | 精装</td>\n      <td>18人关注 / 12天以前发布</td>\n      <td>大井胡同</td>\n      <td>1室1厅</td>\n      <td>38平米</td>\n      <td>南</td>\n      <td>精装</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<h3 id=\"对房源关注度进行分列\"><a href=\"#对房源关注度进行分列\" class=\"headerlink\" title=\"对房源关注度进行分列\"></a>对房源关注度进行分列</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">followinfo_split = pd.DataFrame((x.split(<span class=\"string\">&#x27;/&#x27;</span>) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> house.followinfo),index=house.index,columns=[<span class=\"string\">&#x27;guanzhu&#x27;</span>,<span class=\"string\">&#x27;fabu&#x27;</span>])</span><br><span class=\"line\">house=pd.merge(house,followinfo_split,right_index=<span class=\"literal\">True</span>, left_index=<span class=\"literal\">True</span>)</span><br><span class=\"line\">house.head()</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>totalprice</th>\n      <th>houseinfo</th>\n      <th>followinfo</th>\n      <th>小区</th>\n      <th>户型</th>\n      <th>面积</th>\n      <th>朝向</th>\n      <th>装修</th>\n      <th>guanzhu</th>\n      <th>fabu</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>268</td>\n      <td>农光东里  | 1室1厅 | 37.55平米 | 南 | 精装</td>\n      <td>150人关注 / 6天以前发布</td>\n      <td>农光东里</td>\n      <td>1室1厅</td>\n      <td>37.55平米</td>\n      <td>南</td>\n      <td>精装</td>\n      <td>150人关注</td>\n      <td>6天以前发布</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>381</td>\n      <td>平乐园小区  | 2室1厅 | 60.52平米 | 南 北 | 精装</td>\n      <td>135人关注 / 18天以前发布</td>\n      <td>平乐园小区</td>\n      <td>2室1厅</td>\n      <td>60.52平米</td>\n      <td>南 北</td>\n      <td>精装</td>\n      <td>135人关注</td>\n      <td>18天以前发布</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>570</td>\n      <td>科源小区  | 2室1厅 | 65.1平米 | 东 西 | 简装</td>\n      <td>70人关注 / 5个月以前发布</td>\n      <td>科源小区</td>\n      <td>2室1厅</td>\n      <td>65.1平米</td>\n      <td>东 西</td>\n      <td>简装</td>\n      <td>70人关注</td>\n      <td>5个月以前发布</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>365</td>\n      <td>劲松南路  | 2室1厅 | 57.49平米 | 南 北 | 简装</td>\n      <td>97人关注 / 10天以前发布</td>\n      <td>劲松南路</td>\n      <td>2室1厅</td>\n      <td>57.49平米</td>\n      <td>南 北</td>\n      <td>简装</td>\n      <td>97人关注</td>\n      <td>10天以前发布</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>688</td>\n      <td>大井胡同  | 1室1厅 | 38平米 | 南 | 精装</td>\n      <td>18人关注 / 12天以前发布</td>\n      <td>大井胡同</td>\n      <td>1室1厅</td>\n      <td>38平米</td>\n      <td>南</td>\n      <td>精装</td>\n      <td>18人关注</td>\n      <td>12天以前发布</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.julyedu.com/course/getDetail/66/\" >廖雪峰Python数据分析<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"正則表達式","abbrlink":58780,"date":"2019-07-05T16:00:00.000Z","_content":"\n## re用法\n\n\n```python\nimport re\n\ndef re_all(regex):\n    log = 'Thu Mar 14 19:27:38 1991::jvfcho@iwrptlqmyok.edu::668950058-6-11\\n'\n    print(log)\n    print(\"\")\n    \n    print(\"===返回匹配的字符串（re.search().group()）===\")\n    print(re.search(regex,log).group())\n    print(\"\")\n    \n    print(\"===列表返回匹配的所有子串(re.findall())===\")\n    print(re.findall(regex,log))\n    print(\"\")\n\n    print(\"===返回匹配开始的位置（re.search().start()）===\")\n    print(re.search(regex,log).start())\n    print(\"\")\n\n    print(\"===返回匹配结束的位置（re.search().end()）===\")\n    print(re.search(regex,log).end())\n    print(\"\")\n\n    print(\"===返回匹配位置（re.search().span()）===\")\n    print(re.search(regex,log).span())\n    print(\"\")\n```\n\n## 匹配\n\n\n```python\nregex = '(Mon|Tue|Wed|Thu|Fri|Sat|Sun)'  # |是or\nre_all(regex)\n```\n\n    Thu Mar 14 19:27:38 1991::jvfcho@iwrptlqmyok.edu::668950058-6-11\n    \n    \n    ===返回匹配的字符串（re.search().group()）===\n    Thu\n    \n    ===列表返回匹配的所有子串(re.findall())===\n    ['Thu']\n    \n    ===返回匹配开始的位置（re.search().start()）===\n    0\n    \n    ===返回匹配结束的位置（re.search().end()）===\n    3\n    \n    ===返回匹配位置（re.search().span()）===\n    (0, 3)\n    \n\n\n\n```python\nregex = '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}).'  # ()是子組，會依次返回; {}是幾個; *是無數個\nre_all(regex)\n```\n\n    Thu Mar 14 19:27:38 1991::jvfcho@iwrptlqmyok.edu::668950058-6-11\n    \n    \n    ===返回匹配的字符串（re.search().group()）===\n    19:27:38 \n    \n    ===列表返回匹配的所有子串(re.findall())===\n    [('19', '27', '38')]\n    \n    ===返回匹配开始的位置（re.search().start()）===\n    11\n    \n    ===返回匹配结束的位置（re.search().end()）===\n    20\n    \n    ===返回匹配位置（re.search().span()）===\n    (11, 20)\n    \n\n\n\n```python\nregex = '([a-z]*)@([a-z]*).(com|edu|net|org|gov)'\nre_all(regex)\n```\n\n    Thu Mar 14 19:27:38 1991::jvfcho@iwrptlqmyok.edu::668950058-6-11\n    \n    \n    ===返回匹配的字符串（re.search().group()）===\n    jvfcho@iwrptlqmyok.edu\n    \n    ===列表返回匹配的所有子串(re.findall())===\n    [('jvfcho', 'iwrptlqmyok', 'edu')]\n    \n    ===返回匹配开始的位置（re.search().start()）===\n    26\n    \n    ===返回匹配结束的位置（re.search().end()）===\n    48\n    \n    ===返回匹配位置（re.search().span()）===\n    (26, 48)\n    \n\n\n> 参考：\n\n1. [陈乾博客](https://www.cnblogs.com/cq146637/p/8072540.html)\n2. [qiuri2008博客](https://www.cnblogs.com/jiangzhaowei/p/5738590.html)\n","source":"_posts/2019-07-06_正則表達式.md","raw":"---\ntitle: 正則表達式\ncategories:\n  - Python\nabbrlink: 58780\ndate: 2019-07-06 00:00:00\n---\n\n## re用法\n\n\n```python\nimport re\n\ndef re_all(regex):\n    log = 'Thu Mar 14 19:27:38 1991::jvfcho@iwrptlqmyok.edu::668950058-6-11\\n'\n    print(log)\n    print(\"\")\n    \n    print(\"===返回匹配的字符串（re.search().group()）===\")\n    print(re.search(regex,log).group())\n    print(\"\")\n    \n    print(\"===列表返回匹配的所有子串(re.findall())===\")\n    print(re.findall(regex,log))\n    print(\"\")\n\n    print(\"===返回匹配开始的位置（re.search().start()）===\")\n    print(re.search(regex,log).start())\n    print(\"\")\n\n    print(\"===返回匹配结束的位置（re.search().end()）===\")\n    print(re.search(regex,log).end())\n    print(\"\")\n\n    print(\"===返回匹配位置（re.search().span()）===\")\n    print(re.search(regex,log).span())\n    print(\"\")\n```\n\n## 匹配\n\n\n```python\nregex = '(Mon|Tue|Wed|Thu|Fri|Sat|Sun)'  # |是or\nre_all(regex)\n```\n\n    Thu Mar 14 19:27:38 1991::jvfcho@iwrptlqmyok.edu::668950058-6-11\n    \n    \n    ===返回匹配的字符串（re.search().group()）===\n    Thu\n    \n    ===列表返回匹配的所有子串(re.findall())===\n    ['Thu']\n    \n    ===返回匹配开始的位置（re.search().start()）===\n    0\n    \n    ===返回匹配结束的位置（re.search().end()）===\n    3\n    \n    ===返回匹配位置（re.search().span()）===\n    (0, 3)\n    \n\n\n\n```python\nregex = '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}).'  # ()是子組，會依次返回; {}是幾個; *是無數個\nre_all(regex)\n```\n\n    Thu Mar 14 19:27:38 1991::jvfcho@iwrptlqmyok.edu::668950058-6-11\n    \n    \n    ===返回匹配的字符串（re.search().group()）===\n    19:27:38 \n    \n    ===列表返回匹配的所有子串(re.findall())===\n    [('19', '27', '38')]\n    \n    ===返回匹配开始的位置（re.search().start()）===\n    11\n    \n    ===返回匹配结束的位置（re.search().end()）===\n    20\n    \n    ===返回匹配位置（re.search().span()）===\n    (11, 20)\n    \n\n\n\n```python\nregex = '([a-z]*)@([a-z]*).(com|edu|net|org|gov)'\nre_all(regex)\n```\n\n    Thu Mar 14 19:27:38 1991::jvfcho@iwrptlqmyok.edu::668950058-6-11\n    \n    \n    ===返回匹配的字符串（re.search().group()）===\n    jvfcho@iwrptlqmyok.edu\n    \n    ===列表返回匹配的所有子串(re.findall())===\n    [('jvfcho', 'iwrptlqmyok', 'edu')]\n    \n    ===返回匹配开始的位置（re.search().start()）===\n    26\n    \n    ===返回匹配结束的位置（re.search().end()）===\n    48\n    \n    ===返回匹配位置（re.search().span()）===\n    (26, 48)\n    \n\n\n> 参考：\n\n1. [陈乾博客](https://www.cnblogs.com/cq146637/p/8072540.html)\n2. [qiuri2008博客](https://www.cnblogs.com/jiangzhaowei/p/5738590.html)\n","slug":"2019-07-06_正則表達式","published":1,"updated":"2021-04-06T13:57:46.053Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5qd00099ohzcqp0cj4j","content":"<h2 id=\"re用法\"><a href=\"#re用法\" class=\"headerlink\" title=\"re用法\"></a>re用法</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">re_all</span>(<span class=\"params\">regex</span>):</span></span><br><span class=\"line\">    log = <span class=\"string\">&#x27;Thu Mar 14 19:27:38 1991::jvfcho@iwrptlqmyok.edu::668950058-6-11\\n&#x27;</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(log)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;===返回匹配的字符串（re.search().group()）===&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(re.search(regex,log).group())</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;===列表返回匹配的所有子串(re.findall())===&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(re.findall(regex,log))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;===返回匹配开始的位置（re.search().start()）===&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(re.search(regex,log).start())</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;===返回匹配结束的位置（re.search().end()）===&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(re.search(regex,log).end())</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;===返回匹配位置（re.search().span()）===&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(re.search(regex,log).span())</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"匹配\"><a href=\"#匹配\" class=\"headerlink\" title=\"匹配\"></a>匹配</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">regex = <span class=\"string\">&#x27;(Mon|Tue|Wed|Thu|Fri|Sat|Sun)&#x27;</span>  <span class=\"comment\"># |是or</span></span><br><span class=\"line\">re_all(regex)</span><br></pre></td></tr></table></figure>\n<pre><code>Thu Mar 14 19:27:38 1991::jvfcho@iwrptlqmyok.edu::668950058-6-11\n\n\n===返回匹配的字符串（re.search().group()）===\nThu\n\n===列表返回匹配的所有子串(re.findall())===\n[&#39;Thu&#39;]\n\n===返回匹配开始的位置（re.search().start()）===\n0\n\n===返回匹配结束的位置（re.search().end()）===\n3\n\n===返回匹配位置（re.search().span()）===\n(0, 3)\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">regex = <span class=\"string\">&#x27;([0-9]&#123;1,2&#125;):([0-9]&#123;1,2&#125;):([0-9]&#123;1,2&#125;).&#x27;</span>  <span class=\"comment\"># ()是子組，會依次返回; &#123;&#125;是幾個; *是無數個</span></span><br><span class=\"line\">re_all(regex)</span><br></pre></td></tr></table></figure>\n<pre><code>Thu Mar 14 19:27:38 1991::jvfcho@iwrptlqmyok.edu::668950058-6-11\n\n\n===返回匹配的字符串（re.search().group()）===\n19:27:38 \n\n===列表返回匹配的所有子串(re.findall())===\n[(&#39;19&#39;, &#39;27&#39;, &#39;38&#39;)]\n\n===返回匹配开始的位置（re.search().start()）===\n11\n\n===返回匹配结束的位置（re.search().end()）===\n20\n\n===返回匹配位置（re.search().span()）===\n(11, 20)\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">regex = <span class=\"string\">&#x27;([a-z]*)@([a-z]*).(com|edu|net|org|gov)&#x27;</span></span><br><span class=\"line\">re_all(regex)</span><br></pre></td></tr></table></figure>\n<pre><code>Thu Mar 14 19:27:38 1991::jvfcho@iwrptlqmyok.edu::668950058-6-11\n\n\n===返回匹配的字符串（re.search().group()）===\njvfcho@iwrptlqmyok.edu\n\n===列表返回匹配的所有子串(re.findall())===\n[(&#39;jvfcho&#39;, &#39;iwrptlqmyok&#39;, &#39;edu&#39;)]\n\n===返回匹配开始的位置（re.search().start()）===\n26\n\n===返回匹配结束的位置（re.search().end()）===\n48\n\n===返回匹配位置（re.search().span()）===\n(26, 48)\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/cq146637/p/8072540.html\" >陈乾博客<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/jiangzhaowei/p/5738590.html\" >qiuri2008博客<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"re用法\"><a href=\"#re用法\" class=\"headerlink\" title=\"re用法\"></a>re用法</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">re_all</span>(<span class=\"params\">regex</span>):</span></span><br><span class=\"line\">    log = <span class=\"string\">&#x27;Thu Mar 14 19:27:38 1991::jvfcho@iwrptlqmyok.edu::668950058-6-11\\n&#x27;</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(log)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;===返回匹配的字符串（re.search().group()）===&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(re.search(regex,log).group())</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;===列表返回匹配的所有子串(re.findall())===&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(re.findall(regex,log))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;===返回匹配开始的位置（re.search().start()）===&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(re.search(regex,log).start())</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;===返回匹配结束的位置（re.search().end()）===&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(re.search(regex,log).end())</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;===返回匹配位置（re.search().span()）===&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(re.search(regex,log).span())</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"匹配\"><a href=\"#匹配\" class=\"headerlink\" title=\"匹配\"></a>匹配</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">regex = <span class=\"string\">&#x27;(Mon|Tue|Wed|Thu|Fri|Sat|Sun)&#x27;</span>  <span class=\"comment\"># |是or</span></span><br><span class=\"line\">re_all(regex)</span><br></pre></td></tr></table></figure>\n<pre><code>Thu Mar 14 19:27:38 1991::jvfcho@iwrptlqmyok.edu::668950058-6-11\n\n\n===返回匹配的字符串（re.search().group()）===\nThu\n\n===列表返回匹配的所有子串(re.findall())===\n[&#39;Thu&#39;]\n\n===返回匹配开始的位置（re.search().start()）===\n0\n\n===返回匹配结束的位置（re.search().end()）===\n3\n\n===返回匹配位置（re.search().span()）===\n(0, 3)\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">regex = <span class=\"string\">&#x27;([0-9]&#123;1,2&#125;):([0-9]&#123;1,2&#125;):([0-9]&#123;1,2&#125;).&#x27;</span>  <span class=\"comment\"># ()是子組，會依次返回; &#123;&#125;是幾個; *是無數個</span></span><br><span class=\"line\">re_all(regex)</span><br></pre></td></tr></table></figure>\n<pre><code>Thu Mar 14 19:27:38 1991::jvfcho@iwrptlqmyok.edu::668950058-6-11\n\n\n===返回匹配的字符串（re.search().group()）===\n19:27:38 \n\n===列表返回匹配的所有子串(re.findall())===\n[(&#39;19&#39;, &#39;27&#39;, &#39;38&#39;)]\n\n===返回匹配开始的位置（re.search().start()）===\n11\n\n===返回匹配结束的位置（re.search().end()）===\n20\n\n===返回匹配位置（re.search().span()）===\n(11, 20)\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">regex = <span class=\"string\">&#x27;([a-z]*)@([a-z]*).(com|edu|net|org|gov)&#x27;</span></span><br><span class=\"line\">re_all(regex)</span><br></pre></td></tr></table></figure>\n<pre><code>Thu Mar 14 19:27:38 1991::jvfcho@iwrptlqmyok.edu::668950058-6-11\n\n\n===返回匹配的字符串（re.search().group()）===\njvfcho@iwrptlqmyok.edu\n\n===列表返回匹配的所有子串(re.findall())===\n[(&#39;jvfcho&#39;, &#39;iwrptlqmyok&#39;, &#39;edu&#39;)]\n\n===返回匹配开始的位置（re.search().start()）===\n26\n\n===返回匹配结束的位置（re.search().end()）===\n48\n\n===返回匹配位置（re.search().span()）===\n(26, 48)\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/cq146637/p/8072540.html\" >陈乾博客<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/jiangzhaowei/p/5738590.html\" >qiuri2008博客<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"线性回归","mathjax":true,"abbrlink":52662,"date":"2019-07-13T16:00:00.000Z","_content":"\n## 创建数据\n\n\n```python\ndef make_data(nDim):\n    x0 = np.linspace(1, np.pi, 50)\n    x = np.vstack([[x0,], [i**x0 for i in range(2, nDim+1)]])\n    y = np.sin(x0) + np.random.normal(0,0.15,len(x0))\n    \n    return x.transpose(), y\n```\n\n## 最小二乘法 Ordinary Least Squares (OLS)\n\n目标函数：\n$$argmin(\\sum_{}^{} {(\\hat{y}-y)^2})$$\n\n不足：OLS为了更好的拟合数据，会使用较大的w值，进而导致过度拟合。\n\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn import linear_model\n\ndims = [2, 6, 12, 24]\nplt.figure(figsize=(10, 10))\n\nfor idx, i in enumerate(dims):\n    \n    plt.subplot(2, 2, idx+1)\n    x, y = make_data(i)\n\n    reg = linear_model.LinearRegression()\n    reg.fit(x, y)\n\n#     reg.intercept_\n#     reg.coef_\n\n    plt.scatter(x[:, 0], y, marker = '*', color = 'r', label = 'samples')\n    plt.plot(x[:, 0], [reg.predict([x[i, :]]) for i in range(len(y))], linestyle = '--', label = 'model')\n    plt.legend(loc='upper right')\n    plt.title('Dimensions: %s' %i, fontsize=19)\n\nplt.savefig(\"../img/2019-07-14_线性回归_1.png\")\nplt.close()\n```\n\n![](/img/2019-07-14_线性回归_1.png)\n\n## 岭回归 Ridge Regression (Tikhonov Regularization)\n\n目标函数：\n$$argmin(\\sum_{}^{} {(\\hat{y}-y)^2}+\\alpha \\sum_{}^{} {w^2})$$\n\n优化：为惩罚OLS每个w逐渐增加导致过度拟合的问题，新增的项为L2惩罚项(L2 Penalty)。\n特点：w有可能特别小的绝对值，但很难达成0，造成贡献很小的系数还是要放，影响性能。\n\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn import linear_model\n\ndims = [2, 6, 12, 24]\nplt.figure(figsize=(10, 10))\n\nfor idx, i in enumerate(dims):\n    \n    plt.subplot(2, 2, idx+1)\n    x, y = make_data(i)\n\n    reg = linear_model.Ridge(alpha = 100)\n    reg.fit(x, y)\n\n#     reg.intercept_\n#     reg.coef_\n\n    plt.scatter(x[:, 0], y, marker = '*', color = 'r', label = 'samples')\n    plt.plot(x[:, 0], [reg.predict([x[i, :]]) for i in range(len(y))], linestyle = '--', label = 'model')\n    plt.legend(loc='upper right')\n    plt.title('Dimensions: %s' %i, fontsize=19)\n    \nplt.savefig(\"../img/2019-07-14_线性回归_2.png\")\nplt.close()\n```\n\n![](/img/2019-07-14_线性回归_2.png)\n\n## Lasso 回归\n\n目标函数：\n$$argmin(\\sum_{}^{} {(\\hat{y}-y)^2}+\\alpha \\sum_{}^{} {|w|})$$\n\n优化：为惩罚OLS每个w逐渐增加导致过度拟合的问题，新增的项为L1惩罚项(L1 Penalty)。\n特点：比L2惩罚项严厉很多，可以产生稀疏回归参数，即多数回归参数为零。\n\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn import linear_model\n\ndims = [2, 6, 12, 24]\nplt.figure(figsize=(10, 10))\n\nfor idx, i in enumerate(dims):\n    \n    plt.subplot(2, 2, idx+1)\n    x, y = make_data(i)\n\n    reg = linear_model.Lasso(alpha = 100)\n    reg.fit(x, y)\n\n#     reg.intercept_\n#     reg.coef_\n\n    plt.scatter(x[:, 0], y, marker = '*', color = 'r', label = 'samples')\n    plt.plot(x[:, 0], [reg.predict([x[i, :]]) for i in range(len(y))], linestyle = '--', label = 'model')\n    plt.legend(loc='upper right')\n    plt.title('Dimensions: %s' %i, fontsize=19)\n\nplt.savefig(\"../img/2019-07-14_线性回归_3.png\")\nplt.close()\n```\n\n![](/img/2019-07-14_线性回归_3.png)\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n","source":"_posts/2019-07-14_线性回归.md","raw":"---\ntitle: 线性回归\ncategories:\n  - 统计与机器学习\n  - 回归算法（Regression）\nmathjax: true\nabbrlink: 52662\ndate: 2019-07-14 00:00:00\n---\n\n## 创建数据\n\n\n```python\ndef make_data(nDim):\n    x0 = np.linspace(1, np.pi, 50)\n    x = np.vstack([[x0,], [i**x0 for i in range(2, nDim+1)]])\n    y = np.sin(x0) + np.random.normal(0,0.15,len(x0))\n    \n    return x.transpose(), y\n```\n\n## 最小二乘法 Ordinary Least Squares (OLS)\n\n目标函数：\n$$argmin(\\sum_{}^{} {(\\hat{y}-y)^2})$$\n\n不足：OLS为了更好的拟合数据，会使用较大的w值，进而导致过度拟合。\n\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn import linear_model\n\ndims = [2, 6, 12, 24]\nplt.figure(figsize=(10, 10))\n\nfor idx, i in enumerate(dims):\n    \n    plt.subplot(2, 2, idx+1)\n    x, y = make_data(i)\n\n    reg = linear_model.LinearRegression()\n    reg.fit(x, y)\n\n#     reg.intercept_\n#     reg.coef_\n\n    plt.scatter(x[:, 0], y, marker = '*', color = 'r', label = 'samples')\n    plt.plot(x[:, 0], [reg.predict([x[i, :]]) for i in range(len(y))], linestyle = '--', label = 'model')\n    plt.legend(loc='upper right')\n    plt.title('Dimensions: %s' %i, fontsize=19)\n\nplt.savefig(\"../img/2019-07-14_线性回归_1.png\")\nplt.close()\n```\n\n![](/img/2019-07-14_线性回归_1.png)\n\n## 岭回归 Ridge Regression (Tikhonov Regularization)\n\n目标函数：\n$$argmin(\\sum_{}^{} {(\\hat{y}-y)^2}+\\alpha \\sum_{}^{} {w^2})$$\n\n优化：为惩罚OLS每个w逐渐增加导致过度拟合的问题，新增的项为L2惩罚项(L2 Penalty)。\n特点：w有可能特别小的绝对值，但很难达成0，造成贡献很小的系数还是要放，影响性能。\n\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn import linear_model\n\ndims = [2, 6, 12, 24]\nplt.figure(figsize=(10, 10))\n\nfor idx, i in enumerate(dims):\n    \n    plt.subplot(2, 2, idx+1)\n    x, y = make_data(i)\n\n    reg = linear_model.Ridge(alpha = 100)\n    reg.fit(x, y)\n\n#     reg.intercept_\n#     reg.coef_\n\n    plt.scatter(x[:, 0], y, marker = '*', color = 'r', label = 'samples')\n    plt.plot(x[:, 0], [reg.predict([x[i, :]]) for i in range(len(y))], linestyle = '--', label = 'model')\n    plt.legend(loc='upper right')\n    plt.title('Dimensions: %s' %i, fontsize=19)\n    \nplt.savefig(\"../img/2019-07-14_线性回归_2.png\")\nplt.close()\n```\n\n![](/img/2019-07-14_线性回归_2.png)\n\n## Lasso 回归\n\n目标函数：\n$$argmin(\\sum_{}^{} {(\\hat{y}-y)^2}+\\alpha \\sum_{}^{} {|w|})$$\n\n优化：为惩罚OLS每个w逐渐增加导致过度拟合的问题，新增的项为L1惩罚项(L1 Penalty)。\n特点：比L2惩罚项严厉很多，可以产生稀疏回归参数，即多数回归参数为零。\n\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn import linear_model\n\ndims = [2, 6, 12, 24]\nplt.figure(figsize=(10, 10))\n\nfor idx, i in enumerate(dims):\n    \n    plt.subplot(2, 2, idx+1)\n    x, y = make_data(i)\n\n    reg = linear_model.Lasso(alpha = 100)\n    reg.fit(x, y)\n\n#     reg.intercept_\n#     reg.coef_\n\n    plt.scatter(x[:, 0], y, marker = '*', color = 'r', label = 'samples')\n    plt.plot(x[:, 0], [reg.predict([x[i, :]]) for i in range(len(y))], linestyle = '--', label = 'model')\n    plt.legend(loc='upper right')\n    plt.title('Dimensions: %s' %i, fontsize=19)\n\nplt.savefig(\"../img/2019-07-14_线性回归_3.png\")\nplt.close()\n```\n\n![](/img/2019-07-14_线性回归_3.png)\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n","slug":"2019-07-14_线性回归","published":1,"updated":"2021-04-06T13:56:18.568Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5qe000a9ohz84u9dgd2","content":"<h2 id=\"创建数据\"><a href=\"#创建数据\" class=\"headerlink\" title=\"创建数据\"></a>创建数据</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">make_data</span>(<span class=\"params\">nDim</span>):</span></span><br><span class=\"line\">    x0 = np.linspace(<span class=\"number\">1</span>, np.pi, <span class=\"number\">50</span>)</span><br><span class=\"line\">    x = np.vstack([[x0,], [i**x0 <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>, nDim+<span class=\"number\">1</span>)]])</span><br><span class=\"line\">    y = np.sin(x0) + np.random.normal(<span class=\"number\">0</span>,<span class=\"number\">0.15</span>,<span class=\"built_in\">len</span>(x0))</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> x.transpose(), y</span><br></pre></td></tr></table></figure>\n<h2 id=\"最小二乘法-Ordinary-Least-Squares-OLS\"><a href=\"#最小二乘法-Ordinary-Least-Squares-OLS\" class=\"headerlink\" title=\"最小二乘法 Ordinary Least Squares (OLS)\"></a>最小二乘法 Ordinary Least Squares (OLS)</h2><p>目标函数：</p>\n<script type=\"math/tex; mode=display\">argmin(\\sum_{}^{} {(\\hat{y}-y)^2})</script><p>不足：OLS为了更好的拟合数据，会使用较大的w值，进而导致过度拟合。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> linear_model</span><br><span class=\"line\"></span><br><span class=\"line\">dims = [<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">12</span>, <span class=\"number\">24</span>]</span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> idx, i <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(dims):</span><br><span class=\"line\">    </span><br><span class=\"line\">    plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">2</span>, idx+<span class=\"number\">1</span>)</span><br><span class=\"line\">    x, y = make_data(i)</span><br><span class=\"line\"></span><br><span class=\"line\">    reg = linear_model.LinearRegression()</span><br><span class=\"line\">    reg.fit(x, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#     reg.intercept_</span></span><br><span class=\"line\"><span class=\"comment\">#     reg.coef_</span></span><br><span class=\"line\"></span><br><span class=\"line\">    plt.scatter(x[:, <span class=\"number\">0</span>], y, marker = <span class=\"string\">&#x27;*&#x27;</span>, color = <span class=\"string\">&#x27;r&#x27;</span>, label = <span class=\"string\">&#x27;samples&#x27;</span>)</span><br><span class=\"line\">    plt.plot(x[:, <span class=\"number\">0</span>], [reg.predict([x[i, :]]) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(y))], linestyle = <span class=\"string\">&#x27;--&#x27;</span>, label = <span class=\"string\">&#x27;model&#x27;</span>)</span><br><span class=\"line\">    plt.legend(loc=<span class=\"string\">&#x27;upper right&#x27;</span>)</span><br><span class=\"line\">    plt.title(<span class=\"string\">&#x27;Dimensions: %s&#x27;</span> %i, fontsize=<span class=\"number\">19</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-07-14_线性回归_1.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-14_线性回归_1.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"岭回归-Ridge-Regression-Tikhonov-Regularization\"><a href=\"#岭回归-Ridge-Regression-Tikhonov-Regularization\" class=\"headerlink\" title=\"岭回归 Ridge Regression (Tikhonov Regularization)\"></a>岭回归 Ridge Regression (Tikhonov Regularization)</h2><p>目标函数：</p>\n<script type=\"math/tex; mode=display\">argmin(\\sum_{}^{} {(\\hat{y}-y)^2}+\\alpha \\sum_{}^{} {w^2})</script><p>优化：为惩罚OLS每个w逐渐增加导致过度拟合的问题，新增的项为L2惩罚项(L2 Penalty)。<br>特点：w有可能特别小的绝对值，但很难达成0，造成贡献很小的系数还是要放，影响性能。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> linear_model</span><br><span class=\"line\"></span><br><span class=\"line\">dims = [<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">12</span>, <span class=\"number\">24</span>]</span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> idx, i <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(dims):</span><br><span class=\"line\">    </span><br><span class=\"line\">    plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">2</span>, idx+<span class=\"number\">1</span>)</span><br><span class=\"line\">    x, y = make_data(i)</span><br><span class=\"line\"></span><br><span class=\"line\">    reg = linear_model.Ridge(alpha = <span class=\"number\">100</span>)</span><br><span class=\"line\">    reg.fit(x, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#     reg.intercept_</span></span><br><span class=\"line\"><span class=\"comment\">#     reg.coef_</span></span><br><span class=\"line\"></span><br><span class=\"line\">    plt.scatter(x[:, <span class=\"number\">0</span>], y, marker = <span class=\"string\">&#x27;*&#x27;</span>, color = <span class=\"string\">&#x27;r&#x27;</span>, label = <span class=\"string\">&#x27;samples&#x27;</span>)</span><br><span class=\"line\">    plt.plot(x[:, <span class=\"number\">0</span>], [reg.predict([x[i, :]]) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(y))], linestyle = <span class=\"string\">&#x27;--&#x27;</span>, label = <span class=\"string\">&#x27;model&#x27;</span>)</span><br><span class=\"line\">    plt.legend(loc=<span class=\"string\">&#x27;upper right&#x27;</span>)</span><br><span class=\"line\">    plt.title(<span class=\"string\">&#x27;Dimensions: %s&#x27;</span> %i, fontsize=<span class=\"number\">19</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-07-14_线性回归_2.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-14_线性回归_2.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"Lasso-回归\"><a href=\"#Lasso-回归\" class=\"headerlink\" title=\"Lasso 回归\"></a>Lasso 回归</h2><p>目标函数：</p>\n<script type=\"math/tex; mode=display\">argmin(\\sum_{}^{} {(\\hat{y}-y)^2}+\\alpha \\sum_{}^{} {|w|})</script><p>优化：为惩罚OLS每个w逐渐增加导致过度拟合的问题，新增的项为L1惩罚项(L1 Penalty)。<br>特点：比L2惩罚项严厉很多，可以产生稀疏回归参数，即多数回归参数为零。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> linear_model</span><br><span class=\"line\"></span><br><span class=\"line\">dims = [<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">12</span>, <span class=\"number\">24</span>]</span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> idx, i <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(dims):</span><br><span class=\"line\">    </span><br><span class=\"line\">    plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">2</span>, idx+<span class=\"number\">1</span>)</span><br><span class=\"line\">    x, y = make_data(i)</span><br><span class=\"line\"></span><br><span class=\"line\">    reg = linear_model.Lasso(alpha = <span class=\"number\">100</span>)</span><br><span class=\"line\">    reg.fit(x, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#     reg.intercept_</span></span><br><span class=\"line\"><span class=\"comment\">#     reg.coef_</span></span><br><span class=\"line\"></span><br><span class=\"line\">    plt.scatter(x[:, <span class=\"number\">0</span>], y, marker = <span class=\"string\">&#x27;*&#x27;</span>, color = <span class=\"string\">&#x27;r&#x27;</span>, label = <span class=\"string\">&#x27;samples&#x27;</span>)</span><br><span class=\"line\">    plt.plot(x[:, <span class=\"number\">0</span>], [reg.predict([x[i, :]]) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(y))], linestyle = <span class=\"string\">&#x27;--&#x27;</span>, label = <span class=\"string\">&#x27;model&#x27;</span>)</span><br><span class=\"line\">    plt.legend(loc=<span class=\"string\">&#x27;upper right&#x27;</span>)</span><br><span class=\"line\">    plt.title(<span class=\"string\">&#x27;Dimensions: %s&#x27;</span> %i, fontsize=<span class=\"number\">19</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-07-14_线性回归_3.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-14_线性回归_3.png\"\n                      alt=\"\"\n                ></p>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"创建数据\"><a href=\"#创建数据\" class=\"headerlink\" title=\"创建数据\"></a>创建数据</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">make_data</span>(<span class=\"params\">nDim</span>):</span></span><br><span class=\"line\">    x0 = np.linspace(<span class=\"number\">1</span>, np.pi, <span class=\"number\">50</span>)</span><br><span class=\"line\">    x = np.vstack([[x0,], [i**x0 <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>, nDim+<span class=\"number\">1</span>)]])</span><br><span class=\"line\">    y = np.sin(x0) + np.random.normal(<span class=\"number\">0</span>,<span class=\"number\">0.15</span>,<span class=\"built_in\">len</span>(x0))</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> x.transpose(), y</span><br></pre></td></tr></table></figure>\n<h2 id=\"最小二乘法-Ordinary-Least-Squares-OLS\"><a href=\"#最小二乘法-Ordinary-Least-Squares-OLS\" class=\"headerlink\" title=\"最小二乘法 Ordinary Least Squares (OLS)\"></a>最小二乘法 Ordinary Least Squares (OLS)</h2><p>目标函数：</p>\n<script type=\"math/tex; mode=display\">argmin(\\sum_{}^{} {(\\hat{y}-y)^2})</script><p>不足：OLS为了更好的拟合数据，会使用较大的w值，进而导致过度拟合。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> linear_model</span><br><span class=\"line\"></span><br><span class=\"line\">dims = [<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">12</span>, <span class=\"number\">24</span>]</span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> idx, i <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(dims):</span><br><span class=\"line\">    </span><br><span class=\"line\">    plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">2</span>, idx+<span class=\"number\">1</span>)</span><br><span class=\"line\">    x, y = make_data(i)</span><br><span class=\"line\"></span><br><span class=\"line\">    reg = linear_model.LinearRegression()</span><br><span class=\"line\">    reg.fit(x, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#     reg.intercept_</span></span><br><span class=\"line\"><span class=\"comment\">#     reg.coef_</span></span><br><span class=\"line\"></span><br><span class=\"line\">    plt.scatter(x[:, <span class=\"number\">0</span>], y, marker = <span class=\"string\">&#x27;*&#x27;</span>, color = <span class=\"string\">&#x27;r&#x27;</span>, label = <span class=\"string\">&#x27;samples&#x27;</span>)</span><br><span class=\"line\">    plt.plot(x[:, <span class=\"number\">0</span>], [reg.predict([x[i, :]]) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(y))], linestyle = <span class=\"string\">&#x27;--&#x27;</span>, label = <span class=\"string\">&#x27;model&#x27;</span>)</span><br><span class=\"line\">    plt.legend(loc=<span class=\"string\">&#x27;upper right&#x27;</span>)</span><br><span class=\"line\">    plt.title(<span class=\"string\">&#x27;Dimensions: %s&#x27;</span> %i, fontsize=<span class=\"number\">19</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-07-14_线性回归_1.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-14_线性回归_1.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"岭回归-Ridge-Regression-Tikhonov-Regularization\"><a href=\"#岭回归-Ridge-Regression-Tikhonov-Regularization\" class=\"headerlink\" title=\"岭回归 Ridge Regression (Tikhonov Regularization)\"></a>岭回归 Ridge Regression (Tikhonov Regularization)</h2><p>目标函数：</p>\n<script type=\"math/tex; mode=display\">argmin(\\sum_{}^{} {(\\hat{y}-y)^2}+\\alpha \\sum_{}^{} {w^2})</script><p>优化：为惩罚OLS每个w逐渐增加导致过度拟合的问题，新增的项为L2惩罚项(L2 Penalty)。<br>特点：w有可能特别小的绝对值，但很难达成0，造成贡献很小的系数还是要放，影响性能。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> linear_model</span><br><span class=\"line\"></span><br><span class=\"line\">dims = [<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">12</span>, <span class=\"number\">24</span>]</span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> idx, i <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(dims):</span><br><span class=\"line\">    </span><br><span class=\"line\">    plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">2</span>, idx+<span class=\"number\">1</span>)</span><br><span class=\"line\">    x, y = make_data(i)</span><br><span class=\"line\"></span><br><span class=\"line\">    reg = linear_model.Ridge(alpha = <span class=\"number\">100</span>)</span><br><span class=\"line\">    reg.fit(x, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#     reg.intercept_</span></span><br><span class=\"line\"><span class=\"comment\">#     reg.coef_</span></span><br><span class=\"line\"></span><br><span class=\"line\">    plt.scatter(x[:, <span class=\"number\">0</span>], y, marker = <span class=\"string\">&#x27;*&#x27;</span>, color = <span class=\"string\">&#x27;r&#x27;</span>, label = <span class=\"string\">&#x27;samples&#x27;</span>)</span><br><span class=\"line\">    plt.plot(x[:, <span class=\"number\">0</span>], [reg.predict([x[i, :]]) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(y))], linestyle = <span class=\"string\">&#x27;--&#x27;</span>, label = <span class=\"string\">&#x27;model&#x27;</span>)</span><br><span class=\"line\">    plt.legend(loc=<span class=\"string\">&#x27;upper right&#x27;</span>)</span><br><span class=\"line\">    plt.title(<span class=\"string\">&#x27;Dimensions: %s&#x27;</span> %i, fontsize=<span class=\"number\">19</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-07-14_线性回归_2.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-14_线性回归_2.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"Lasso-回归\"><a href=\"#Lasso-回归\" class=\"headerlink\" title=\"Lasso 回归\"></a>Lasso 回归</h2><p>目标函数：</p>\n<script type=\"math/tex; mode=display\">argmin(\\sum_{}^{} {(\\hat{y}-y)^2}+\\alpha \\sum_{}^{} {|w|})</script><p>优化：为惩罚OLS每个w逐渐增加导致过度拟合的问题，新增的项为L1惩罚项(L1 Penalty)。<br>特点：比L2惩罚项严厉很多，可以产生稀疏回归参数，即多数回归参数为零。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> linear_model</span><br><span class=\"line\"></span><br><span class=\"line\">dims = [<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">12</span>, <span class=\"number\">24</span>]</span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">10</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> idx, i <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(dims):</span><br><span class=\"line\">    </span><br><span class=\"line\">    plt.subplot(<span class=\"number\">2</span>, <span class=\"number\">2</span>, idx+<span class=\"number\">1</span>)</span><br><span class=\"line\">    x, y = make_data(i)</span><br><span class=\"line\"></span><br><span class=\"line\">    reg = linear_model.Lasso(alpha = <span class=\"number\">100</span>)</span><br><span class=\"line\">    reg.fit(x, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#     reg.intercept_</span></span><br><span class=\"line\"><span class=\"comment\">#     reg.coef_</span></span><br><span class=\"line\"></span><br><span class=\"line\">    plt.scatter(x[:, <span class=\"number\">0</span>], y, marker = <span class=\"string\">&#x27;*&#x27;</span>, color = <span class=\"string\">&#x27;r&#x27;</span>, label = <span class=\"string\">&#x27;samples&#x27;</span>)</span><br><span class=\"line\">    plt.plot(x[:, <span class=\"number\">0</span>], [reg.predict([x[i, :]]) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(y))], linestyle = <span class=\"string\">&#x27;--&#x27;</span>, label = <span class=\"string\">&#x27;model&#x27;</span>)</span><br><span class=\"line\">    plt.legend(loc=<span class=\"string\">&#x27;upper right&#x27;</span>)</span><br><span class=\"line\">    plt.title(<span class=\"string\">&#x27;Dimensions: %s&#x27;</span> %i, fontsize=<span class=\"number\">19</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-07-14_线性回归_3.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-14_线性回归_3.png\"\n                      alt=\"\"\n                ></p>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"Scipy","abbrlink":61322,"date":"2019-07-13T16:00:00.000Z","_content":"\n## 数据物理常数\n\n\n```python\nfrom scipy import constants\n    \n# 圆周率\nprint(C.pi)\n\n# 引力常数\nprint(C.g)\n```\n\n    3.141592653589793\n    9.80665\n\n\n## 积分\n\n\n```python\nfrom scipy import integrate\n\n# 定积分\nY = lambda x: x**2+3\nprint(integrate.quad(Y, -2, 4)) # (-2, 4)是上下限  # 返回值第二个是误差预估\n\n# 数值采样积分\nY = lambda x: x**2+3\nx = np.linspace(-2, 4, 10)\ny = Y(x)\nprint(integrate.trapz(y, x))\n```\n\n    (42.0, 4.662936703425657e-13)\n    42.44444444444444\n\n\n## 优化\n\n\n```python\nfrom scipy import optimize\nY = lambda x: x[0]**3 + x[1]**3 + np.cos(x[2]+1)\nx0 = np.zeros(4)\nres = optimize.minimize(Y, x0)\n\nprint(res.x) #x\nprint(Y(res.x)) #y\n```\n\n    [0.         0.         2.14159739 0.        ]\n    -0.9999999999887697\n\n\n## 拟合\n\n\n```python\nfrom scipy import optimize\ndef func(x, a, b, c):\n    return a * np.exp(-b * x) + c\n\nx = np.linspace(0, 4, 50)\ny = func(x, 1, 2, 3)\n\npopt, pcov = optimize.curve_fit(func, x, y)\npopt\n```\n\n\n\n\n    array([1., 2., 3.])\n\n\n\n## 方程式求解\n\n\n```python\nfrom scipy import optimize\ndef func(x):\n    return [x[0]+x[1],x[0]+10]\n\nsol = optimize.root(func, [0, 0])\nsol.x\n```\n\n\n\n\n    array([-10.,  10.])\n\n\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n","source":"_posts/2019-07-14_Scipy.md","raw":"---\ntitle: Scipy\ncategories:\n  - Python\nabbrlink: 61322\ndate: 2019-07-14 00:00:00\n---\n\n## 数据物理常数\n\n\n```python\nfrom scipy import constants\n    \n# 圆周率\nprint(C.pi)\n\n# 引力常数\nprint(C.g)\n```\n\n    3.141592653589793\n    9.80665\n\n\n## 积分\n\n\n```python\nfrom scipy import integrate\n\n# 定积分\nY = lambda x: x**2+3\nprint(integrate.quad(Y, -2, 4)) # (-2, 4)是上下限  # 返回值第二个是误差预估\n\n# 数值采样积分\nY = lambda x: x**2+3\nx = np.linspace(-2, 4, 10)\ny = Y(x)\nprint(integrate.trapz(y, x))\n```\n\n    (42.0, 4.662936703425657e-13)\n    42.44444444444444\n\n\n## 优化\n\n\n```python\nfrom scipy import optimize\nY = lambda x: x[0]**3 + x[1]**3 + np.cos(x[2]+1)\nx0 = np.zeros(4)\nres = optimize.minimize(Y, x0)\n\nprint(res.x) #x\nprint(Y(res.x)) #y\n```\n\n    [0.         0.         2.14159739 0.        ]\n    -0.9999999999887697\n\n\n## 拟合\n\n\n```python\nfrom scipy import optimize\ndef func(x, a, b, c):\n    return a * np.exp(-b * x) + c\n\nx = np.linspace(0, 4, 50)\ny = func(x, 1, 2, 3)\n\npopt, pcov = optimize.curve_fit(func, x, y)\npopt\n```\n\n\n\n\n    array([1., 2., 3.])\n\n\n\n## 方程式求解\n\n\n```python\nfrom scipy import optimize\ndef func(x):\n    return [x[0]+x[1],x[0]+10]\n\nsol = optimize.root(func, [0, 0])\nsol.x\n```\n\n\n\n\n    array([-10.,  10.])\n\n\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n","slug":"2019-07-14_Scipy","published":1,"updated":"2021-04-06T13:57:48.083Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5qg000d9ohzh5vm4fgj","content":"<h2 id=\"数据物理常数\"><a href=\"#数据物理常数\" class=\"headerlink\" title=\"数据物理常数\"></a>数据物理常数</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scipy <span class=\"keyword\">import</span> constants</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># 圆周率</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(C.pi)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 引力常数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(C.g)</span><br></pre></td></tr></table></figure>\n<pre><code>3.141592653589793\n9.80665\n</code></pre><h2 id=\"积分\"><a href=\"#积分\" class=\"headerlink\" title=\"积分\"></a>积分</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scipy <span class=\"keyword\">import</span> integrate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定积分</span></span><br><span class=\"line\">Y = <span class=\"keyword\">lambda</span> x: x**<span class=\"number\">2</span>+<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(integrate.quad(Y, -<span class=\"number\">2</span>, <span class=\"number\">4</span>)) <span class=\"comment\"># (-2, 4)是上下限  # 返回值第二个是误差预估</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 数值采样积分</span></span><br><span class=\"line\">Y = <span class=\"keyword\">lambda</span> x: x**<span class=\"number\">2</span>+<span class=\"number\">3</span></span><br><span class=\"line\">x = np.linspace(-<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">y = Y(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(integrate.trapz(y, x))</span><br></pre></td></tr></table></figure>\n<pre><code>(42.0, 4.662936703425657e-13)\n42.44444444444444\n</code></pre><h2 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scipy <span class=\"keyword\">import</span> optimize</span><br><span class=\"line\">Y = <span class=\"keyword\">lambda</span> x: x[<span class=\"number\">0</span>]**<span class=\"number\">3</span> + x[<span class=\"number\">1</span>]**<span class=\"number\">3</span> + np.cos(x[<span class=\"number\">2</span>]+<span class=\"number\">1</span>)</span><br><span class=\"line\">x0 = np.zeros(<span class=\"number\">4</span>)</span><br><span class=\"line\">res = optimize.minimize(Y, x0)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(res.x) <span class=\"comment\">#x</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(Y(res.x)) <span class=\"comment\">#y</span></span><br></pre></td></tr></table></figure>\n<pre><code>[0.         0.         2.14159739 0.        ]\n-0.9999999999887697\n</code></pre><h2 id=\"拟合\"><a href=\"#拟合\" class=\"headerlink\" title=\"拟合\"></a>拟合</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scipy <span class=\"keyword\">import</span> optimize</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func</span>(<span class=\"params\">x, a, b, c</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> a * np.exp(-b * x) + c</span><br><span class=\"line\"></span><br><span class=\"line\">x = np.linspace(<span class=\"number\">0</span>, <span class=\"number\">4</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">y = func(x, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">popt, pcov = optimize.curve_fit(func, x, y)</span><br><span class=\"line\">popt</span><br></pre></td></tr></table></figure>\n<pre><code>array([1., 2., 3.])\n</code></pre><h2 id=\"方程式求解\"><a href=\"#方程式求解\" class=\"headerlink\" title=\"方程式求解\"></a>方程式求解</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scipy <span class=\"keyword\">import</span> optimize</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func</span>(<span class=\"params\">x</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [x[<span class=\"number\">0</span>]+x[<span class=\"number\">1</span>],x[<span class=\"number\">0</span>]+<span class=\"number\">10</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">sol = optimize.root(func, [<span class=\"number\">0</span>, <span class=\"number\">0</span>])</span><br><span class=\"line\">sol.x</span><br></pre></td></tr></table></figure>\n<pre><code>array([-10.,  10.])\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"数据物理常数\"><a href=\"#数据物理常数\" class=\"headerlink\" title=\"数据物理常数\"></a>数据物理常数</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scipy <span class=\"keyword\">import</span> constants</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># 圆周率</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(C.pi)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 引力常数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(C.g)</span><br></pre></td></tr></table></figure>\n<pre><code>3.141592653589793\n9.80665\n</code></pre><h2 id=\"积分\"><a href=\"#积分\" class=\"headerlink\" title=\"积分\"></a>积分</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scipy <span class=\"keyword\">import</span> integrate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定积分</span></span><br><span class=\"line\">Y = <span class=\"keyword\">lambda</span> x: x**<span class=\"number\">2</span>+<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(integrate.quad(Y, -<span class=\"number\">2</span>, <span class=\"number\">4</span>)) <span class=\"comment\"># (-2, 4)是上下限  # 返回值第二个是误差预估</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 数值采样积分</span></span><br><span class=\"line\">Y = <span class=\"keyword\">lambda</span> x: x**<span class=\"number\">2</span>+<span class=\"number\">3</span></span><br><span class=\"line\">x = np.linspace(-<span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">10</span>)</span><br><span class=\"line\">y = Y(x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(integrate.trapz(y, x))</span><br></pre></td></tr></table></figure>\n<pre><code>(42.0, 4.662936703425657e-13)\n42.44444444444444\n</code></pre><h2 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scipy <span class=\"keyword\">import</span> optimize</span><br><span class=\"line\">Y = <span class=\"keyword\">lambda</span> x: x[<span class=\"number\">0</span>]**<span class=\"number\">3</span> + x[<span class=\"number\">1</span>]**<span class=\"number\">3</span> + np.cos(x[<span class=\"number\">2</span>]+<span class=\"number\">1</span>)</span><br><span class=\"line\">x0 = np.zeros(<span class=\"number\">4</span>)</span><br><span class=\"line\">res = optimize.minimize(Y, x0)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(res.x) <span class=\"comment\">#x</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(Y(res.x)) <span class=\"comment\">#y</span></span><br></pre></td></tr></table></figure>\n<pre><code>[0.         0.         2.14159739 0.        ]\n-0.9999999999887697\n</code></pre><h2 id=\"拟合\"><a href=\"#拟合\" class=\"headerlink\" title=\"拟合\"></a>拟合</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scipy <span class=\"keyword\">import</span> optimize</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func</span>(<span class=\"params\">x, a, b, c</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> a * np.exp(-b * x) + c</span><br><span class=\"line\"></span><br><span class=\"line\">x = np.linspace(<span class=\"number\">0</span>, <span class=\"number\">4</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">y = func(x, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">popt, pcov = optimize.curve_fit(func, x, y)</span><br><span class=\"line\">popt</span><br></pre></td></tr></table></figure>\n<pre><code>array([1., 2., 3.])\n</code></pre><h2 id=\"方程式求解\"><a href=\"#方程式求解\" class=\"headerlink\" title=\"方程式求解\"></a>方程式求解</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scipy <span class=\"keyword\">import</span> optimize</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func</span>(<span class=\"params\">x</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [x[<span class=\"number\">0</span>]+x[<span class=\"number\">1</span>],x[<span class=\"number\">0</span>]+<span class=\"number\">10</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">sol = optimize.root(func, [<span class=\"number\">0</span>, <span class=\"number\">0</span>])</span><br><span class=\"line\">sol.x</span><br></pre></td></tr></table></figure>\n<pre><code>array([-10.,  10.])\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"梯度下降","abbrlink":45545,"date":"2019-07-19T16:00:00.000Z","_content":"\n## 步骤\n\n1. 任取一点作为起始点\n2. 查看在当前节点向哪个方向移动能得到最小的z值，并向该方向移动\n3. 重复步骤直到找不到更小的z值\n\n## SGD的出现\n\n计算普通梯度下降时，每次都必须遍历所有样本，计算资源过大。SGD是每次采用单一或小批量样本的方差和作为损失值。\n\n- 迭代次数虽变多，但每次迭代速度快，整体还是比较有效率达到最适点\n- 由于数据存在噪声，不代表每次迭代都是正确的，但整体还是往最适点方向前进\n- 由于是随机选取样本，有可能跨过local minimum，去到global minimum\n\n## SGDRegressor\n\n\n```python\nfrom sklearn.linear_model import SGDRegressor\n\nx = [[0,0],[2,1],[5,4]]\ny = [0,2,2]\n\nreg = SGDRegressor(penalty = \"l2\", max_iter = 10000)\n# penalty: none, l1(Lasso,绝对值), l2(Ridge,平方), elasticent\n# max_iter防止连续抖动\nreg.fit(x,y)\n\nprint(reg.predict([[4,3]]))\nprint(reg.coef_)\nprint(reg.intercept_)\n```\n\n    [1.97845294]\n    [ 1.56550035 -1.47798393]\n    [0.15040332]\n\n\n## SGDClassifier\n\n\n```python\nclf = SGDRegressor(penalty = \"l2\", max_iter = 10000)\nclf.fit(x,y)\n\nprint(clf.predict([[4,3]]))\n```\n\n    [1.97839971]\n\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n","source":"_posts/2019-07-20_梯度下降.md","raw":"---\ntitle: 梯度下降\ncategories:\n  - 统计与机器学习\n  - 其他\nabbrlink: 45545\ndate: 2019-07-20 00:00:00\n---\n\n## 步骤\n\n1. 任取一点作为起始点\n2. 查看在当前节点向哪个方向移动能得到最小的z值，并向该方向移动\n3. 重复步骤直到找不到更小的z值\n\n## SGD的出现\n\n计算普通梯度下降时，每次都必须遍历所有样本，计算资源过大。SGD是每次采用单一或小批量样本的方差和作为损失值。\n\n- 迭代次数虽变多，但每次迭代速度快，整体还是比较有效率达到最适点\n- 由于数据存在噪声，不代表每次迭代都是正确的，但整体还是往最适点方向前进\n- 由于是随机选取样本，有可能跨过local minimum，去到global minimum\n\n## SGDRegressor\n\n\n```python\nfrom sklearn.linear_model import SGDRegressor\n\nx = [[0,0],[2,1],[5,4]]\ny = [0,2,2]\n\nreg = SGDRegressor(penalty = \"l2\", max_iter = 10000)\n# penalty: none, l1(Lasso,绝对值), l2(Ridge,平方), elasticent\n# max_iter防止连续抖动\nreg.fit(x,y)\n\nprint(reg.predict([[4,3]]))\nprint(reg.coef_)\nprint(reg.intercept_)\n```\n\n    [1.97845294]\n    [ 1.56550035 -1.47798393]\n    [0.15040332]\n\n\n## SGDClassifier\n\n\n```python\nclf = SGDRegressor(penalty = \"l2\", max_iter = 10000)\nclf.fit(x,y)\n\nprint(clf.predict([[4,3]]))\n```\n\n    [1.97839971]\n\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n","slug":"2019-07-20_梯度下降","published":1,"updated":"2021-04-06T13:55:57.421Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5qh000e9ohz0r936c2j","content":"<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><ol>\n<li>任取一点作为起始点</li>\n<li>查看在当前节点向哪个方向移动能得到最小的z值，并向该方向移动</li>\n<li>重复步骤直到找不到更小的z值</li>\n</ol>\n<h2 id=\"SGD的出现\"><a href=\"#SGD的出现\" class=\"headerlink\" title=\"SGD的出现\"></a>SGD的出现</h2><p>计算普通梯度下降时，每次都必须遍历所有样本，计算资源过大。SGD是每次采用单一或小批量样本的方差和作为损失值。</p>\n<ul>\n<li>迭代次数虽变多，但每次迭代速度快，整体还是比较有效率达到最适点</li>\n<li>由于数据存在噪声，不代表每次迭代都是正确的，但整体还是往最适点方向前进</li>\n<li>由于是随机选取样本，有可能跨过local minimum，去到global minimum</li>\n</ul>\n<h2 id=\"SGDRegressor\"><a href=\"#SGDRegressor\" class=\"headerlink\" title=\"SGDRegressor\"></a>SGDRegressor</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> SGDRegressor</span><br><span class=\"line\"></span><br><span class=\"line\">x = [[<span class=\"number\">0</span>,<span class=\"number\">0</span>],[<span class=\"number\">2</span>,<span class=\"number\">1</span>],[<span class=\"number\">5</span>,<span class=\"number\">4</span>]]</span><br><span class=\"line\">y = [<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">reg = SGDRegressor(penalty = <span class=\"string\">&quot;l2&quot;</span>, max_iter = <span class=\"number\">10000</span>)</span><br><span class=\"line\"><span class=\"comment\"># penalty: none, l1(Lasso,绝对值), l2(Ridge,平方), elasticent</span></span><br><span class=\"line\"><span class=\"comment\"># max_iter防止连续抖动</span></span><br><span class=\"line\">reg.fit(x,y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(reg.predict([[<span class=\"number\">4</span>,<span class=\"number\">3</span>]]))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(reg.coef_)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(reg.intercept_)</span><br></pre></td></tr></table></figure>\n<pre><code>[1.97845294]\n[ 1.56550035 -1.47798393]\n[0.15040332]\n</code></pre><h2 id=\"SGDClassifier\"><a href=\"#SGDClassifier\" class=\"headerlink\" title=\"SGDClassifier\"></a>SGDClassifier</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clf = SGDRegressor(penalty = <span class=\"string\">&quot;l2&quot;</span>, max_iter = <span class=\"number\">10000</span>)</span><br><span class=\"line\">clf.fit(x,y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(clf.predict([[<span class=\"number\">4</span>,<span class=\"number\">3</span>]]))</span><br></pre></td></tr></table></figure>\n<pre><code>[1.97839971]\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><ol>\n<li>任取一点作为起始点</li>\n<li>查看在当前节点向哪个方向移动能得到最小的z值，并向该方向移动</li>\n<li>重复步骤直到找不到更小的z值</li>\n</ol>\n<h2 id=\"SGD的出现\"><a href=\"#SGD的出现\" class=\"headerlink\" title=\"SGD的出现\"></a>SGD的出现</h2><p>计算普通梯度下降时，每次都必须遍历所有样本，计算资源过大。SGD是每次采用单一或小批量样本的方差和作为损失值。</p>\n<ul>\n<li>迭代次数虽变多，但每次迭代速度快，整体还是比较有效率达到最适点</li>\n<li>由于数据存在噪声，不代表每次迭代都是正确的，但整体还是往最适点方向前进</li>\n<li>由于是随机选取样本，有可能跨过local minimum，去到global minimum</li>\n</ul>\n<h2 id=\"SGDRegressor\"><a href=\"#SGDRegressor\" class=\"headerlink\" title=\"SGDRegressor\"></a>SGDRegressor</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> SGDRegressor</span><br><span class=\"line\"></span><br><span class=\"line\">x = [[<span class=\"number\">0</span>,<span class=\"number\">0</span>],[<span class=\"number\">2</span>,<span class=\"number\">1</span>],[<span class=\"number\">5</span>,<span class=\"number\">4</span>]]</span><br><span class=\"line\">y = [<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">reg = SGDRegressor(penalty = <span class=\"string\">&quot;l2&quot;</span>, max_iter = <span class=\"number\">10000</span>)</span><br><span class=\"line\"><span class=\"comment\"># penalty: none, l1(Lasso,绝对值), l2(Ridge,平方), elasticent</span></span><br><span class=\"line\"><span class=\"comment\"># max_iter防止连续抖动</span></span><br><span class=\"line\">reg.fit(x,y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(reg.predict([[<span class=\"number\">4</span>,<span class=\"number\">3</span>]]))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(reg.coef_)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(reg.intercept_)</span><br></pre></td></tr></table></figure>\n<pre><code>[1.97845294]\n[ 1.56550035 -1.47798393]\n[0.15040332]\n</code></pre><h2 id=\"SGDClassifier\"><a href=\"#SGDClassifier\" class=\"headerlink\" title=\"SGDClassifier\"></a>SGDClassifier</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clf = SGDRegressor(penalty = <span class=\"string\">&quot;l2&quot;</span>, max_iter = <span class=\"number\">10000</span>)</span><br><span class=\"line\">clf.fit(x,y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(clf.predict([[<span class=\"number\">4</span>,<span class=\"number\">3</span>]]))</span><br></pre></td></tr></table></figure>\n<pre><code>[1.97839971]\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"朴素贝叶斯","mathjax":true,"abbrlink":58685,"date":"2019-07-22T16:00:00.000Z","_content":"\n## 特性\n\n- 基于概率，优点是可以对预测标签给出理论上完美的可能性估计\n- 要求数据多维特征之间相互独立，因此在计算n维特征的联合分布时，才能简化成各自先验机率相乘\n\n## 原理\n\n朴素贝叶斯是应用贝叶斯定理进行有监督学习的一种分类模型。在模型中，将贝叶斯定理公式 $$P(A|B) = \\frac{P(A)*P(B|A)}{P(B)}$$ 中的事件A看成被分类标签，事件B看成数据特征。伪代码如下：\n\n> for label in 所有标签:\n>\n>    用贝叶斯公式计算在给定特征情况下出现该label的后验机率\n>\n>预测标签 <= 获得最高后验机率的 label\n\n由于实际上计算了所有标签的后验机率，所以贝叶斯分类不仅可以提供该组特征最可能的标签，还能给出其他的标签排序。\n\n## 高斯朴素贝叶斯\n\n- 假定所有特征都呈高斯分布\n\n\n```python\nfrom sklearn import datasets\niris = datasets.load_iris()\n\nfrom sklearn.naive_bayes import GaussianNB\ngnb = GaussianNB()\ngnb.fit(iris.data, iris.target)\n\nprint(\"数据集大小\")\nprint(iris.data.shape)\nprint(iris.target.shape)\nprint(\"\")\n\nprint(\"察看模型的先验机率\")\nprint(gnb.class_prior_)\nprint(\"\")\n\nprint(\"察看训练集标签数量\")\nprint(gnb.class_count_)\nprint(\"\")\n\nprint(\"察看高斯模型期望值\")\nprint(gnb.theta_)\nprint(\"\")\n\nprint(\"察看高斯模型方差\")\nprint(gnb.sigma_)\n```\n\n    数据集大小\n    (150, 4)\n    (150,)\n    \n    察看模型的先验机率\n    [0.33333333 0.33333333 0.33333333]\n    \n    察看训练集标签数量\n    [50. 50. 50.]\n    \n    察看高斯模型期望值\n    [[5.006 3.428 1.462 0.246]\n     [5.936 2.77  4.26  1.326]\n     [6.588 2.974 5.552 2.026]]\n    \n    察看高斯模型方差\n    [[0.121764 0.140816 0.029556 0.010884]\n     [0.261104 0.0965   0.2164   0.038324]\n     [0.396256 0.101924 0.298496 0.073924]]\n\n\n## 伯努利朴素贝叶斯\n\n- 每次实验只可能出现两种结果的事件概率分布，也称二值分布\n\n\n```python\nfrom sklearn.naive_bayes import BernoulliNB\nclf = BernoulliNB(binarize = 1)\n\n# 可以输入非二值特征，BernoulliNB内部会用阈值1将其转换为二值\nX = [[0.3, 0.2], [1.3, 1.2], [1.1, 1.2]]\nY = [0, 1, 1]\nclf.fit(X, Y)\n\nclf.predict([[0.99, 0.99]])\n```\n\n\n\n\n    array([0])\n\n\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n","source":"_posts/2019-07-23_朴素贝叶斯.md","raw":"---\ntitle: 朴素贝叶斯\ncategories:\n  - 统计与机器学习\n  - 贝叶斯算法（Bayesian Algorithms）\nmathjax: true\nabbrlink: 58685\ndate: 2019-07-23 00:00:00\n---\n\n## 特性\n\n- 基于概率，优点是可以对预测标签给出理论上完美的可能性估计\n- 要求数据多维特征之间相互独立，因此在计算n维特征的联合分布时，才能简化成各自先验机率相乘\n\n## 原理\n\n朴素贝叶斯是应用贝叶斯定理进行有监督学习的一种分类模型。在模型中，将贝叶斯定理公式 $$P(A|B) = \\frac{P(A)*P(B|A)}{P(B)}$$ 中的事件A看成被分类标签，事件B看成数据特征。伪代码如下：\n\n> for label in 所有标签:\n>\n>    用贝叶斯公式计算在给定特征情况下出现该label的后验机率\n>\n>预测标签 <= 获得最高后验机率的 label\n\n由于实际上计算了所有标签的后验机率，所以贝叶斯分类不仅可以提供该组特征最可能的标签，还能给出其他的标签排序。\n\n## 高斯朴素贝叶斯\n\n- 假定所有特征都呈高斯分布\n\n\n```python\nfrom sklearn import datasets\niris = datasets.load_iris()\n\nfrom sklearn.naive_bayes import GaussianNB\ngnb = GaussianNB()\ngnb.fit(iris.data, iris.target)\n\nprint(\"数据集大小\")\nprint(iris.data.shape)\nprint(iris.target.shape)\nprint(\"\")\n\nprint(\"察看模型的先验机率\")\nprint(gnb.class_prior_)\nprint(\"\")\n\nprint(\"察看训练集标签数量\")\nprint(gnb.class_count_)\nprint(\"\")\n\nprint(\"察看高斯模型期望值\")\nprint(gnb.theta_)\nprint(\"\")\n\nprint(\"察看高斯模型方差\")\nprint(gnb.sigma_)\n```\n\n    数据集大小\n    (150, 4)\n    (150,)\n    \n    察看模型的先验机率\n    [0.33333333 0.33333333 0.33333333]\n    \n    察看训练集标签数量\n    [50. 50. 50.]\n    \n    察看高斯模型期望值\n    [[5.006 3.428 1.462 0.246]\n     [5.936 2.77  4.26  1.326]\n     [6.588 2.974 5.552 2.026]]\n    \n    察看高斯模型方差\n    [[0.121764 0.140816 0.029556 0.010884]\n     [0.261104 0.0965   0.2164   0.038324]\n     [0.396256 0.101924 0.298496 0.073924]]\n\n\n## 伯努利朴素贝叶斯\n\n- 每次实验只可能出现两种结果的事件概率分布，也称二值分布\n\n\n```python\nfrom sklearn.naive_bayes import BernoulliNB\nclf = BernoulliNB(binarize = 1)\n\n# 可以输入非二值特征，BernoulliNB内部会用阈值1将其转换为二值\nX = [[0.3, 0.2], [1.3, 1.2], [1.1, 1.2]]\nY = [0, 1, 1]\nclf.fit(X, Y)\n\nclf.predict([[0.99, 0.99]])\n```\n\n\n\n\n    array([0])\n\n\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n","slug":"2019-07-23_朴素贝叶斯","published":1,"updated":"2021-04-06T17:21:33.100Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5qi000h9ohz7p8l2w52","content":"<h2 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h2><ul>\n<li>基于概率，优点是可以对预测标签给出理论上完美的可能性估计</li>\n<li>要求数据多维特征之间相互独立，因此在计算n维特征的联合分布时，才能简化成各自先验机率相乘</li>\n</ul>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>朴素贝叶斯是应用贝叶斯定理进行有监督学习的一种分类模型。在模型中，将贝叶斯定理公式 <script type=\"math/tex\">P(A|B) = \\frac{P(A)*P(B|A)}{P(B)}</script> 中的事件A看成被分类标签，事件B看成数据特征。伪代码如下：</p>\n<blockquote>\n<p>for label in 所有标签:</p>\n<p>   用贝叶斯公式计算在给定特征情况下出现该label的后验机率</p>\n<p>预测标签 &lt;= 获得最高后验机率的 label</p>\n</blockquote>\n<p>由于实际上计算了所有标签的后验机率，所以贝叶斯分类不仅可以提供该组特征最可能的标签，还能给出其他的标签排序。</p>\n<h2 id=\"高斯朴素贝叶斯\"><a href=\"#高斯朴素贝叶斯\" class=\"headerlink\" title=\"高斯朴素贝叶斯\"></a>高斯朴素贝叶斯</h2><ul>\n<li>假定所有特征都呈高斯分布</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> datasets</span><br><span class=\"line\">iris = datasets.load_iris()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.naive_bayes <span class=\"keyword\">import</span> GaussianNB</span><br><span class=\"line\">gnb = GaussianNB()</span><br><span class=\"line\">gnb.fit(iris.data, iris.target)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;数据集大小&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(iris.data.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(iris.target.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;察看模型的先验机率&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(gnb.class_prior_)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;察看训练集标签数量&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(gnb.class_count_)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;察看高斯模型期望值&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(gnb.theta_)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;察看高斯模型方差&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(gnb.sigma_)</span><br></pre></td></tr></table></figure>\n<pre><code>数据集大小\n(150, 4)\n(150,)\n\n察看模型的先验机率\n[0.33333333 0.33333333 0.33333333]\n\n察看训练集标签数量\n[50. 50. 50.]\n\n察看高斯模型期望值\n[[5.006 3.428 1.462 0.246]\n [5.936 2.77  4.26  1.326]\n [6.588 2.974 5.552 2.026]]\n\n察看高斯模型方差\n[[0.121764 0.140816 0.029556 0.010884]\n [0.261104 0.0965   0.2164   0.038324]\n [0.396256 0.101924 0.298496 0.073924]]\n</code></pre><h2 id=\"伯努利朴素贝叶斯\"><a href=\"#伯努利朴素贝叶斯\" class=\"headerlink\" title=\"伯努利朴素贝叶斯\"></a>伯努利朴素贝叶斯</h2><ul>\n<li>每次实验只可能出现两种结果的事件概率分布，也称二值分布</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.naive_bayes <span class=\"keyword\">import</span> BernoulliNB</span><br><span class=\"line\">clf = BernoulliNB(binarize = <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可以输入非二值特征，BernoulliNB内部会用阈值1将其转换为二值</span></span><br><span class=\"line\">X = [[<span class=\"number\">0.3</span>, <span class=\"number\">0.2</span>], [<span class=\"number\">1.3</span>, <span class=\"number\">1.2</span>], [<span class=\"number\">1.1</span>, <span class=\"number\">1.2</span>]]</span><br><span class=\"line\">Y = [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>]</span><br><span class=\"line\">clf.fit(X, Y)</span><br><span class=\"line\"></span><br><span class=\"line\">clf.predict([[<span class=\"number\">0.99</span>, <span class=\"number\">0.99</span>]])</span><br></pre></td></tr></table></figure>\n<pre><code>array([0])\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h2><ul>\n<li>基于概率，优点是可以对预测标签给出理论上完美的可能性估计</li>\n<li>要求数据多维特征之间相互独立，因此在计算n维特征的联合分布时，才能简化成各自先验机率相乘</li>\n</ul>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>朴素贝叶斯是应用贝叶斯定理进行有监督学习的一种分类模型。在模型中，将贝叶斯定理公式 <script type=\"math/tex\">P(A|B) = \\frac{P(A)*P(B|A)}{P(B)}</script> 中的事件A看成被分类标签，事件B看成数据特征。伪代码如下：</p>\n<blockquote>\n<p>for label in 所有标签:</p>\n<p>   用贝叶斯公式计算在给定特征情况下出现该label的后验机率</p>\n<p>预测标签 &lt;= 获得最高后验机率的 label</p>\n</blockquote>\n<p>由于实际上计算了所有标签的后验机率，所以贝叶斯分类不仅可以提供该组特征最可能的标签，还能给出其他的标签排序。</p>\n<h2 id=\"高斯朴素贝叶斯\"><a href=\"#高斯朴素贝叶斯\" class=\"headerlink\" title=\"高斯朴素贝叶斯\"></a>高斯朴素贝叶斯</h2><ul>\n<li>假定所有特征都呈高斯分布</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> datasets</span><br><span class=\"line\">iris = datasets.load_iris()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.naive_bayes <span class=\"keyword\">import</span> GaussianNB</span><br><span class=\"line\">gnb = GaussianNB()</span><br><span class=\"line\">gnb.fit(iris.data, iris.target)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;数据集大小&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(iris.data.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(iris.target.shape)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;察看模型的先验机率&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(gnb.class_prior_)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;察看训练集标签数量&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(gnb.class_count_)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;察看高斯模型期望值&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(gnb.theta_)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;察看高斯模型方差&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(gnb.sigma_)</span><br></pre></td></tr></table></figure>\n<pre><code>数据集大小\n(150, 4)\n(150,)\n\n察看模型的先验机率\n[0.33333333 0.33333333 0.33333333]\n\n察看训练集标签数量\n[50. 50. 50.]\n\n察看高斯模型期望值\n[[5.006 3.428 1.462 0.246]\n [5.936 2.77  4.26  1.326]\n [6.588 2.974 5.552 2.026]]\n\n察看高斯模型方差\n[[0.121764 0.140816 0.029556 0.010884]\n [0.261104 0.0965   0.2164   0.038324]\n [0.396256 0.101924 0.298496 0.073924]]\n</code></pre><h2 id=\"伯努利朴素贝叶斯\"><a href=\"#伯努利朴素贝叶斯\" class=\"headerlink\" title=\"伯努利朴素贝叶斯\"></a>伯努利朴素贝叶斯</h2><ul>\n<li>每次实验只可能出现两种结果的事件概率分布，也称二值分布</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.naive_bayes <span class=\"keyword\">import</span> BernoulliNB</span><br><span class=\"line\">clf = BernoulliNB(binarize = <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 可以输入非二值特征，BernoulliNB内部会用阈值1将其转换为二值</span></span><br><span class=\"line\">X = [[<span class=\"number\">0.3</span>, <span class=\"number\">0.2</span>], [<span class=\"number\">1.3</span>, <span class=\"number\">1.2</span>], [<span class=\"number\">1.1</span>, <span class=\"number\">1.2</span>]]</span><br><span class=\"line\">Y = [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>]</span><br><span class=\"line\">clf.fit(X, Y)</span><br><span class=\"line\"></span><br><span class=\"line\">clf.predict([[<span class=\"number\">0.99</span>, <span class=\"number\">0.99</span>]])</span><br></pre></td></tr></table></figure>\n<pre><code>array([0])\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"支持向量机","mathjax":true,"abbrlink":49110,"date":"2019-07-20T16:00:00.000Z","_content":"\n## 特性\n\n- 能适应\"样本数少，特征维度高\"的数据集\n\n## 步骤\n\n### 基本原则\n1. 学习数据空间中的一个超平面达到二值分类目的，在普通线性可分问题中，符合分类要求的超平面会有无穷多个\n2. 尽可能找到最能平均分配两类数据中空白区域的超平面，亦即使得\"与超平面距离最小的数据点的距离\"最大化\n    - 平行于最优超平面(Optional Hyperplane)，且含括两类数据中最靠近超平面的点(此两数据点即为Support Vector)的超平面距离应越大越好\n    - 最优超平面到上述两超平面的距离应相等(此处距离即为间隔Margin)\n\n### 当数据出现噪声\n1. 当数据出现噪声，Margin过低时会导致模型过拟合，此时应加入\"软间隔(Soft Margin)\"概念\n    - 要尽可能正确地分类训练数据(松弛因子超参数C大)\n    - Margin 要尽可能大(松弛因子超参数C小)\n    \n### 当数据在现有维度中找不到最优超平面\n1. 任何有限维度的非线性问题在更高维度的空间里总可以变化成线性可分问题\n2. SVM使用拉格朗日乘子法(Lagrange Multiplier)实现对超平面求解问题的升维，不需真的升维，而是将求超平面参数的目标转换为用高维中数据点向量两两点积值求解的二次规划问题\n3. 核函数(Kernel Function)就是一种输入两个低维空间向量，返回高维空间点积的函数。一些常用的核函数如下：\n    - 线性核(Linear)：直接返回输入向量的点积，速度最快，因为实际上没有升维，适用于本身特征维度较高、样本数量很大的场景\n    - 多项式核(Polynomial)：其中超参数d是提升到的维度\n    $$k(p,q)=(p*q+1)*d$$\n    - 高斯迳向基核(Gaussian Radial Basis Function)：应用最广泛，gamma值越大越容易过拟合\n    $$k(p,q)=exp(-\\gamma*||p-q||^2)$$\n    - Sigmoid核：\n    $$k(p,q)=tanh(a*p\\cdot q+r)$$\n\n## SVM\n\n\n```python\nfrom sklearn import svm\n\nx = [[0,0],[2,2]]\ny = [1,2]\n\nclf = svm.SVC(kernel = \"rbf\")\nclf.fit(x,y)\n\nt = [[2,1],[0,1]]\nprint(clf.predict(t))\nprint(clf.decision_function(t))  # 返回数据到超平面的距离，越大则分类可靠性越高\n```\n\n    [2 1]\n    [ 0.52444566 -0.52444566]\n\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n2. [SVM 原理详解，通俗易懂](https://blog.csdn.net/DP323/article/details/80535863)\n","source":"_posts/2019-07-21_支持向量机.md","raw":"---\ntitle: 支持向量机\ncategories:\n  - 统计与机器学习\n  - 支持向量机（Support Vector Machines）\nmathjax: true\nabbrlink: 49110\ndate: 2019-07-21 00:00:00\n---\n\n## 特性\n\n- 能适应\"样本数少，特征维度高\"的数据集\n\n## 步骤\n\n### 基本原则\n1. 学习数据空间中的一个超平面达到二值分类目的，在普通线性可分问题中，符合分类要求的超平面会有无穷多个\n2. 尽可能找到最能平均分配两类数据中空白区域的超平面，亦即使得\"与超平面距离最小的数据点的距离\"最大化\n    - 平行于最优超平面(Optional Hyperplane)，且含括两类数据中最靠近超平面的点(此两数据点即为Support Vector)的超平面距离应越大越好\n    - 最优超平面到上述两超平面的距离应相等(此处距离即为间隔Margin)\n\n### 当数据出现噪声\n1. 当数据出现噪声，Margin过低时会导致模型过拟合，此时应加入\"软间隔(Soft Margin)\"概念\n    - 要尽可能正确地分类训练数据(松弛因子超参数C大)\n    - Margin 要尽可能大(松弛因子超参数C小)\n    \n### 当数据在现有维度中找不到最优超平面\n1. 任何有限维度的非线性问题在更高维度的空间里总可以变化成线性可分问题\n2. SVM使用拉格朗日乘子法(Lagrange Multiplier)实现对超平面求解问题的升维，不需真的升维，而是将求超平面参数的目标转换为用高维中数据点向量两两点积值求解的二次规划问题\n3. 核函数(Kernel Function)就是一种输入两个低维空间向量，返回高维空间点积的函数。一些常用的核函数如下：\n    - 线性核(Linear)：直接返回输入向量的点积，速度最快，因为实际上没有升维，适用于本身特征维度较高、样本数量很大的场景\n    - 多项式核(Polynomial)：其中超参数d是提升到的维度\n    $$k(p,q)=(p*q+1)*d$$\n    - 高斯迳向基核(Gaussian Radial Basis Function)：应用最广泛，gamma值越大越容易过拟合\n    $$k(p,q)=exp(-\\gamma*||p-q||^2)$$\n    - Sigmoid核：\n    $$k(p,q)=tanh(a*p\\cdot q+r)$$\n\n## SVM\n\n\n```python\nfrom sklearn import svm\n\nx = [[0,0],[2,2]]\ny = [1,2]\n\nclf = svm.SVC(kernel = \"rbf\")\nclf.fit(x,y)\n\nt = [[2,1],[0,1]]\nprint(clf.predict(t))\nprint(clf.decision_function(t))  # 返回数据到超平面的距离，越大则分类可靠性越高\n```\n\n    [2 1]\n    [ 0.52444566 -0.52444566]\n\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n2. [SVM 原理详解，通俗易懂](https://blog.csdn.net/DP323/article/details/80535863)\n","slug":"2019-07-21_支持向量机","published":1,"updated":"2021-04-06T13:54:17.081Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5ql000j9ohzaent89vr","content":"<h2 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h2><ul>\n<li>能适应”样本数少，特征维度高”的数据集</li>\n</ul>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><h3 id=\"基本原则\"><a href=\"#基本原则\" class=\"headerlink\" title=\"基本原则\"></a>基本原则</h3><ol>\n<li>学习数据空间中的一个超平面达到二值分类目的，在普通线性可分问题中，符合分类要求的超平面会有无穷多个</li>\n<li>尽可能找到最能平均分配两类数据中空白区域的超平面，亦即使得”与超平面距离最小的数据点的距离”最大化<ul>\n<li>平行于最优超平面(Optional Hyperplane)，且含括两类数据中最靠近超平面的点(此两数据点即为Support Vector)的超平面距离应越大越好</li>\n<li>最优超平面到上述两超平面的距离应相等(此处距离即为间隔Margin)</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"当数据出现噪声\"><a href=\"#当数据出现噪声\" class=\"headerlink\" title=\"当数据出现噪声\"></a>当数据出现噪声</h3><ol>\n<li>当数据出现噪声，Margin过低时会导致模型过拟合，此时应加入”软间隔(Soft Margin)”概念<ul>\n<li>要尽可能正确地分类训练数据(松弛因子超参数C大)</li>\n<li>Margin 要尽可能大(松弛因子超参数C小)</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"当数据在现有维度中找不到最优超平面\"><a href=\"#当数据在现有维度中找不到最优超平面\" class=\"headerlink\" title=\"当数据在现有维度中找不到最优超平面\"></a>当数据在现有维度中找不到最优超平面</h3><ol>\n<li>任何有限维度的非线性问题在更高维度的空间里总可以变化成线性可分问题</li>\n<li>SVM使用拉格朗日乘子法(Lagrange Multiplier)实现对超平面求解问题的升维，不需真的升维，而是将求超平面参数的目标转换为用高维中数据点向量两两点积值求解的二次规划问题</li>\n<li>核函数(Kernel Function)就是一种输入两个低维空间向量，返回高维空间点积的函数。一些常用的核函数如下：<ul>\n<li>线性核(Linear)：直接返回输入向量的点积，速度最快，因为实际上没有升维，适用于本身特征维度较高、样本数量很大的场景</li>\n<li>多项式核(Polynomial)：其中超参数d是提升到的维度<script type=\"math/tex; mode=display\">k(p,q)=(p*q+1)*d</script></li>\n<li>高斯迳向基核(Gaussian Radial Basis Function)：应用最广泛，gamma值越大越容易过拟合<script type=\"math/tex; mode=display\">k(p,q)=exp(-\\gamma*||p-q||^2)</script></li>\n<li>Sigmoid核：<script type=\"math/tex; mode=display\">k(p,q)=tanh(a*p\\cdot q+r)</script></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"SVM\"><a href=\"#SVM\" class=\"headerlink\" title=\"SVM\"></a>SVM</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> svm</span><br><span class=\"line\"></span><br><span class=\"line\">x = [[<span class=\"number\">0</span>,<span class=\"number\">0</span>],[<span class=\"number\">2</span>,<span class=\"number\">2</span>]]</span><br><span class=\"line\">y = [<span class=\"number\">1</span>,<span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">clf = svm.SVC(kernel = <span class=\"string\">&quot;rbf&quot;</span>)</span><br><span class=\"line\">clf.fit(x,y)</span><br><span class=\"line\"></span><br><span class=\"line\">t = [[<span class=\"number\">2</span>,<span class=\"number\">1</span>],[<span class=\"number\">0</span>,<span class=\"number\">1</span>]]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(clf.predict(t))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(clf.decision_function(t))  <span class=\"comment\"># 返回数据到超平面的距离，越大则分类可靠性越高</span></span><br></pre></td></tr></table></figure>\n<pre><code>[2 1]\n[ 0.52444566 -0.52444566]\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://blog.csdn.net/DP323/article/details/80535863\" >SVM 原理详解，通俗易懂<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h2><ul>\n<li>能适应”样本数少，特征维度高”的数据集</li>\n</ul>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><h3 id=\"基本原则\"><a href=\"#基本原则\" class=\"headerlink\" title=\"基本原则\"></a>基本原则</h3><ol>\n<li>学习数据空间中的一个超平面达到二值分类目的，在普通线性可分问题中，符合分类要求的超平面会有无穷多个</li>\n<li>尽可能找到最能平均分配两类数据中空白区域的超平面，亦即使得”与超平面距离最小的数据点的距离”最大化<ul>\n<li>平行于最优超平面(Optional Hyperplane)，且含括两类数据中最靠近超平面的点(此两数据点即为Support Vector)的超平面距离应越大越好</li>\n<li>最优超平面到上述两超平面的距离应相等(此处距离即为间隔Margin)</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"当数据出现噪声\"><a href=\"#当数据出现噪声\" class=\"headerlink\" title=\"当数据出现噪声\"></a>当数据出现噪声</h3><ol>\n<li>当数据出现噪声，Margin过低时会导致模型过拟合，此时应加入”软间隔(Soft Margin)”概念<ul>\n<li>要尽可能正确地分类训练数据(松弛因子超参数C大)</li>\n<li>Margin 要尽可能大(松弛因子超参数C小)</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"当数据在现有维度中找不到最优超平面\"><a href=\"#当数据在现有维度中找不到最优超平面\" class=\"headerlink\" title=\"当数据在现有维度中找不到最优超平面\"></a>当数据在现有维度中找不到最优超平面</h3><ol>\n<li>任何有限维度的非线性问题在更高维度的空间里总可以变化成线性可分问题</li>\n<li>SVM使用拉格朗日乘子法(Lagrange Multiplier)实现对超平面求解问题的升维，不需真的升维，而是将求超平面参数的目标转换为用高维中数据点向量两两点积值求解的二次规划问题</li>\n<li>核函数(Kernel Function)就是一种输入两个低维空间向量，返回高维空间点积的函数。一些常用的核函数如下：<ul>\n<li>线性核(Linear)：直接返回输入向量的点积，速度最快，因为实际上没有升维，适用于本身特征维度较高、样本数量很大的场景</li>\n<li>多项式核(Polynomial)：其中超参数d是提升到的维度<script type=\"math/tex; mode=display\">k(p,q)=(p*q+1)*d</script></li>\n<li>高斯迳向基核(Gaussian Radial Basis Function)：应用最广泛，gamma值越大越容易过拟合<script type=\"math/tex; mode=display\">k(p,q)=exp(-\\gamma*||p-q||^2)</script></li>\n<li>Sigmoid核：<script type=\"math/tex; mode=display\">k(p,q)=tanh(a*p\\cdot q+r)</script></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"SVM\"><a href=\"#SVM\" class=\"headerlink\" title=\"SVM\"></a>SVM</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> svm</span><br><span class=\"line\"></span><br><span class=\"line\">x = [[<span class=\"number\">0</span>,<span class=\"number\">0</span>],[<span class=\"number\">2</span>,<span class=\"number\">2</span>]]</span><br><span class=\"line\">y = [<span class=\"number\">1</span>,<span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">clf = svm.SVC(kernel = <span class=\"string\">&quot;rbf&quot;</span>)</span><br><span class=\"line\">clf.fit(x,y)</span><br><span class=\"line\"></span><br><span class=\"line\">t = [[<span class=\"number\">2</span>,<span class=\"number\">1</span>],[<span class=\"number\">0</span>,<span class=\"number\">1</span>]]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(clf.predict(t))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(clf.decision_function(t))  <span class=\"comment\"># 返回数据到超平面的距离，越大则分类可靠性越高</span></span><br></pre></td></tr></table></figure>\n<pre><code>[2 1]\n[ 0.52444566 -0.52444566]\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://blog.csdn.net/DP323/article/details/80535863\" >SVM 原理详解，通俗易懂<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"决策树","mathjax":true,"abbrlink":51507,"date":"2019-07-28T16:00:00.000Z","_content":"\n## 基本介绍\n\n- 分而治之(divide-andconquer)：\n    - 自根至叶的递归过程\n    - 在每个中间结点寻找一个\"划分\"属性\n    \n\n- 过程：\n    - 把数据集分成两组\n    - 不同数据点被完美区分（Pure）开了么？\n    - 不是：重复楼上两步\n    - 是的：打完收⼯\n\n### 建树逻辑\n\n所有子树信息价值（信息熵、基尼指数等）的和必定小于等于原来整体数据集的信息价值，信息增益用来衡量减少的程度\n\n> def build(D=数据集)：\n>\n> 　　if D所有数据目标值 y 都相同：\n>\n> 　　　　return  #递回停止条件\n>\n> 　　for i in D中的所有特征：\n>\n> 　　　　计算用i划分子树后获得的信息增益\n>\n> 　　if 所有特征都没有大于零的信息增益：\n>\n> 　　　　return  #递回停止条件\n>\n> 　　被选择的特征 x = 具有最大信息增益的特征\n>\n> 　　for sub in 按照x划分子树后的数据集：\n>\n> 　　　　build(sub)\n\n### 停止条件\n\n- 当前结点包含的样本全属于同一类别，无须划分\n- 当前属性集为空，或是所有样本在所有属性上取值相同，无法划分\n- 当前结点包含的样本集合为空，不能划分\n\n### 特性\n\n- 优势：\n    - ⾮⿊盒\n    - 轻松去除⽆关attribute (Gain = 0)\n    - Test起来很快 (O(depth))\n\n\n- 劣势：\n    - 只能线性分割数据\n    - 贪婪算法 (每次分裂都选最好，有可能不是全局最好)\n\n## 信息价值指标\n\n### 信息熵\n\n信息熵是度量样本集合\"纯度\"最常用的一种指标，假定当前样本集合D中第i类样本所占的比例为$P_i$，则D的信息熵定义为：\n\n$$Ent(D)=-\\sum_{i=1}^{n}{P_i \\cdot log{P_i}}$$\n\n- 某随机事件结果的种类越多，则该事件的熵越大（不确定性越大）\n- 某随机事件的各种可能发生结果概率越均匀，则该事件的熵越大（不确定性越大）\n- 值域：>= 0\n- 缺点是计算量大（log）\n\n### 信息增益(ID3)\n\n$$Gain(D,a)=Ent(D)-\\sum_{i=1}^{n}{\\frac{|D^i|}{|D|}{Ent(D^i)}}$$\n\n- 划分前的信息熵-划分后的总信息熵\n- 越大越好\n\n### 信息增益率(C4.5)\n\n$$GainRatio(D,a)=\\frac{Gain(D,a)}{IV(a)}$$\n\n$$IV(a)=-\\sum_{i=1}^{i}{\\frac{|D^i|}{|D|}{log_2{\\frac{|D^i|}{|D|}}}}$$\n\n### 基尼指数(CART)\n\n$$G=1-\\sum_{i=1}^{n}{P_i^2}$$\n\n- 值域：0~1\n\n## 常见算法\n\n- ID3：    \n    - 只能使用熵的信息增益处理离散特征的分类问题\n    - 取值高的属性，更容易使数据更纯，其信息增益更大\n    - 训练得到的是一棵庞大且深度浅的树（可以把N个数据分成100%纯洁的N组）\n\n\n- C4.5：\n    - 支持连续特征，在计算信息增益比之前首先将其离散化（与ID3差别）\n    - 使用信息增益比的概念去除先选择多值特征的倾向\n    - 在训练后检测训练集的正确分类比，并剪枝产生错误较多的叶子结点\n\n\n- CART算法：\n    - 使用基尼系数代替熵进行信息增益计算、只使用二叉树，并提供解决回归问题的能力\n    - 以最小化不纯度，而不是最大化信息增益\n\n## DecisionTreeClassifier\n\n\n```python\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import datasets\nfrom sklearn.model_selection import train_test_split\n\niris = datasets.load_iris()\niris_data = iris['data']\niris_label = iris['target']\niris_target_name = iris['target_names']\nX = np.array(iris_data)\nY = np.array(iris_label)\n\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.25)\n\nclf = DecisionTreeClassifier()\nclf = clf.fit(x_train, y_train)\n```\n\n\n```python\nfrom sklearn.metrics import roc_curve, auc\n\ny_pred = clf.predict(x_test)\n\nfalse_positive_rate, true_positive_rate, thresholds = roc_curve(\n    y_test, y_pred, pos_label=2)\n\nroc_auc = auc(false_positive_rate, true_positive_rate)\nroc_auc\n```\n\n\n\n\n    1.0\n\n\n\n### 调参\n\n超参数：\n- criterion: gini, entropy\n- max_depth\n- min_samples_split\n- min_samples_leaf\n- max_features\n- max_leaf_nodes\n- min_impurity_decrease\n\n#### max_depth\n\n要调整的第一个参数是max_depth（树的深度）。 树越深，它就分裂的越多，更能捕获有关数据的信息。 我们拟合一个深度范围从1到32的决策树，并绘制训练和测试auc分数\n\n\n```python\nfrom matplotlib.legend_handler import HandlerLine2D\nimport matplotlib.pyplot as plt\n\nmax_depths = np.linspace(1, 32, 32, endpoint=True)\ntrain_results = []\ntest_results = []\n\nfor max_depth in max_depths:\n    dt = DecisionTreeClassifier(max_depth=max_depth)\n    dt.fit(x_train, y_train)\n    train_pred = dt.predict(x_train)\n    false_positive_rate, true_positive_rate, thresholds = roc_curve(\n        y_train, train_pred, pos_label=2)\n    roc_auc = auc(false_positive_rate, true_positive_rate)\n\n    train_results.append(roc_auc)\n    y_pred = dt.predict(x_test)\n    false_positive_rate, true_positive_rate, thresholds = roc_curve(\n        y_test, y_pred, pos_label=2)\n    roc_auc = auc(false_positive_rate, true_positive_rate)\n\n    test_results.append(roc_auc)\n\nline1, = plt.plot(max_depths, train_results, 'b', label='Train AUC')\nline2, = plt.plot(max_depths, test_results, 'r', label='Test AUC')\nplt.legend(handler_map={line1: HandlerLine2D(numpoints=2)})\nplt.ylabel('AUC score')\nplt.xlabel('Tree depth')\n\nplt.savefig(\"../img/2019-07-29_决策树_1.png\")\nplt.close()\n```\n\n![](/img/2019-07-29_决策树_1.png)\n\n#### min_samples_split\n\nmin_samples_split表示拆分内部节点所需的最小样本数。 这可以在考虑每个节点处的至少一个样本，并考虑每个节点处的所有样本之间变化。 当我们增加此参数时，给与树更多的约束，因为它必须在每个节点处考虑更多样本。 在这里，我们将从10％到100％的样本中改变参数\n\n\n```python\nmin_samples_splits = np.linspace(0.1, 1.0, 10, endpoint=True)\ntrain_results = []\ntest_results = []\nfor min_samples_split in min_samples_splits:\n    dt = DecisionTreeClassifier(min_samples_split=min_samples_split)\n    dt.fit(x_train, y_train)\n    train_pred = dt.predict(x_train)\n    false_positive_rate, true_positive_rate, thresholds = roc_curve(\n        y_train, train_pred, pos_label=2)\n    roc_auc = auc(false_positive_rate, true_positive_rate)\n    train_results.append(roc_auc)\n    y_pred = dt.predict(x_test)\n    false_positive_rate, true_positive_rate, thresholds = roc_curve(\n        y_test, y_pred, pos_label=2)\n    roc_auc = auc(false_positive_rate, true_positive_rate)\n    test_results.append(roc_auc)\nfrom matplotlib.legend_handler import HandlerLine2D\nline1, = plt.plot(min_samples_splits, train_results, 'b', label='Train AUC')\nline2, = plt.plot(min_samples_splits, test_results, 'r', label='Test AUC')\nplt.legend(handler_map={line1: HandlerLine2D(numpoints=2)})\nplt.ylabel('AUC score')\nplt.xlabel('min samples split')\n\nplt.savefig(\"../img/2019-07-29_决策树_2.png\")\nplt.close()\n```\n\n![](/img/2019-07-29_决策树_2.png)\n\n#### min_samples_leaf\nmin_samples_leaf是叶节点所需的最小样本数。 此参数类似于min_samples_splits，但是，这描述了叶子（树的基础）处的样本的最小样本数\n\n\n```python\nmin_samples_leafs = np.linspace(0.1, 0.5, 5, endpoint=True)\ntrain_results = []\ntest_results = []\nfor min_samples_leaf in min_samples_leafs:\n    dt = DecisionTreeClassifier(min_samples_leaf=min_samples_leaf)\n    dt.fit(x_train, y_train)\n    train_pred = dt.predict(x_train)\n    false_positive_rate, true_positive_rate, thresholds = roc_curve(\n        y_train, train_pred, pos_label=2)\n    roc_auc = auc(false_positive_rate, true_positive_rate)\n    train_results.append(roc_auc)\n    y_pred = dt.predict(x_test)\n    false_positive_rate, true_positive_rate, thresholds = roc_curve(\n        y_test, y_pred, pos_label=2)\n    roc_auc = auc(false_positive_rate, true_positive_rate)\n    test_results.append(roc_auc)\nfrom matplotlib.legend_handler import HandlerLine2D\nline1, = plt.plot(min_samples_leafs, train_results, 'b', label='Train AUC')\nline2, = plt.plot(min_samples_leafs, test_results, 'r', label='Test AUC')\nplt.legend(handler_map={line1: HandlerLine2D(numpoints=2)})\nplt.ylabel('AUC score')\nplt.xlabel('min samples leaf')\n\nplt.savefig(\"../img/2019-07-29_决策树_3.png\")\nplt.close()\n```\n\n![](/img/2019-07-29_决策树_3.png)\n\n#### max_features\nmax_features表示查找最佳拆分时要考虑的要最大特征数量\n\n\n```python\nmax_features = list(range(1, len(iris_target_name)))\ntrain_results = []\ntest_results = []\nfor max_feature in max_features:\n    dt = DecisionTreeClassifier(max_features=max_feature)\n    dt.fit(x_train, y_train)\n    train_pred = dt.predict(x_train)\n    false_positive_rate, true_positive_rate, thresholds = roc_curve(\n        y_train, train_pred, pos_label=2)\n    roc_auc = auc(false_positive_rate, true_positive_rate)\n    train_results.append(roc_auc)\n    y_pred = dt.predict(x_test)\n    false_positive_rate, true_positive_rate, thresholds = roc_curve(\n        y_test, y_pred, pos_label=2)\n    roc_auc = auc(false_positive_rate, true_positive_rate)\n    test_results.append(roc_auc)\n\nfrom matplotlib.legend_handler import HandlerLine2D\n\nline1, = plt.plot(max_features, train_results, 'b', label='Train AUC')\nline2, = plt.plot(max_features, test_results, 'r', label='Test AUC')\nplt.legend(handler_map={line1: HandlerLine2D(numpoints=2)})\nplt.ylabel('AUC score')\nplt.xlabel('max features')\n\nplt.savefig(\"../img/2019-07-29_决策树_4.png\")\nplt.close()\n```\n\n![](/img/2019-07-29_决策树_4.png)\n\n## 树的可视化\n\n\n```python\nfrom IPython.display import display, Image\nimport graphviz\nimport pydotplus as pdp\n\ndot_data = tree.export_graphviz(clf, out_file = None,\n                               feature_names = [\"标签A\",\"标签B\",\"标签C\"],\n                               class_names = [\"分类A\",\"分类B\"],\n                               filled = True,\n                               rotate = False)\n\n# 要先用brew install graphviz\ngraph = pdp.graph_from_dot_data(dot_data)\nimg = Image(graph.create_png())\n```\n\n![](/img/2019-07-29_决策树_5.png)\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n2. [决策树（四）决策树调参](https://www.cnblogs.com/jin-liang/p/9638197.html)\n","source":"_posts/2019-07-29_决策树.md","raw":"---\ntitle: 决策树\ncategories:\n  - 统计与机器学习\n  - 决策树算法（Decision Tree Algorithm）\nmathjax: true\nabbrlink: 51507\ndate: 2019-07-29 00:00:00\n---\n\n## 基本介绍\n\n- 分而治之(divide-andconquer)：\n    - 自根至叶的递归过程\n    - 在每个中间结点寻找一个\"划分\"属性\n    \n\n- 过程：\n    - 把数据集分成两组\n    - 不同数据点被完美区分（Pure）开了么？\n    - 不是：重复楼上两步\n    - 是的：打完收⼯\n\n### 建树逻辑\n\n所有子树信息价值（信息熵、基尼指数等）的和必定小于等于原来整体数据集的信息价值，信息增益用来衡量减少的程度\n\n> def build(D=数据集)：\n>\n> 　　if D所有数据目标值 y 都相同：\n>\n> 　　　　return  #递回停止条件\n>\n> 　　for i in D中的所有特征：\n>\n> 　　　　计算用i划分子树后获得的信息增益\n>\n> 　　if 所有特征都没有大于零的信息增益：\n>\n> 　　　　return  #递回停止条件\n>\n> 　　被选择的特征 x = 具有最大信息增益的特征\n>\n> 　　for sub in 按照x划分子树后的数据集：\n>\n> 　　　　build(sub)\n\n### 停止条件\n\n- 当前结点包含的样本全属于同一类别，无须划分\n- 当前属性集为空，或是所有样本在所有属性上取值相同，无法划分\n- 当前结点包含的样本集合为空，不能划分\n\n### 特性\n\n- 优势：\n    - ⾮⿊盒\n    - 轻松去除⽆关attribute (Gain = 0)\n    - Test起来很快 (O(depth))\n\n\n- 劣势：\n    - 只能线性分割数据\n    - 贪婪算法 (每次分裂都选最好，有可能不是全局最好)\n\n## 信息价值指标\n\n### 信息熵\n\n信息熵是度量样本集合\"纯度\"最常用的一种指标，假定当前样本集合D中第i类样本所占的比例为$P_i$，则D的信息熵定义为：\n\n$$Ent(D)=-\\sum_{i=1}^{n}{P_i \\cdot log{P_i}}$$\n\n- 某随机事件结果的种类越多，则该事件的熵越大（不确定性越大）\n- 某随机事件的各种可能发生结果概率越均匀，则该事件的熵越大（不确定性越大）\n- 值域：>= 0\n- 缺点是计算量大（log）\n\n### 信息增益(ID3)\n\n$$Gain(D,a)=Ent(D)-\\sum_{i=1}^{n}{\\frac{|D^i|}{|D|}{Ent(D^i)}}$$\n\n- 划分前的信息熵-划分后的总信息熵\n- 越大越好\n\n### 信息增益率(C4.5)\n\n$$GainRatio(D,a)=\\frac{Gain(D,a)}{IV(a)}$$\n\n$$IV(a)=-\\sum_{i=1}^{i}{\\frac{|D^i|}{|D|}{log_2{\\frac{|D^i|}{|D|}}}}$$\n\n### 基尼指数(CART)\n\n$$G=1-\\sum_{i=1}^{n}{P_i^2}$$\n\n- 值域：0~1\n\n## 常见算法\n\n- ID3：    \n    - 只能使用熵的信息增益处理离散特征的分类问题\n    - 取值高的属性，更容易使数据更纯，其信息增益更大\n    - 训练得到的是一棵庞大且深度浅的树（可以把N个数据分成100%纯洁的N组）\n\n\n- C4.5：\n    - 支持连续特征，在计算信息增益比之前首先将其离散化（与ID3差别）\n    - 使用信息增益比的概念去除先选择多值特征的倾向\n    - 在训练后检测训练集的正确分类比，并剪枝产生错误较多的叶子结点\n\n\n- CART算法：\n    - 使用基尼系数代替熵进行信息增益计算、只使用二叉树，并提供解决回归问题的能力\n    - 以最小化不纯度，而不是最大化信息增益\n\n## DecisionTreeClassifier\n\n\n```python\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn import datasets\nfrom sklearn.model_selection import train_test_split\n\niris = datasets.load_iris()\niris_data = iris['data']\niris_label = iris['target']\niris_target_name = iris['target_names']\nX = np.array(iris_data)\nY = np.array(iris_label)\n\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.25)\n\nclf = DecisionTreeClassifier()\nclf = clf.fit(x_train, y_train)\n```\n\n\n```python\nfrom sklearn.metrics import roc_curve, auc\n\ny_pred = clf.predict(x_test)\n\nfalse_positive_rate, true_positive_rate, thresholds = roc_curve(\n    y_test, y_pred, pos_label=2)\n\nroc_auc = auc(false_positive_rate, true_positive_rate)\nroc_auc\n```\n\n\n\n\n    1.0\n\n\n\n### 调参\n\n超参数：\n- criterion: gini, entropy\n- max_depth\n- min_samples_split\n- min_samples_leaf\n- max_features\n- max_leaf_nodes\n- min_impurity_decrease\n\n#### max_depth\n\n要调整的第一个参数是max_depth（树的深度）。 树越深，它就分裂的越多，更能捕获有关数据的信息。 我们拟合一个深度范围从1到32的决策树，并绘制训练和测试auc分数\n\n\n```python\nfrom matplotlib.legend_handler import HandlerLine2D\nimport matplotlib.pyplot as plt\n\nmax_depths = np.linspace(1, 32, 32, endpoint=True)\ntrain_results = []\ntest_results = []\n\nfor max_depth in max_depths:\n    dt = DecisionTreeClassifier(max_depth=max_depth)\n    dt.fit(x_train, y_train)\n    train_pred = dt.predict(x_train)\n    false_positive_rate, true_positive_rate, thresholds = roc_curve(\n        y_train, train_pred, pos_label=2)\n    roc_auc = auc(false_positive_rate, true_positive_rate)\n\n    train_results.append(roc_auc)\n    y_pred = dt.predict(x_test)\n    false_positive_rate, true_positive_rate, thresholds = roc_curve(\n        y_test, y_pred, pos_label=2)\n    roc_auc = auc(false_positive_rate, true_positive_rate)\n\n    test_results.append(roc_auc)\n\nline1, = plt.plot(max_depths, train_results, 'b', label='Train AUC')\nline2, = plt.plot(max_depths, test_results, 'r', label='Test AUC')\nplt.legend(handler_map={line1: HandlerLine2D(numpoints=2)})\nplt.ylabel('AUC score')\nplt.xlabel('Tree depth')\n\nplt.savefig(\"../img/2019-07-29_决策树_1.png\")\nplt.close()\n```\n\n![](/img/2019-07-29_决策树_1.png)\n\n#### min_samples_split\n\nmin_samples_split表示拆分内部节点所需的最小样本数。 这可以在考虑每个节点处的至少一个样本，并考虑每个节点处的所有样本之间变化。 当我们增加此参数时，给与树更多的约束，因为它必须在每个节点处考虑更多样本。 在这里，我们将从10％到100％的样本中改变参数\n\n\n```python\nmin_samples_splits = np.linspace(0.1, 1.0, 10, endpoint=True)\ntrain_results = []\ntest_results = []\nfor min_samples_split in min_samples_splits:\n    dt = DecisionTreeClassifier(min_samples_split=min_samples_split)\n    dt.fit(x_train, y_train)\n    train_pred = dt.predict(x_train)\n    false_positive_rate, true_positive_rate, thresholds = roc_curve(\n        y_train, train_pred, pos_label=2)\n    roc_auc = auc(false_positive_rate, true_positive_rate)\n    train_results.append(roc_auc)\n    y_pred = dt.predict(x_test)\n    false_positive_rate, true_positive_rate, thresholds = roc_curve(\n        y_test, y_pred, pos_label=2)\n    roc_auc = auc(false_positive_rate, true_positive_rate)\n    test_results.append(roc_auc)\nfrom matplotlib.legend_handler import HandlerLine2D\nline1, = plt.plot(min_samples_splits, train_results, 'b', label='Train AUC')\nline2, = plt.plot(min_samples_splits, test_results, 'r', label='Test AUC')\nplt.legend(handler_map={line1: HandlerLine2D(numpoints=2)})\nplt.ylabel('AUC score')\nplt.xlabel('min samples split')\n\nplt.savefig(\"../img/2019-07-29_决策树_2.png\")\nplt.close()\n```\n\n![](/img/2019-07-29_决策树_2.png)\n\n#### min_samples_leaf\nmin_samples_leaf是叶节点所需的最小样本数。 此参数类似于min_samples_splits，但是，这描述了叶子（树的基础）处的样本的最小样本数\n\n\n```python\nmin_samples_leafs = np.linspace(0.1, 0.5, 5, endpoint=True)\ntrain_results = []\ntest_results = []\nfor min_samples_leaf in min_samples_leafs:\n    dt = DecisionTreeClassifier(min_samples_leaf=min_samples_leaf)\n    dt.fit(x_train, y_train)\n    train_pred = dt.predict(x_train)\n    false_positive_rate, true_positive_rate, thresholds = roc_curve(\n        y_train, train_pred, pos_label=2)\n    roc_auc = auc(false_positive_rate, true_positive_rate)\n    train_results.append(roc_auc)\n    y_pred = dt.predict(x_test)\n    false_positive_rate, true_positive_rate, thresholds = roc_curve(\n        y_test, y_pred, pos_label=2)\n    roc_auc = auc(false_positive_rate, true_positive_rate)\n    test_results.append(roc_auc)\nfrom matplotlib.legend_handler import HandlerLine2D\nline1, = plt.plot(min_samples_leafs, train_results, 'b', label='Train AUC')\nline2, = plt.plot(min_samples_leafs, test_results, 'r', label='Test AUC')\nplt.legend(handler_map={line1: HandlerLine2D(numpoints=2)})\nplt.ylabel('AUC score')\nplt.xlabel('min samples leaf')\n\nplt.savefig(\"../img/2019-07-29_决策树_3.png\")\nplt.close()\n```\n\n![](/img/2019-07-29_决策树_3.png)\n\n#### max_features\nmax_features表示查找最佳拆分时要考虑的要最大特征数量\n\n\n```python\nmax_features = list(range(1, len(iris_target_name)))\ntrain_results = []\ntest_results = []\nfor max_feature in max_features:\n    dt = DecisionTreeClassifier(max_features=max_feature)\n    dt.fit(x_train, y_train)\n    train_pred = dt.predict(x_train)\n    false_positive_rate, true_positive_rate, thresholds = roc_curve(\n        y_train, train_pred, pos_label=2)\n    roc_auc = auc(false_positive_rate, true_positive_rate)\n    train_results.append(roc_auc)\n    y_pred = dt.predict(x_test)\n    false_positive_rate, true_positive_rate, thresholds = roc_curve(\n        y_test, y_pred, pos_label=2)\n    roc_auc = auc(false_positive_rate, true_positive_rate)\n    test_results.append(roc_auc)\n\nfrom matplotlib.legend_handler import HandlerLine2D\n\nline1, = plt.plot(max_features, train_results, 'b', label='Train AUC')\nline2, = plt.plot(max_features, test_results, 'r', label='Test AUC')\nplt.legend(handler_map={line1: HandlerLine2D(numpoints=2)})\nplt.ylabel('AUC score')\nplt.xlabel('max features')\n\nplt.savefig(\"../img/2019-07-29_决策树_4.png\")\nplt.close()\n```\n\n![](/img/2019-07-29_决策树_4.png)\n\n## 树的可视化\n\n\n```python\nfrom IPython.display import display, Image\nimport graphviz\nimport pydotplus as pdp\n\ndot_data = tree.export_graphviz(clf, out_file = None,\n                               feature_names = [\"标签A\",\"标签B\",\"标签C\"],\n                               class_names = [\"分类A\",\"分类B\"],\n                               filled = True,\n                               rotate = False)\n\n# 要先用brew install graphviz\ngraph = pdp.graph_from_dot_data(dot_data)\nimg = Image(graph.create_png())\n```\n\n![](/img/2019-07-29_决策树_5.png)\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n2. [决策树（四）决策树调参](https://www.cnblogs.com/jin-liang/p/9638197.html)\n","slug":"2019-07-29_决策树","published":1,"updated":"2021-04-06T13:54:02.171Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5qm000m9ohzd9tfe21o","content":"<h2 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h2><ul>\n<li>分而治之(divide-andconquer)：<ul>\n<li>自根至叶的递归过程</li>\n<li>在每个中间结点寻找一个”划分”属性</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>过程：<ul>\n<li>把数据集分成两组</li>\n<li>不同数据点被完美区分（Pure）开了么？</li>\n<li>不是：重复楼上两步</li>\n<li>是的：打完收⼯</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"建树逻辑\"><a href=\"#建树逻辑\" class=\"headerlink\" title=\"建树逻辑\"></a>建树逻辑</h3><p>所有子树信息价值（信息熵、基尼指数等）的和必定小于等于原来整体数据集的信息价值，信息增益用来衡量减少的程度</p>\n<blockquote>\n<p>def build(D=数据集)：</p>\n<p>　　if D所有数据目标值 y 都相同：</p>\n<p>　　　　return  #递回停止条件</p>\n<p>　　for i in D中的所有特征：</p>\n<p>　　　　计算用i划分子树后获得的信息增益</p>\n<p>　　if 所有特征都没有大于零的信息增益：</p>\n<p>　　　　return  #递回停止条件</p>\n<p>　　被选择的特征 x = 具有最大信息增益的特征</p>\n<p>　　for sub in 按照x划分子树后的数据集：</p>\n<p>　　　　build(sub)</p>\n</blockquote>\n<h3 id=\"停止条件\"><a href=\"#停止条件\" class=\"headerlink\" title=\"停止条件\"></a>停止条件</h3><ul>\n<li>当前结点包含的样本全属于同一类别，无须划分</li>\n<li>当前属性集为空，或是所有样本在所有属性上取值相同，无法划分</li>\n<li>当前结点包含的样本集合为空，不能划分</li>\n</ul>\n<h3 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h3><ul>\n<li>优势：<ul>\n<li>⾮⿊盒</li>\n<li>轻松去除⽆关attribute (Gain = 0)</li>\n<li>Test起来很快 (O(depth))</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>劣势：<ul>\n<li>只能线性分割数据</li>\n<li>贪婪算法 (每次分裂都选最好，有可能不是全局最好)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"信息价值指标\"><a href=\"#信息价值指标\" class=\"headerlink\" title=\"信息价值指标\"></a>信息价值指标</h2><h3 id=\"信息熵\"><a href=\"#信息熵\" class=\"headerlink\" title=\"信息熵\"></a>信息熵</h3><p>信息熵是度量样本集合”纯度”最常用的一种指标，假定当前样本集合D中第i类样本所占的比例为$P_i$，则D的信息熵定义为：</p>\n<script type=\"math/tex; mode=display\">Ent(D)=-\\sum_{i=1}^{n}{P_i \\cdot log{P_i}}</script><ul>\n<li>某随机事件结果的种类越多，则该事件的熵越大（不确定性越大）</li>\n<li>某随机事件的各种可能发生结果概率越均匀，则该事件的熵越大（不确定性越大）</li>\n<li>值域：&gt;= 0</li>\n<li>缺点是计算量大（log）</li>\n</ul>\n<h3 id=\"信息增益-ID3\"><a href=\"#信息增益-ID3\" class=\"headerlink\" title=\"信息增益(ID3)\"></a>信息增益(ID3)</h3><script type=\"math/tex; mode=display\">Gain(D,a)=Ent(D)-\\sum_{i=1}^{n}{\\frac{|D^i|}{|D|}{Ent(D^i)}}</script><ul>\n<li>划分前的信息熵-划分后的总信息熵</li>\n<li>越大越好</li>\n</ul>\n<h3 id=\"信息增益率-C4-5\"><a href=\"#信息增益率-C4-5\" class=\"headerlink\" title=\"信息增益率(C4.5)\"></a>信息增益率(C4.5)</h3><script type=\"math/tex; mode=display\">GainRatio(D,a)=\\frac{Gain(D,a)}{IV(a)}</script><script type=\"math/tex; mode=display\">IV(a)=-\\sum_{i=1}^{i}{\\frac{|D^i|}{|D|}{log_2{\\frac{|D^i|}{|D|}}}}</script><h3 id=\"基尼指数-CART\"><a href=\"#基尼指数-CART\" class=\"headerlink\" title=\"基尼指数(CART)\"></a>基尼指数(CART)</h3><script type=\"math/tex; mode=display\">G=1-\\sum_{i=1}^{n}{P_i^2}</script><ul>\n<li>值域：0~1</li>\n</ul>\n<h2 id=\"常见算法\"><a href=\"#常见算法\" class=\"headerlink\" title=\"常见算法\"></a>常见算法</h2><ul>\n<li>ID3：    <ul>\n<li>只能使用熵的信息增益处理离散特征的分类问题</li>\n<li>取值高的属性，更容易使数据更纯，其信息增益更大</li>\n<li>训练得到的是一棵庞大且深度浅的树（可以把N个数据分成100%纯洁的N组）</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>C4.5：<ul>\n<li>支持连续特征，在计算信息增益比之前首先将其离散化（与ID3差别）</li>\n<li>使用信息增益比的概念去除先选择多值特征的倾向</li>\n<li>在训练后检测训练集的正确分类比，并剪枝产生错误较多的叶子结点</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>CART算法：<ul>\n<li>使用基尼系数代替熵进行信息增益计算、只使用二叉树，并提供解决回归问题的能力</li>\n<li>以最小化不纯度，而不是最大化信息增益</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"DecisionTreeClassifier\"><a href=\"#DecisionTreeClassifier\" class=\"headerlink\" title=\"DecisionTreeClassifier\"></a>DecisionTreeClassifier</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> datasets</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\">iris = datasets.load_iris()</span><br><span class=\"line\">iris_data = iris[<span class=\"string\">&#x27;data&#x27;</span>]</span><br><span class=\"line\">iris_label = iris[<span class=\"string\">&#x27;target&#x27;</span>]</span><br><span class=\"line\">iris_target_name = iris[<span class=\"string\">&#x27;target_names&#x27;</span>]</span><br><span class=\"line\">X = np.array(iris_data)</span><br><span class=\"line\">Y = np.array(iris_label)</span><br><span class=\"line\"></span><br><span class=\"line\">x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=<span class=\"number\">0.25</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">clf = DecisionTreeClassifier()</span><br><span class=\"line\">clf = clf.fit(x_train, y_train)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> roc_curve, auc</span><br><span class=\"line\"></span><br><span class=\"line\">y_pred = clf.predict(x_test)</span><br><span class=\"line\"></span><br><span class=\"line\">false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">    y_test, y_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">roc_auc</span><br></pre></td></tr></table></figure>\n<pre><code>1.0\n</code></pre><h3 id=\"调参\"><a href=\"#调参\" class=\"headerlink\" title=\"调参\"></a>调参</h3><p>超参数：</p>\n<ul>\n<li>criterion: gini, entropy</li>\n<li>max_depth</li>\n<li>min_samples_split</li>\n<li>min_samples_leaf</li>\n<li>max_features</li>\n<li>max_leaf_nodes</li>\n<li>min_impurity_decrease</li>\n</ul>\n<h4 id=\"max-depth\"><a href=\"#max-depth\" class=\"headerlink\" title=\"max_depth\"></a>max_depth</h4><p>要调整的第一个参数是max_depth（树的深度）。 树越深，它就分裂的越多，更能捕获有关数据的信息。 我们拟合一个深度范围从1到32的决策树，并绘制训练和测试auc分数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.legend_handler <span class=\"keyword\">import</span> HandlerLine2D</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">max_depths = np.linspace(<span class=\"number\">1</span>, <span class=\"number\">32</span>, <span class=\"number\">32</span>, endpoint=<span class=\"literal\">True</span>)</span><br><span class=\"line\">train_results = []</span><br><span class=\"line\">test_results = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> max_depth <span class=\"keyword\">in</span> max_depths:</span><br><span class=\"line\">    dt = DecisionTreeClassifier(max_depth=max_depth)</span><br><span class=\"line\">    dt.fit(x_train, y_train)</span><br><span class=\"line\">    train_pred = dt.predict(x_train)</span><br><span class=\"line\">    false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">        y_train, train_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\">    roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\"></span><br><span class=\"line\">    train_results.append(roc_auc)</span><br><span class=\"line\">    y_pred = dt.predict(x_test)</span><br><span class=\"line\">    false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">        y_test, y_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\">    roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\"></span><br><span class=\"line\">    test_results.append(roc_auc)</span><br><span class=\"line\"></span><br><span class=\"line\">line1, = plt.plot(max_depths, train_results, <span class=\"string\">&#x27;b&#x27;</span>, label=<span class=\"string\">&#x27;Train AUC&#x27;</span>)</span><br><span class=\"line\">line2, = plt.plot(max_depths, test_results, <span class=\"string\">&#x27;r&#x27;</span>, label=<span class=\"string\">&#x27;Test AUC&#x27;</span>)</span><br><span class=\"line\">plt.legend(handler_map=&#123;line1: HandlerLine2D(numpoints=<span class=\"number\">2</span>)&#125;)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;AUC score&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Tree depth&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-07-29_决策树_1.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-29_决策树_1.png\"\n                      alt=\"\"\n                ></p>\n<h4 id=\"min-samples-split\"><a href=\"#min-samples-split\" class=\"headerlink\" title=\"min_samples_split\"></a>min_samples_split</h4><p>min_samples_split表示拆分内部节点所需的最小样本数。 这可以在考虑每个节点处的至少一个样本，并考虑每个节点处的所有样本之间变化。 当我们增加此参数时，给与树更多的约束，因为它必须在每个节点处考虑更多样本。 在这里，我们将从10％到100％的样本中改变参数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">min_samples_splits = np.linspace(<span class=\"number\">0.1</span>, <span class=\"number\">1.0</span>, <span class=\"number\">10</span>, endpoint=<span class=\"literal\">True</span>)</span><br><span class=\"line\">train_results = []</span><br><span class=\"line\">test_results = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> min_samples_split <span class=\"keyword\">in</span> min_samples_splits:</span><br><span class=\"line\">    dt = DecisionTreeClassifier(min_samples_split=min_samples_split)</span><br><span class=\"line\">    dt.fit(x_train, y_train)</span><br><span class=\"line\">    train_pred = dt.predict(x_train)</span><br><span class=\"line\">    false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">        y_train, train_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\">    roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">    train_results.append(roc_auc)</span><br><span class=\"line\">    y_pred = dt.predict(x_test)</span><br><span class=\"line\">    false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">        y_test, y_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\">    roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">    test_results.append(roc_auc)</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.legend_handler <span class=\"keyword\">import</span> HandlerLine2D</span><br><span class=\"line\">line1, = plt.plot(min_samples_splits, train_results, <span class=\"string\">&#x27;b&#x27;</span>, label=<span class=\"string\">&#x27;Train AUC&#x27;</span>)</span><br><span class=\"line\">line2, = plt.plot(min_samples_splits, test_results, <span class=\"string\">&#x27;r&#x27;</span>, label=<span class=\"string\">&#x27;Test AUC&#x27;</span>)</span><br><span class=\"line\">plt.legend(handler_map=&#123;line1: HandlerLine2D(numpoints=<span class=\"number\">2</span>)&#125;)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;AUC score&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;min samples split&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-07-29_决策树_2.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-29_决策树_2.png\"\n                      alt=\"\"\n                ></p>\n<h4 id=\"min-samples-leaf\"><a href=\"#min-samples-leaf\" class=\"headerlink\" title=\"min_samples_leaf\"></a>min_samples_leaf</h4><p>min_samples_leaf是叶节点所需的最小样本数。 此参数类似于min_samples_splits，但是，这描述了叶子（树的基础）处的样本的最小样本数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">min_samples_leafs = np.linspace(<span class=\"number\">0.1</span>, <span class=\"number\">0.5</span>, <span class=\"number\">5</span>, endpoint=<span class=\"literal\">True</span>)</span><br><span class=\"line\">train_results = []</span><br><span class=\"line\">test_results = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> min_samples_leaf <span class=\"keyword\">in</span> min_samples_leafs:</span><br><span class=\"line\">    dt = DecisionTreeClassifier(min_samples_leaf=min_samples_leaf)</span><br><span class=\"line\">    dt.fit(x_train, y_train)</span><br><span class=\"line\">    train_pred = dt.predict(x_train)</span><br><span class=\"line\">    false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">        y_train, train_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\">    roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">    train_results.append(roc_auc)</span><br><span class=\"line\">    y_pred = dt.predict(x_test)</span><br><span class=\"line\">    false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">        y_test, y_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\">    roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">    test_results.append(roc_auc)</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.legend_handler <span class=\"keyword\">import</span> HandlerLine2D</span><br><span class=\"line\">line1, = plt.plot(min_samples_leafs, train_results, <span class=\"string\">&#x27;b&#x27;</span>, label=<span class=\"string\">&#x27;Train AUC&#x27;</span>)</span><br><span class=\"line\">line2, = plt.plot(min_samples_leafs, test_results, <span class=\"string\">&#x27;r&#x27;</span>, label=<span class=\"string\">&#x27;Test AUC&#x27;</span>)</span><br><span class=\"line\">plt.legend(handler_map=&#123;line1: HandlerLine2D(numpoints=<span class=\"number\">2</span>)&#125;)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;AUC score&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;min samples leaf&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-07-29_决策树_3.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-29_决策树_3.png\"\n                      alt=\"\"\n                ></p>\n<h4 id=\"max-features\"><a href=\"#max-features\" class=\"headerlink\" title=\"max_features\"></a>max_features</h4><p>max_features表示查找最佳拆分时要考虑的要最大特征数量</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">max_features = <span class=\"built_in\">list</span>(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(iris_target_name)))</span><br><span class=\"line\">train_results = []</span><br><span class=\"line\">test_results = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> max_feature <span class=\"keyword\">in</span> max_features:</span><br><span class=\"line\">    dt = DecisionTreeClassifier(max_features=max_feature)</span><br><span class=\"line\">    dt.fit(x_train, y_train)</span><br><span class=\"line\">    train_pred = dt.predict(x_train)</span><br><span class=\"line\">    false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">        y_train, train_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\">    roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">    train_results.append(roc_auc)</span><br><span class=\"line\">    y_pred = dt.predict(x_test)</span><br><span class=\"line\">    false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">        y_test, y_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\">    roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">    test_results.append(roc_auc)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.legend_handler <span class=\"keyword\">import</span> HandlerLine2D</span><br><span class=\"line\"></span><br><span class=\"line\">line1, = plt.plot(max_features, train_results, <span class=\"string\">&#x27;b&#x27;</span>, label=<span class=\"string\">&#x27;Train AUC&#x27;</span>)</span><br><span class=\"line\">line2, = plt.plot(max_features, test_results, <span class=\"string\">&#x27;r&#x27;</span>, label=<span class=\"string\">&#x27;Test AUC&#x27;</span>)</span><br><span class=\"line\">plt.legend(handler_map=&#123;line1: HandlerLine2D(numpoints=<span class=\"number\">2</span>)&#125;)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;AUC score&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;max features&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-07-29_决策树_4.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-29_决策树_4.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"树的可视化\"><a href=\"#树的可视化\" class=\"headerlink\" title=\"树的可视化\"></a>树的可视化</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> IPython.display <span class=\"keyword\">import</span> display, Image</span><br><span class=\"line\"><span class=\"keyword\">import</span> graphviz</span><br><span class=\"line\"><span class=\"keyword\">import</span> pydotplus <span class=\"keyword\">as</span> pdp</span><br><span class=\"line\"></span><br><span class=\"line\">dot_data = tree.export_graphviz(clf, out_file = <span class=\"literal\">None</span>,</span><br><span class=\"line\">                               feature_names = [<span class=\"string\">&quot;标签A&quot;</span>,<span class=\"string\">&quot;标签B&quot;</span>,<span class=\"string\">&quot;标签C&quot;</span>],</span><br><span class=\"line\">                               class_names = [<span class=\"string\">&quot;分类A&quot;</span>,<span class=\"string\">&quot;分类B&quot;</span>],</span><br><span class=\"line\">                               filled = <span class=\"literal\">True</span>,</span><br><span class=\"line\">                               rotate = <span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 要先用brew install graphviz</span></span><br><span class=\"line\">graph = pdp.graph_from_dot_data(dot_data)</span><br><span class=\"line\">img = Image(graph.create_png())</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-29_决策树_5.png\"\n                      alt=\"\"\n                ></p>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/jin-liang/p/9638197.html\" >决策树（四）决策树调参<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h2><ul>\n<li>分而治之(divide-andconquer)：<ul>\n<li>自根至叶的递归过程</li>\n<li>在每个中间结点寻找一个”划分”属性</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>过程：<ul>\n<li>把数据集分成两组</li>\n<li>不同数据点被完美区分（Pure）开了么？</li>\n<li>不是：重复楼上两步</li>\n<li>是的：打完收⼯</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"建树逻辑\"><a href=\"#建树逻辑\" class=\"headerlink\" title=\"建树逻辑\"></a>建树逻辑</h3><p>所有子树信息价值（信息熵、基尼指数等）的和必定小于等于原来整体数据集的信息价值，信息增益用来衡量减少的程度</p>\n<blockquote>\n<p>def build(D=数据集)：</p>\n<p>　　if D所有数据目标值 y 都相同：</p>\n<p>　　　　return  #递回停止条件</p>\n<p>　　for i in D中的所有特征：</p>\n<p>　　　　计算用i划分子树后获得的信息增益</p>\n<p>　　if 所有特征都没有大于零的信息增益：</p>\n<p>　　　　return  #递回停止条件</p>\n<p>　　被选择的特征 x = 具有最大信息增益的特征</p>\n<p>　　for sub in 按照x划分子树后的数据集：</p>\n<p>　　　　build(sub)</p>\n</blockquote>\n<h3 id=\"停止条件\"><a href=\"#停止条件\" class=\"headerlink\" title=\"停止条件\"></a>停止条件</h3><ul>\n<li>当前结点包含的样本全属于同一类别，无须划分</li>\n<li>当前属性集为空，或是所有样本在所有属性上取值相同，无法划分</li>\n<li>当前结点包含的样本集合为空，不能划分</li>\n</ul>\n<h3 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h3><ul>\n<li>优势：<ul>\n<li>⾮⿊盒</li>\n<li>轻松去除⽆关attribute (Gain = 0)</li>\n<li>Test起来很快 (O(depth))</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>劣势：<ul>\n<li>只能线性分割数据</li>\n<li>贪婪算法 (每次分裂都选最好，有可能不是全局最好)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"信息价值指标\"><a href=\"#信息价值指标\" class=\"headerlink\" title=\"信息价值指标\"></a>信息价值指标</h2><h3 id=\"信息熵\"><a href=\"#信息熵\" class=\"headerlink\" title=\"信息熵\"></a>信息熵</h3><p>信息熵是度量样本集合”纯度”最常用的一种指标，假定当前样本集合D中第i类样本所占的比例为$P_i$，则D的信息熵定义为：</p>\n<script type=\"math/tex; mode=display\">Ent(D)=-\\sum_{i=1}^{n}{P_i \\cdot log{P_i}}</script><ul>\n<li>某随机事件结果的种类越多，则该事件的熵越大（不确定性越大）</li>\n<li>某随机事件的各种可能发生结果概率越均匀，则该事件的熵越大（不确定性越大）</li>\n<li>值域：&gt;= 0</li>\n<li>缺点是计算量大（log）</li>\n</ul>\n<h3 id=\"信息增益-ID3\"><a href=\"#信息增益-ID3\" class=\"headerlink\" title=\"信息增益(ID3)\"></a>信息增益(ID3)</h3><script type=\"math/tex; mode=display\">Gain(D,a)=Ent(D)-\\sum_{i=1}^{n}{\\frac{|D^i|}{|D|}{Ent(D^i)}}</script><ul>\n<li>划分前的信息熵-划分后的总信息熵</li>\n<li>越大越好</li>\n</ul>\n<h3 id=\"信息增益率-C4-5\"><a href=\"#信息增益率-C4-5\" class=\"headerlink\" title=\"信息增益率(C4.5)\"></a>信息增益率(C4.5)</h3><script type=\"math/tex; mode=display\">GainRatio(D,a)=\\frac{Gain(D,a)}{IV(a)}</script><script type=\"math/tex; mode=display\">IV(a)=-\\sum_{i=1}^{i}{\\frac{|D^i|}{|D|}{log_2{\\frac{|D^i|}{|D|}}}}</script><h3 id=\"基尼指数-CART\"><a href=\"#基尼指数-CART\" class=\"headerlink\" title=\"基尼指数(CART)\"></a>基尼指数(CART)</h3><script type=\"math/tex; mode=display\">G=1-\\sum_{i=1}^{n}{P_i^2}</script><ul>\n<li>值域：0~1</li>\n</ul>\n<h2 id=\"常见算法\"><a href=\"#常见算法\" class=\"headerlink\" title=\"常见算法\"></a>常见算法</h2><ul>\n<li>ID3：    <ul>\n<li>只能使用熵的信息增益处理离散特征的分类问题</li>\n<li>取值高的属性，更容易使数据更纯，其信息增益更大</li>\n<li>训练得到的是一棵庞大且深度浅的树（可以把N个数据分成100%纯洁的N组）</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>C4.5：<ul>\n<li>支持连续特征，在计算信息增益比之前首先将其离散化（与ID3差别）</li>\n<li>使用信息增益比的概念去除先选择多值特征的倾向</li>\n<li>在训练后检测训练集的正确分类比，并剪枝产生错误较多的叶子结点</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>CART算法：<ul>\n<li>使用基尼系数代替熵进行信息增益计算、只使用二叉树，并提供解决回归问题的能力</li>\n<li>以最小化不纯度，而不是最大化信息增益</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"DecisionTreeClassifier\"><a href=\"#DecisionTreeClassifier\" class=\"headerlink\" title=\"DecisionTreeClassifier\"></a>DecisionTreeClassifier</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> datasets</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\">iris = datasets.load_iris()</span><br><span class=\"line\">iris_data = iris[<span class=\"string\">&#x27;data&#x27;</span>]</span><br><span class=\"line\">iris_label = iris[<span class=\"string\">&#x27;target&#x27;</span>]</span><br><span class=\"line\">iris_target_name = iris[<span class=\"string\">&#x27;target_names&#x27;</span>]</span><br><span class=\"line\">X = np.array(iris_data)</span><br><span class=\"line\">Y = np.array(iris_label)</span><br><span class=\"line\"></span><br><span class=\"line\">x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=<span class=\"number\">0.25</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">clf = DecisionTreeClassifier()</span><br><span class=\"line\">clf = clf.fit(x_train, y_train)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> roc_curve, auc</span><br><span class=\"line\"></span><br><span class=\"line\">y_pred = clf.predict(x_test)</span><br><span class=\"line\"></span><br><span class=\"line\">false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">    y_test, y_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">roc_auc</span><br></pre></td></tr></table></figure>\n<pre><code>1.0\n</code></pre><h3 id=\"调参\"><a href=\"#调参\" class=\"headerlink\" title=\"调参\"></a>调参</h3><p>超参数：</p>\n<ul>\n<li>criterion: gini, entropy</li>\n<li>max_depth</li>\n<li>min_samples_split</li>\n<li>min_samples_leaf</li>\n<li>max_features</li>\n<li>max_leaf_nodes</li>\n<li>min_impurity_decrease</li>\n</ul>\n<h4 id=\"max-depth\"><a href=\"#max-depth\" class=\"headerlink\" title=\"max_depth\"></a>max_depth</h4><p>要调整的第一个参数是max_depth（树的深度）。 树越深，它就分裂的越多，更能捕获有关数据的信息。 我们拟合一个深度范围从1到32的决策树，并绘制训练和测试auc分数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.legend_handler <span class=\"keyword\">import</span> HandlerLine2D</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"></span><br><span class=\"line\">max_depths = np.linspace(<span class=\"number\">1</span>, <span class=\"number\">32</span>, <span class=\"number\">32</span>, endpoint=<span class=\"literal\">True</span>)</span><br><span class=\"line\">train_results = []</span><br><span class=\"line\">test_results = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> max_depth <span class=\"keyword\">in</span> max_depths:</span><br><span class=\"line\">    dt = DecisionTreeClassifier(max_depth=max_depth)</span><br><span class=\"line\">    dt.fit(x_train, y_train)</span><br><span class=\"line\">    train_pred = dt.predict(x_train)</span><br><span class=\"line\">    false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">        y_train, train_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\">    roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\"></span><br><span class=\"line\">    train_results.append(roc_auc)</span><br><span class=\"line\">    y_pred = dt.predict(x_test)</span><br><span class=\"line\">    false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">        y_test, y_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\">    roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\"></span><br><span class=\"line\">    test_results.append(roc_auc)</span><br><span class=\"line\"></span><br><span class=\"line\">line1, = plt.plot(max_depths, train_results, <span class=\"string\">&#x27;b&#x27;</span>, label=<span class=\"string\">&#x27;Train AUC&#x27;</span>)</span><br><span class=\"line\">line2, = plt.plot(max_depths, test_results, <span class=\"string\">&#x27;r&#x27;</span>, label=<span class=\"string\">&#x27;Test AUC&#x27;</span>)</span><br><span class=\"line\">plt.legend(handler_map=&#123;line1: HandlerLine2D(numpoints=<span class=\"number\">2</span>)&#125;)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;AUC score&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;Tree depth&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-07-29_决策树_1.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-29_决策树_1.png\"\n                      alt=\"\"\n                ></p>\n<h4 id=\"min-samples-split\"><a href=\"#min-samples-split\" class=\"headerlink\" title=\"min_samples_split\"></a>min_samples_split</h4><p>min_samples_split表示拆分内部节点所需的最小样本数。 这可以在考虑每个节点处的至少一个样本，并考虑每个节点处的所有样本之间变化。 当我们增加此参数时，给与树更多的约束，因为它必须在每个节点处考虑更多样本。 在这里，我们将从10％到100％的样本中改变参数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">min_samples_splits = np.linspace(<span class=\"number\">0.1</span>, <span class=\"number\">1.0</span>, <span class=\"number\">10</span>, endpoint=<span class=\"literal\">True</span>)</span><br><span class=\"line\">train_results = []</span><br><span class=\"line\">test_results = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> min_samples_split <span class=\"keyword\">in</span> min_samples_splits:</span><br><span class=\"line\">    dt = DecisionTreeClassifier(min_samples_split=min_samples_split)</span><br><span class=\"line\">    dt.fit(x_train, y_train)</span><br><span class=\"line\">    train_pred = dt.predict(x_train)</span><br><span class=\"line\">    false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">        y_train, train_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\">    roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">    train_results.append(roc_auc)</span><br><span class=\"line\">    y_pred = dt.predict(x_test)</span><br><span class=\"line\">    false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">        y_test, y_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\">    roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">    test_results.append(roc_auc)</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.legend_handler <span class=\"keyword\">import</span> HandlerLine2D</span><br><span class=\"line\">line1, = plt.plot(min_samples_splits, train_results, <span class=\"string\">&#x27;b&#x27;</span>, label=<span class=\"string\">&#x27;Train AUC&#x27;</span>)</span><br><span class=\"line\">line2, = plt.plot(min_samples_splits, test_results, <span class=\"string\">&#x27;r&#x27;</span>, label=<span class=\"string\">&#x27;Test AUC&#x27;</span>)</span><br><span class=\"line\">plt.legend(handler_map=&#123;line1: HandlerLine2D(numpoints=<span class=\"number\">2</span>)&#125;)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;AUC score&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;min samples split&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-07-29_决策树_2.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-29_决策树_2.png\"\n                      alt=\"\"\n                ></p>\n<h4 id=\"min-samples-leaf\"><a href=\"#min-samples-leaf\" class=\"headerlink\" title=\"min_samples_leaf\"></a>min_samples_leaf</h4><p>min_samples_leaf是叶节点所需的最小样本数。 此参数类似于min_samples_splits，但是，这描述了叶子（树的基础）处的样本的最小样本数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">min_samples_leafs = np.linspace(<span class=\"number\">0.1</span>, <span class=\"number\">0.5</span>, <span class=\"number\">5</span>, endpoint=<span class=\"literal\">True</span>)</span><br><span class=\"line\">train_results = []</span><br><span class=\"line\">test_results = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> min_samples_leaf <span class=\"keyword\">in</span> min_samples_leafs:</span><br><span class=\"line\">    dt = DecisionTreeClassifier(min_samples_leaf=min_samples_leaf)</span><br><span class=\"line\">    dt.fit(x_train, y_train)</span><br><span class=\"line\">    train_pred = dt.predict(x_train)</span><br><span class=\"line\">    false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">        y_train, train_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\">    roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">    train_results.append(roc_auc)</span><br><span class=\"line\">    y_pred = dt.predict(x_test)</span><br><span class=\"line\">    false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">        y_test, y_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\">    roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">    test_results.append(roc_auc)</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.legend_handler <span class=\"keyword\">import</span> HandlerLine2D</span><br><span class=\"line\">line1, = plt.plot(min_samples_leafs, train_results, <span class=\"string\">&#x27;b&#x27;</span>, label=<span class=\"string\">&#x27;Train AUC&#x27;</span>)</span><br><span class=\"line\">line2, = plt.plot(min_samples_leafs, test_results, <span class=\"string\">&#x27;r&#x27;</span>, label=<span class=\"string\">&#x27;Test AUC&#x27;</span>)</span><br><span class=\"line\">plt.legend(handler_map=&#123;line1: HandlerLine2D(numpoints=<span class=\"number\">2</span>)&#125;)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;AUC score&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;min samples leaf&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-07-29_决策树_3.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-29_决策树_3.png\"\n                      alt=\"\"\n                ></p>\n<h4 id=\"max-features\"><a href=\"#max-features\" class=\"headerlink\" title=\"max_features\"></a>max_features</h4><p>max_features表示查找最佳拆分时要考虑的要最大特征数量</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">max_features = <span class=\"built_in\">list</span>(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"built_in\">len</span>(iris_target_name)))</span><br><span class=\"line\">train_results = []</span><br><span class=\"line\">test_results = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> max_feature <span class=\"keyword\">in</span> max_features:</span><br><span class=\"line\">    dt = DecisionTreeClassifier(max_features=max_feature)</span><br><span class=\"line\">    dt.fit(x_train, y_train)</span><br><span class=\"line\">    train_pred = dt.predict(x_train)</span><br><span class=\"line\">    false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">        y_train, train_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\">    roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">    train_results.append(roc_auc)</span><br><span class=\"line\">    y_pred = dt.predict(x_test)</span><br><span class=\"line\">    false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">        y_test, y_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\">    roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">    test_results.append(roc_auc)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib.legend_handler <span class=\"keyword\">import</span> HandlerLine2D</span><br><span class=\"line\"></span><br><span class=\"line\">line1, = plt.plot(max_features, train_results, <span class=\"string\">&#x27;b&#x27;</span>, label=<span class=\"string\">&#x27;Train AUC&#x27;</span>)</span><br><span class=\"line\">line2, = plt.plot(max_features, test_results, <span class=\"string\">&#x27;r&#x27;</span>, label=<span class=\"string\">&#x27;Test AUC&#x27;</span>)</span><br><span class=\"line\">plt.legend(handler_map=&#123;line1: HandlerLine2D(numpoints=<span class=\"number\">2</span>)&#125;)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;AUC score&#x27;</span>)</span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;max features&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-07-29_决策树_4.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-29_决策树_4.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"树的可视化\"><a href=\"#树的可视化\" class=\"headerlink\" title=\"树的可视化\"></a>树的可视化</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> IPython.display <span class=\"keyword\">import</span> display, Image</span><br><span class=\"line\"><span class=\"keyword\">import</span> graphviz</span><br><span class=\"line\"><span class=\"keyword\">import</span> pydotplus <span class=\"keyword\">as</span> pdp</span><br><span class=\"line\"></span><br><span class=\"line\">dot_data = tree.export_graphviz(clf, out_file = <span class=\"literal\">None</span>,</span><br><span class=\"line\">                               feature_names = [<span class=\"string\">&quot;标签A&quot;</span>,<span class=\"string\">&quot;标签B&quot;</span>,<span class=\"string\">&quot;标签C&quot;</span>],</span><br><span class=\"line\">                               class_names = [<span class=\"string\">&quot;分类A&quot;</span>,<span class=\"string\">&quot;分类B&quot;</span>],</span><br><span class=\"line\">                               filled = <span class=\"literal\">True</span>,</span><br><span class=\"line\">                               rotate = <span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 要先用brew install graphviz</span></span><br><span class=\"line\">graph = pdp.graph_from_dot_data(dot_data)</span><br><span class=\"line\">img = Image(graph.create_png())</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-07-29_决策树_5.png\"\n                      alt=\"\"\n                ></p>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/jin-liang/p/9638197.html\" >决策树（四）决策树调参<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"网格搜寻","mathjax":false,"abbrlink":2828,"date":"2019-08-09T16:00:00.000Z","_content":"\n## 数据集载入\n\n\n```python\n# -*- coding: utf-8 -*-\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport warnings\nfrom sklearn.preprocessing import minmax_scale\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import Imputer\nfrom sklearn.model_selection import train_test_split\nwarnings.filterwarnings('ignore')\n\ndf = pd.read_csv(u\"2019-08-01_金融数据描述_data1.csv\",encoding = 'gbk')\n\n# 删除无用\ndelete = ['Unnamed: 0', 'custid', 'trade_no', 'bank_card_no','id_name','latest_query_time','source','loans_latest_time','first_transaction_time', 'student_feature']\ndf = df.drop(delete,axis=1)\n\n# 处理分类型特征\ndf['reg_preference_for_trad'] = LabelEncoder().fit_transform(df['reg_preference_for_trad'].astype(str))\n\n# 使用众数填充\nfor i in range(df.shape[1]):\n    feature = df.iloc[:,i].values.reshape(-1,1)\n    imp_mode = Imputer(strategy='most_frequent')\n    df.iloc[:,i] = imp_mode.fit_transform(feature)\n\n# 数据划分\nX = df[:].drop(\"status\",axis=1)\ny = df[\"status\"]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle = False)\n\n# 数据归一化\nX_train = minmax_scale(X_train)\nX_test =  minmax_scale(X_test)\n```\n\n## Simple Grid Search（使用Holdout验证）\n\n交叉验证的目的是为了让模型评估更加准确可信。\n\n缺点：\n- 最终的表现好坏与初始数据的划分结果有很大的关系，为了处理这种情况，可以采用交叉验证的方式来减少偶然性\n\n\n```python\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import train_test_split\n\nprint(\"Size of training set:{} size of testing set:{}\".format(X_train.shape[0],X_test.shape[0]))\n\n#### grid search start\nbest_score = 0\nfor gamma in [0.001,0.01,0.1,1,10,100]:\n    for C in [0.001,0.01,0.1,1,10,100]:\n        svm = SVC(gamma=gamma,C=C) #对于每种参数可能的组合，进行一次训练；\n        svm.fit(X_train,y_train)\n        score = svm.score(X_test,y_test)\n        if score > best_score: #找到表现最好的参数\n            best_score = score\n            best_parameters = {'gamma':gamma,'C':C}\n### grid search end\n\nprint(\"Best score:{:.2f}\".format(best_score))\nprint(\"Best parameters:{}\".format(best_parameters))\n```\n\n    Size of training set:3803 size of testing set:951\n    Best score:0.78\n    Best parameters:{'gamma': 0.1, 'C': 10}\n\n\n原始数据集划分成训练集和测试集以后，其中测试集除了用作调整参数，也用来测量模型的好坏；这样做导致最终的评分结果比实际效果要好，错估模型的泛化能力。\n\n解决方法是可以对训练集再进行一次划分，分成训练集和验证集，这样划分的结果就是：原始数据划分为3份，分别为：训练集、验证集和测试集；其中训练集用来模型训练，验证集用来调整参数，而测试集用来衡量模型表现好坏。\n\n\n```python\nX_trainval,y_trainval = X_train,y_train\nX_train,X_val,y_train,y_val = train_test_split(X_trainval,y_trainval)\nprint(\"Size of training set:{} size of validation set:{} size of teseting set:{}\".format(X_train.shape[0],X_val.shape[0],X_test.shape[0]))\n\nbest_score = 0.0\nfor gamma in [0.001,0.01,0.1,1,10,100]:\n    for C in [0.001,0.01,0.1,1,10,100]:\n        svm = SVC(gamma=gamma,C=C)\n        svm.fit(X_train,y_train)\n        score = svm.score(X_val,y_val)\n        if score > best_score:\n            best_score = score\n            best_parameters = {'gamma':gamma,'C':C}\nsvm = SVC(**best_parameters)\nsvm.fit(X_trainval,y_trainval)\ntest_score = svm.score(X_test,y_test)\nprint(\"Best score on validation set:{:.2f}\".format(best_score))\nprint(\"Best parameters:{}\".format(best_parameters))\nprint(\"Best score on test set:{:.2f}\".format(test_score))\n```\n\n    Size of training set:2852 size of validation set:951 size of teseting set:951\n    Best score on validation set:0.79\n    Best parameters:{'gamma': 0.01, 'C': 100}\n    Best score on test set:0.76\n\n\n## Grid Search with Cross Validation（使用K折交叉验证）\n\nGrid Search 调参方法存在的共性弊端就是：耗时；参数越多，候选值越多，耗费时间越长。\n所以，一般情况下，先定一个大范围，然后再细化。\n\n![](/img/2019-08-10_网格搜寻_1.png)\n\n\n```python\nfrom sklearn.model_selection import GridSearchCV\n\nparam_grid = {\"gamma\":[0.001,0.01,0.1,1,10,100],\n             \"C\":[0.001,0.01,0.1,1,10,100]}\nprint(\"Parameters:{}\".format(param_grid))\n\ngrid_search = GridSearchCV(SVC(),param_grid,cv=5)\ngrid_search.fit(X_train,y_train)\n\nprint(\"Test set score:{:.2f}\".format(grid_search.score(X_test,y_test)))\nprint(\"Best parameters:{}\".format(grid_search.best_params_))\nprint(\"Best score on train set:{:.2f}\".format(grid_search.best_score_))\n```\n\n    Parameters:{'gamma': [0.001, 0.01, 0.1, 1, 10, 100], 'C': [0.001, 0.01, 0.1, 1, 10, 100]}\n    Test set score:0.77\n    Best parameters:{'C': 10, 'gamma': 0.1}\n    Best score on train set:0.79\n\n\n> 参考：\n\n1. [DataWhale数据挖掘实战营](https://github.com/datawhalechina/Datawhale_Learning/tree/master/doc/%E7%90%86%E8%AE%BA%E5%BA%94%E7%94%A8/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98)\n2. [调参必备--Grid Search网格搜索](https://www.jianshu.com/p/55b9f2ea283b)\n3. [交叉验证和网格搜索](https://www.cnblogs.com/dblsha/p/10161798.html)\n","source":"_posts/2019-08-10_网格搜寻.md","raw":"---\ntitle: 网格搜寻\ncategories:\n  - 统计与机器学习\n  - 其他\nmathjax: false\nabbrlink: 2828\ndate: 2019-08-10 00:00:00\n---\n\n## 数据集载入\n\n\n```python\n# -*- coding: utf-8 -*-\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport warnings\nfrom sklearn.preprocessing import minmax_scale\nfrom sklearn.preprocessing import LabelEncoder\nfrom sklearn.preprocessing import Imputer\nfrom sklearn.model_selection import train_test_split\nwarnings.filterwarnings('ignore')\n\ndf = pd.read_csv(u\"2019-08-01_金融数据描述_data1.csv\",encoding = 'gbk')\n\n# 删除无用\ndelete = ['Unnamed: 0', 'custid', 'trade_no', 'bank_card_no','id_name','latest_query_time','source','loans_latest_time','first_transaction_time', 'student_feature']\ndf = df.drop(delete,axis=1)\n\n# 处理分类型特征\ndf['reg_preference_for_trad'] = LabelEncoder().fit_transform(df['reg_preference_for_trad'].astype(str))\n\n# 使用众数填充\nfor i in range(df.shape[1]):\n    feature = df.iloc[:,i].values.reshape(-1,1)\n    imp_mode = Imputer(strategy='most_frequent')\n    df.iloc[:,i] = imp_mode.fit_transform(feature)\n\n# 数据划分\nX = df[:].drop(\"status\",axis=1)\ny = df[\"status\"]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle = False)\n\n# 数据归一化\nX_train = minmax_scale(X_train)\nX_test =  minmax_scale(X_test)\n```\n\n## Simple Grid Search（使用Holdout验证）\n\n交叉验证的目的是为了让模型评估更加准确可信。\n\n缺点：\n- 最终的表现好坏与初始数据的划分结果有很大的关系，为了处理这种情况，可以采用交叉验证的方式来减少偶然性\n\n\n```python\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import train_test_split\n\nprint(\"Size of training set:{} size of testing set:{}\".format(X_train.shape[0],X_test.shape[0]))\n\n#### grid search start\nbest_score = 0\nfor gamma in [0.001,0.01,0.1,1,10,100]:\n    for C in [0.001,0.01,0.1,1,10,100]:\n        svm = SVC(gamma=gamma,C=C) #对于每种参数可能的组合，进行一次训练；\n        svm.fit(X_train,y_train)\n        score = svm.score(X_test,y_test)\n        if score > best_score: #找到表现最好的参数\n            best_score = score\n            best_parameters = {'gamma':gamma,'C':C}\n### grid search end\n\nprint(\"Best score:{:.2f}\".format(best_score))\nprint(\"Best parameters:{}\".format(best_parameters))\n```\n\n    Size of training set:3803 size of testing set:951\n    Best score:0.78\n    Best parameters:{'gamma': 0.1, 'C': 10}\n\n\n原始数据集划分成训练集和测试集以后，其中测试集除了用作调整参数，也用来测量模型的好坏；这样做导致最终的评分结果比实际效果要好，错估模型的泛化能力。\n\n解决方法是可以对训练集再进行一次划分，分成训练集和验证集，这样划分的结果就是：原始数据划分为3份，分别为：训练集、验证集和测试集；其中训练集用来模型训练，验证集用来调整参数，而测试集用来衡量模型表现好坏。\n\n\n```python\nX_trainval,y_trainval = X_train,y_train\nX_train,X_val,y_train,y_val = train_test_split(X_trainval,y_trainval)\nprint(\"Size of training set:{} size of validation set:{} size of teseting set:{}\".format(X_train.shape[0],X_val.shape[0],X_test.shape[0]))\n\nbest_score = 0.0\nfor gamma in [0.001,0.01,0.1,1,10,100]:\n    for C in [0.001,0.01,0.1,1,10,100]:\n        svm = SVC(gamma=gamma,C=C)\n        svm.fit(X_train,y_train)\n        score = svm.score(X_val,y_val)\n        if score > best_score:\n            best_score = score\n            best_parameters = {'gamma':gamma,'C':C}\nsvm = SVC(**best_parameters)\nsvm.fit(X_trainval,y_trainval)\ntest_score = svm.score(X_test,y_test)\nprint(\"Best score on validation set:{:.2f}\".format(best_score))\nprint(\"Best parameters:{}\".format(best_parameters))\nprint(\"Best score on test set:{:.2f}\".format(test_score))\n```\n\n    Size of training set:2852 size of validation set:951 size of teseting set:951\n    Best score on validation set:0.79\n    Best parameters:{'gamma': 0.01, 'C': 100}\n    Best score on test set:0.76\n\n\n## Grid Search with Cross Validation（使用K折交叉验证）\n\nGrid Search 调参方法存在的共性弊端就是：耗时；参数越多，候选值越多，耗费时间越长。\n所以，一般情况下，先定一个大范围，然后再细化。\n\n![](/img/2019-08-10_网格搜寻_1.png)\n\n\n```python\nfrom sklearn.model_selection import GridSearchCV\n\nparam_grid = {\"gamma\":[0.001,0.01,0.1,1,10,100],\n             \"C\":[0.001,0.01,0.1,1,10,100]}\nprint(\"Parameters:{}\".format(param_grid))\n\ngrid_search = GridSearchCV(SVC(),param_grid,cv=5)\ngrid_search.fit(X_train,y_train)\n\nprint(\"Test set score:{:.2f}\".format(grid_search.score(X_test,y_test)))\nprint(\"Best parameters:{}\".format(grid_search.best_params_))\nprint(\"Best score on train set:{:.2f}\".format(grid_search.best_score_))\n```\n\n    Parameters:{'gamma': [0.001, 0.01, 0.1, 1, 10, 100], 'C': [0.001, 0.01, 0.1, 1, 10, 100]}\n    Test set score:0.77\n    Best parameters:{'C': 10, 'gamma': 0.1}\n    Best score on train set:0.79\n\n\n> 参考：\n\n1. [DataWhale数据挖掘实战营](https://github.com/datawhalechina/Datawhale_Learning/tree/master/doc/%E7%90%86%E8%AE%BA%E5%BA%94%E7%94%A8/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98)\n2. [调参必备--Grid Search网格搜索](https://www.jianshu.com/p/55b9f2ea283b)\n3. [交叉验证和网格搜索](https://www.cnblogs.com/dblsha/p/10161798.html)\n","slug":"2019-08-10_网格搜寻","published":1,"updated":"2021-04-06T13:49:34.423Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5qn000o9ohzg4kddxuh","content":"<h2 id=\"数据集载入\"><a href=\"#数据集载入\" class=\"headerlink\" title=\"数据集载入\"></a>数据集载入</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib <span class=\"keyword\">import</span> pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"><span class=\"keyword\">import</span> warnings</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> minmax_scale</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelEncoder</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> Imputer</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\">warnings.filterwarnings(<span class=\"string\">&#x27;ignore&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">u&quot;2019-08-01_金融数据描述_data1.csv&quot;</span>,encoding = <span class=\"string\">&#x27;gbk&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除无用</span></span><br><span class=\"line\">delete = [<span class=\"string\">&#x27;Unnamed: 0&#x27;</span>, <span class=\"string\">&#x27;custid&#x27;</span>, <span class=\"string\">&#x27;trade_no&#x27;</span>, <span class=\"string\">&#x27;bank_card_no&#x27;</span>,<span class=\"string\">&#x27;id_name&#x27;</span>,<span class=\"string\">&#x27;latest_query_time&#x27;</span>,<span class=\"string\">&#x27;source&#x27;</span>,<span class=\"string\">&#x27;loans_latest_time&#x27;</span>,<span class=\"string\">&#x27;first_transaction_time&#x27;</span>, <span class=\"string\">&#x27;student_feature&#x27;</span>]</span><br><span class=\"line\">df = df.drop(delete,axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 处理分类型特征</span></span><br><span class=\"line\">df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>] = LabelEncoder().fit_transform(df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>].astype(<span class=\"built_in\">str</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用众数填充</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(df.shape[<span class=\"number\">1</span>]):</span><br><span class=\"line\">    feature = df.iloc[:,i].values.reshape(-<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">    imp_mode = Imputer(strategy=<span class=\"string\">&#x27;most_frequent&#x27;</span>)</span><br><span class=\"line\">    df.iloc[:,i] = imp_mode.fit_transform(feature)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 数据划分</span></span><br><span class=\"line\">X = df[:].drop(<span class=\"string\">&quot;status&quot;</span>,axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">y = df[<span class=\"string\">&quot;status&quot;</span>]</span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class=\"number\">0.2</span>, shuffle = <span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 数据归一化</span></span><br><span class=\"line\">X_train = minmax_scale(X_train)</span><br><span class=\"line\">X_test =  minmax_scale(X_test)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Simple-Grid-Search（使用Holdout验证）\"><a href=\"#Simple-Grid-Search（使用Holdout验证）\" class=\"headerlink\" title=\"Simple Grid Search（使用Holdout验证）\"></a>Simple Grid Search（使用Holdout验证）</h2><p>交叉验证的目的是为了让模型评估更加准确可信。</p>\n<p>缺点：</p>\n<ul>\n<li>最终的表现好坏与初始数据的划分结果有很大的关系，为了处理这种情况，可以采用交叉验证的方式来减少偶然性</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> SVC</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Size of training set:&#123;&#125; size of testing set:&#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(X_train.shape[<span class=\"number\">0</span>],X_test.shape[<span class=\"number\">0</span>]))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#### grid search start</span></span><br><span class=\"line\">best_score = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> gamma <span class=\"keyword\">in</span> [<span class=\"number\">0.001</span>,<span class=\"number\">0.01</span>,<span class=\"number\">0.1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">100</span>]:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> C <span class=\"keyword\">in</span> [<span class=\"number\">0.001</span>,<span class=\"number\">0.01</span>,<span class=\"number\">0.1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">100</span>]:</span><br><span class=\"line\">        svm = SVC(gamma=gamma,C=C) <span class=\"comment\">#对于每种参数可能的组合，进行一次训练；</span></span><br><span class=\"line\">        svm.fit(X_train,y_train)</span><br><span class=\"line\">        score = svm.score(X_test,y_test)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> score &gt; best_score: <span class=\"comment\">#找到表现最好的参数</span></span><br><span class=\"line\">            best_score = score</span><br><span class=\"line\">            best_parameters = &#123;<span class=\"string\">&#x27;gamma&#x27;</span>:gamma,<span class=\"string\">&#x27;C&#x27;</span>:C&#125;</span><br><span class=\"line\"><span class=\"comment\">### grid search end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Best score:&#123;:.2f&#125;&quot;</span>.<span class=\"built_in\">format</span>(best_score))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Best parameters:&#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(best_parameters))</span><br></pre></td></tr></table></figure>\n<pre><code>Size of training set:3803 size of testing set:951\nBest score:0.78\nBest parameters:&#123;&#39;gamma&#39;: 0.1, &#39;C&#39;: 10&#125;\n</code></pre><p>原始数据集划分成训练集和测试集以后，其中测试集除了用作调整参数，也用来测量模型的好坏；这样做导致最终的评分结果比实际效果要好，错估模型的泛化能力。</p>\n<p>解决方法是可以对训练集再进行一次划分，分成训练集和验证集，这样划分的结果就是：原始数据划分为3份，分别为：训练集、验证集和测试集；其中训练集用来模型训练，验证集用来调整参数，而测试集用来衡量模型表现好坏。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X_trainval,y_trainval = X_train,y_train</span><br><span class=\"line\">X_train,X_val,y_train,y_val = train_test_split(X_trainval,y_trainval)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Size of training set:&#123;&#125; size of validation set:&#123;&#125; size of teseting set:&#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(X_train.shape[<span class=\"number\">0</span>],X_val.shape[<span class=\"number\">0</span>],X_test.shape[<span class=\"number\">0</span>]))</span><br><span class=\"line\"></span><br><span class=\"line\">best_score = <span class=\"number\">0.0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> gamma <span class=\"keyword\">in</span> [<span class=\"number\">0.001</span>,<span class=\"number\">0.01</span>,<span class=\"number\">0.1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">100</span>]:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> C <span class=\"keyword\">in</span> [<span class=\"number\">0.001</span>,<span class=\"number\">0.01</span>,<span class=\"number\">0.1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">100</span>]:</span><br><span class=\"line\">        svm = SVC(gamma=gamma,C=C)</span><br><span class=\"line\">        svm.fit(X_train,y_train)</span><br><span class=\"line\">        score = svm.score(X_val,y_val)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> score &gt; best_score:</span><br><span class=\"line\">            best_score = score</span><br><span class=\"line\">            best_parameters = &#123;<span class=\"string\">&#x27;gamma&#x27;</span>:gamma,<span class=\"string\">&#x27;C&#x27;</span>:C&#125;</span><br><span class=\"line\">svm = SVC(**best_parameters)</span><br><span class=\"line\">svm.fit(X_trainval,y_trainval)</span><br><span class=\"line\">test_score = svm.score(X_test,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Best score on validation set:&#123;:.2f&#125;&quot;</span>.<span class=\"built_in\">format</span>(best_score))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Best parameters:&#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(best_parameters))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Best score on test set:&#123;:.2f&#125;&quot;</span>.<span class=\"built_in\">format</span>(test_score))</span><br></pre></td></tr></table></figure>\n<pre><code>Size of training set:2852 size of validation set:951 size of teseting set:951\nBest score on validation set:0.79\nBest parameters:&#123;&#39;gamma&#39;: 0.01, &#39;C&#39;: 100&#125;\nBest score on test set:0.76\n</code></pre><h2 id=\"Grid-Search-with-Cross-Validation（使用K折交叉验证）\"><a href=\"#Grid-Search-with-Cross-Validation（使用K折交叉验证）\" class=\"headerlink\" title=\"Grid Search with Cross Validation（使用K折交叉验证）\"></a>Grid Search with Cross Validation（使用K折交叉验证）</h2><p>Grid Search 调参方法存在的共性弊端就是：耗时；参数越多，候选值越多，耗费时间越长。<br>所以，一般情况下，先定一个大范围，然后再细化。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-10_网格搜寻_1.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> GridSearchCV</span><br><span class=\"line\"></span><br><span class=\"line\">param_grid = &#123;<span class=\"string\">&quot;gamma&quot;</span>:[<span class=\"number\">0.001</span>,<span class=\"number\">0.01</span>,<span class=\"number\">0.1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">100</span>],</span><br><span class=\"line\">             <span class=\"string\">&quot;C&quot;</span>:[<span class=\"number\">0.001</span>,<span class=\"number\">0.01</span>,<span class=\"number\">0.1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">100</span>]&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Parameters:&#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(param_grid))</span><br><span class=\"line\"></span><br><span class=\"line\">grid_search = GridSearchCV(SVC(),param_grid,cv=<span class=\"number\">5</span>)</span><br><span class=\"line\">grid_search.fit(X_train,y_train)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Test set score:&#123;:.2f&#125;&quot;</span>.<span class=\"built_in\">format</span>(grid_search.score(X_test,y_test)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Best parameters:&#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(grid_search.best_params_))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Best score on train set:&#123;:.2f&#125;&quot;</span>.<span class=\"built_in\">format</span>(grid_search.best_score_))</span><br></pre></td></tr></table></figure>\n<pre><code>Parameters:&#123;&#39;gamma&#39;: [0.001, 0.01, 0.1, 1, 10, 100], &#39;C&#39;: [0.001, 0.01, 0.1, 1, 10, 100]&#125;\nTest set score:0.77\nBest parameters:&#123;&#39;C&#39;: 10, &#39;gamma&#39;: 0.1&#125;\nBest score on train set:0.79\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://github.com/datawhalechina/Datawhale_Learning/tree/master/doc/%E7%90%86%E8%AE%BA%E5%BA%94%E7%94%A8/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98\" >DataWhale数据挖掘实战营<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.jianshu.com/p/55b9f2ea283b\" >调参必备—Grid Search网格搜索<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/dblsha/p/10161798.html\" >交叉验证和网格搜索<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"数据集载入\"><a href=\"#数据集载入\" class=\"headerlink\" title=\"数据集载入\"></a>数据集载入</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib <span class=\"keyword\">import</span> pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"><span class=\"keyword\">import</span> warnings</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> minmax_scale</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelEncoder</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> Imputer</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\">warnings.filterwarnings(<span class=\"string\">&#x27;ignore&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">u&quot;2019-08-01_金融数据描述_data1.csv&quot;</span>,encoding = <span class=\"string\">&#x27;gbk&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除无用</span></span><br><span class=\"line\">delete = [<span class=\"string\">&#x27;Unnamed: 0&#x27;</span>, <span class=\"string\">&#x27;custid&#x27;</span>, <span class=\"string\">&#x27;trade_no&#x27;</span>, <span class=\"string\">&#x27;bank_card_no&#x27;</span>,<span class=\"string\">&#x27;id_name&#x27;</span>,<span class=\"string\">&#x27;latest_query_time&#x27;</span>,<span class=\"string\">&#x27;source&#x27;</span>,<span class=\"string\">&#x27;loans_latest_time&#x27;</span>,<span class=\"string\">&#x27;first_transaction_time&#x27;</span>, <span class=\"string\">&#x27;student_feature&#x27;</span>]</span><br><span class=\"line\">df = df.drop(delete,axis=<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 处理分类型特征</span></span><br><span class=\"line\">df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>] = LabelEncoder().fit_transform(df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>].astype(<span class=\"built_in\">str</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用众数填充</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(df.shape[<span class=\"number\">1</span>]):</span><br><span class=\"line\">    feature = df.iloc[:,i].values.reshape(-<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">    imp_mode = Imputer(strategy=<span class=\"string\">&#x27;most_frequent&#x27;</span>)</span><br><span class=\"line\">    df.iloc[:,i] = imp_mode.fit_transform(feature)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 数据划分</span></span><br><span class=\"line\">X = df[:].drop(<span class=\"string\">&quot;status&quot;</span>,axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">y = df[<span class=\"string\">&quot;status&quot;</span>]</span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class=\"number\">0.2</span>, shuffle = <span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 数据归一化</span></span><br><span class=\"line\">X_train = minmax_scale(X_train)</span><br><span class=\"line\">X_test =  minmax_scale(X_test)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Simple-Grid-Search（使用Holdout验证）\"><a href=\"#Simple-Grid-Search（使用Holdout验证）\" class=\"headerlink\" title=\"Simple Grid Search（使用Holdout验证）\"></a>Simple Grid Search（使用Holdout验证）</h2><p>交叉验证的目的是为了让模型评估更加准确可信。</p>\n<p>缺点：</p>\n<ul>\n<li>最终的表现好坏与初始数据的划分结果有很大的关系，为了处理这种情况，可以采用交叉验证的方式来减少偶然性</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> SVC</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Size of training set:&#123;&#125; size of testing set:&#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(X_train.shape[<span class=\"number\">0</span>],X_test.shape[<span class=\"number\">0</span>]))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#### grid search start</span></span><br><span class=\"line\">best_score = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> gamma <span class=\"keyword\">in</span> [<span class=\"number\">0.001</span>,<span class=\"number\">0.01</span>,<span class=\"number\">0.1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">100</span>]:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> C <span class=\"keyword\">in</span> [<span class=\"number\">0.001</span>,<span class=\"number\">0.01</span>,<span class=\"number\">0.1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">100</span>]:</span><br><span class=\"line\">        svm = SVC(gamma=gamma,C=C) <span class=\"comment\">#对于每种参数可能的组合，进行一次训练；</span></span><br><span class=\"line\">        svm.fit(X_train,y_train)</span><br><span class=\"line\">        score = svm.score(X_test,y_test)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> score &gt; best_score: <span class=\"comment\">#找到表现最好的参数</span></span><br><span class=\"line\">            best_score = score</span><br><span class=\"line\">            best_parameters = &#123;<span class=\"string\">&#x27;gamma&#x27;</span>:gamma,<span class=\"string\">&#x27;C&#x27;</span>:C&#125;</span><br><span class=\"line\"><span class=\"comment\">### grid search end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Best score:&#123;:.2f&#125;&quot;</span>.<span class=\"built_in\">format</span>(best_score))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Best parameters:&#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(best_parameters))</span><br></pre></td></tr></table></figure>\n<pre><code>Size of training set:3803 size of testing set:951\nBest score:0.78\nBest parameters:&#123;&#39;gamma&#39;: 0.1, &#39;C&#39;: 10&#125;\n</code></pre><p>原始数据集划分成训练集和测试集以后，其中测试集除了用作调整参数，也用来测量模型的好坏；这样做导致最终的评分结果比实际效果要好，错估模型的泛化能力。</p>\n<p>解决方法是可以对训练集再进行一次划分，分成训练集和验证集，这样划分的结果就是：原始数据划分为3份，分别为：训练集、验证集和测试集；其中训练集用来模型训练，验证集用来调整参数，而测试集用来衡量模型表现好坏。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X_trainval,y_trainval = X_train,y_train</span><br><span class=\"line\">X_train,X_val,y_train,y_val = train_test_split(X_trainval,y_trainval)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Size of training set:&#123;&#125; size of validation set:&#123;&#125; size of teseting set:&#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(X_train.shape[<span class=\"number\">0</span>],X_val.shape[<span class=\"number\">0</span>],X_test.shape[<span class=\"number\">0</span>]))</span><br><span class=\"line\"></span><br><span class=\"line\">best_score = <span class=\"number\">0.0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> gamma <span class=\"keyword\">in</span> [<span class=\"number\">0.001</span>,<span class=\"number\">0.01</span>,<span class=\"number\">0.1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">100</span>]:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> C <span class=\"keyword\">in</span> [<span class=\"number\">0.001</span>,<span class=\"number\">0.01</span>,<span class=\"number\">0.1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">100</span>]:</span><br><span class=\"line\">        svm = SVC(gamma=gamma,C=C)</span><br><span class=\"line\">        svm.fit(X_train,y_train)</span><br><span class=\"line\">        score = svm.score(X_val,y_val)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> score &gt; best_score:</span><br><span class=\"line\">            best_score = score</span><br><span class=\"line\">            best_parameters = &#123;<span class=\"string\">&#x27;gamma&#x27;</span>:gamma,<span class=\"string\">&#x27;C&#x27;</span>:C&#125;</span><br><span class=\"line\">svm = SVC(**best_parameters)</span><br><span class=\"line\">svm.fit(X_trainval,y_trainval)</span><br><span class=\"line\">test_score = svm.score(X_test,y_test)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Best score on validation set:&#123;:.2f&#125;&quot;</span>.<span class=\"built_in\">format</span>(best_score))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Best parameters:&#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(best_parameters))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Best score on test set:&#123;:.2f&#125;&quot;</span>.<span class=\"built_in\">format</span>(test_score))</span><br></pre></td></tr></table></figure>\n<pre><code>Size of training set:2852 size of validation set:951 size of teseting set:951\nBest score on validation set:0.79\nBest parameters:&#123;&#39;gamma&#39;: 0.01, &#39;C&#39;: 100&#125;\nBest score on test set:0.76\n</code></pre><h2 id=\"Grid-Search-with-Cross-Validation（使用K折交叉验证）\"><a href=\"#Grid-Search-with-Cross-Validation（使用K折交叉验证）\" class=\"headerlink\" title=\"Grid Search with Cross Validation（使用K折交叉验证）\"></a>Grid Search with Cross Validation（使用K折交叉验证）</h2><p>Grid Search 调参方法存在的共性弊端就是：耗时；参数越多，候选值越多，耗费时间越长。<br>所以，一般情况下，先定一个大范围，然后再细化。</p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-10_网格搜寻_1.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> GridSearchCV</span><br><span class=\"line\"></span><br><span class=\"line\">param_grid = &#123;<span class=\"string\">&quot;gamma&quot;</span>:[<span class=\"number\">0.001</span>,<span class=\"number\">0.01</span>,<span class=\"number\">0.1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">100</span>],</span><br><span class=\"line\">             <span class=\"string\">&quot;C&quot;</span>:[<span class=\"number\">0.001</span>,<span class=\"number\">0.01</span>,<span class=\"number\">0.1</span>,<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">100</span>]&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Parameters:&#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(param_grid))</span><br><span class=\"line\"></span><br><span class=\"line\">grid_search = GridSearchCV(SVC(),param_grid,cv=<span class=\"number\">5</span>)</span><br><span class=\"line\">grid_search.fit(X_train,y_train)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Test set score:&#123;:.2f&#125;&quot;</span>.<span class=\"built_in\">format</span>(grid_search.score(X_test,y_test)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Best parameters:&#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(grid_search.best_params_))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Best score on train set:&#123;:.2f&#125;&quot;</span>.<span class=\"built_in\">format</span>(grid_search.best_score_))</span><br></pre></td></tr></table></figure>\n<pre><code>Parameters:&#123;&#39;gamma&#39;: [0.001, 0.01, 0.1, 1, 10, 100], &#39;C&#39;: [0.001, 0.01, 0.1, 1, 10, 100]&#125;\nTest set score:0.77\nBest parameters:&#123;&#39;C&#39;: 10, &#39;gamma&#39;: 0.1&#125;\nBest score on train set:0.79\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://github.com/datawhalechina/Datawhale_Learning/tree/master/doc/%E7%90%86%E8%AE%BA%E5%BA%94%E7%94%A8/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98\" >DataWhale数据挖掘实战营<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.jianshu.com/p/55b9f2ea283b\" >调参必备—Grid Search网格搜索<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/dblsha/p/10161798.html\" >交叉验证和网格搜索<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"基本介绍","mathjax":false,"abbrlink":45240,"date":"2019-08-16T16:00:00.000Z","_content":"\n集成学习著重于在训练集上做文章，将训练集划分为各种子集或权重变换后用较弱的基函數擬合，然後綜合若干個基模型的預測作為最終整體效果\n\n## 集成学习分類\n\n- Booststrap：有放回的抽样方法，是非参数统计中一种重要的估计统计量方差进而进行区间估计的统计方法。\n    - 步骤\n        - 采用重抽样技术从原始样本中抽取一定数量（自己给定）的样本，此过程允许重复抽样\n        - 根据抽出的样本计算统计量T\n        - 重复上述N次（一般大于1000），得到统计量T\n        - 计算上述N个统计量T的样本方差，得到统计量的方差\n\n\n- Bagging(Bootstrap Aggregating)：若干個基模型在若干個訓練子集上進行互相獨立的分別訓練，在預測時一次性綜合這些基模型的結果\n\n\n- Boosting：按迭代順序逐個訓練基模型，在每次訓練後都進行模型測試，然後根據測試結果調整下一輪基模型訓練時所採用的訓練數據，最後預測時仍使用所有子模型的預測得到最終結果\n\n## 随机森林\n\n随机森林在训练过程中对训练集进行随机抽样，分别进行训练后形成若干个小的决策树。分类问题的预测通过这些决策树的投票完成，回归问题的预测通过对基决策树结果求平均完成。基决策树一般采用\"较大偏差\"、\"较小方差\"的弱模型，和普通决策树有以下差别：\n\n- 样本裁减：通过随机采样，每个弱模型只训练部分样本数据\n- 特征裁减：每个基模型的决策树只选用数据特征中的一部分进行训练和预测，随机抽样保证所有特征都能被部分弱模型学习到\n- 小树：由于特征和样本数量有限，每个弱模型决策树都长不高，所以不用担心会过拟合进行剪枝\n\n\n```python\nfrom sklearn.datasets import load_iris\nfrom sklearn.ensemble import RandomForestClassifier\n\niris = load_iris()\n# Bootstrap: 有放回采样、Out-Bag Estimation: 使用为参与到本身训练的数据集进行评估预测\nclf = RandomForestClassifier(n_estimators = 20, bootstrap = True, oob_score = True)\n\nclf.fit(iris.data, iris.target)\n\nclf.oob_score_\n```\n\n\n\n\n    0.94666666666666666\n\n\n\n## AdaBoost\n\n通过调整训练集中每个样本的权重使得每次迭代在不同的训练集上运行。在第一次迭代时训练集中美个样本会被赋予相同权值，当训练和评估完成后，AdaBoost会更新训练集中的样本，使得在本轮评估中被预测正确的样本权值减少，被预测错误的增加，然后开始第二轮的迭代，如此往复。每个迭代的基模型会逐渐更关注被预测错误的样本，如此提高整体拟合效果。因为每次迭代都用全部样本，故没有oob\n\nAdaBoostClassifier和AdaBoostRegressor都有，即我们的弱分类学习器或者弱回归学习器。理论上可以选择任何一个分类或者回归学习器，不过需要支持样本权重。我们常用的一般是CART决策树或者神经网络MLP。默认是决策树，即AdaBoostClassifier默认使用CART分类树DecisionTreeClassifier，而AdaBoostRegressor默认使用CART回归树DecisionTreeRegressor。另外有一个要注意的点是，如果我们选择的AdaBoostClassifier算法是SAMME.R，则我们的弱分类学习器还需要支持概率预测，也就是在scikit-learn中弱分类学习器对应的预测方法除了predict还需要有predict_proba\n\n\n```python\nfrom sklearn.datasets import load_iris\nfrom sklearn.ensemble import AdaBoostClassifier\n\niris = load_iris()\n\nfrom sklearn.utils import shuffle\nX, y = shuffle(iris.data, iris.target)\n\nfrom sklearn.naive_bayes import GaussianNB\nclf = AdaBoostClassifier(GaussianNB())\n\nclf.fit(X[:-20],y[:-20])\nclf.score(X[-20:],y[-20:])\n```\n\n\n\n\n    1.0\n\n\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n2. [scikit-learn Adaboost类库使用小结](https://www.cnblogs.com/pinard/p/6136914.html)\n3. [快速理解bootstrap,bagging,boosting-三个概念](https://blog.csdn.net/wangqi880/article/details/49765673)\n","source":"_posts/2019-08-17_集成學習基本介紹.md","raw":"---\ntitle: 基本介绍\ncategories:\n  - 统计与机器学习\n  - 集成算法（Ensemble algorithms）\nmathjax: false\nabbrlink: 45240\ndate: 2019-08-17 00:00:00\n---\n\n集成学习著重于在训练集上做文章，将训练集划分为各种子集或权重变换后用较弱的基函數擬合，然後綜合若干個基模型的預測作為最終整體效果\n\n## 集成学习分類\n\n- Booststrap：有放回的抽样方法，是非参数统计中一种重要的估计统计量方差进而进行区间估计的统计方法。\n    - 步骤\n        - 采用重抽样技术从原始样本中抽取一定数量（自己给定）的样本，此过程允许重复抽样\n        - 根据抽出的样本计算统计量T\n        - 重复上述N次（一般大于1000），得到统计量T\n        - 计算上述N个统计量T的样本方差，得到统计量的方差\n\n\n- Bagging(Bootstrap Aggregating)：若干個基模型在若干個訓練子集上進行互相獨立的分別訓練，在預測時一次性綜合這些基模型的結果\n\n\n- Boosting：按迭代順序逐個訓練基模型，在每次訓練後都進行模型測試，然後根據測試結果調整下一輪基模型訓練時所採用的訓練數據，最後預測時仍使用所有子模型的預測得到最終結果\n\n## 随机森林\n\n随机森林在训练过程中对训练集进行随机抽样，分别进行训练后形成若干个小的决策树。分类问题的预测通过这些决策树的投票完成，回归问题的预测通过对基决策树结果求平均完成。基决策树一般采用\"较大偏差\"、\"较小方差\"的弱模型，和普通决策树有以下差别：\n\n- 样本裁减：通过随机采样，每个弱模型只训练部分样本数据\n- 特征裁减：每个基模型的决策树只选用数据特征中的一部分进行训练和预测，随机抽样保证所有特征都能被部分弱模型学习到\n- 小树：由于特征和样本数量有限，每个弱模型决策树都长不高，所以不用担心会过拟合进行剪枝\n\n\n```python\nfrom sklearn.datasets import load_iris\nfrom sklearn.ensemble import RandomForestClassifier\n\niris = load_iris()\n# Bootstrap: 有放回采样、Out-Bag Estimation: 使用为参与到本身训练的数据集进行评估预测\nclf = RandomForestClassifier(n_estimators = 20, bootstrap = True, oob_score = True)\n\nclf.fit(iris.data, iris.target)\n\nclf.oob_score_\n```\n\n\n\n\n    0.94666666666666666\n\n\n\n## AdaBoost\n\n通过调整训练集中每个样本的权重使得每次迭代在不同的训练集上运行。在第一次迭代时训练集中美个样本会被赋予相同权值，当训练和评估完成后，AdaBoost会更新训练集中的样本，使得在本轮评估中被预测正确的样本权值减少，被预测错误的增加，然后开始第二轮的迭代，如此往复。每个迭代的基模型会逐渐更关注被预测错误的样本，如此提高整体拟合效果。因为每次迭代都用全部样本，故没有oob\n\nAdaBoostClassifier和AdaBoostRegressor都有，即我们的弱分类学习器或者弱回归学习器。理论上可以选择任何一个分类或者回归学习器，不过需要支持样本权重。我们常用的一般是CART决策树或者神经网络MLP。默认是决策树，即AdaBoostClassifier默认使用CART分类树DecisionTreeClassifier，而AdaBoostRegressor默认使用CART回归树DecisionTreeRegressor。另外有一个要注意的点是，如果我们选择的AdaBoostClassifier算法是SAMME.R，则我们的弱分类学习器还需要支持概率预测，也就是在scikit-learn中弱分类学习器对应的预测方法除了predict还需要有predict_proba\n\n\n```python\nfrom sklearn.datasets import load_iris\nfrom sklearn.ensemble import AdaBoostClassifier\n\niris = load_iris()\n\nfrom sklearn.utils import shuffle\nX, y = shuffle(iris.data, iris.target)\n\nfrom sklearn.naive_bayes import GaussianNB\nclf = AdaBoostClassifier(GaussianNB())\n\nclf.fit(X[:-20],y[:-20])\nclf.score(X[-20:],y[-20:])\n```\n\n\n\n\n    1.0\n\n\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n2. [scikit-learn Adaboost类库使用小结](https://www.cnblogs.com/pinard/p/6136914.html)\n3. [快速理解bootstrap,bagging,boosting-三个概念](https://blog.csdn.net/wangqi880/article/details/49765673)\n","slug":"2019-08-17_集成學習基本介紹","published":1,"updated":"2021-04-06T14:17:39.742Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5qp000q9ohz0p081kc5","content":"<p>集成学习著重于在训练集上做文章，将训练集划分为各种子集或权重变换后用较弱的基函數擬合，然後綜合若干個基模型的預測作為最終整體效果</p>\n<h2 id=\"集成学习分類\"><a href=\"#集成学习分類\" class=\"headerlink\" title=\"集成学习分類\"></a>集成学习分類</h2><ul>\n<li>Booststrap：有放回的抽样方法，是非参数统计中一种重要的估计统计量方差进而进行区间估计的统计方法。<ul>\n<li>步骤<ul>\n<li>采用重抽样技术从原始样本中抽取一定数量（自己给定）的样本，此过程允许重复抽样</li>\n<li>根据抽出的样本计算统计量T</li>\n<li>重复上述N次（一般大于1000），得到统计量T</li>\n<li>计算上述N个统计量T的样本方差，得到统计量的方差</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Bagging(Bootstrap Aggregating)：若干個基模型在若干個訓練子集上進行互相獨立的分別訓練，在預測時一次性綜合這些基模型的結果</li>\n</ul>\n<ul>\n<li>Boosting：按迭代順序逐個訓練基模型，在每次訓練後都進行模型測試，然後根據測試結果調整下一輪基模型訓練時所採用的訓練數據，最後預測時仍使用所有子模型的預測得到最終結果</li>\n</ul>\n<h2 id=\"随机森林\"><a href=\"#随机森林\" class=\"headerlink\" title=\"随机森林\"></a>随机森林</h2><p>随机森林在训练过程中对训练集进行随机抽样，分别进行训练后形成若干个小的决策树。分类问题的预测通过这些决策树的投票完成，回归问题的预测通过对基决策树结果求平均完成。基决策树一般采用”较大偏差”、”较小方差”的弱模型，和普通决策树有以下差别：</p>\n<ul>\n<li>样本裁减：通过随机采样，每个弱模型只训练部分样本数据</li>\n<li>特征裁减：每个基模型的决策树只选用数据特征中的一部分进行训练和预测，随机抽样保证所有特征都能被部分弱模型学习到</li>\n<li>小树：由于特征和样本数量有限，每个弱模型决策树都长不高，所以不用担心会过拟合进行剪枝</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.datasets <span class=\"keyword\">import</span> load_iris</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier</span><br><span class=\"line\"></span><br><span class=\"line\">iris = load_iris()</span><br><span class=\"line\"><span class=\"comment\"># Bootstrap: 有放回采样、Out-Bag Estimation: 使用为参与到本身训练的数据集进行评估预测</span></span><br><span class=\"line\">clf = RandomForestClassifier(n_estimators = <span class=\"number\">20</span>, bootstrap = <span class=\"literal\">True</span>, oob_score = <span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">clf.fit(iris.data, iris.target)</span><br><span class=\"line\"></span><br><span class=\"line\">clf.oob_score_</span><br></pre></td></tr></table></figure>\n<pre><code>0.94666666666666666\n</code></pre><h2 id=\"AdaBoost\"><a href=\"#AdaBoost\" class=\"headerlink\" title=\"AdaBoost\"></a>AdaBoost</h2><p>通过调整训练集中每个样本的权重使得每次迭代在不同的训练集上运行。在第一次迭代时训练集中美个样本会被赋予相同权值，当训练和评估完成后，AdaBoost会更新训练集中的样本，使得在本轮评估中被预测正确的样本权值减少，被预测错误的增加，然后开始第二轮的迭代，如此往复。每个迭代的基模型会逐渐更关注被预测错误的样本，如此提高整体拟合效果。因为每次迭代都用全部样本，故没有oob</p>\n<p>AdaBoostClassifier和AdaBoostRegressor都有，即我们的弱分类学习器或者弱回归学习器。理论上可以选择任何一个分类或者回归学习器，不过需要支持样本权重。我们常用的一般是CART决策树或者神经网络MLP。默认是决策树，即AdaBoostClassifier默认使用CART分类树DecisionTreeClassifier，而AdaBoostRegressor默认使用CART回归树DecisionTreeRegressor。另外有一个要注意的点是，如果我们选择的AdaBoostClassifier算法是SAMME.R，则我们的弱分类学习器还需要支持概率预测，也就是在scikit-learn中弱分类学习器对应的预测方法除了predict还需要有predict_proba</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.datasets <span class=\"keyword\">import</span> load_iris</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> AdaBoostClassifier</span><br><span class=\"line\"></span><br><span class=\"line\">iris = load_iris()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.utils <span class=\"keyword\">import</span> shuffle</span><br><span class=\"line\">X, y = shuffle(iris.data, iris.target)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.naive_bayes <span class=\"keyword\">import</span> GaussianNB</span><br><span class=\"line\">clf = AdaBoostClassifier(GaussianNB())</span><br><span class=\"line\"></span><br><span class=\"line\">clf.fit(X[:-<span class=\"number\">20</span>],y[:-<span class=\"number\">20</span>])</span><br><span class=\"line\">clf.score(X[-<span class=\"number\">20</span>:],y[-<span class=\"number\">20</span>:])</span><br></pre></td></tr></table></figure>\n<pre><code>1.0\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/pinard/p/6136914.html\" >scikit-learn Adaboost类库使用小结<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://blog.csdn.net/wangqi880/article/details/49765673\" >快速理解bootstrap,bagging,boosting-三个概念<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>集成学习著重于在训练集上做文章，将训练集划分为各种子集或权重变换后用较弱的基函數擬合，然後綜合若干個基模型的預測作為最終整體效果</p>\n<h2 id=\"集成学习分類\"><a href=\"#集成学习分類\" class=\"headerlink\" title=\"集成学习分類\"></a>集成学习分類</h2><ul>\n<li>Booststrap：有放回的抽样方法，是非参数统计中一种重要的估计统计量方差进而进行区间估计的统计方法。<ul>\n<li>步骤<ul>\n<li>采用重抽样技术从原始样本中抽取一定数量（自己给定）的样本，此过程允许重复抽样</li>\n<li>根据抽出的样本计算统计量T</li>\n<li>重复上述N次（一般大于1000），得到统计量T</li>\n<li>计算上述N个统计量T的样本方差，得到统计量的方差</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Bagging(Bootstrap Aggregating)：若干個基模型在若干個訓練子集上進行互相獨立的分別訓練，在預測時一次性綜合這些基模型的結果</li>\n</ul>\n<ul>\n<li>Boosting：按迭代順序逐個訓練基模型，在每次訓練後都進行模型測試，然後根據測試結果調整下一輪基模型訓練時所採用的訓練數據，最後預測時仍使用所有子模型的預測得到最終結果</li>\n</ul>\n<h2 id=\"随机森林\"><a href=\"#随机森林\" class=\"headerlink\" title=\"随机森林\"></a>随机森林</h2><p>随机森林在训练过程中对训练集进行随机抽样，分别进行训练后形成若干个小的决策树。分类问题的预测通过这些决策树的投票完成，回归问题的预测通过对基决策树结果求平均完成。基决策树一般采用”较大偏差”、”较小方差”的弱模型，和普通决策树有以下差别：</p>\n<ul>\n<li>样本裁减：通过随机采样，每个弱模型只训练部分样本数据</li>\n<li>特征裁减：每个基模型的决策树只选用数据特征中的一部分进行训练和预测，随机抽样保证所有特征都能被部分弱模型学习到</li>\n<li>小树：由于特征和样本数量有限，每个弱模型决策树都长不高，所以不用担心会过拟合进行剪枝</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.datasets <span class=\"keyword\">import</span> load_iris</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier</span><br><span class=\"line\"></span><br><span class=\"line\">iris = load_iris()</span><br><span class=\"line\"><span class=\"comment\"># Bootstrap: 有放回采样、Out-Bag Estimation: 使用为参与到本身训练的数据集进行评估预测</span></span><br><span class=\"line\">clf = RandomForestClassifier(n_estimators = <span class=\"number\">20</span>, bootstrap = <span class=\"literal\">True</span>, oob_score = <span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">clf.fit(iris.data, iris.target)</span><br><span class=\"line\"></span><br><span class=\"line\">clf.oob_score_</span><br></pre></td></tr></table></figure>\n<pre><code>0.94666666666666666\n</code></pre><h2 id=\"AdaBoost\"><a href=\"#AdaBoost\" class=\"headerlink\" title=\"AdaBoost\"></a>AdaBoost</h2><p>通过调整训练集中每个样本的权重使得每次迭代在不同的训练集上运行。在第一次迭代时训练集中美个样本会被赋予相同权值，当训练和评估完成后，AdaBoost会更新训练集中的样本，使得在本轮评估中被预测正确的样本权值减少，被预测错误的增加，然后开始第二轮的迭代，如此往复。每个迭代的基模型会逐渐更关注被预测错误的样本，如此提高整体拟合效果。因为每次迭代都用全部样本，故没有oob</p>\n<p>AdaBoostClassifier和AdaBoostRegressor都有，即我们的弱分类学习器或者弱回归学习器。理论上可以选择任何一个分类或者回归学习器，不过需要支持样本权重。我们常用的一般是CART决策树或者神经网络MLP。默认是决策树，即AdaBoostClassifier默认使用CART分类树DecisionTreeClassifier，而AdaBoostRegressor默认使用CART回归树DecisionTreeRegressor。另外有一个要注意的点是，如果我们选择的AdaBoostClassifier算法是SAMME.R，则我们的弱分类学习器还需要支持概率预测，也就是在scikit-learn中弱分类学习器对应的预测方法除了predict还需要有predict_proba</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.datasets <span class=\"keyword\">import</span> load_iris</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> AdaBoostClassifier</span><br><span class=\"line\"></span><br><span class=\"line\">iris = load_iris()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.utils <span class=\"keyword\">import</span> shuffle</span><br><span class=\"line\">X, y = shuffle(iris.data, iris.target)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.naive_bayes <span class=\"keyword\">import</span> GaussianNB</span><br><span class=\"line\">clf = AdaBoostClassifier(GaussianNB())</span><br><span class=\"line\"></span><br><span class=\"line\">clf.fit(X[:-<span class=\"number\">20</span>],y[:-<span class=\"number\">20</span>])</span><br><span class=\"line\">clf.score(X[-<span class=\"number\">20</span>:],y[-<span class=\"number\">20</span>:])</span><br></pre></td></tr></table></figure>\n<pre><code>1.0\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/pinard/p/6136914.html\" >scikit-learn Adaboost类库使用小结<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://blog.csdn.net/wangqi880/article/details/49765673\" >快速理解bootstrap,bagging,boosting-三个概念<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"堆糖图片多线程抓取","mathjax":false,"abbrlink":46912,"date":"2019-08-25T16:00:00.000Z","_content":"\n\n```python\nimport requests\nimport urllib.parse\nimport threading\n\n#多线程锁\nthread_lock = threading.BoundedSemaphore(value = 10)\n\ndef get_page(url):\n    #GET之后用utf-8解析\n    page = requests.get(url).content.decode(\"utf-8\")\n    return page\n\ndef findall_in_page(page, start_part, end_part):\n    all_strings = []\n    end = 0\n    while page.find(start_part,end) != -1:\n        start = page.find(start_part, end)+len(start_part)\n        end = page.find(end_part, start)\n        string = page[start: end]\n        all_strings.append(string)\n    return all_strings\n\ndef pic_urls_find_part(pages):\n    pic_pics = []\n    for page in pages:\n        urls = findall_in_page(page, '\"path\":\"', '\"')\n        pic_pics.extend(urls)\n    return pic_pics\n    \ndef pages_usr(label):\n    pages = []\n    url = 'https://www.duitang.com/napi/blog/list/by_search/?kw={}&start={}&limit=1000'\n    #将中文转成ASCII码\n    label = urllib.parse.quote(label)\n    #观察response可发现max=3600\n    for index in range(0,3600,100):\n        u = url.format(label,index)\n        page = get_page(u)\n        pages.append(page)\n        return pages\n        \ndef download_pic(url, name):\n    req = requests.get(url)\n    path = 'test/杨幂'+str(name)+\".jpg\"\n    with open(path, 'wb+') as file:\n        file.write(req.content)\n    #将锁打开避免堵塞\n    thread_lock.release()\n        \ndef main(label):\n    pages = pages_usr(label)\n    pic_urls = pic_urls_find_part(pages)\n    numbers = 0\n    for url in pic_urls:\n        numbers += 1\n        print(\"Now Downloading: {}\".format(numbers))\n        \n        #锁上，并开始执行\n        thread_lock.acquire()\n        t = threading.Thread(target=download_pic, args=(url, numbers))\n        t.start()\n        \nmain('杨幂')\n```\n\n    Now Downloading: 1\n    Now Downloading: 2\n    Now Downloading: 3\n    Now Downloading: 4\n    Now Downloading: 5\n    Now Downloading: 6\n    Now Downloading: 7\n    Now Downloading: 8\n    Now Downloading: 9\n    Now Downloading: 10\n\n\n> 参考：\n\n1. [从零起步 系统入门Python爬虫工程师](https://coding.imooc.com/class/chapter/325.html)\n","source":"_posts/2019-08-26_堆糖图片多线程抓取.md","raw":"---\ntitle: 堆糖图片多线程抓取\ncategories:\n  - 项目\n  - 爬虫\nmathjax: false\nabbrlink: 46912\ndate: 2019-08-26 00:00:00\n---\n\n\n```python\nimport requests\nimport urllib.parse\nimport threading\n\n#多线程锁\nthread_lock = threading.BoundedSemaphore(value = 10)\n\ndef get_page(url):\n    #GET之后用utf-8解析\n    page = requests.get(url).content.decode(\"utf-8\")\n    return page\n\ndef findall_in_page(page, start_part, end_part):\n    all_strings = []\n    end = 0\n    while page.find(start_part,end) != -1:\n        start = page.find(start_part, end)+len(start_part)\n        end = page.find(end_part, start)\n        string = page[start: end]\n        all_strings.append(string)\n    return all_strings\n\ndef pic_urls_find_part(pages):\n    pic_pics = []\n    for page in pages:\n        urls = findall_in_page(page, '\"path\":\"', '\"')\n        pic_pics.extend(urls)\n    return pic_pics\n    \ndef pages_usr(label):\n    pages = []\n    url = 'https://www.duitang.com/napi/blog/list/by_search/?kw={}&start={}&limit=1000'\n    #将中文转成ASCII码\n    label = urllib.parse.quote(label)\n    #观察response可发现max=3600\n    for index in range(0,3600,100):\n        u = url.format(label,index)\n        page = get_page(u)\n        pages.append(page)\n        return pages\n        \ndef download_pic(url, name):\n    req = requests.get(url)\n    path = 'test/杨幂'+str(name)+\".jpg\"\n    with open(path, 'wb+') as file:\n        file.write(req.content)\n    #将锁打开避免堵塞\n    thread_lock.release()\n        \ndef main(label):\n    pages = pages_usr(label)\n    pic_urls = pic_urls_find_part(pages)\n    numbers = 0\n    for url in pic_urls:\n        numbers += 1\n        print(\"Now Downloading: {}\".format(numbers))\n        \n        #锁上，并开始执行\n        thread_lock.acquire()\n        t = threading.Thread(target=download_pic, args=(url, numbers))\n        t.start()\n        \nmain('杨幂')\n```\n\n    Now Downloading: 1\n    Now Downloading: 2\n    Now Downloading: 3\n    Now Downloading: 4\n    Now Downloading: 5\n    Now Downloading: 6\n    Now Downloading: 7\n    Now Downloading: 8\n    Now Downloading: 9\n    Now Downloading: 10\n\n\n> 参考：\n\n1. [从零起步 系统入门Python爬虫工程师](https://coding.imooc.com/class/chapter/325.html)\n","slug":"2019-08-26_堆糖图片多线程抓取","published":1,"updated":"2021-04-01T17:36:53.294Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5qq000r9ohzhpxa6wir","content":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.parse</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#多线程锁</span></span><br><span class=\"line\">thread_lock = threading.BoundedSemaphore(value = <span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_page</span>(<span class=\"params\">url</span>):</span></span><br><span class=\"line\">    <span class=\"comment\">#GET之后用utf-8解析</span></span><br><span class=\"line\">    page = requests.get(url).content.decode(<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> page</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">findall_in_page</span>(<span class=\"params\">page, start_part, end_part</span>):</span></span><br><span class=\"line\">    all_strings = []</span><br><span class=\"line\">    end = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> page.find(start_part,end) != -<span class=\"number\">1</span>:</span><br><span class=\"line\">        start = page.find(start_part, end)+<span class=\"built_in\">len</span>(start_part)</span><br><span class=\"line\">        end = page.find(end_part, start)</span><br><span class=\"line\">        string = page[start: end]</span><br><span class=\"line\">        all_strings.append(string)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> all_strings</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pic_urls_find_part</span>(<span class=\"params\">pages</span>):</span></span><br><span class=\"line\">    pic_pics = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> page <span class=\"keyword\">in</span> pages:</span><br><span class=\"line\">        urls = findall_in_page(page, <span class=\"string\">&#x27;&quot;path&quot;:&quot;&#x27;</span>, <span class=\"string\">&#x27;&quot;&#x27;</span>)</span><br><span class=\"line\">        pic_pics.extend(urls)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pic_pics</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pages_usr</span>(<span class=\"params\">label</span>):</span></span><br><span class=\"line\">    pages = []</span><br><span class=\"line\">    url = <span class=\"string\">&#x27;https://www.duitang.com/napi/blog/list/by_search/?kw=&#123;&#125;&amp;start=&#123;&#125;&amp;limit=1000&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\">#将中文转成ASCII码</span></span><br><span class=\"line\">    label = urllib.parse.quote(label)</span><br><span class=\"line\">    <span class=\"comment\">#观察response可发现max=3600</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> index <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">3600</span>,<span class=\"number\">100</span>):</span><br><span class=\"line\">        u = url.<span class=\"built_in\">format</span>(label,index)</span><br><span class=\"line\">        page = get_page(u)</span><br><span class=\"line\">        pages.append(page)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pages</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">download_pic</span>(<span class=\"params\">url, name</span>):</span></span><br><span class=\"line\">    req = requests.get(url)</span><br><span class=\"line\">    path = <span class=\"string\">&#x27;test/杨幂&#x27;</span>+<span class=\"built_in\">str</span>(name)+<span class=\"string\">&quot;.jpg&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(path, <span class=\"string\">&#x27;wb+&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">        file.write(req.content)</span><br><span class=\"line\">    <span class=\"comment\">#将锁打开避免堵塞</span></span><br><span class=\"line\">    thread_lock.release()</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span>(<span class=\"params\">label</span>):</span></span><br><span class=\"line\">    pages = pages_usr(label)</span><br><span class=\"line\">    pic_urls = pic_urls_find_part(pages)</span><br><span class=\"line\">    numbers = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> url <span class=\"keyword\">in</span> pic_urls:</span><br><span class=\"line\">        numbers += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Now Downloading: &#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(numbers))</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">#锁上，并开始执行</span></span><br><span class=\"line\">        thread_lock.acquire()</span><br><span class=\"line\">        t = threading.Thread(target=download_pic, args=(url, numbers))</span><br><span class=\"line\">        t.start()</span><br><span class=\"line\">        </span><br><span class=\"line\">main(<span class=\"string\">&#x27;杨幂&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>Now Downloading: 1\nNow Downloading: 2\nNow Downloading: 3\nNow Downloading: 4\nNow Downloading: 5\nNow Downloading: 6\nNow Downloading: 7\nNow Downloading: 8\nNow Downloading: 9\nNow Downloading: 10\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://coding.imooc.com/class/chapter/325.html\" >从零起步 系统入门Python爬虫工程师<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.parse</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#多线程锁</span></span><br><span class=\"line\">thread_lock = threading.BoundedSemaphore(value = <span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_page</span>(<span class=\"params\">url</span>):</span></span><br><span class=\"line\">    <span class=\"comment\">#GET之后用utf-8解析</span></span><br><span class=\"line\">    page = requests.get(url).content.decode(<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> page</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">findall_in_page</span>(<span class=\"params\">page, start_part, end_part</span>):</span></span><br><span class=\"line\">    all_strings = []</span><br><span class=\"line\">    end = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> page.find(start_part,end) != -<span class=\"number\">1</span>:</span><br><span class=\"line\">        start = page.find(start_part, end)+<span class=\"built_in\">len</span>(start_part)</span><br><span class=\"line\">        end = page.find(end_part, start)</span><br><span class=\"line\">        string = page[start: end]</span><br><span class=\"line\">        all_strings.append(string)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> all_strings</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pic_urls_find_part</span>(<span class=\"params\">pages</span>):</span></span><br><span class=\"line\">    pic_pics = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> page <span class=\"keyword\">in</span> pages:</span><br><span class=\"line\">        urls = findall_in_page(page, <span class=\"string\">&#x27;&quot;path&quot;:&quot;&#x27;</span>, <span class=\"string\">&#x27;&quot;&#x27;</span>)</span><br><span class=\"line\">        pic_pics.extend(urls)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pic_pics</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pages_usr</span>(<span class=\"params\">label</span>):</span></span><br><span class=\"line\">    pages = []</span><br><span class=\"line\">    url = <span class=\"string\">&#x27;https://www.duitang.com/napi/blog/list/by_search/?kw=&#123;&#125;&amp;start=&#123;&#125;&amp;limit=1000&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\">#将中文转成ASCII码</span></span><br><span class=\"line\">    label = urllib.parse.quote(label)</span><br><span class=\"line\">    <span class=\"comment\">#观察response可发现max=3600</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> index <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">3600</span>,<span class=\"number\">100</span>):</span><br><span class=\"line\">        u = url.<span class=\"built_in\">format</span>(label,index)</span><br><span class=\"line\">        page = get_page(u)</span><br><span class=\"line\">        pages.append(page)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pages</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">download_pic</span>(<span class=\"params\">url, name</span>):</span></span><br><span class=\"line\">    req = requests.get(url)</span><br><span class=\"line\">    path = <span class=\"string\">&#x27;test/杨幂&#x27;</span>+<span class=\"built_in\">str</span>(name)+<span class=\"string\">&quot;.jpg&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(path, <span class=\"string\">&#x27;wb+&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">        file.write(req.content)</span><br><span class=\"line\">    <span class=\"comment\">#将锁打开避免堵塞</span></span><br><span class=\"line\">    thread_lock.release()</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span>(<span class=\"params\">label</span>):</span></span><br><span class=\"line\">    pages = pages_usr(label)</span><br><span class=\"line\">    pic_urls = pic_urls_find_part(pages)</span><br><span class=\"line\">    numbers = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> url <span class=\"keyword\">in</span> pic_urls:</span><br><span class=\"line\">        numbers += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Now Downloading: &#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(numbers))</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">#锁上，并开始执行</span></span><br><span class=\"line\">        thread_lock.acquire()</span><br><span class=\"line\">        t = threading.Thread(target=download_pic, args=(url, numbers))</span><br><span class=\"line\">        t.start()</span><br><span class=\"line\">        </span><br><span class=\"line\">main(<span class=\"string\">&#x27;杨幂&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>Now Downloading: 1\nNow Downloading: 2\nNow Downloading: 3\nNow Downloading: 4\nNow Downloading: 5\nNow Downloading: 6\nNow Downloading: 7\nNow Downloading: 8\nNow Downloading: 9\nNow Downloading: 10\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://coding.imooc.com/class/chapter/325.html\" >从零起步 系统入门Python爬虫工程师<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"数据仓库设计","mathjax":false,"abbrlink":22639,"date":"2019-08-21T16:00:00.000Z","_content":"\n## 基本介绍\n\n数据仓库是一个**面向主题的**、**集成的**、**相对稳定的**且**反映历史变化的**数据集合，用于支持管理人员的决策\n\n- **面向主题的**：为特定的数据分析领域与目标提供数据支持，比如交易库、用户库等\n- **集成的**：面向分析的数据仓库需要集成多种不同数据源以及文件以进行比较鉴别\n- **相对稳定的**：数据仓库中的数据是经过抽取而形成的分析型数据，主要供企业决策分析之用，执行的主要是‘查询’操作，一般不执行‘更新’操作。一个稳定的数据环境有利于数据分析的纵向和横向对比\n- **反映历史变化的**：数据仓库中的数据以一定时间段为单位进行统一更新，不断增加新的数据内容、不断删去旧的数据内容、更新与时间有关的综合数据\n\n|　 | 数据库系统设计 | 数据仓库系统设计|\n|-|-|-|\n|面向的数据类型 | 面向应用 | 面向分析|\n|应用需求 | 比较明确 | 不太明确|\n|系统设计目标 | 事务处理的并发性、安全性、高效性 | 历史数据的存储，数据质量的提升和数据模型的构建|\n|数据来源 | 业务输入 | 业务系统|\n|系统设计的方法 | 需求驱动 | 数据驱动|\n\n## 体系结构\n\n![](/img/2019-08-22_数据仓库设计_1.png)\n\n## 模型\n\n### 星形模型\n\n- 星型模型组成：\n    - 一个包含大批数据和不冗余数据的事实表（中心表）\n    - 一组小的附属表，称为维表。每维一个\n- 事实表中每条元组都含有指向各个维表的外键和一些相应的测量数据，事实表的记录数量很多，维表中记录的是有关这一维的属性\n\n![](http://www.ibm.com/developerworks/cn/rational/r-warehouses/images/image005.png)\n\n### 雪花模型\n\n- 雪花模型是对星型模型维表的进一步层次化\n- 原来的各维表可能被扩展为小的事实表，形成一些局部的“层次”区域\n\n![](http://www.ibm.com/developerworks/cn/rational/r-warehouses/images/image013.png)\n\n### 比较\n\n雪花模式的维表是规范化的，以减少冗余。这种表易于维护，并节省存储空间。但与巨大的事实表相比，这种空间的节省可以忽略\n\n由于执行查询需要更多的连接操作，雪花结构可能降低浏览的性能。\n在数据仓库设计中，星型模式更加常用\n\n## 五层模型架构\n\n|　　　　　|  数据来源及建模方式 | 服务领域 |设计原则|\n|-|-|-|-|\n|DM层 | 数据来自DWS和MID层，应用支撑 | 前端报表展现，数据分析，产品数据支撑 | 面向应用开发报表、支撑产品需求|\n|DWS层 | 数据来自MID和DWD层，轻度汇总，面向应用结合数据设计 | 各类服务模块，原子指标，通用应用模型开发 |基于数据面向应用和通用服务，该层模型随需求变更会不断演化|\n|MID层 | 数据来自DWD层，是MID事实明细层，采用维度建模，星型架构 |为数据仓库提供各主题业务明细数据 |分业务线按主题建模，数据只来自于DWD|\n|DWD层 | 数据来自ODS层,数据模型是ODS一致 |数据质量提升，数据清洗、码值标准化，数据加密，数据校验 |加密脱敏及治理后的规整数据，对外开放查询|\n|ODS层 | 数据准备区，数据来源是各业务系统的源数据，物理模型和业务系统模型一致。 |为其它逻辑层提供数据，数据溯源，数据存储 |原始数据，不对外开放查询使用|\n\n- 细化DW建模\n    - 对DW中各个主题业务建模进行了细分，每个层次具有不同的功能。\n    - 保留了最细粒度数据\n    - 满足了不同维度，不同事实的信息\n    \n    \n- 满足数据重新生成\n    - 不同层次的数据支持数据重新生成\n    - 无需备份恢复\n    - 解决了由不同故障带来的数据质量问题\n    - 消除了重新初始化数据的烦恼\n    \n    \n- 快速适应需求变更\n    - 适应维度变化\n    - 明细基础数据层稳定，适应前端应用层业务需求变更\n    - 所有前端应用层模型之间不存在依赖，需求变更对DW整个模型影响范围小 \n    - 能适应短周期内上线下线需求\n\n## 元数据管理\n\n最基本的元数据相当于数据库系统中的数据字典。元数据定义了数据仓库有什么，指明了数据仓库中数据的内容和位置，刻画了数据的抽取和转换规则，存储了与数据仓库主题有关的各种商业信息，而且整个数据仓库的运行都是基于元数据的\n\n- 数据源的元数据\n- 数据模型的元数据\n- 数据仓库映射的元数据\n- 数据仓库使用的元数据\n\n## 构建方法\n\n### 自上而下（Bill Inmon）\n\n- 从整个企业的业务环境入手，分析其中的概念，应该有什么样的数据，达成概念完整性，并不从它需要支持那些应用入手\n- 一个企业建立唯一的数据中心，就像一个数据的仓库，其中数据是经过整合、经过清洗、去掉脏数据的、标准的，能够提供统一的视图\n\n### 自下而上（Ralph Kimbal）\n\n- 按照实际的应用需求，加载需要的数据，不需要的数据不必要加载到数据仓库当中\n- 这种方式建设周期较短，客户能够很快看到结果，适合做项目类数据仓库\n\n### 混合法\n\n- 结合自上而下、自下而上两种构造数据仓库的方法，结合企业自身特点，分析业务环境构造数据仓库底层数据基础，再按照实际的应用需求构造数据仓库上层数据\n\n### 应避免的设计\n\n- 任务间依赖较乱\n- 链路太长\n- 数据质量低\n- 数据安全级别低\n- 元数据信息缺失\n- 码值无标准\n\n## 架构原则\n\n- 底层业务的数据驱动为导向同时结合业务需求驱动\n- 便于数据分析\n    - 屏蔽底层复杂业务\n    - 简单、完整、集成的将数据暴露给分析层\n- 底层业务变动与上层需求变动对模型冲击最小化\n    - 业务系统变化影响削弱在基础数据层（资金订单改造）\n    - 结合自上而下的建设方法削弱需求变动对模型的影响\n    - 数据水平层次清晰化\n- 高内聚松耦合\n    - 主题之内或各个完整意义的系统内数据的高内聚\n    - 主题之间或各个完整意义的系统间数据的松耦合\n- 构建仓库基础数据层\n    - 使得底层业务数据整合工作与上层应用开发工作相隔离，为仓库大规模开发奠定基础\n    - 仓库层次更加清晰，对外暴露数据更加统一\n\n> 参考：\n\n1. [数据仓库建模之雪花模型和星形模型](https://www.cnblogs.com/xiaojianblogs/p/7655458.html)\n2. [支付宝数据建模介绍](https://max.book118.com/html/2017/0618/116376625.shtm)\n","source":"_posts/2019-08-22_数据仓库设计.md","raw":"---\ntitle: 数据仓库设计\ncategories:\n  - 数据仓库\nmathjax: false\nabbrlink: 22639\ndate: 2019-08-22 00:00:00\n---\n\n## 基本介绍\n\n数据仓库是一个**面向主题的**、**集成的**、**相对稳定的**且**反映历史变化的**数据集合，用于支持管理人员的决策\n\n- **面向主题的**：为特定的数据分析领域与目标提供数据支持，比如交易库、用户库等\n- **集成的**：面向分析的数据仓库需要集成多种不同数据源以及文件以进行比较鉴别\n- **相对稳定的**：数据仓库中的数据是经过抽取而形成的分析型数据，主要供企业决策分析之用，执行的主要是‘查询’操作，一般不执行‘更新’操作。一个稳定的数据环境有利于数据分析的纵向和横向对比\n- **反映历史变化的**：数据仓库中的数据以一定时间段为单位进行统一更新，不断增加新的数据内容、不断删去旧的数据内容、更新与时间有关的综合数据\n\n|　 | 数据库系统设计 | 数据仓库系统设计|\n|-|-|-|\n|面向的数据类型 | 面向应用 | 面向分析|\n|应用需求 | 比较明确 | 不太明确|\n|系统设计目标 | 事务处理的并发性、安全性、高效性 | 历史数据的存储，数据质量的提升和数据模型的构建|\n|数据来源 | 业务输入 | 业务系统|\n|系统设计的方法 | 需求驱动 | 数据驱动|\n\n## 体系结构\n\n![](/img/2019-08-22_数据仓库设计_1.png)\n\n## 模型\n\n### 星形模型\n\n- 星型模型组成：\n    - 一个包含大批数据和不冗余数据的事实表（中心表）\n    - 一组小的附属表，称为维表。每维一个\n- 事实表中每条元组都含有指向各个维表的外键和一些相应的测量数据，事实表的记录数量很多，维表中记录的是有关这一维的属性\n\n![](http://www.ibm.com/developerworks/cn/rational/r-warehouses/images/image005.png)\n\n### 雪花模型\n\n- 雪花模型是对星型模型维表的进一步层次化\n- 原来的各维表可能被扩展为小的事实表，形成一些局部的“层次”区域\n\n![](http://www.ibm.com/developerworks/cn/rational/r-warehouses/images/image013.png)\n\n### 比较\n\n雪花模式的维表是规范化的，以减少冗余。这种表易于维护，并节省存储空间。但与巨大的事实表相比，这种空间的节省可以忽略\n\n由于执行查询需要更多的连接操作，雪花结构可能降低浏览的性能。\n在数据仓库设计中，星型模式更加常用\n\n## 五层模型架构\n\n|　　　　　|  数据来源及建模方式 | 服务领域 |设计原则|\n|-|-|-|-|\n|DM层 | 数据来自DWS和MID层，应用支撑 | 前端报表展现，数据分析，产品数据支撑 | 面向应用开发报表、支撑产品需求|\n|DWS层 | 数据来自MID和DWD层，轻度汇总，面向应用结合数据设计 | 各类服务模块，原子指标，通用应用模型开发 |基于数据面向应用和通用服务，该层模型随需求变更会不断演化|\n|MID层 | 数据来自DWD层，是MID事实明细层，采用维度建模，星型架构 |为数据仓库提供各主题业务明细数据 |分业务线按主题建模，数据只来自于DWD|\n|DWD层 | 数据来自ODS层,数据模型是ODS一致 |数据质量提升，数据清洗、码值标准化，数据加密，数据校验 |加密脱敏及治理后的规整数据，对外开放查询|\n|ODS层 | 数据准备区，数据来源是各业务系统的源数据，物理模型和业务系统模型一致。 |为其它逻辑层提供数据，数据溯源，数据存储 |原始数据，不对外开放查询使用|\n\n- 细化DW建模\n    - 对DW中各个主题业务建模进行了细分，每个层次具有不同的功能。\n    - 保留了最细粒度数据\n    - 满足了不同维度，不同事实的信息\n    \n    \n- 满足数据重新生成\n    - 不同层次的数据支持数据重新生成\n    - 无需备份恢复\n    - 解决了由不同故障带来的数据质量问题\n    - 消除了重新初始化数据的烦恼\n    \n    \n- 快速适应需求变更\n    - 适应维度变化\n    - 明细基础数据层稳定，适应前端应用层业务需求变更\n    - 所有前端应用层模型之间不存在依赖，需求变更对DW整个模型影响范围小 \n    - 能适应短周期内上线下线需求\n\n## 元数据管理\n\n最基本的元数据相当于数据库系统中的数据字典。元数据定义了数据仓库有什么，指明了数据仓库中数据的内容和位置，刻画了数据的抽取和转换规则，存储了与数据仓库主题有关的各种商业信息，而且整个数据仓库的运行都是基于元数据的\n\n- 数据源的元数据\n- 数据模型的元数据\n- 数据仓库映射的元数据\n- 数据仓库使用的元数据\n\n## 构建方法\n\n### 自上而下（Bill Inmon）\n\n- 从整个企业的业务环境入手，分析其中的概念，应该有什么样的数据，达成概念完整性，并不从它需要支持那些应用入手\n- 一个企业建立唯一的数据中心，就像一个数据的仓库，其中数据是经过整合、经过清洗、去掉脏数据的、标准的，能够提供统一的视图\n\n### 自下而上（Ralph Kimbal）\n\n- 按照实际的应用需求，加载需要的数据，不需要的数据不必要加载到数据仓库当中\n- 这种方式建设周期较短，客户能够很快看到结果，适合做项目类数据仓库\n\n### 混合法\n\n- 结合自上而下、自下而上两种构造数据仓库的方法，结合企业自身特点，分析业务环境构造数据仓库底层数据基础，再按照实际的应用需求构造数据仓库上层数据\n\n### 应避免的设计\n\n- 任务间依赖较乱\n- 链路太长\n- 数据质量低\n- 数据安全级别低\n- 元数据信息缺失\n- 码值无标准\n\n## 架构原则\n\n- 底层业务的数据驱动为导向同时结合业务需求驱动\n- 便于数据分析\n    - 屏蔽底层复杂业务\n    - 简单、完整、集成的将数据暴露给分析层\n- 底层业务变动与上层需求变动对模型冲击最小化\n    - 业务系统变化影响削弱在基础数据层（资金订单改造）\n    - 结合自上而下的建设方法削弱需求变动对模型的影响\n    - 数据水平层次清晰化\n- 高内聚松耦合\n    - 主题之内或各个完整意义的系统内数据的高内聚\n    - 主题之间或各个完整意义的系统间数据的松耦合\n- 构建仓库基础数据层\n    - 使得底层业务数据整合工作与上层应用开发工作相隔离，为仓库大规模开发奠定基础\n    - 仓库层次更加清晰，对外暴露数据更加统一\n\n> 参考：\n\n1. [数据仓库建模之雪花模型和星形模型](https://www.cnblogs.com/xiaojianblogs/p/7655458.html)\n2. [支付宝数据建模介绍](https://max.book118.com/html/2017/0618/116376625.shtm)\n","slug":"2019-08-22_数据仓库设计","published":1,"updated":"2021-04-01T17:36:51.842Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5qs000t9ohzenqs0sks","content":"<h2 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h2><p>数据仓库是一个<strong>面向主题的</strong>、<strong>集成的</strong>、<strong>相对稳定的</strong>且<strong>反映历史变化的</strong>数据集合，用于支持管理人员的决策</p>\n<ul>\n<li><strong>面向主题的</strong>：为特定的数据分析领域与目标提供数据支持，比如交易库、用户库等</li>\n<li><strong>集成的</strong>：面向分析的数据仓库需要集成多种不同数据源以及文件以进行比较鉴别</li>\n<li><strong>相对稳定的</strong>：数据仓库中的数据是经过抽取而形成的分析型数据，主要供企业决策分析之用，执行的主要是‘查询’操作，一般不执行‘更新’操作。一个稳定的数据环境有利于数据分析的纵向和横向对比</li>\n<li><strong>反映历史变化的</strong>：数据仓库中的数据以一定时间段为单位进行统一更新，不断增加新的数据内容、不断删去旧的数据内容、更新与时间有关的综合数据</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>　</th>\n<th>数据库系统设计</th>\n<th>数据仓库系统设计</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>面向的数据类型</td>\n<td>面向应用</td>\n<td>面向分析</td>\n</tr>\n<tr>\n<td>应用需求</td>\n<td>比较明确</td>\n<td>不太明确</td>\n</tr>\n<tr>\n<td>系统设计目标</td>\n<td>事务处理的并发性、安全性、高效性</td>\n<td>历史数据的存储，数据质量的提升和数据模型的构建</td>\n</tr>\n<tr>\n<td>数据来源</td>\n<td>业务输入</td>\n<td>业务系统</td>\n</tr>\n<tr>\n<td>系统设计的方法</td>\n<td>需求驱动</td>\n<td>数据驱动</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"体系结构\"><a href=\"#体系结构\" class=\"headerlink\" title=\"体系结构\"></a>体系结构</h2><p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-22_数据仓库设计_1.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"模型\"><a href=\"#模型\" class=\"headerlink\" title=\"模型\"></a>模型</h2><h3 id=\"星形模型\"><a href=\"#星形模型\" class=\"headerlink\" title=\"星形模型\"></a>星形模型</h3><ul>\n<li>星型模型组成：<ul>\n<li>一个包含大批数据和不冗余数据的事实表（中心表）</li>\n<li>一组小的附属表，称为维表。每维一个</li>\n</ul>\n</li>\n<li>事实表中每条元组都含有指向各个维表的外键和一些相应的测量数据，事实表的记录数量很多，维表中记录的是有关这一维的属性</li>\n</ul>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://www.ibm.com/developerworks/cn/rational/r-warehouses/images/image005.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"雪花模型\"><a href=\"#雪花模型\" class=\"headerlink\" title=\"雪花模型\"></a>雪花模型</h3><ul>\n<li>雪花模型是对星型模型维表的进一步层次化</li>\n<li>原来的各维表可能被扩展为小的事实表，形成一些局部的“层次”区域</li>\n</ul>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://www.ibm.com/developerworks/cn/rational/r-warehouses/images/image013.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"比较\"><a href=\"#比较\" class=\"headerlink\" title=\"比较\"></a>比较</h3><p>雪花模式的维表是规范化的，以减少冗余。这种表易于维护，并节省存储空间。但与巨大的事实表相比，这种空间的节省可以忽略</p>\n<p>由于执行查询需要更多的连接操作，雪花结构可能降低浏览的性能。<br>在数据仓库设计中，星型模式更加常用</p>\n<h2 id=\"五层模型架构\"><a href=\"#五层模型架构\" class=\"headerlink\" title=\"五层模型架构\"></a>五层模型架构</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>　　　　　</th>\n<th>数据来源及建模方式</th>\n<th>服务领域</th>\n<th>设计原则</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DM层</td>\n<td>数据来自DWS和MID层，应用支撑</td>\n<td>前端报表展现，数据分析，产品数据支撑</td>\n<td>面向应用开发报表、支撑产品需求</td>\n</tr>\n<tr>\n<td>DWS层</td>\n<td>数据来自MID和DWD层，轻度汇总，面向应用结合数据设计</td>\n<td>各类服务模块，原子指标，通用应用模型开发</td>\n<td>基于数据面向应用和通用服务，该层模型随需求变更会不断演化</td>\n</tr>\n<tr>\n<td>MID层</td>\n<td>数据来自DWD层，是MID事实明细层，采用维度建模，星型架构</td>\n<td>为数据仓库提供各主题业务明细数据</td>\n<td>分业务线按主题建模，数据只来自于DWD</td>\n</tr>\n<tr>\n<td>DWD层</td>\n<td>数据来自ODS层,数据模型是ODS一致</td>\n<td>数据质量提升，数据清洗、码值标准化，数据加密，数据校验</td>\n<td>加密脱敏及治理后的规整数据，对外开放查询</td>\n</tr>\n<tr>\n<td>ODS层</td>\n<td>数据准备区，数据来源是各业务系统的源数据，物理模型和业务系统模型一致。</td>\n<td>为其它逻辑层提供数据，数据溯源，数据存储</td>\n<td>原始数据，不对外开放查询使用</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li>细化DW建模<ul>\n<li>对DW中各个主题业务建模进行了细分，每个层次具有不同的功能。</li>\n<li>保留了最细粒度数据</li>\n<li>满足了不同维度，不同事实的信息</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>满足数据重新生成<ul>\n<li>不同层次的数据支持数据重新生成</li>\n<li>无需备份恢复</li>\n<li>解决了由不同故障带来的数据质量问题</li>\n<li>消除了重新初始化数据的烦恼</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>快速适应需求变更<ul>\n<li>适应维度变化</li>\n<li>明细基础数据层稳定，适应前端应用层业务需求变更</li>\n<li>所有前端应用层模型之间不存在依赖，需求变更对DW整个模型影响范围小 </li>\n<li>能适应短周期内上线下线需求</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"元数据管理\"><a href=\"#元数据管理\" class=\"headerlink\" title=\"元数据管理\"></a>元数据管理</h2><p>最基本的元数据相当于数据库系统中的数据字典。元数据定义了数据仓库有什么，指明了数据仓库中数据的内容和位置，刻画了数据的抽取和转换规则，存储了与数据仓库主题有关的各种商业信息，而且整个数据仓库的运行都是基于元数据的</p>\n<ul>\n<li>数据源的元数据</li>\n<li>数据模型的元数据</li>\n<li>数据仓库映射的元数据</li>\n<li>数据仓库使用的元数据</li>\n</ul>\n<h2 id=\"构建方法\"><a href=\"#构建方法\" class=\"headerlink\" title=\"构建方法\"></a>构建方法</h2><h3 id=\"自上而下（Bill-Inmon）\"><a href=\"#自上而下（Bill-Inmon）\" class=\"headerlink\" title=\"自上而下（Bill Inmon）\"></a>自上而下（Bill Inmon）</h3><ul>\n<li>从整个企业的业务环境入手，分析其中的概念，应该有什么样的数据，达成概念完整性，并不从它需要支持那些应用入手</li>\n<li>一个企业建立唯一的数据中心，就像一个数据的仓库，其中数据是经过整合、经过清洗、去掉脏数据的、标准的，能够提供统一的视图</li>\n</ul>\n<h3 id=\"自下而上（Ralph-Kimbal）\"><a href=\"#自下而上（Ralph-Kimbal）\" class=\"headerlink\" title=\"自下而上（Ralph Kimbal）\"></a>自下而上（Ralph Kimbal）</h3><ul>\n<li>按照实际的应用需求，加载需要的数据，不需要的数据不必要加载到数据仓库当中</li>\n<li>这种方式建设周期较短，客户能够很快看到结果，适合做项目类数据仓库</li>\n</ul>\n<h3 id=\"混合法\"><a href=\"#混合法\" class=\"headerlink\" title=\"混合法\"></a>混合法</h3><ul>\n<li>结合自上而下、自下而上两种构造数据仓库的方法，结合企业自身特点，分析业务环境构造数据仓库底层数据基础，再按照实际的应用需求构造数据仓库上层数据</li>\n</ul>\n<h3 id=\"应避免的设计\"><a href=\"#应避免的设计\" class=\"headerlink\" title=\"应避免的设计\"></a>应避免的设计</h3><ul>\n<li>任务间依赖较乱</li>\n<li>链路太长</li>\n<li>数据质量低</li>\n<li>数据安全级别低</li>\n<li>元数据信息缺失</li>\n<li>码值无标准</li>\n</ul>\n<h2 id=\"架构原则\"><a href=\"#架构原则\" class=\"headerlink\" title=\"架构原则\"></a>架构原则</h2><ul>\n<li>底层业务的数据驱动为导向同时结合业务需求驱动</li>\n<li>便于数据分析<ul>\n<li>屏蔽底层复杂业务</li>\n<li>简单、完整、集成的将数据暴露给分析层</li>\n</ul>\n</li>\n<li>底层业务变动与上层需求变动对模型冲击最小化<ul>\n<li>业务系统变化影响削弱在基础数据层（资金订单改造）</li>\n<li>结合自上而下的建设方法削弱需求变动对模型的影响</li>\n<li>数据水平层次清晰化</li>\n</ul>\n</li>\n<li>高内聚松耦合<ul>\n<li>主题之内或各个完整意义的系统内数据的高内聚</li>\n<li>主题之间或各个完整意义的系统间数据的松耦合</li>\n</ul>\n</li>\n<li>构建仓库基础数据层<ul>\n<li>使得底层业务数据整合工作与上层应用开发工作相隔离，为仓库大规模开发奠定基础</li>\n<li>仓库层次更加清晰，对外暴露数据更加统一</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/xiaojianblogs/p/7655458.html\" >数据仓库建模之雪花模型和星形模型<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://max.book118.com/html/2017/0618/116376625.shtm\" >支付宝数据建模介绍<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h2><p>数据仓库是一个<strong>面向主题的</strong>、<strong>集成的</strong>、<strong>相对稳定的</strong>且<strong>反映历史变化的</strong>数据集合，用于支持管理人员的决策</p>\n<ul>\n<li><strong>面向主题的</strong>：为特定的数据分析领域与目标提供数据支持，比如交易库、用户库等</li>\n<li><strong>集成的</strong>：面向分析的数据仓库需要集成多种不同数据源以及文件以进行比较鉴别</li>\n<li><strong>相对稳定的</strong>：数据仓库中的数据是经过抽取而形成的分析型数据，主要供企业决策分析之用，执行的主要是‘查询’操作，一般不执行‘更新’操作。一个稳定的数据环境有利于数据分析的纵向和横向对比</li>\n<li><strong>反映历史变化的</strong>：数据仓库中的数据以一定时间段为单位进行统一更新，不断增加新的数据内容、不断删去旧的数据内容、更新与时间有关的综合数据</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>　</th>\n<th>数据库系统设计</th>\n<th>数据仓库系统设计</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>面向的数据类型</td>\n<td>面向应用</td>\n<td>面向分析</td>\n</tr>\n<tr>\n<td>应用需求</td>\n<td>比较明确</td>\n<td>不太明确</td>\n</tr>\n<tr>\n<td>系统设计目标</td>\n<td>事务处理的并发性、安全性、高效性</td>\n<td>历史数据的存储，数据质量的提升和数据模型的构建</td>\n</tr>\n<tr>\n<td>数据来源</td>\n<td>业务输入</td>\n<td>业务系统</td>\n</tr>\n<tr>\n<td>系统设计的方法</td>\n<td>需求驱动</td>\n<td>数据驱动</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"体系结构\"><a href=\"#体系结构\" class=\"headerlink\" title=\"体系结构\"></a>体系结构</h2><p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-22_数据仓库设计_1.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"模型\"><a href=\"#模型\" class=\"headerlink\" title=\"模型\"></a>模型</h2><h3 id=\"星形模型\"><a href=\"#星形模型\" class=\"headerlink\" title=\"星形模型\"></a>星形模型</h3><ul>\n<li>星型模型组成：<ul>\n<li>一个包含大批数据和不冗余数据的事实表（中心表）</li>\n<li>一组小的附属表，称为维表。每维一个</li>\n</ul>\n</li>\n<li>事实表中每条元组都含有指向各个维表的外键和一些相应的测量数据，事实表的记录数量很多，维表中记录的是有关这一维的属性</li>\n</ul>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://www.ibm.com/developerworks/cn/rational/r-warehouses/images/image005.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"雪花模型\"><a href=\"#雪花模型\" class=\"headerlink\" title=\"雪花模型\"></a>雪花模型</h3><ul>\n<li>雪花模型是对星型模型维表的进一步层次化</li>\n<li>原来的各维表可能被扩展为小的事实表，形成一些局部的“层次”区域</li>\n</ul>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"http://www.ibm.com/developerworks/cn/rational/r-warehouses/images/image013.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"比较\"><a href=\"#比较\" class=\"headerlink\" title=\"比较\"></a>比较</h3><p>雪花模式的维表是规范化的，以减少冗余。这种表易于维护，并节省存储空间。但与巨大的事实表相比，这种空间的节省可以忽略</p>\n<p>由于执行查询需要更多的连接操作，雪花结构可能降低浏览的性能。<br>在数据仓库设计中，星型模式更加常用</p>\n<h2 id=\"五层模型架构\"><a href=\"#五层模型架构\" class=\"headerlink\" title=\"五层模型架构\"></a>五层模型架构</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>　　　　　</th>\n<th>数据来源及建模方式</th>\n<th>服务领域</th>\n<th>设计原则</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DM层</td>\n<td>数据来自DWS和MID层，应用支撑</td>\n<td>前端报表展现，数据分析，产品数据支撑</td>\n<td>面向应用开发报表、支撑产品需求</td>\n</tr>\n<tr>\n<td>DWS层</td>\n<td>数据来自MID和DWD层，轻度汇总，面向应用结合数据设计</td>\n<td>各类服务模块，原子指标，通用应用模型开发</td>\n<td>基于数据面向应用和通用服务，该层模型随需求变更会不断演化</td>\n</tr>\n<tr>\n<td>MID层</td>\n<td>数据来自DWD层，是MID事实明细层，采用维度建模，星型架构</td>\n<td>为数据仓库提供各主题业务明细数据</td>\n<td>分业务线按主题建模，数据只来自于DWD</td>\n</tr>\n<tr>\n<td>DWD层</td>\n<td>数据来自ODS层,数据模型是ODS一致</td>\n<td>数据质量提升，数据清洗、码值标准化，数据加密，数据校验</td>\n<td>加密脱敏及治理后的规整数据，对外开放查询</td>\n</tr>\n<tr>\n<td>ODS层</td>\n<td>数据准备区，数据来源是各业务系统的源数据，物理模型和业务系统模型一致。</td>\n<td>为其它逻辑层提供数据，数据溯源，数据存储</td>\n<td>原始数据，不对外开放查询使用</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li>细化DW建模<ul>\n<li>对DW中各个主题业务建模进行了细分，每个层次具有不同的功能。</li>\n<li>保留了最细粒度数据</li>\n<li>满足了不同维度，不同事实的信息</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>满足数据重新生成<ul>\n<li>不同层次的数据支持数据重新生成</li>\n<li>无需备份恢复</li>\n<li>解决了由不同故障带来的数据质量问题</li>\n<li>消除了重新初始化数据的烦恼</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>快速适应需求变更<ul>\n<li>适应维度变化</li>\n<li>明细基础数据层稳定，适应前端应用层业务需求变更</li>\n<li>所有前端应用层模型之间不存在依赖，需求变更对DW整个模型影响范围小 </li>\n<li>能适应短周期内上线下线需求</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"元数据管理\"><a href=\"#元数据管理\" class=\"headerlink\" title=\"元数据管理\"></a>元数据管理</h2><p>最基本的元数据相当于数据库系统中的数据字典。元数据定义了数据仓库有什么，指明了数据仓库中数据的内容和位置，刻画了数据的抽取和转换规则，存储了与数据仓库主题有关的各种商业信息，而且整个数据仓库的运行都是基于元数据的</p>\n<ul>\n<li>数据源的元数据</li>\n<li>数据模型的元数据</li>\n<li>数据仓库映射的元数据</li>\n<li>数据仓库使用的元数据</li>\n</ul>\n<h2 id=\"构建方法\"><a href=\"#构建方法\" class=\"headerlink\" title=\"构建方法\"></a>构建方法</h2><h3 id=\"自上而下（Bill-Inmon）\"><a href=\"#自上而下（Bill-Inmon）\" class=\"headerlink\" title=\"自上而下（Bill Inmon）\"></a>自上而下（Bill Inmon）</h3><ul>\n<li>从整个企业的业务环境入手，分析其中的概念，应该有什么样的数据，达成概念完整性，并不从它需要支持那些应用入手</li>\n<li>一个企业建立唯一的数据中心，就像一个数据的仓库，其中数据是经过整合、经过清洗、去掉脏数据的、标准的，能够提供统一的视图</li>\n</ul>\n<h3 id=\"自下而上（Ralph-Kimbal）\"><a href=\"#自下而上（Ralph-Kimbal）\" class=\"headerlink\" title=\"自下而上（Ralph Kimbal）\"></a>自下而上（Ralph Kimbal）</h3><ul>\n<li>按照实际的应用需求，加载需要的数据，不需要的数据不必要加载到数据仓库当中</li>\n<li>这种方式建设周期较短，客户能够很快看到结果，适合做项目类数据仓库</li>\n</ul>\n<h3 id=\"混合法\"><a href=\"#混合法\" class=\"headerlink\" title=\"混合法\"></a>混合法</h3><ul>\n<li>结合自上而下、自下而上两种构造数据仓库的方法，结合企业自身特点，分析业务环境构造数据仓库底层数据基础，再按照实际的应用需求构造数据仓库上层数据</li>\n</ul>\n<h3 id=\"应避免的设计\"><a href=\"#应避免的设计\" class=\"headerlink\" title=\"应避免的设计\"></a>应避免的设计</h3><ul>\n<li>任务间依赖较乱</li>\n<li>链路太长</li>\n<li>数据质量低</li>\n<li>数据安全级别低</li>\n<li>元数据信息缺失</li>\n<li>码值无标准</li>\n</ul>\n<h2 id=\"架构原则\"><a href=\"#架构原则\" class=\"headerlink\" title=\"架构原则\"></a>架构原则</h2><ul>\n<li>底层业务的数据驱动为导向同时结合业务需求驱动</li>\n<li>便于数据分析<ul>\n<li>屏蔽底层复杂业务</li>\n<li>简单、完整、集成的将数据暴露给分析层</li>\n</ul>\n</li>\n<li>底层业务变动与上层需求变动对模型冲击最小化<ul>\n<li>业务系统变化影响削弱在基础数据层（资金订单改造）</li>\n<li>结合自上而下的建设方法削弱需求变动对模型的影响</li>\n<li>数据水平层次清晰化</li>\n</ul>\n</li>\n<li>高内聚松耦合<ul>\n<li>主题之内或各个完整意义的系统内数据的高内聚</li>\n<li>主题之间或各个完整意义的系统间数据的松耦合</li>\n</ul>\n</li>\n<li>构建仓库基础数据层<ul>\n<li>使得底层业务数据整合工作与上层应用开发工作相隔离，为仓库大规模开发奠定基础</li>\n<li>仓库层次更加清晰，对外暴露数据更加统一</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/xiaojianblogs/p/7655458.html\" >数据仓库建模之雪花模型和星形模型<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://max.book118.com/html/2017/0618/116376625.shtm\" >支付宝数据建模介绍<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"Pandas移动窗口","mathjax":false,"abbrlink":24354,"date":"2019-08-31T16:00:00.000Z","_content":"\n## 简单范例\n\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n\nindex = pd.date_range('20190116', '20190130')\ndata = [4, 8, 6, 5, 9, 1, 4, 5, 2, 4, 6, 7, 9, 13, 6]\nser_data = pd.Series(data, index=index)\nser_data\n```\n\n\n\n\n    2019-01-16     4\n    2019-01-17     8\n    2019-01-18     6\n    2019-01-19     5\n    2019-01-20     9\n    2019-01-21     1\n    2019-01-22     4\n    2019-01-23     5\n    2019-01-24     2\n    2019-01-25     4\n    2019-01-26     6\n    2019-01-27     7\n    2019-01-28     9\n    2019-01-29    13\n    2019-01-30     6\n    Freq: D, dtype: int64\n\n\n\n\n```python\nser_data.rolling(3).mean()\n```\n\n\n\n\n    2019-01-16         NaN\n    2019-01-17         NaN\n    2019-01-18    6.000000\n    2019-01-19    6.333333\n    2019-01-20    6.666667\n    2019-01-21    5.000000\n    2019-01-22    4.666667\n    2019-01-23    3.333333\n    2019-01-24    3.666667\n    2019-01-25    3.666667\n    2019-01-26    4.000000\n    2019-01-27    5.666667\n    2019-01-28    7.333333\n    2019-01-29    9.666667\n    2019-01-30    9.333333\n    Freq: D, dtype: float64\n\n\n\n\n```python\nser_data.rolling(3, min_periods=1).mean()\n```\n\n\n\n\n    2019-01-16    4.000000\n    2019-01-17    6.000000\n    2019-01-18    6.000000\n    2019-01-19    6.333333\n    2019-01-20    6.666667\n    2019-01-21    5.000000\n    2019-01-22    4.666667\n    2019-01-23    3.333333\n    2019-01-24    3.666667\n    2019-01-25    3.666667\n    2019-01-26    4.000000\n    2019-01-27    5.666667\n    2019-01-28    7.333333\n    2019-01-29    9.666667\n    2019-01-30    9.333333\n    Freq: D, dtype: float64\n\n\n\n\n```python\nindex = pd.date_range('20190116', '20190216')\ndata = np.random.randint(20, size=len(index))\nser_data = pd.Series(data, index=index)\n\nplt.figure(figsize=(15, 5))\n\nser_data.plot(style='r--', label='原数据')\nser_data.rolling(3).mean().plot(style='b', label='滑动平滑后')\n\nplt.legend()\n\nplt.savefig(\"../img/2019-09-01_Pandas移动窗口.png\")\nplt.close()\n```\n\n![](/img/2019-09-01_Pandas移动窗口.png)\n\n> 参考：\n\n1. [移动窗口函数rolling](http://blog.sina.com.cn/s/blog_c32439660102x2kp.html)\n2. [pandas 0.17.0 documentation](https://pandas.pydata.org/pandas-docs/version/0.17.0/generated/pandas.rolling_window.html)\n3. [python时间序列分析之_用pandas中的rolling函数计算时间窗口数据](https://baijiahao.baidu.com/s?id=1622798772654712959&wfr=spider&for=pc)\n","source":"_posts/2019-09-01_Pandas移动窗口.md","raw":"---\ntitle: Pandas移动窗口\ncategories:\n  - Python\nmathjax: false\nabbrlink: 24354\ndate: 2019-09-01 00:00:00\n---\n\n## 简单范例\n\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n\nindex = pd.date_range('20190116', '20190130')\ndata = [4, 8, 6, 5, 9, 1, 4, 5, 2, 4, 6, 7, 9, 13, 6]\nser_data = pd.Series(data, index=index)\nser_data\n```\n\n\n\n\n    2019-01-16     4\n    2019-01-17     8\n    2019-01-18     6\n    2019-01-19     5\n    2019-01-20     9\n    2019-01-21     1\n    2019-01-22     4\n    2019-01-23     5\n    2019-01-24     2\n    2019-01-25     4\n    2019-01-26     6\n    2019-01-27     7\n    2019-01-28     9\n    2019-01-29    13\n    2019-01-30     6\n    Freq: D, dtype: int64\n\n\n\n\n```python\nser_data.rolling(3).mean()\n```\n\n\n\n\n    2019-01-16         NaN\n    2019-01-17         NaN\n    2019-01-18    6.000000\n    2019-01-19    6.333333\n    2019-01-20    6.666667\n    2019-01-21    5.000000\n    2019-01-22    4.666667\n    2019-01-23    3.333333\n    2019-01-24    3.666667\n    2019-01-25    3.666667\n    2019-01-26    4.000000\n    2019-01-27    5.666667\n    2019-01-28    7.333333\n    2019-01-29    9.666667\n    2019-01-30    9.333333\n    Freq: D, dtype: float64\n\n\n\n\n```python\nser_data.rolling(3, min_periods=1).mean()\n```\n\n\n\n\n    2019-01-16    4.000000\n    2019-01-17    6.000000\n    2019-01-18    6.000000\n    2019-01-19    6.333333\n    2019-01-20    6.666667\n    2019-01-21    5.000000\n    2019-01-22    4.666667\n    2019-01-23    3.333333\n    2019-01-24    3.666667\n    2019-01-25    3.666667\n    2019-01-26    4.000000\n    2019-01-27    5.666667\n    2019-01-28    7.333333\n    2019-01-29    9.666667\n    2019-01-30    9.333333\n    Freq: D, dtype: float64\n\n\n\n\n```python\nindex = pd.date_range('20190116', '20190216')\ndata = np.random.randint(20, size=len(index))\nser_data = pd.Series(data, index=index)\n\nplt.figure(figsize=(15, 5))\n\nser_data.plot(style='r--', label='原数据')\nser_data.rolling(3).mean().plot(style='b', label='滑动平滑后')\n\nplt.legend()\n\nplt.savefig(\"../img/2019-09-01_Pandas移动窗口.png\")\nplt.close()\n```\n\n![](/img/2019-09-01_Pandas移动窗口.png)\n\n> 参考：\n\n1. [移动窗口函数rolling](http://blog.sina.com.cn/s/blog_c32439660102x2kp.html)\n2. [pandas 0.17.0 documentation](https://pandas.pydata.org/pandas-docs/version/0.17.0/generated/pandas.rolling_window.html)\n3. [python时间序列分析之_用pandas中的rolling函数计算时间窗口数据](https://baijiahao.baidu.com/s?id=1622798772654712959&wfr=spider&for=pc)\n","slug":"2019-09-01_Pandas移动窗口","published":1,"updated":"2021-04-06T13:58:01.486Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5qt000u9ohz2q8r2mfe","content":"<h2 id=\"简单范例\"><a href=\"#简单范例\" class=\"headerlink\" title=\"简单范例\"></a>简单范例</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">index = pd.date_range(<span class=\"string\">&#x27;20190116&#x27;</span>, <span class=\"string\">&#x27;20190130&#x27;</span>)</span><br><span class=\"line\">data = [<span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">9</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">13</span>, <span class=\"number\">6</span>]</span><br><span class=\"line\">ser_data = pd.Series(data, index=index)</span><br><span class=\"line\">ser_data</span><br></pre></td></tr></table></figure>\n<pre><code>2019-01-16     4\n2019-01-17     8\n2019-01-18     6\n2019-01-19     5\n2019-01-20     9\n2019-01-21     1\n2019-01-22     4\n2019-01-23     5\n2019-01-24     2\n2019-01-25     4\n2019-01-26     6\n2019-01-27     7\n2019-01-28     9\n2019-01-29    13\n2019-01-30     6\nFreq: D, dtype: int64\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ser_data.rolling(<span class=\"number\">3</span>).mean()</span><br></pre></td></tr></table></figure>\n<pre><code>2019-01-16         NaN\n2019-01-17         NaN\n2019-01-18    6.000000\n2019-01-19    6.333333\n2019-01-20    6.666667\n2019-01-21    5.000000\n2019-01-22    4.666667\n2019-01-23    3.333333\n2019-01-24    3.666667\n2019-01-25    3.666667\n2019-01-26    4.000000\n2019-01-27    5.666667\n2019-01-28    7.333333\n2019-01-29    9.666667\n2019-01-30    9.333333\nFreq: D, dtype: float64\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ser_data.rolling(<span class=\"number\">3</span>, min_periods=<span class=\"number\">1</span>).mean()</span><br></pre></td></tr></table></figure>\n<pre><code>2019-01-16    4.000000\n2019-01-17    6.000000\n2019-01-18    6.000000\n2019-01-19    6.333333\n2019-01-20    6.666667\n2019-01-21    5.000000\n2019-01-22    4.666667\n2019-01-23    3.333333\n2019-01-24    3.666667\n2019-01-25    3.666667\n2019-01-26    4.000000\n2019-01-27    5.666667\n2019-01-28    7.333333\n2019-01-29    9.666667\n2019-01-30    9.333333\nFreq: D, dtype: float64\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">index = pd.date_range(<span class=\"string\">&#x27;20190116&#x27;</span>, <span class=\"string\">&#x27;20190216&#x27;</span>)</span><br><span class=\"line\">data = np.random.randint(<span class=\"number\">20</span>, size=<span class=\"built_in\">len</span>(index))</span><br><span class=\"line\">ser_data = pd.Series(data, index=index)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">15</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">ser_data.plot(style=<span class=\"string\">&#x27;r--&#x27;</span>, label=<span class=\"string\">&#x27;原数据&#x27;</span>)</span><br><span class=\"line\">ser_data.rolling(<span class=\"number\">3</span>).mean().plot(style=<span class=\"string\">&#x27;b&#x27;</span>, label=<span class=\"string\">&#x27;滑动平滑后&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.legend()</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-09-01_Pandas移动窗口.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-09-01_Pandas移动窗口.png\"\n                      alt=\"\"\n                ></p>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://blog.sina.com.cn/s/blog_c32439660102x2kp.html\" >移动窗口函数rolling<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://pandas.pydata.org/pandas-docs/version/0.17.0/generated/pandas.rolling_window.html\" >pandas 0.17.0 documentation<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://baijiahao.baidu.com/s?id=1622798772654712959&amp;wfr=spider&amp;for=pc\" >python时间序列分析之_用pandas中的rolling函数计算时间窗口数据<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简单范例\"><a href=\"#简单范例\" class=\"headerlink\" title=\"简单范例\"></a>简单范例</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">index = pd.date_range(<span class=\"string\">&#x27;20190116&#x27;</span>, <span class=\"string\">&#x27;20190130&#x27;</span>)</span><br><span class=\"line\">data = [<span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">9</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">13</span>, <span class=\"number\">6</span>]</span><br><span class=\"line\">ser_data = pd.Series(data, index=index)</span><br><span class=\"line\">ser_data</span><br></pre></td></tr></table></figure>\n<pre><code>2019-01-16     4\n2019-01-17     8\n2019-01-18     6\n2019-01-19     5\n2019-01-20     9\n2019-01-21     1\n2019-01-22     4\n2019-01-23     5\n2019-01-24     2\n2019-01-25     4\n2019-01-26     6\n2019-01-27     7\n2019-01-28     9\n2019-01-29    13\n2019-01-30     6\nFreq: D, dtype: int64\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ser_data.rolling(<span class=\"number\">3</span>).mean()</span><br></pre></td></tr></table></figure>\n<pre><code>2019-01-16         NaN\n2019-01-17         NaN\n2019-01-18    6.000000\n2019-01-19    6.333333\n2019-01-20    6.666667\n2019-01-21    5.000000\n2019-01-22    4.666667\n2019-01-23    3.333333\n2019-01-24    3.666667\n2019-01-25    3.666667\n2019-01-26    4.000000\n2019-01-27    5.666667\n2019-01-28    7.333333\n2019-01-29    9.666667\n2019-01-30    9.333333\nFreq: D, dtype: float64\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ser_data.rolling(<span class=\"number\">3</span>, min_periods=<span class=\"number\">1</span>).mean()</span><br></pre></td></tr></table></figure>\n<pre><code>2019-01-16    4.000000\n2019-01-17    6.000000\n2019-01-18    6.000000\n2019-01-19    6.333333\n2019-01-20    6.666667\n2019-01-21    5.000000\n2019-01-22    4.666667\n2019-01-23    3.333333\n2019-01-24    3.666667\n2019-01-25    3.666667\n2019-01-26    4.000000\n2019-01-27    5.666667\n2019-01-28    7.333333\n2019-01-29    9.666667\n2019-01-30    9.333333\nFreq: D, dtype: float64\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">index = pd.date_range(<span class=\"string\">&#x27;20190116&#x27;</span>, <span class=\"string\">&#x27;20190216&#x27;</span>)</span><br><span class=\"line\">data = np.random.randint(<span class=\"number\">20</span>, size=<span class=\"built_in\">len</span>(index))</span><br><span class=\"line\">ser_data = pd.Series(data, index=index)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">15</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">ser_data.plot(style=<span class=\"string\">&#x27;r--&#x27;</span>, label=<span class=\"string\">&#x27;原数据&#x27;</span>)</span><br><span class=\"line\">ser_data.rolling(<span class=\"number\">3</span>).mean().plot(style=<span class=\"string\">&#x27;b&#x27;</span>, label=<span class=\"string\">&#x27;滑动平滑后&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.legend()</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-09-01_Pandas移动窗口.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-09-01_Pandas移动窗口.png\"\n                      alt=\"\"\n                ></p>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://blog.sina.com.cn/s/blog_c32439660102x2kp.html\" >移动窗口函数rolling<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://pandas.pydata.org/pandas-docs/version/0.17.0/generated/pandas.rolling_window.html\" >pandas 0.17.0 documentation<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://baijiahao.baidu.com/s?id=1622798772654712959&amp;wfr=spider&amp;for=pc\" >python时间序列分析之_用pandas中的rolling函数计算时间窗口数据<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"随机森林","mathjax":true,"abbrlink":47295,"date":"2019-09-02T16:00:00.000Z","_content":"\n## 基本介绍\n\n1. 从原始训练数据集中，应⽤bootstrap⽅法有放回地随机抽取k个新的⾃助样本集，并由此构建k棵分类回归树，每次未被抽到的样本组成了Ｋ个袋外数据（out-of-bag,BBB）\n2. 设有n个特征，则在每⼀棵树的每个节点处随机抽取m个特征，通过计算每个特征蕴含的信息量，特征中选择⼀个最具有分类能⼒的特征进⾏节点分裂\n3. 每棵树最⼤限度地⽣长， 不做任何剪裁\n4. 将⽣成的多棵树组成随机森林， ⽤随机森林对新的数据进⾏分类，分类结果按树分类器投票多少⽽定\n\n## RandomForestClassifier\n\n\n```python\nfrom sklearn.ensemble import RandomForestClassifier          # 导入随机森林的包\nfrom sklearn import datasets\nfrom sklearn.model_selection import train_test_split\n\niris = datasets.load_iris()\niris_data = iris['data']\niris_label = iris['target']\niris_target_name = iris['target_names']\nX = np.array(iris_data)\nY = np.array(iris_label)\n\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.25)\n\nclf = RandomForestClassifier()\nclf = clf.fit(x_train, y_train)\n```\n\n    /anaconda3/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n      \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n\n\n\n```python\nfrom sklearn.metrics import roc_curve, auc\n\ny_pred = clf.predict(x_test)\n\nfalse_positive_rate, true_positive_rate, thresholds = roc_curve(\n    y_test, y_pred, pos_label=2)\n\nroc_auc = auc(false_positive_rate, true_positive_rate)\nroc_auc\n```\n\n\n\n\n    0.9821428571428571\n\n\n\n### 调参\n\n- n_estimators: int 默认10\n- criterion：gini” or “entropy”(default=”gini”)表示使用基尼不纯度还是信息增益来计算属性，来选择最合适的节点\n- max_depth：(default=None)设置树的最大深度，默认为None，直到使每一个叶节点只有一个类别，或是达到min_samples_split\n- min_samples_split：默认2，int（可以被分割的所含最小样本数），float（总样本的百分比）\n- min_samples_leaf：默认1，int或float，叶子节点所含最少样本数\n- min_weight_fraction_leaf：(default=0) 叶子节点所需要的最小权值（当样本采样权重设置时才有意义，叶子节点的权重为属于该节点的所有样本权重和）\n- max_features：(default=”auto”) 每次找最好的分割点是可以考虑的特征数\n- max_leaf_nodes:最大叶节点数 和树的最大深度同样作用\n- bootstrap：是否有放回采样，默认True\n- oob_score：默认False，是否使用袋外数据统计泛华误差。利用在某次决策树训练中没有被采样选中的数据对该单个模型进行验证，算是一个简单的交叉验证。性能消耗小，但是效果不错\n- n_jobs：默认1.可并行job数。-1代表有多少job=core\n- random_state:如果给定相同的参数和训练数据，random_state的确定值将始终产生相同的结果\n- verbose：(default=0) 是否显示任务进程\n- warm_start：False热启动，决定是否使用上次调用该类的结果然后增加新的\n- class_weight：None，各个label的权重\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n2. [sklearn 随机森林分类iris花](https://blog.csdn.net/qwq1503/article/details/91535494)\n3. [快速理解bootstrap,bagging,boosting-三个概念](https://blog.csdn.net/wangqi880/article/details/49765673)\n","source":"_posts/2019-09-03_随机森林.md","raw":"---\ntitle: 随机森林\ncategories:\n  - 统计与机器学习\n  - 集成算法（Ensemble algorithms）\nmathjax: true\nabbrlink: 47295\ndate: 2019-09-03 00:00:00\n---\n\n## 基本介绍\n\n1. 从原始训练数据集中，应⽤bootstrap⽅法有放回地随机抽取k个新的⾃助样本集，并由此构建k棵分类回归树，每次未被抽到的样本组成了Ｋ个袋外数据（out-of-bag,BBB）\n2. 设有n个特征，则在每⼀棵树的每个节点处随机抽取m个特征，通过计算每个特征蕴含的信息量，特征中选择⼀个最具有分类能⼒的特征进⾏节点分裂\n3. 每棵树最⼤限度地⽣长， 不做任何剪裁\n4. 将⽣成的多棵树组成随机森林， ⽤随机森林对新的数据进⾏分类，分类结果按树分类器投票多少⽽定\n\n## RandomForestClassifier\n\n\n```python\nfrom sklearn.ensemble import RandomForestClassifier          # 导入随机森林的包\nfrom sklearn import datasets\nfrom sklearn.model_selection import train_test_split\n\niris = datasets.load_iris()\niris_data = iris['data']\niris_label = iris['target']\niris_target_name = iris['target_names']\nX = np.array(iris_data)\nY = np.array(iris_label)\n\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.25)\n\nclf = RandomForestClassifier()\nclf = clf.fit(x_train, y_train)\n```\n\n    /anaconda3/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n      \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n\n\n\n```python\nfrom sklearn.metrics import roc_curve, auc\n\ny_pred = clf.predict(x_test)\n\nfalse_positive_rate, true_positive_rate, thresholds = roc_curve(\n    y_test, y_pred, pos_label=2)\n\nroc_auc = auc(false_positive_rate, true_positive_rate)\nroc_auc\n```\n\n\n\n\n    0.9821428571428571\n\n\n\n### 调参\n\n- n_estimators: int 默认10\n- criterion：gini” or “entropy”(default=”gini”)表示使用基尼不纯度还是信息增益来计算属性，来选择最合适的节点\n- max_depth：(default=None)设置树的最大深度，默认为None，直到使每一个叶节点只有一个类别，或是达到min_samples_split\n- min_samples_split：默认2，int（可以被分割的所含最小样本数），float（总样本的百分比）\n- min_samples_leaf：默认1，int或float，叶子节点所含最少样本数\n- min_weight_fraction_leaf：(default=0) 叶子节点所需要的最小权值（当样本采样权重设置时才有意义，叶子节点的权重为属于该节点的所有样本权重和）\n- max_features：(default=”auto”) 每次找最好的分割点是可以考虑的特征数\n- max_leaf_nodes:最大叶节点数 和树的最大深度同样作用\n- bootstrap：是否有放回采样，默认True\n- oob_score：默认False，是否使用袋外数据统计泛华误差。利用在某次决策树训练中没有被采样选中的数据对该单个模型进行验证，算是一个简单的交叉验证。性能消耗小，但是效果不错\n- n_jobs：默认1.可并行job数。-1代表有多少job=core\n- random_state:如果给定相同的参数和训练数据，random_state的确定值将始终产生相同的结果\n- verbose：(default=0) 是否显示任务进程\n- warm_start：False热启动，决定是否使用上次调用该类的结果然后增加新的\n- class_weight：None，各个label的权重\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n2. [sklearn 随机森林分类iris花](https://blog.csdn.net/qwq1503/article/details/91535494)\n3. [快速理解bootstrap,bagging,boosting-三个概念](https://blog.csdn.net/wangqi880/article/details/49765673)\n","slug":"2019-09-03_随机森林","published":1,"updated":"2021-04-06T13:52:19.177Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5qu000w9ohzbdypev0g","content":"<h2 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h2><ol>\n<li>从原始训练数据集中，应⽤bootstrap⽅法有放回地随机抽取k个新的⾃助样本集，并由此构建k棵分类回归树，每次未被抽到的样本组成了Ｋ个袋外数据（out-of-bag,BBB）</li>\n<li>设有n个特征，则在每⼀棵树的每个节点处随机抽取m个特征，通过计算每个特征蕴含的信息量，特征中选择⼀个最具有分类能⼒的特征进⾏节点分裂</li>\n<li>每棵树最⼤限度地⽣长， 不做任何剪裁</li>\n<li>将⽣成的多棵树组成随机森林， ⽤随机森林对新的数据进⾏分类，分类结果按树分类器投票多少⽽定</li>\n</ol>\n<h2 id=\"RandomForestClassifier\"><a href=\"#RandomForestClassifier\" class=\"headerlink\" title=\"RandomForestClassifier\"></a>RandomForestClassifier</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier          <span class=\"comment\"># 导入随机森林的包</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> datasets</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\">iris = datasets.load_iris()</span><br><span class=\"line\">iris_data = iris[<span class=\"string\">&#x27;data&#x27;</span>]</span><br><span class=\"line\">iris_label = iris[<span class=\"string\">&#x27;target&#x27;</span>]</span><br><span class=\"line\">iris_target_name = iris[<span class=\"string\">&#x27;target_names&#x27;</span>]</span><br><span class=\"line\">X = np.array(iris_data)</span><br><span class=\"line\">Y = np.array(iris_label)</span><br><span class=\"line\"></span><br><span class=\"line\">x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=<span class=\"number\">0.25</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">clf = RandomForestClassifier()</span><br><span class=\"line\">clf = clf.fit(x_train, y_train)</span><br></pre></td></tr></table></figure>\n<pre><code>/anaconda3/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n  &quot;10 in version 0.20 to 100 in 0.22.&quot;, FutureWarning)\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> roc_curve, auc</span><br><span class=\"line\"></span><br><span class=\"line\">y_pred = clf.predict(x_test)</span><br><span class=\"line\"></span><br><span class=\"line\">false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">    y_test, y_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">roc_auc</span><br></pre></td></tr></table></figure>\n<pre><code>0.9821428571428571\n</code></pre><h3 id=\"调参\"><a href=\"#调参\" class=\"headerlink\" title=\"调参\"></a>调参</h3><ul>\n<li>n_estimators: int 默认10</li>\n<li>criterion：gini” or “entropy”(default=”gini”)表示使用基尼不纯度还是信息增益来计算属性，来选择最合适的节点</li>\n<li>max_depth：(default=None)设置树的最大深度，默认为None，直到使每一个叶节点只有一个类别，或是达到min_samples_split</li>\n<li>min_samples_split：默认2，int（可以被分割的所含最小样本数），float（总样本的百分比）</li>\n<li>min_samples_leaf：默认1，int或float，叶子节点所含最少样本数</li>\n<li>min_weight_fraction_leaf：(default=0) 叶子节点所需要的最小权值（当样本采样权重设置时才有意义，叶子节点的权重为属于该节点的所有样本权重和）</li>\n<li>max_features：(default=”auto”) 每次找最好的分割点是可以考虑的特征数</li>\n<li>max_leaf_nodes:最大叶节点数 和树的最大深度同样作用</li>\n<li>bootstrap：是否有放回采样，默认True</li>\n<li>oob_score：默认False，是否使用袋外数据统计泛华误差。利用在某次决策树训练中没有被采样选中的数据对该单个模型进行验证，算是一个简单的交叉验证。性能消耗小，但是效果不错</li>\n<li>n_jobs：默认1.可并行job数。-1代表有多少job=core</li>\n<li>random_state:如果给定相同的参数和训练数据，random_state的确定值将始终产生相同的结果</li>\n<li>verbose：(default=0) 是否显示任务进程</li>\n<li>warm_start：False热启动，决定是否使用上次调用该类的结果然后增加新的</li>\n<li>class_weight：None，各个label的权重</li>\n</ul>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://blog.csdn.net/qwq1503/article/details/91535494\" >sklearn 随机森林分类iris花<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://blog.csdn.net/wangqi880/article/details/49765673\" >快速理解bootstrap,bagging,boosting-三个概念<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h2><ol>\n<li>从原始训练数据集中，应⽤bootstrap⽅法有放回地随机抽取k个新的⾃助样本集，并由此构建k棵分类回归树，每次未被抽到的样本组成了Ｋ个袋外数据（out-of-bag,BBB）</li>\n<li>设有n个特征，则在每⼀棵树的每个节点处随机抽取m个特征，通过计算每个特征蕴含的信息量，特征中选择⼀个最具有分类能⼒的特征进⾏节点分裂</li>\n<li>每棵树最⼤限度地⽣长， 不做任何剪裁</li>\n<li>将⽣成的多棵树组成随机森林， ⽤随机森林对新的数据进⾏分类，分类结果按树分类器投票多少⽽定</li>\n</ol>\n<h2 id=\"RandomForestClassifier\"><a href=\"#RandomForestClassifier\" class=\"headerlink\" title=\"RandomForestClassifier\"></a>RandomForestClassifier</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier          <span class=\"comment\"># 导入随机森林的包</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> datasets</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\">iris = datasets.load_iris()</span><br><span class=\"line\">iris_data = iris[<span class=\"string\">&#x27;data&#x27;</span>]</span><br><span class=\"line\">iris_label = iris[<span class=\"string\">&#x27;target&#x27;</span>]</span><br><span class=\"line\">iris_target_name = iris[<span class=\"string\">&#x27;target_names&#x27;</span>]</span><br><span class=\"line\">X = np.array(iris_data)</span><br><span class=\"line\">Y = np.array(iris_label)</span><br><span class=\"line\"></span><br><span class=\"line\">x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=<span class=\"number\">0.25</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">clf = RandomForestClassifier()</span><br><span class=\"line\">clf = clf.fit(x_train, y_train)</span><br></pre></td></tr></table></figure>\n<pre><code>/anaconda3/lib/python3.7/site-packages/sklearn/ensemble/forest.py:246: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n  &quot;10 in version 0.20 to 100 in 0.22.&quot;, FutureWarning)\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> roc_curve, auc</span><br><span class=\"line\"></span><br><span class=\"line\">y_pred = clf.predict(x_test)</span><br><span class=\"line\"></span><br><span class=\"line\">false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">    y_test, y_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">roc_auc</span><br></pre></td></tr></table></figure>\n<pre><code>0.9821428571428571\n</code></pre><h3 id=\"调参\"><a href=\"#调参\" class=\"headerlink\" title=\"调参\"></a>调参</h3><ul>\n<li>n_estimators: int 默认10</li>\n<li>criterion：gini” or “entropy”(default=”gini”)表示使用基尼不纯度还是信息增益来计算属性，来选择最合适的节点</li>\n<li>max_depth：(default=None)设置树的最大深度，默认为None，直到使每一个叶节点只有一个类别，或是达到min_samples_split</li>\n<li>min_samples_split：默认2，int（可以被分割的所含最小样本数），float（总样本的百分比）</li>\n<li>min_samples_leaf：默认1，int或float，叶子节点所含最少样本数</li>\n<li>min_weight_fraction_leaf：(default=0) 叶子节点所需要的最小权值（当样本采样权重设置时才有意义，叶子节点的权重为属于该节点的所有样本权重和）</li>\n<li>max_features：(default=”auto”) 每次找最好的分割点是可以考虑的特征数</li>\n<li>max_leaf_nodes:最大叶节点数 和树的最大深度同样作用</li>\n<li>bootstrap：是否有放回采样，默认True</li>\n<li>oob_score：默认False，是否使用袋外数据统计泛华误差。利用在某次决策树训练中没有被采样选中的数据对该单个模型进行验证，算是一个简单的交叉验证。性能消耗小，但是效果不错</li>\n<li>n_jobs：默认1.可并行job数。-1代表有多少job=core</li>\n<li>random_state:如果给定相同的参数和训练数据，random_state的确定值将始终产生相同的结果</li>\n<li>verbose：(default=0) 是否显示任务进程</li>\n<li>warm_start：False热启动，决定是否使用上次调用该类的结果然后增加新的</li>\n<li>class_weight：None，各个label的权重</li>\n</ul>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://blog.csdn.net/qwq1503/article/details/91535494\" >sklearn 随机森林分类iris花<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://blog.csdn.net/wangqi880/article/details/49765673\" >快速理解bootstrap,bagging,boosting-三个概念<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"AdaBoost","mathjax":true,"abbrlink":23192,"date":"2019-09-05T16:00:00.000Z","_content":"\n## 基本介绍\n\n1. 初始化训练数据的权值分布。每⼀个训练样本最开始时都被赋予相同的权值：1/N\n2. 进⾏多轮迭代，⽤m = 1,2, ..., M表⽰迭代的第多少轮\n    - 使⽤具有权值分布Dm的训练数据集学习，得到基本分类器（选取让误差率最低的阈值来设计基本分类器）\n    - 计算Gm(x)在训练数据集上的分类误差率，Gm(x)在训练数据集上的误差率em就是被Gm(x)误分类样本的权值之和\n$$e_m=\\sum_{N}^{i=1}{w_{mi}I(G_m(x_i)\\neq y_i)}$$\n    - 计算Gm(x)的系数，am表⽰Gm(x)在最终分类器中的重要程度（⽬的：得到基本分类器在最终分类器中所占的权重）：\n$$\\alpha_m={\\frac{1}{2}}log{\\frac{1-e_m}{e_m}}$$\nem <= 1/2时，am >= 0，且am随着em的减⼩⽽增⼤，意味着分类误差率越⼩的基本分类器在最终分类器中的作⽤越⼤\n    - 更新训练数据集的权值分布（为了得到样本的新的权值分布），⽤于下⼀轮迭代，使得被基本分类器Gm(x)误分类样本的权值增⼤，⽽被正确分类样本的权值减⼩  \n3. 组合各个弱分类器，从⽽得到最终分类器\n$$G(x)=sign(f(x))=sign(\\sum_{m=1}^{M}\\alpha_m G_m(x))$$\n\n## AdaBoostClassifier\n\n\n```python\nfrom sklearn.ensemble import AdaBoostClassifier  \nfrom sklearn import datasets\nfrom sklearn.model_selection import train_test_split\n\niris = datasets.load_iris()\niris_data = iris['data']\niris_label = iris['target']\niris_target_name = iris['target_names']\nX = np.array(iris_data)\nY = np.array(iris_label)\n\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.25)\n\nclf = AdaBoostClassifier()\nclf = clf.fit(x_train, y_train)\n```\n\n\n```python\nfrom sklearn.metrics import roc_curve, auc\n\ny_pred = clf.predict(x_test)\n\nfalse_positive_rate, true_positive_rate, thresholds = roc_curve(\n    y_test, y_pred, pos_label=2)\n\nroc_auc = auc(false_positive_rate, true_positive_rate)\nroc_auc\n```\n\n\n\n\n    0.9225589225589226\n\n\n\n- base_estimator: 基分类器，默认是决策树，在该分类器基础上进行boosting，理论上可以是任意一个分类器，但是如果是其他分类器时需要指明样本权重\n- n_estimators: 基分类器提升（循环）次数，默认是50次，这个值过大，模型容易过拟合；值过小，模型容易欠拟合\n- learning_rate: 学习率，表示梯度收敛速度，默认为1，如果过大，容易错过最优值，如果过小，则收敛速度会很慢；该值需要和n_estimators进行一个权衡，当分类器迭代次数较少时，学习率可以小一些，当迭代次数较多时，学习率可以适当放大\n- algorithm: boosting算法，也就是模型提升准则，有两种方式SAMME, 和SAMME.R两种，默认是SAMME.R，两者的区别主要是弱学习器权重的度量，前者是对样本集预测错误的概率进行划分的，后者是对样本集的预测错误的比例，即错分率进行划分的，默认是用的SAMME.R\n- random_state: 随机种子设置\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n2. [AdaBoost原理详解](https://www.cnblogs.com/ScorpioLu/p/8295990.html)\n3. [AdaBoostClassifier参数](https://www.cnblogs.com/mdevelopment/p/9445090.html)\n","source":"_posts/2019-09-06_AdaBoost.md","raw":"---\ntitle: AdaBoost\ncategories:\n  - 统计与机器学习\n  - 集成算法（Ensemble algorithms）\nmathjax: true\nabbrlink: 23192\ndate: 2019-09-06 00:00:00\n---\n\n## 基本介绍\n\n1. 初始化训练数据的权值分布。每⼀个训练样本最开始时都被赋予相同的权值：1/N\n2. 进⾏多轮迭代，⽤m = 1,2, ..., M表⽰迭代的第多少轮\n    - 使⽤具有权值分布Dm的训练数据集学习，得到基本分类器（选取让误差率最低的阈值来设计基本分类器）\n    - 计算Gm(x)在训练数据集上的分类误差率，Gm(x)在训练数据集上的误差率em就是被Gm(x)误分类样本的权值之和\n$$e_m=\\sum_{N}^{i=1}{w_{mi}I(G_m(x_i)\\neq y_i)}$$\n    - 计算Gm(x)的系数，am表⽰Gm(x)在最终分类器中的重要程度（⽬的：得到基本分类器在最终分类器中所占的权重）：\n$$\\alpha_m={\\frac{1}{2}}log{\\frac{1-e_m}{e_m}}$$\nem <= 1/2时，am >= 0，且am随着em的减⼩⽽增⼤，意味着分类误差率越⼩的基本分类器在最终分类器中的作⽤越⼤\n    - 更新训练数据集的权值分布（为了得到样本的新的权值分布），⽤于下⼀轮迭代，使得被基本分类器Gm(x)误分类样本的权值增⼤，⽽被正确分类样本的权值减⼩  \n3. 组合各个弱分类器，从⽽得到最终分类器\n$$G(x)=sign(f(x))=sign(\\sum_{m=1}^{M}\\alpha_m G_m(x))$$\n\n## AdaBoostClassifier\n\n\n```python\nfrom sklearn.ensemble import AdaBoostClassifier  \nfrom sklearn import datasets\nfrom sklearn.model_selection import train_test_split\n\niris = datasets.load_iris()\niris_data = iris['data']\niris_label = iris['target']\niris_target_name = iris['target_names']\nX = np.array(iris_data)\nY = np.array(iris_label)\n\nx_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.25)\n\nclf = AdaBoostClassifier()\nclf = clf.fit(x_train, y_train)\n```\n\n\n```python\nfrom sklearn.metrics import roc_curve, auc\n\ny_pred = clf.predict(x_test)\n\nfalse_positive_rate, true_positive_rate, thresholds = roc_curve(\n    y_test, y_pred, pos_label=2)\n\nroc_auc = auc(false_positive_rate, true_positive_rate)\nroc_auc\n```\n\n\n\n\n    0.9225589225589226\n\n\n\n- base_estimator: 基分类器，默认是决策树，在该分类器基础上进行boosting，理论上可以是任意一个分类器，但是如果是其他分类器时需要指明样本权重\n- n_estimators: 基分类器提升（循环）次数，默认是50次，这个值过大，模型容易过拟合；值过小，模型容易欠拟合\n- learning_rate: 学习率，表示梯度收敛速度，默认为1，如果过大，容易错过最优值，如果过小，则收敛速度会很慢；该值需要和n_estimators进行一个权衡，当分类器迭代次数较少时，学习率可以小一些，当迭代次数较多时，学习率可以适当放大\n- algorithm: boosting算法，也就是模型提升准则，有两种方式SAMME, 和SAMME.R两种，默认是SAMME.R，两者的区别主要是弱学习器权重的度量，前者是对样本集预测错误的概率进行划分的，后者是对样本集的预测错误的比例，即错分率进行划分的，默认是用的SAMME.R\n- random_state: 随机种子设置\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](http://www.broadview.com.cn/book/5337)\n2. [AdaBoost原理详解](https://www.cnblogs.com/ScorpioLu/p/8295990.html)\n3. [AdaBoostClassifier参数](https://www.cnblogs.com/mdevelopment/p/9445090.html)\n","slug":"2019-09-06_AdaBoost","published":1,"updated":"2021-04-06T13:51:30.681Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5qv000x9ohz41ncevfz","content":"<h2 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h2><ol>\n<li>初始化训练数据的权值分布。每⼀个训练样本最开始时都被赋予相同的权值：1/N</li>\n<li>进⾏多轮迭代，⽤m = 1,2, …, M表⽰迭代的第多少轮<ul>\n<li>使⽤具有权值分布Dm的训练数据集学习，得到基本分类器（选取让误差率最低的阈值来设计基本分类器）</li>\n<li>计算Gm(x)在训练数据集上的分类误差率，Gm(x)在训练数据集上的误差率em就是被Gm(x)误分类样本的权值之和<script type=\"math/tex; mode=display\">e_m=\\sum_{N}^{i=1}{w_{mi}I(G_m(x_i)\\neq y_i)}</script></li>\n<li>计算Gm(x)的系数，am表⽰Gm(x)在最终分类器中的重要程度（⽬的：得到基本分类器在最终分类器中所占的权重）：<script type=\"math/tex; mode=display\">\\alpha_m={\\frac{1}{2}}log{\\frac{1-e_m}{e_m}}</script>em &lt;= 1/2时，am &gt;= 0，且am随着em的减⼩⽽增⼤，意味着分类误差率越⼩的基本分类器在最终分类器中的作⽤越⼤</li>\n<li>更新训练数据集的权值分布（为了得到样本的新的权值分布），⽤于下⼀轮迭代，使得被基本分类器Gm(x)误分类样本的权值增⼤，⽽被正确分类样本的权值减⼩  </li>\n</ul>\n</li>\n<li>组合各个弱分类器，从⽽得到最终分类器<script type=\"math/tex; mode=display\">G(x)=sign(f(x))=sign(\\sum_{m=1}^{M}\\alpha_m G_m(x))</script></li>\n</ol>\n<h2 id=\"AdaBoostClassifier\"><a href=\"#AdaBoostClassifier\" class=\"headerlink\" title=\"AdaBoostClassifier\"></a>AdaBoostClassifier</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> AdaBoostClassifier  </span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> datasets</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\">iris = datasets.load_iris()</span><br><span class=\"line\">iris_data = iris[<span class=\"string\">&#x27;data&#x27;</span>]</span><br><span class=\"line\">iris_label = iris[<span class=\"string\">&#x27;target&#x27;</span>]</span><br><span class=\"line\">iris_target_name = iris[<span class=\"string\">&#x27;target_names&#x27;</span>]</span><br><span class=\"line\">X = np.array(iris_data)</span><br><span class=\"line\">Y = np.array(iris_label)</span><br><span class=\"line\"></span><br><span class=\"line\">x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=<span class=\"number\">0.25</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">clf = AdaBoostClassifier()</span><br><span class=\"line\">clf = clf.fit(x_train, y_train)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> roc_curve, auc</span><br><span class=\"line\"></span><br><span class=\"line\">y_pred = clf.predict(x_test)</span><br><span class=\"line\"></span><br><span class=\"line\">false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">    y_test, y_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">roc_auc</span><br></pre></td></tr></table></figure>\n<pre><code>0.9225589225589226\n</code></pre><ul>\n<li>base_estimator: 基分类器，默认是决策树，在该分类器基础上进行boosting，理论上可以是任意一个分类器，但是如果是其他分类器时需要指明样本权重</li>\n<li>n_estimators: 基分类器提升（循环）次数，默认是50次，这个值过大，模型容易过拟合；值过小，模型容易欠拟合</li>\n<li>learning_rate: 学习率，表示梯度收敛速度，默认为1，如果过大，容易错过最优值，如果过小，则收敛速度会很慢；该值需要和n_estimators进行一个权衡，当分类器迭代次数较少时，学习率可以小一些，当迭代次数较多时，学习率可以适当放大</li>\n<li>algorithm: boosting算法，也就是模型提升准则，有两种方式SAMME, 和SAMME.R两种，默认是SAMME.R，两者的区别主要是弱学习器权重的度量，前者是对样本集预测错误的概率进行划分的，后者是对样本集的预测错误的比例，即错分率进行划分的，默认是用的SAMME.R</li>\n<li>random_state: 随机种子设置</li>\n</ul>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/ScorpioLu/p/8295990.html\" >AdaBoost原理详解<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/mdevelopment/p/9445090.html\" >AdaBoostClassifier参数<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基本介绍\"><a href=\"#基本介绍\" class=\"headerlink\" title=\"基本介绍\"></a>基本介绍</h2><ol>\n<li>初始化训练数据的权值分布。每⼀个训练样本最开始时都被赋予相同的权值：1/N</li>\n<li>进⾏多轮迭代，⽤m = 1,2, …, M表⽰迭代的第多少轮<ul>\n<li>使⽤具有权值分布Dm的训练数据集学习，得到基本分类器（选取让误差率最低的阈值来设计基本分类器）</li>\n<li>计算Gm(x)在训练数据集上的分类误差率，Gm(x)在训练数据集上的误差率em就是被Gm(x)误分类样本的权值之和<script type=\"math/tex; mode=display\">e_m=\\sum_{N}^{i=1}{w_{mi}I(G_m(x_i)\\neq y_i)}</script></li>\n<li>计算Gm(x)的系数，am表⽰Gm(x)在最终分类器中的重要程度（⽬的：得到基本分类器在最终分类器中所占的权重）：<script type=\"math/tex; mode=display\">\\alpha_m={\\frac{1}{2}}log{\\frac{1-e_m}{e_m}}</script>em &lt;= 1/2时，am &gt;= 0，且am随着em的减⼩⽽增⼤，意味着分类误差率越⼩的基本分类器在最终分类器中的作⽤越⼤</li>\n<li>更新训练数据集的权值分布（为了得到样本的新的权值分布），⽤于下⼀轮迭代，使得被基本分类器Gm(x)误分类样本的权值增⼤，⽽被正确分类样本的权值减⼩  </li>\n</ul>\n</li>\n<li>组合各个弱分类器，从⽽得到最终分类器<script type=\"math/tex; mode=display\">G(x)=sign(f(x))=sign(\\sum_{m=1}^{M}\\alpha_m G_m(x))</script></li>\n</ol>\n<h2 id=\"AdaBoostClassifier\"><a href=\"#AdaBoostClassifier\" class=\"headerlink\" title=\"AdaBoostClassifier\"></a>AdaBoostClassifier</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> AdaBoostClassifier  </span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> datasets</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\">iris = datasets.load_iris()</span><br><span class=\"line\">iris_data = iris[<span class=\"string\">&#x27;data&#x27;</span>]</span><br><span class=\"line\">iris_label = iris[<span class=\"string\">&#x27;target&#x27;</span>]</span><br><span class=\"line\">iris_target_name = iris[<span class=\"string\">&#x27;target_names&#x27;</span>]</span><br><span class=\"line\">X = np.array(iris_data)</span><br><span class=\"line\">Y = np.array(iris_label)</span><br><span class=\"line\"></span><br><span class=\"line\">x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=<span class=\"number\">0.25</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">clf = AdaBoostClassifier()</span><br><span class=\"line\">clf = clf.fit(x_train, y_train)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> roc_curve, auc</span><br><span class=\"line\"></span><br><span class=\"line\">y_pred = clf.predict(x_test)</span><br><span class=\"line\"></span><br><span class=\"line\">false_positive_rate, true_positive_rate, thresholds = roc_curve(</span><br><span class=\"line\">    y_test, y_pred, pos_label=<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">roc_auc = auc(false_positive_rate, true_positive_rate)</span><br><span class=\"line\">roc_auc</span><br></pre></td></tr></table></figure>\n<pre><code>0.9225589225589226\n</code></pre><ul>\n<li>base_estimator: 基分类器，默认是决策树，在该分类器基础上进行boosting，理论上可以是任意一个分类器，但是如果是其他分类器时需要指明样本权重</li>\n<li>n_estimators: 基分类器提升（循环）次数，默认是50次，这个值过大，模型容易过拟合；值过小，模型容易欠拟合</li>\n<li>learning_rate: 学习率，表示梯度收敛速度，默认为1，如果过大，容易错过最优值，如果过小，则收敛速度会很慢；该值需要和n_estimators进行一个权衡，当分类器迭代次数较少时，学习率可以小一些，当迭代次数较多时，学习率可以适当放大</li>\n<li>algorithm: boosting算法，也就是模型提升准则，有两种方式SAMME, 和SAMME.R两种，默认是SAMME.R，两者的区别主要是弱学习器权重的度量，前者是对样本集预测错误的概率进行划分的，后者是对样本集的预测错误的比例，即错分率进行划分的，默认是用的SAMME.R</li>\n<li>random_state: 随机种子设置</li>\n</ul>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"http://www.broadview.com.cn/book/5337\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/ScorpioLu/p/8295990.html\" >AdaBoost原理详解<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/mdevelopment/p/9445090.html\" >AdaBoostClassifier参数<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"LeetCode 262_行程和用户","mathjax":false,"abbrlink":15284,"date":"2019-09-07T16:00:00.000Z","_content":"\n## 题目描述\n\nTrips 表中存所有出租车的行程信息。每段行程有唯一键 Id，Client_Id 和 Driver_Id 是 Users 表中 Users_Id 的外键。Status 是枚举类型，枚举成员为 (‘completed’, ‘cancelled_by_driver’, ‘cancelled_by_client’)。\n\n```\n+----+-----------+-----------+---------+--------------------+----------+\n| Id | Client_Id | Driver_Id | City_Id |        Status      |Request_at|\n+----+-----------+-----------+---------+--------------------+----------+\n| 1  |     1     |    10     |    1    |     completed      |2013-10-01|\n| 2  |     2     |    11     |    1    | cancelled_by_driver|2013-10-01|\n| 3  |     3     |    12     |    6    |     completed      |2013-10-01|\n| 4  |     4     |    13     |    6    | cancelled_by_client|2013-10-01|\n| 5  |     1     |    10     |    1    |     completed      |2013-10-02|\n| 6  |     2     |    11     |    6    |     completed      |2013-10-02|\n| 7  |     3     |    12     |    6    |     completed      |2013-10-02|\n| 8  |     2     |    12     |    12   |     completed      |2013-10-03|\n| 9  |     3     |    10     |    12   |     completed      |2013-10-03| \n| 10 |     4     |    13     |    12   | cancelled_by_driver|2013-10-03|\n+----+-----------+-----------+---------+--------------------+----------+\n```\n\nUsers 表存所有用户。每个用户有唯一键 Users_Id。Banned 表示这个用户是否被禁止，Role 则是一个表示（‘client’, ‘driver’, ‘partner’）的枚举类型。\n\n```\n+----------+--------+--------+\n| Users_Id | Banned |  Role  |\n+----------+--------+--------+\n|    1     |   No   | client |\n|    2     |   Yes  | client |\n|    3     |   No   | client |\n|    4     |   No   | client |\n|    10    |   No   | driver |\n|    11    |   No   | driver |\n|    12    |   No   | driver |\n|    13    |   No   | driver |\n+----------+--------+--------+\n```\n\n写一段 SQL 语句查出 2013年10月1日 至 2013年10月3日 期间非禁止用户的取消率。基于上表，你的 SQL 语句应返回如下结果，取消率（Cancellation Rate）保留两位小数。\n\n```\n+------------+-------------------+\n|     Day    | Cancellation Rate |\n+------------+-------------------+\n| 2013-10-01 |       0.33        |\n| 2013-10-02 |       0.00        |\n| 2013-10-03 |       0.50        |\n+------------+-------------------+\n```\n\n## 解题思路\n\n1. 将最后的限制先做出来，并保留唯一识别ID\n2. 分组记数\n3. 保留两位应用format，但官网解答写错用了round才对\n\n## code\n\n\n```python\n# Write your MySQL query statement below\nselect\n    Request_at as 'Day',\n    round(sum(case when Status in (\"cancelled_by_driver\",\"cancelled_by_client\") then 1 else 0 end) / count(*),2) as 'Cancellation Rate'\n\nfrom Trips\nwhere id in \n(select\n    a.id as 'id'\nfrom Trips a\nleft join Users b\n    on a.Client_Id = b.Users_Id\nleft join Users c\n    on a.Driver_Id = c.Users_Id\nwhere b.Banned = \"No\" and c.Banned = \"No\" and Request_at >= \"2013-10-01\" and Request_at <= \"2013-10-03\")\n\ngroup by Request_at\n```\n\n## 成绩\n\n- 用时：151 ms\n- 内存消耗：N/A\n\n> 参考：\n\n1. [262. 行程和用户 - 力扣（LeetCode）](https://leetcode-cn.com/problems/trips-and-users/)\n","source":"_posts/2019-09-08_LeetCode+262_行程和用户.md","raw":"---\ntitle: LeetCode 262_行程和用户\ncategories:\n  - 项目\n  - LeetCode\nmathjax: false\nabbrlink: 15284\ndate: 2019-09-08 00:00:00\n---\n\n## 题目描述\n\nTrips 表中存所有出租车的行程信息。每段行程有唯一键 Id，Client_Id 和 Driver_Id 是 Users 表中 Users_Id 的外键。Status 是枚举类型，枚举成员为 (‘completed’, ‘cancelled_by_driver’, ‘cancelled_by_client’)。\n\n```\n+----+-----------+-----------+---------+--------------------+----------+\n| Id | Client_Id | Driver_Id | City_Id |        Status      |Request_at|\n+----+-----------+-----------+---------+--------------------+----------+\n| 1  |     1     |    10     |    1    |     completed      |2013-10-01|\n| 2  |     2     |    11     |    1    | cancelled_by_driver|2013-10-01|\n| 3  |     3     |    12     |    6    |     completed      |2013-10-01|\n| 4  |     4     |    13     |    6    | cancelled_by_client|2013-10-01|\n| 5  |     1     |    10     |    1    |     completed      |2013-10-02|\n| 6  |     2     |    11     |    6    |     completed      |2013-10-02|\n| 7  |     3     |    12     |    6    |     completed      |2013-10-02|\n| 8  |     2     |    12     |    12   |     completed      |2013-10-03|\n| 9  |     3     |    10     |    12   |     completed      |2013-10-03| \n| 10 |     4     |    13     |    12   | cancelled_by_driver|2013-10-03|\n+----+-----------+-----------+---------+--------------------+----------+\n```\n\nUsers 表存所有用户。每个用户有唯一键 Users_Id。Banned 表示这个用户是否被禁止，Role 则是一个表示（‘client’, ‘driver’, ‘partner’）的枚举类型。\n\n```\n+----------+--------+--------+\n| Users_Id | Banned |  Role  |\n+----------+--------+--------+\n|    1     |   No   | client |\n|    2     |   Yes  | client |\n|    3     |   No   | client |\n|    4     |   No   | client |\n|    10    |   No   | driver |\n|    11    |   No   | driver |\n|    12    |   No   | driver |\n|    13    |   No   | driver |\n+----------+--------+--------+\n```\n\n写一段 SQL 语句查出 2013年10月1日 至 2013年10月3日 期间非禁止用户的取消率。基于上表，你的 SQL 语句应返回如下结果，取消率（Cancellation Rate）保留两位小数。\n\n```\n+------------+-------------------+\n|     Day    | Cancellation Rate |\n+------------+-------------------+\n| 2013-10-01 |       0.33        |\n| 2013-10-02 |       0.00        |\n| 2013-10-03 |       0.50        |\n+------------+-------------------+\n```\n\n## 解题思路\n\n1. 将最后的限制先做出来，并保留唯一识别ID\n2. 分组记数\n3. 保留两位应用format，但官网解答写错用了round才对\n\n## code\n\n\n```python\n# Write your MySQL query statement below\nselect\n    Request_at as 'Day',\n    round(sum(case when Status in (\"cancelled_by_driver\",\"cancelled_by_client\") then 1 else 0 end) / count(*),2) as 'Cancellation Rate'\n\nfrom Trips\nwhere id in \n(select\n    a.id as 'id'\nfrom Trips a\nleft join Users b\n    on a.Client_Id = b.Users_Id\nleft join Users c\n    on a.Driver_Id = c.Users_Id\nwhere b.Banned = \"No\" and c.Banned = \"No\" and Request_at >= \"2013-10-01\" and Request_at <= \"2013-10-03\")\n\ngroup by Request_at\n```\n\n## 成绩\n\n- 用时：151 ms\n- 内存消耗：N/A\n\n> 参考：\n\n1. [262. 行程和用户 - 力扣（LeetCode）](https://leetcode-cn.com/problems/trips-and-users/)\n","slug":"2019-09-08_LeetCode+262_行程和用户","published":1,"updated":"2021-04-01T17:37:01.031Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5qw000z9ohzgz6x32ar","content":"<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>Trips 表中存所有出租车的行程信息。每段行程有唯一键 Id，Client_Id 和 Driver_Id 是 Users 表中 Users_Id 的外键。Status 是枚举类型，枚举成员为 (‘completed’, ‘cancelled_by_driver’, ‘cancelled_by_client’)。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+----+-----------+-----------+---------+--------------------+----------+</span><br><span class=\"line\">| Id | Client_Id | Driver_Id | City_Id |        Status      |Request_at|</span><br><span class=\"line\">+----+-----------+-----------+---------+--------------------+----------+</span><br><span class=\"line\">| 1  |     1     |    10     |    1    |     completed      |2013-10-01|</span><br><span class=\"line\">| 2  |     2     |    11     |    1    | cancelled_by_driver|2013-10-01|</span><br><span class=\"line\">| 3  |     3     |    12     |    6    |     completed      |2013-10-01|</span><br><span class=\"line\">| 4  |     4     |    13     |    6    | cancelled_by_client|2013-10-01|</span><br><span class=\"line\">| 5  |     1     |    10     |    1    |     completed      |2013-10-02|</span><br><span class=\"line\">| 6  |     2     |    11     |    6    |     completed      |2013-10-02|</span><br><span class=\"line\">| 7  |     3     |    12     |    6    |     completed      |2013-10-02|</span><br><span class=\"line\">| 8  |     2     |    12     |    12   |     completed      |2013-10-03|</span><br><span class=\"line\">| 9  |     3     |    10     |    12   |     completed      |2013-10-03| </span><br><span class=\"line\">| 10 |     4     |    13     |    12   | cancelled_by_driver|2013-10-03|</span><br><span class=\"line\">+----+-----------+-----------+---------+--------------------+----------+</span><br></pre></td></tr></table></figure>\n<p>Users 表存所有用户。每个用户有唯一键 Users_Id。Banned 表示这个用户是否被禁止，Role 则是一个表示（‘client’, ‘driver’, ‘partner’）的枚举类型。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+----------+--------+--------+</span><br><span class=\"line\">| Users_Id | Banned |  Role  |</span><br><span class=\"line\">+----------+--------+--------+</span><br><span class=\"line\">|    1     |   No   | client |</span><br><span class=\"line\">|    2     |   Yes  | client |</span><br><span class=\"line\">|    3     |   No   | client |</span><br><span class=\"line\">|    4     |   No   | client |</span><br><span class=\"line\">|    10    |   No   | driver |</span><br><span class=\"line\">|    11    |   No   | driver |</span><br><span class=\"line\">|    12    |   No   | driver |</span><br><span class=\"line\">|    13    |   No   | driver |</span><br><span class=\"line\">+----------+--------+--------+</span><br></pre></td></tr></table></figure>\n<p>写一段 SQL 语句查出 2013年10月1日 至 2013年10月3日 期间非禁止用户的取消率。基于上表，你的 SQL 语句应返回如下结果，取消率（Cancellation Rate）保留两位小数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------------+-------------------+</span><br><span class=\"line\">|     Day    | Cancellation Rate |</span><br><span class=\"line\">+------------+-------------------+</span><br><span class=\"line\">| 2013-10-01 |       0.33        |</span><br><span class=\"line\">| 2013-10-02 |       0.00        |</span><br><span class=\"line\">| 2013-10-03 |       0.50        |</span><br><span class=\"line\">+------------+-------------------+</span><br></pre></td></tr></table></figure>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><ol>\n<li>将最后的限制先做出来，并保留唯一识别ID</li>\n<li>分组记数</li>\n<li>保留两位应用format，但官网解答写错用了round才对</li>\n</ol>\n<h2 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Write your MySQL query statement below</span></span><br><span class=\"line\">select</span><br><span class=\"line\">    Request_at <span class=\"keyword\">as</span> <span class=\"string\">&#x27;Day&#x27;</span>,</span><br><span class=\"line\">    <span class=\"built_in\">round</span>(<span class=\"built_in\">sum</span>(case when Status <span class=\"keyword\">in</span> (<span class=\"string\">&quot;cancelled_by_driver&quot;</span>,<span class=\"string\">&quot;cancelled_by_client&quot;</span>) then <span class=\"number\">1</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span> end) / count(*),<span class=\"number\">2</span>) <span class=\"keyword\">as</span> <span class=\"string\">&#x27;Cancellation Rate&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> Trips</span><br><span class=\"line\">where <span class=\"built_in\">id</span> <span class=\"keyword\">in</span> </span><br><span class=\"line\">(select</span><br><span class=\"line\">    a.<span class=\"built_in\">id</span> <span class=\"keyword\">as</span> <span class=\"string\">&#x27;id&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> Trips a</span><br><span class=\"line\">left join Users b</span><br><span class=\"line\">    on a.Client_Id = b.Users_Id</span><br><span class=\"line\">left join Users c</span><br><span class=\"line\">    on a.Driver_Id = c.Users_Id</span><br><span class=\"line\">where b.Banned = <span class=\"string\">&quot;No&quot;</span> <span class=\"keyword\">and</span> c.Banned = <span class=\"string\">&quot;No&quot;</span> <span class=\"keyword\">and</span> Request_at &gt;= <span class=\"string\">&quot;2013-10-01&quot;</span> <span class=\"keyword\">and</span> Request_at &lt;= <span class=\"string\">&quot;2013-10-03&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">group by Request_at</span><br></pre></td></tr></table></figure>\n<h2 id=\"成绩\"><a href=\"#成绩\" class=\"headerlink\" title=\"成绩\"></a>成绩</h2><ul>\n<li>用时：151 ms</li>\n<li>内存消耗：N/A</li>\n</ul>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://leetcode-cn.com/problems/trips-and-users/\" >262. 行程和用户 - 力扣（LeetCode）<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>Trips 表中存所有出租车的行程信息。每段行程有唯一键 Id，Client_Id 和 Driver_Id 是 Users 表中 Users_Id 的外键。Status 是枚举类型，枚举成员为 (‘completed’, ‘cancelled_by_driver’, ‘cancelled_by_client’)。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+----+-----------+-----------+---------+--------------------+----------+</span><br><span class=\"line\">| Id | Client_Id | Driver_Id | City_Id |        Status      |Request_at|</span><br><span class=\"line\">+----+-----------+-----------+---------+--------------------+----------+</span><br><span class=\"line\">| 1  |     1     |    10     |    1    |     completed      |2013-10-01|</span><br><span class=\"line\">| 2  |     2     |    11     |    1    | cancelled_by_driver|2013-10-01|</span><br><span class=\"line\">| 3  |     3     |    12     |    6    |     completed      |2013-10-01|</span><br><span class=\"line\">| 4  |     4     |    13     |    6    | cancelled_by_client|2013-10-01|</span><br><span class=\"line\">| 5  |     1     |    10     |    1    |     completed      |2013-10-02|</span><br><span class=\"line\">| 6  |     2     |    11     |    6    |     completed      |2013-10-02|</span><br><span class=\"line\">| 7  |     3     |    12     |    6    |     completed      |2013-10-02|</span><br><span class=\"line\">| 8  |     2     |    12     |    12   |     completed      |2013-10-03|</span><br><span class=\"line\">| 9  |     3     |    10     |    12   |     completed      |2013-10-03| </span><br><span class=\"line\">| 10 |     4     |    13     |    12   | cancelled_by_driver|2013-10-03|</span><br><span class=\"line\">+----+-----------+-----------+---------+--------------------+----------+</span><br></pre></td></tr></table></figure>\n<p>Users 表存所有用户。每个用户有唯一键 Users_Id。Banned 表示这个用户是否被禁止，Role 则是一个表示（‘client’, ‘driver’, ‘partner’）的枚举类型。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+----------+--------+--------+</span><br><span class=\"line\">| Users_Id | Banned |  Role  |</span><br><span class=\"line\">+----------+--------+--------+</span><br><span class=\"line\">|    1     |   No   | client |</span><br><span class=\"line\">|    2     |   Yes  | client |</span><br><span class=\"line\">|    3     |   No   | client |</span><br><span class=\"line\">|    4     |   No   | client |</span><br><span class=\"line\">|    10    |   No   | driver |</span><br><span class=\"line\">|    11    |   No   | driver |</span><br><span class=\"line\">|    12    |   No   | driver |</span><br><span class=\"line\">|    13    |   No   | driver |</span><br><span class=\"line\">+----------+--------+--------+</span><br></pre></td></tr></table></figure>\n<p>写一段 SQL 语句查出 2013年10月1日 至 2013年10月3日 期间非禁止用户的取消率。基于上表，你的 SQL 语句应返回如下结果，取消率（Cancellation Rate）保留两位小数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------------+-------------------+</span><br><span class=\"line\">|     Day    | Cancellation Rate |</span><br><span class=\"line\">+------------+-------------------+</span><br><span class=\"line\">| 2013-10-01 |       0.33        |</span><br><span class=\"line\">| 2013-10-02 |       0.00        |</span><br><span class=\"line\">| 2013-10-03 |       0.50        |</span><br><span class=\"line\">+------------+-------------------+</span><br></pre></td></tr></table></figure>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><ol>\n<li>将最后的限制先做出来，并保留唯一识别ID</li>\n<li>分组记数</li>\n<li>保留两位应用format，但官网解答写错用了round才对</li>\n</ol>\n<h2 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Write your MySQL query statement below</span></span><br><span class=\"line\">select</span><br><span class=\"line\">    Request_at <span class=\"keyword\">as</span> <span class=\"string\">&#x27;Day&#x27;</span>,</span><br><span class=\"line\">    <span class=\"built_in\">round</span>(<span class=\"built_in\">sum</span>(case when Status <span class=\"keyword\">in</span> (<span class=\"string\">&quot;cancelled_by_driver&quot;</span>,<span class=\"string\">&quot;cancelled_by_client&quot;</span>) then <span class=\"number\">1</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span> end) / count(*),<span class=\"number\">2</span>) <span class=\"keyword\">as</span> <span class=\"string\">&#x27;Cancellation Rate&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> Trips</span><br><span class=\"line\">where <span class=\"built_in\">id</span> <span class=\"keyword\">in</span> </span><br><span class=\"line\">(select</span><br><span class=\"line\">    a.<span class=\"built_in\">id</span> <span class=\"keyword\">as</span> <span class=\"string\">&#x27;id&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> Trips a</span><br><span class=\"line\">left join Users b</span><br><span class=\"line\">    on a.Client_Id = b.Users_Id</span><br><span class=\"line\">left join Users c</span><br><span class=\"line\">    on a.Driver_Id = c.Users_Id</span><br><span class=\"line\">where b.Banned = <span class=\"string\">&quot;No&quot;</span> <span class=\"keyword\">and</span> c.Banned = <span class=\"string\">&quot;No&quot;</span> <span class=\"keyword\">and</span> Request_at &gt;= <span class=\"string\">&quot;2013-10-01&quot;</span> <span class=\"keyword\">and</span> Request_at &lt;= <span class=\"string\">&quot;2013-10-03&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">group by Request_at</span><br></pre></td></tr></table></figure>\n<h2 id=\"成绩\"><a href=\"#成绩\" class=\"headerlink\" title=\"成绩\"></a>成绩</h2><ul>\n<li>用时：151 ms</li>\n<li>内存消耗：N/A</li>\n</ul>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://leetcode-cn.com/problems/trips-and-users/\" >262. 行程和用户 - 力扣（LeetCode）<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"LeetCode 185_部门工资前三高的所有员工","mathjax":false,"abbrlink":61684,"date":"2019-09-09T16:00:00.000Z","_content":"\n## 题目描述\n\nEmployee 表包含所有员工信息，每个员工有其对应的工号 Id，姓名 Name，工资 Salary 和部门编号 DepartmentId 。\n\n```\n+----+-------+--------+--------------+\n| Id | Name  | Salary | DepartmentId |\n+----+-------+--------+--------------+\n| 1  | Joe   | 85000  | 1            |\n| 2  | Henry | 80000  | 2            |\n| 3  | Sam   | 60000  | 2            |\n| 4  | Max   | 90000  | 1            |\n| 5  | Janet | 69000  | 1            |\n| 6  | Randy | 85000  | 1            |\n| 7  | Will  | 70000  | 1            |\n+----+-------+--------+--------------+\n```\n\nDepartment 表包含公司所有部门的信息。\n\n```\n+----+----------+\n| Id | Name     |\n+----+----------+\n| 1  | IT       |\n| 2  | Sales    |\n+----+----------+\n```\n\n编写一个 SQL 查询，找出每个部门获得前三高工资的所有员工。例如，根据上述给定的表，查询结果应返回：\n\n```\n+------------+----------+--------+\n| Department | Employee | Salary |\n+------------+----------+--------+\n| IT         | Max      | 90000  |\n| IT         | Randy    | 85000  |\n| IT         | Joe      | 85000  |\n| IT         | Will     | 70000  |\n| Sales      | Henry    | 80000  |\n| Sales      | Sam      | 60000  |\n+------------+----------+--------+\n```\n\n解释：\n\nIT 部门中，Max 获得了最高的工资，Randy 和 Joe 都拿到了第二高的工资，Will 的工资排第三。销售部门（Sales）只有两名员工，Henry 的工资最高，Sam 的工资排第二。\n\n## 解题思路\n\n1. Employee join Employee，取出比自己大的数目小于3的\n2. 再取所需维度，where id 在上面筛选出来的\n3. hive中直接用 row_number() over(partition by DepartmentId order by Salary desc) as rank，外面再包一层 rank <= 3 即可\n\n## code\n\n\n```python\n# Write your MySQL query statement below\nselect\n    d.Name as 'Department',\n    c.Name as 'Employee',\n    c.Salary as 'Salary'\nfrom Employee c\ninner join Department d\n    on c.DepartmentId = d.Id\nwhere c.Id in \n    (select\n        a.Id\n    from Employee a\n    left join Employee b\n        on a.DepartmentId = b.DepartmentId \n            and a.Salary < b.Salary\n    group by a.Id\n    having count(distinct b.Salary) < 3)\norder by d.Name, c.Salary desc, c.Name\n```\n\n## 成绩\n\n- 用时：331 ms\n- 内存消耗：N/A\n\n> 参考：\n\n1. [185. 部门工资前三高的所有员工](https://leetcode-cn.com/problems/department-top-three-salaries/)\n","source":"_posts/2019-09-10_LeetCode+185_部门工资前三高的所有员工.md","raw":"---\ntitle: LeetCode 185_部门工资前三高的所有员工\ncategories:\n  - 项目\n  - LeetCode\nmathjax: false\nabbrlink: 61684\ndate: 2019-09-10 00:00:00\n---\n\n## 题目描述\n\nEmployee 表包含所有员工信息，每个员工有其对应的工号 Id，姓名 Name，工资 Salary 和部门编号 DepartmentId 。\n\n```\n+----+-------+--------+--------------+\n| Id | Name  | Salary | DepartmentId |\n+----+-------+--------+--------------+\n| 1  | Joe   | 85000  | 1            |\n| 2  | Henry | 80000  | 2            |\n| 3  | Sam   | 60000  | 2            |\n| 4  | Max   | 90000  | 1            |\n| 5  | Janet | 69000  | 1            |\n| 6  | Randy | 85000  | 1            |\n| 7  | Will  | 70000  | 1            |\n+----+-------+--------+--------------+\n```\n\nDepartment 表包含公司所有部门的信息。\n\n```\n+----+----------+\n| Id | Name     |\n+----+----------+\n| 1  | IT       |\n| 2  | Sales    |\n+----+----------+\n```\n\n编写一个 SQL 查询，找出每个部门获得前三高工资的所有员工。例如，根据上述给定的表，查询结果应返回：\n\n```\n+------------+----------+--------+\n| Department | Employee | Salary |\n+------------+----------+--------+\n| IT         | Max      | 90000  |\n| IT         | Randy    | 85000  |\n| IT         | Joe      | 85000  |\n| IT         | Will     | 70000  |\n| Sales      | Henry    | 80000  |\n| Sales      | Sam      | 60000  |\n+------------+----------+--------+\n```\n\n解释：\n\nIT 部门中，Max 获得了最高的工资，Randy 和 Joe 都拿到了第二高的工资，Will 的工资排第三。销售部门（Sales）只有两名员工，Henry 的工资最高，Sam 的工资排第二。\n\n## 解题思路\n\n1. Employee join Employee，取出比自己大的数目小于3的\n2. 再取所需维度，where id 在上面筛选出来的\n3. hive中直接用 row_number() over(partition by DepartmentId order by Salary desc) as rank，外面再包一层 rank <= 3 即可\n\n## code\n\n\n```python\n# Write your MySQL query statement below\nselect\n    d.Name as 'Department',\n    c.Name as 'Employee',\n    c.Salary as 'Salary'\nfrom Employee c\ninner join Department d\n    on c.DepartmentId = d.Id\nwhere c.Id in \n    (select\n        a.Id\n    from Employee a\n    left join Employee b\n        on a.DepartmentId = b.DepartmentId \n            and a.Salary < b.Salary\n    group by a.Id\n    having count(distinct b.Salary) < 3)\norder by d.Name, c.Salary desc, c.Name\n```\n\n## 成绩\n\n- 用时：331 ms\n- 内存消耗：N/A\n\n> 参考：\n\n1. [185. 部门工资前三高的所有员工](https://leetcode-cn.com/problems/department-top-three-salaries/)\n","slug":"2019-09-10_LeetCode+185_部门工资前三高的所有员工","published":1,"updated":"2021-04-01T17:37:02.065Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5qz00119ohzgua2e2lj","content":"<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>Employee 表包含所有员工信息，每个员工有其对应的工号 Id，姓名 Name，工资 Salary 和部门编号 DepartmentId 。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+----+-------+--------+--------------+</span><br><span class=\"line\">| Id | Name  | Salary | DepartmentId |</span><br><span class=\"line\">+----+-------+--------+--------------+</span><br><span class=\"line\">| 1  | Joe   | 85000  | 1            |</span><br><span class=\"line\">| 2  | Henry | 80000  | 2            |</span><br><span class=\"line\">| 3  | Sam   | 60000  | 2            |</span><br><span class=\"line\">| 4  | Max   | 90000  | 1            |</span><br><span class=\"line\">| 5  | Janet | 69000  | 1            |</span><br><span class=\"line\">| 6  | Randy | 85000  | 1            |</span><br><span class=\"line\">| 7  | Will  | 70000  | 1            |</span><br><span class=\"line\">+----+-------+--------+--------------+</span><br></pre></td></tr></table></figure>\n<p>Department 表包含公司所有部门的信息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+----+----------+</span><br><span class=\"line\">| Id | Name     |</span><br><span class=\"line\">+----+----------+</span><br><span class=\"line\">| 1  | IT       |</span><br><span class=\"line\">| 2  | Sales    |</span><br><span class=\"line\">+----+----------+</span><br></pre></td></tr></table></figure>\n<p>编写一个 SQL 查询，找出每个部门获得前三高工资的所有员工。例如，根据上述给定的表，查询结果应返回：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------------+----------+--------+</span><br><span class=\"line\">| Department | Employee | Salary |</span><br><span class=\"line\">+------------+----------+--------+</span><br><span class=\"line\">| IT         | Max      | 90000  |</span><br><span class=\"line\">| IT         | Randy    | 85000  |</span><br><span class=\"line\">| IT         | Joe      | 85000  |</span><br><span class=\"line\">| IT         | Will     | 70000  |</span><br><span class=\"line\">| Sales      | Henry    | 80000  |</span><br><span class=\"line\">| Sales      | Sam      | 60000  |</span><br><span class=\"line\">+------------+----------+--------+</span><br></pre></td></tr></table></figure>\n<p>解释：</p>\n<p>IT 部门中，Max 获得了最高的工资，Randy 和 Joe 都拿到了第二高的工资，Will 的工资排第三。销售部门（Sales）只有两名员工，Henry 的工资最高，Sam 的工资排第二。</p>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><ol>\n<li>Employee join Employee，取出比自己大的数目小于3的</li>\n<li>再取所需维度，where id 在上面筛选出来的</li>\n<li>hive中直接用 row_number() over(partition by DepartmentId order by Salary desc) as rank，外面再包一层 rank &lt;= 3 即可</li>\n</ol>\n<h2 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Write your MySQL query statement below</span></span><br><span class=\"line\">select</span><br><span class=\"line\">    d.Name <span class=\"keyword\">as</span> <span class=\"string\">&#x27;Department&#x27;</span>,</span><br><span class=\"line\">    c.Name <span class=\"keyword\">as</span> <span class=\"string\">&#x27;Employee&#x27;</span>,</span><br><span class=\"line\">    c.Salary <span class=\"keyword\">as</span> <span class=\"string\">&#x27;Salary&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> Employee c</span><br><span class=\"line\">inner join Department d</span><br><span class=\"line\">    on c.DepartmentId = d.Id</span><br><span class=\"line\">where c.Id <span class=\"keyword\">in</span> </span><br><span class=\"line\">    (select</span><br><span class=\"line\">        a.Id</span><br><span class=\"line\">    <span class=\"keyword\">from</span> Employee a</span><br><span class=\"line\">    left join Employee b</span><br><span class=\"line\">        on a.DepartmentId = b.DepartmentId </span><br><span class=\"line\">            <span class=\"keyword\">and</span> a.Salary &lt; b.Salary</span><br><span class=\"line\">    group by a.Id</span><br><span class=\"line\">    having count(distinct b.Salary) &lt; <span class=\"number\">3</span>)</span><br><span class=\"line\">order by d.Name, c.Salary desc, c.Name</span><br></pre></td></tr></table></figure>\n<h2 id=\"成绩\"><a href=\"#成绩\" class=\"headerlink\" title=\"成绩\"></a>成绩</h2><ul>\n<li>用时：331 ms</li>\n<li>内存消耗：N/A</li>\n</ul>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://leetcode-cn.com/problems/department-top-three-salaries/\" >185. 部门工资前三高的所有员工<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>Employee 表包含所有员工信息，每个员工有其对应的工号 Id，姓名 Name，工资 Salary 和部门编号 DepartmentId 。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+----+-------+--------+--------------+</span><br><span class=\"line\">| Id | Name  | Salary | DepartmentId |</span><br><span class=\"line\">+----+-------+--------+--------------+</span><br><span class=\"line\">| 1  | Joe   | 85000  | 1            |</span><br><span class=\"line\">| 2  | Henry | 80000  | 2            |</span><br><span class=\"line\">| 3  | Sam   | 60000  | 2            |</span><br><span class=\"line\">| 4  | Max   | 90000  | 1            |</span><br><span class=\"line\">| 5  | Janet | 69000  | 1            |</span><br><span class=\"line\">| 6  | Randy | 85000  | 1            |</span><br><span class=\"line\">| 7  | Will  | 70000  | 1            |</span><br><span class=\"line\">+----+-------+--------+--------------+</span><br></pre></td></tr></table></figure>\n<p>Department 表包含公司所有部门的信息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+----+----------+</span><br><span class=\"line\">| Id | Name     |</span><br><span class=\"line\">+----+----------+</span><br><span class=\"line\">| 1  | IT       |</span><br><span class=\"line\">| 2  | Sales    |</span><br><span class=\"line\">+----+----------+</span><br></pre></td></tr></table></figure>\n<p>编写一个 SQL 查询，找出每个部门获得前三高工资的所有员工。例如，根据上述给定的表，查询结果应返回：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------------+----------+--------+</span><br><span class=\"line\">| Department | Employee | Salary |</span><br><span class=\"line\">+------------+----------+--------+</span><br><span class=\"line\">| IT         | Max      | 90000  |</span><br><span class=\"line\">| IT         | Randy    | 85000  |</span><br><span class=\"line\">| IT         | Joe      | 85000  |</span><br><span class=\"line\">| IT         | Will     | 70000  |</span><br><span class=\"line\">| Sales      | Henry    | 80000  |</span><br><span class=\"line\">| Sales      | Sam      | 60000  |</span><br><span class=\"line\">+------------+----------+--------+</span><br></pre></td></tr></table></figure>\n<p>解释：</p>\n<p>IT 部门中，Max 获得了最高的工资，Randy 和 Joe 都拿到了第二高的工资，Will 的工资排第三。销售部门（Sales）只有两名员工，Henry 的工资最高，Sam 的工资排第二。</p>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><ol>\n<li>Employee join Employee，取出比自己大的数目小于3的</li>\n<li>再取所需维度，where id 在上面筛选出来的</li>\n<li>hive中直接用 row_number() over(partition by DepartmentId order by Salary desc) as rank，外面再包一层 rank &lt;= 3 即可</li>\n</ol>\n<h2 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Write your MySQL query statement below</span></span><br><span class=\"line\">select</span><br><span class=\"line\">    d.Name <span class=\"keyword\">as</span> <span class=\"string\">&#x27;Department&#x27;</span>,</span><br><span class=\"line\">    c.Name <span class=\"keyword\">as</span> <span class=\"string\">&#x27;Employee&#x27;</span>,</span><br><span class=\"line\">    c.Salary <span class=\"keyword\">as</span> <span class=\"string\">&#x27;Salary&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> Employee c</span><br><span class=\"line\">inner join Department d</span><br><span class=\"line\">    on c.DepartmentId = d.Id</span><br><span class=\"line\">where c.Id <span class=\"keyword\">in</span> </span><br><span class=\"line\">    (select</span><br><span class=\"line\">        a.Id</span><br><span class=\"line\">    <span class=\"keyword\">from</span> Employee a</span><br><span class=\"line\">    left join Employee b</span><br><span class=\"line\">        on a.DepartmentId = b.DepartmentId </span><br><span class=\"line\">            <span class=\"keyword\">and</span> a.Salary &lt; b.Salary</span><br><span class=\"line\">    group by a.Id</span><br><span class=\"line\">    having count(distinct b.Salary) &lt; <span class=\"number\">3</span>)</span><br><span class=\"line\">order by d.Name, c.Salary desc, c.Name</span><br></pre></td></tr></table></figure>\n<h2 id=\"成绩\"><a href=\"#成绩\" class=\"headerlink\" title=\"成绩\"></a>成绩</h2><ul>\n<li>用时：331 ms</li>\n<li>内存消耗：N/A</li>\n</ul>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://leetcode-cn.com/problems/department-top-three-salaries/\" >185. 部门工资前三高的所有员工<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"LeetCode 601_体育馆的人流量","mathjax":false,"abbrlink":7348,"date":"2019-09-10T16:00:00.000Z","_content":"\n## 题目描述\n\nX 市建了一个新的体育馆，每日人流量信息被记录在这三列信息中：序号 (id)、日期 (visit_date)、 人流量 (people)。\n\n请编写一个查询语句，找出人流量的高峰期。高峰期时，至少连续三行记录中的人流量不少于100。\n\n例如，表 stadium：\n\n```\n+------+------------+-----------+\n| id   | visit_date | people    |\n+------+------------+-----------+\n| 1    | 2017-01-01 | 10        |\n| 2    | 2017-01-02 | 109       |\n| 3    | 2017-01-03 | 150       |\n| 4    | 2017-01-04 | 99        |\n| 5    | 2017-01-05 | 145       |\n| 6    | 2017-01-06 | 1455      |\n| 7    | 2017-01-07 | 199       |\n| 8    | 2017-01-08 | 188       |\n+------+------------+-----------+\n```\n\n对于上面的示例数据，输出为：\n\n```\n+------+------------+-----------+\n| id   | visit_date | people    |\n+------+------------+-----------+\n| 5    | 2017-01-05 | 145       |\n| 6    | 2017-01-06 | 1455      |\n| 7    | 2017-01-07 | 199       |\n| 8    | 2017-01-08 | 188       |\n+------+------------+-----------+\n```\n\n## 解题思路\n\n1. 单表多次拼接\n2. 将连续日期写在where条件里判断\n\n## code\n\n\n```python\n# Write your MySQL query statement below\nselect\n    distinct a.*\nfrom\n    stadium a,\n    stadium b,\n    stadium c\nwhere\n        a.people>=100 \n    and b.people>=100\n    and c.people>=100\n    and (\n     (a.id = b.id-1 and b.id = c.id -1) or\n     (a.id = b.id-1 and a.id = c.id +1) or\n     (a.id = b.id+1 and b.id = c.id +1)) \norder by a.id\n```\n\n## 成绩\n\n- 用时：138 ms\n- 内存消耗：N/A\n\n> 参考：\n\n1. [601. 体育馆的人流量](https://leetcode-cn.com/problems/human-traffic-of-stadium/)\n","source":"_posts/2019-09-11_LeetCode+601_体育馆的人流量.md","raw":"---\ntitle: LeetCode 601_体育馆的人流量\ncategories:\n  - 项目\n  - LeetCode\nmathjax: false\nabbrlink: 7348\ndate: 2019-09-11 00:00:00\n---\n\n## 题目描述\n\nX 市建了一个新的体育馆，每日人流量信息被记录在这三列信息中：序号 (id)、日期 (visit_date)、 人流量 (people)。\n\n请编写一个查询语句，找出人流量的高峰期。高峰期时，至少连续三行记录中的人流量不少于100。\n\n例如，表 stadium：\n\n```\n+------+------------+-----------+\n| id   | visit_date | people    |\n+------+------------+-----------+\n| 1    | 2017-01-01 | 10        |\n| 2    | 2017-01-02 | 109       |\n| 3    | 2017-01-03 | 150       |\n| 4    | 2017-01-04 | 99        |\n| 5    | 2017-01-05 | 145       |\n| 6    | 2017-01-06 | 1455      |\n| 7    | 2017-01-07 | 199       |\n| 8    | 2017-01-08 | 188       |\n+------+------------+-----------+\n```\n\n对于上面的示例数据，输出为：\n\n```\n+------+------------+-----------+\n| id   | visit_date | people    |\n+------+------------+-----------+\n| 5    | 2017-01-05 | 145       |\n| 6    | 2017-01-06 | 1455      |\n| 7    | 2017-01-07 | 199       |\n| 8    | 2017-01-08 | 188       |\n+------+------------+-----------+\n```\n\n## 解题思路\n\n1. 单表多次拼接\n2. 将连续日期写在where条件里判断\n\n## code\n\n\n```python\n# Write your MySQL query statement below\nselect\n    distinct a.*\nfrom\n    stadium a,\n    stadium b,\n    stadium c\nwhere\n        a.people>=100 \n    and b.people>=100\n    and c.people>=100\n    and (\n     (a.id = b.id-1 and b.id = c.id -1) or\n     (a.id = b.id-1 and a.id = c.id +1) or\n     (a.id = b.id+1 and b.id = c.id +1)) \norder by a.id\n```\n\n## 成绩\n\n- 用时：138 ms\n- 内存消耗：N/A\n\n> 参考：\n\n1. [601. 体育馆的人流量](https://leetcode-cn.com/problems/human-traffic-of-stadium/)\n","slug":"2019-09-11_LeetCode+601_体育馆的人流量","published":1,"updated":"2021-04-01T17:37:03.496Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5rh002c9ohz2y218pgg","content":"<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>X 市建了一个新的体育馆，每日人流量信息被记录在这三列信息中：序号 (id)、日期 (visit_date)、 人流量 (people)。</p>\n<p>请编写一个查询语句，找出人流量的高峰期。高峰期时，至少连续三行记录中的人流量不少于100。</p>\n<p>例如，表 stadium：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------+------------+-----------+</span><br><span class=\"line\">| id   | visit_date | people    |</span><br><span class=\"line\">+------+------------+-----------+</span><br><span class=\"line\">| 1    | 2017-01-01 | 10        |</span><br><span class=\"line\">| 2    | 2017-01-02 | 109       |</span><br><span class=\"line\">| 3    | 2017-01-03 | 150       |</span><br><span class=\"line\">| 4    | 2017-01-04 | 99        |</span><br><span class=\"line\">| 5    | 2017-01-05 | 145       |</span><br><span class=\"line\">| 6    | 2017-01-06 | 1455      |</span><br><span class=\"line\">| 7    | 2017-01-07 | 199       |</span><br><span class=\"line\">| 8    | 2017-01-08 | 188       |</span><br><span class=\"line\">+------+------------+-----------+</span><br></pre></td></tr></table></figure>\n<p>对于上面的示例数据，输出为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------+------------+-----------+</span><br><span class=\"line\">| id   | visit_date | people    |</span><br><span class=\"line\">+------+------------+-----------+</span><br><span class=\"line\">| 5    | 2017-01-05 | 145       |</span><br><span class=\"line\">| 6    | 2017-01-06 | 1455      |</span><br><span class=\"line\">| 7    | 2017-01-07 | 199       |</span><br><span class=\"line\">| 8    | 2017-01-08 | 188       |</span><br><span class=\"line\">+------+------------+-----------+</span><br></pre></td></tr></table></figure>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><ol>\n<li>单表多次拼接</li>\n<li>将连续日期写在where条件里判断</li>\n</ol>\n<h2 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Write your MySQL query statement below</span></span><br><span class=\"line\">select</span><br><span class=\"line\">    distinct a.*</span><br><span class=\"line\"><span class=\"keyword\">from</span></span><br><span class=\"line\">    stadium a,</span><br><span class=\"line\">    stadium b,</span><br><span class=\"line\">    stadium c</span><br><span class=\"line\">where</span><br><span class=\"line\">        a.people&gt;=<span class=\"number\">100</span> </span><br><span class=\"line\">    <span class=\"keyword\">and</span> b.people&gt;=<span class=\"number\">100</span></span><br><span class=\"line\">    <span class=\"keyword\">and</span> c.people&gt;=<span class=\"number\">100</span></span><br><span class=\"line\">    <span class=\"keyword\">and</span> (</span><br><span class=\"line\">     (a.<span class=\"built_in\">id</span> = b.<span class=\"built_in\">id</span>-<span class=\"number\">1</span> <span class=\"keyword\">and</span> b.<span class=\"built_in\">id</span> = c.<span class=\"built_in\">id</span> -<span class=\"number\">1</span>) <span class=\"keyword\">or</span></span><br><span class=\"line\">     (a.<span class=\"built_in\">id</span> = b.<span class=\"built_in\">id</span>-<span class=\"number\">1</span> <span class=\"keyword\">and</span> a.<span class=\"built_in\">id</span> = c.<span class=\"built_in\">id</span> +<span class=\"number\">1</span>) <span class=\"keyword\">or</span></span><br><span class=\"line\">     (a.<span class=\"built_in\">id</span> = b.<span class=\"built_in\">id</span>+<span class=\"number\">1</span> <span class=\"keyword\">and</span> b.<span class=\"built_in\">id</span> = c.<span class=\"built_in\">id</span> +<span class=\"number\">1</span>)) </span><br><span class=\"line\">order by a.<span class=\"built_in\">id</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"成绩\"><a href=\"#成绩\" class=\"headerlink\" title=\"成绩\"></a>成绩</h2><ul>\n<li>用时：138 ms</li>\n<li>内存消耗：N/A</li>\n</ul>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://leetcode-cn.com/problems/human-traffic-of-stadium/\" >601. 体育馆的人流量<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>X 市建了一个新的体育馆，每日人流量信息被记录在这三列信息中：序号 (id)、日期 (visit_date)、 人流量 (people)。</p>\n<p>请编写一个查询语句，找出人流量的高峰期。高峰期时，至少连续三行记录中的人流量不少于100。</p>\n<p>例如，表 stadium：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------+------------+-----------+</span><br><span class=\"line\">| id   | visit_date | people    |</span><br><span class=\"line\">+------+------------+-----------+</span><br><span class=\"line\">| 1    | 2017-01-01 | 10        |</span><br><span class=\"line\">| 2    | 2017-01-02 | 109       |</span><br><span class=\"line\">| 3    | 2017-01-03 | 150       |</span><br><span class=\"line\">| 4    | 2017-01-04 | 99        |</span><br><span class=\"line\">| 5    | 2017-01-05 | 145       |</span><br><span class=\"line\">| 6    | 2017-01-06 | 1455      |</span><br><span class=\"line\">| 7    | 2017-01-07 | 199       |</span><br><span class=\"line\">| 8    | 2017-01-08 | 188       |</span><br><span class=\"line\">+------+------------+-----------+</span><br></pre></td></tr></table></figure>\n<p>对于上面的示例数据，输出为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+------+------------+-----------+</span><br><span class=\"line\">| id   | visit_date | people    |</span><br><span class=\"line\">+------+------------+-----------+</span><br><span class=\"line\">| 5    | 2017-01-05 | 145       |</span><br><span class=\"line\">| 6    | 2017-01-06 | 1455      |</span><br><span class=\"line\">| 7    | 2017-01-07 | 199       |</span><br><span class=\"line\">| 8    | 2017-01-08 | 188       |</span><br><span class=\"line\">+------+------------+-----------+</span><br></pre></td></tr></table></figure>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><ol>\n<li>单表多次拼接</li>\n<li>将连续日期写在where条件里判断</li>\n</ol>\n<h2 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Write your MySQL query statement below</span></span><br><span class=\"line\">select</span><br><span class=\"line\">    distinct a.*</span><br><span class=\"line\"><span class=\"keyword\">from</span></span><br><span class=\"line\">    stadium a,</span><br><span class=\"line\">    stadium b,</span><br><span class=\"line\">    stadium c</span><br><span class=\"line\">where</span><br><span class=\"line\">        a.people&gt;=<span class=\"number\">100</span> </span><br><span class=\"line\">    <span class=\"keyword\">and</span> b.people&gt;=<span class=\"number\">100</span></span><br><span class=\"line\">    <span class=\"keyword\">and</span> c.people&gt;=<span class=\"number\">100</span></span><br><span class=\"line\">    <span class=\"keyword\">and</span> (</span><br><span class=\"line\">     (a.<span class=\"built_in\">id</span> = b.<span class=\"built_in\">id</span>-<span class=\"number\">1</span> <span class=\"keyword\">and</span> b.<span class=\"built_in\">id</span> = c.<span class=\"built_in\">id</span> -<span class=\"number\">1</span>) <span class=\"keyword\">or</span></span><br><span class=\"line\">     (a.<span class=\"built_in\">id</span> = b.<span class=\"built_in\">id</span>-<span class=\"number\">1</span> <span class=\"keyword\">and</span> a.<span class=\"built_in\">id</span> = c.<span class=\"built_in\">id</span> +<span class=\"number\">1</span>) <span class=\"keyword\">or</span></span><br><span class=\"line\">     (a.<span class=\"built_in\">id</span> = b.<span class=\"built_in\">id</span>+<span class=\"number\">1</span> <span class=\"keyword\">and</span> b.<span class=\"built_in\">id</span> = c.<span class=\"built_in\">id</span> +<span class=\"number\">1</span>)) </span><br><span class=\"line\">order by a.<span class=\"built_in\">id</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"成绩\"><a href=\"#成绩\" class=\"headerlink\" title=\"成绩\"></a>成绩</h2><ul>\n<li>用时：138 ms</li>\n<li>内存消耗：N/A</li>\n</ul>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://leetcode-cn.com/problems/human-traffic-of-stadium/\" >601. 体育馆的人流量<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"算法目录","author":"丹丹","date":"2021-04-06T13:46:00.000Z","_content":"https://zhuanlan.zhihu.com/p/25327755\n\n\n![upload successful](/img/image.png)\n目录\n\n\n正则化算法（Regularization Algorithms）\n\n集成算法（Ensemble Algorithms）\n\n决策树算法（Decision Tree Algorithm）\n\n回归（Regression）\n\n人工神经网络（Artificial Neural Network）\n\n深度学习（Deep Learning）\n\n支持向量机（Support Vector Machine）\n\n降维算法（Dimensionality Reduction Algorithms）\n\n聚类算法（Clustering Algorithms）\n\n基于实例的算法（Instance-based Algorithms）\n\n贝叶斯算法（Bayesian Algorithms）\n\n关联规则学习算法（Association Rule Learning Algorithms）\n\n图模型（Graphical Models）\n\n\n\n\n\n\n\n正则化算法（Regularization Algorithms）\n\n\n\n\n它是另一种方法（通常是回归方法）的拓展，这种方法会基于模型复杂性对其进行惩罚，它喜欢相对简单能够更好的泛化的模型。\n\n\n例子：\n\n\n岭回归（Ridge Regression）\n\n最小绝对收缩与选择算子（LASSO）\n\nGLASSO\n\n弹性网络（Elastic Net）\n\n最小角回归（Least-Angle Regression）\n\n\n优点：\n\n\n其惩罚会减少过拟合\n\n总会有解决方法\n\n\n缺点：\n\n\n惩罚会造成欠拟合\n\n很难校准\n\n\n集成算法（Ensemble algorithms）\n\n\n\n\n集成方法是由多个较弱的模型集成模型组，其中的模型可以单独进行训练，并且它们的预测能以某种方式结合起来去做出一个总体预测。\n\n\n该算法主要的问题是要找出哪些较弱的模型可以结合起来，以及结合的方法。这是一个非常强大的技术集，因此广受欢迎。\n\n\nBoosting\n\nBootstrapped Aggregation（Bagging）\n\nAdaBoost\n\n层叠泛化（Stacked Generalization）（blending）\n\n梯度推进机（Gradient Boosting Machines，GBM）\n\n梯度提升回归树（Gradient Boosted Regression Trees，GBRT）\n\n随机森林（Random Forest）\n\n\n优点：\n\n\n当先最先进的预测几乎都使用了算法集成。它比使用单个模型预测出来的结果要精确的多\n\n\n缺点：\n\n\n需要大量的维护工作\n\n\n决策树算法（Decision Tree Algorithm）\n\n\n\n\n决策树学习使用一个决策树作为一个预测模型，它将对一个 item（表征在分支上）观察所得映射成关于该 item 的目标值的结论（表征在叶子中）。\n\n\n树模型中的目标是可变的，可以采一组有限值，被称为分类树；在这些树结构中，叶子表示类标签，分支表示表征这些类标签的连接的特征。\n\n\n例子：\n\n\n分类和回归树（Classification and Regression Tree，CART）\n\nIterative Dichotomiser 3（ID3）\n\nC4.5 和 C5.0（一种强大方法的两个不同版本）\n\n\n优点：\n\n\n容易解释\n\n非参数型\n\n\n缺点：\n\n\n趋向过拟合\n\n可能或陷于局部最小值中\n\n没有在线学习\n\n\n回归（Regression）算法\n\n\n\n\n回归是用于估计两种变量之间关系的统计过程。当用于分析因变量和一个 多个自变量之间的关系时，该算法能提供很多建模和分析多个变量的技巧。具体一点说，回归分析可以帮助我们理解当任意一个自变量变化，另一个自变量不变时，因变量变化的典型值。最常见的是，回归分析能在给定自变量的条件下估计出因变量的条件期望。\n\n\n回归算法是统计学中的主要算法，它已被纳入统计机器学习。\n\n\n例子：\n\n\n普通最小二乘回归（Ordinary Least Squares Regression，OLSR）\n\n线性回归（Linear Regression）\n\n逻辑回归（Logistic Regression）\n\n逐步回归（Stepwise Regression）\n\n多元自适应回归样条（Multivariate Adaptive Regression Splines，MARS）\n\n本地散点平滑估计（Locally Estimated Scatterplot Smoothing，LOESS）\n\n\n优点：\n\n\n直接、快速\n\n知名度高\n\n\n缺点：\n\n\n要求严格的假设\n\n需要处理异常值\n\n\n人工神经网络\n\n\n\n\n人工神经网络是受生物神经网络启发而构建的算法模型。\n\n\n它是一种模式匹配，常被用于回归和分类问题，但拥有庞大的子域，由数百种算法和各类问题的变体组成。\n\n\n例子：\n\n\n感知器\n\n反向传播\n\nHopfield 网络\n\n径向基函数网络（Radial Basis Function Network，RBFN）\n\n\n优点：\n\n\n在语音、语义、视觉、各类游戏（如围棋）的任务中表现极好。\n\n算法可以快速调整，适应新的问题。\n\n\n缺点：\n\n\n需要大量数据进行训练\n\n训练要求很高的硬件配置\n\n模型处于「黑箱状态」，难以理解内部机制\n\n元参数（Metaparameter）与网络拓扑选择困难。\n\n\n深度学习（Deep Learning）\n\n\n\n\n深度学习是人工神经网络的最新分支，它受益于当代硬件的快速发展。\n\n\n众多研究者目前的方向主要集中于构建更大、更复杂的神经网络，目前有许多方法正在聚焦半监督学习问题，其中用于训练的大数据集只包含很少的标记。\n\n\n例子：\n\n\n深玻耳兹曼机（Deep Boltzmann Machine，DBM）\n\nDeep Belief Networks（DBN）\n\n卷积神经网络（CNN）\n\nStacked Auto-Encoders\n\n\n优点/缺点：见神经网络\n\n\n支持向量机（Support Vector Machines）\n\n\n\n\n给定一组训练事例，其中每个事例都属于两个类别中的一个，支持向量机（SVM）训练算法可以在被输入新的事例后将其分类到两个类别中的一个，使自身成为非概率二进制线性分类器。\n\n\nSVM 模型将训练事例表示为空间中的点，它们被映射到一幅图中，由一条明确的、尽可能宽的间隔分开以区分两个类别。\n\n\n随后，新的示例会被映射到同一空间中，并基于它们落在间隔的哪一侧来预测它属于的类别。\n\n\n优点：\n\n\n在非线性可分问题上表现优秀\n\n\n缺点：\n\n\n非常难以训练\n\n很难解释\n\n\n降维算法（Dimensionality Reduction Algorithms）\n\n\n\n\n和集簇方法类似，降维追求并利用数据的内在结构，目的在于使用较少的信息总结或描述数据。\n\n\n这一算法可用于可视化高维数据或简化接下来可用于监督学习中的数据。许多这样的方法可针对分类和回归的使用进行调整。\n\n\n例子：\n\n\n主成分分析（Principal Component Analysis (PCA)）\n\n主成分回归（Principal Component Regression (PCR)）\n\n偏最小二乘回归（Partial Least Squares Regression (PLSR)）\n\nSammon 映射（Sammon Mapping）\n\n多维尺度变换（Multidimensional Scaling (MDS)）\n\n投影寻踪（Projection Pursuit）\n\n线性判别分析（Linear Discriminant Analysis (LDA)）\n\n混合判别分析（Mixture Discriminant Analysis (MDA)）\n\n二次判别分析（Quadratic Discriminant Analysis (QDA)）\n\n灵活判别分析（Flexible Discriminant Analysis (FDA)）\n\n\n优点：\n\n\n可处理大规模数据集\n\n无需在数据上进行假设\n\n\n缺点：\n\n\n难以搞定非线性数据\n\n难以理解结果的意义\n\n\n聚类算法（Clustering Algorithms）\n\n\n\n\n聚类算法是指对一组目标进行分类，属于同一组（亦即一个类，cluster）的目标被划分在一组中，与其他组目标相比，同一组目标更加彼此相似（在某种意义上）。\n\n\n例子：\n\n\nK-均值（k-Means）\n\nk-Medians 算法\n\nExpectation Maximi 封层 ation (EM)\n\n最大期望算法（EM）\n\n分层集群（Hierarchical Clstering）\n\n\n优点：\n\n\n让数据变得有意义\n\n\n缺点：\n\n\n结果难以解读，针对不寻常的数据组，结果可能无用。\n\n\n基于实例的算法（Instance-based Algorithms）\n\n\n\n\n基于实例的算法（有时也称为基于记忆的学习）是这样学 习算法，不是明确归纳，而是将新的问题例子与训练过程中见过的例子进行对比，这些见过的例子就在存储器中。\n\n\n之所以叫基于实例的算法是因为它直接从训练实例中建构出假设。这意味这，假设的复杂度能随着数据的增长而变化：最糟的情况是，假设是一个训练项目列表，分类一个单独新实例计算复杂度为 O（n）\n\n\n例子：\n\n\nK 最近邻（k-Nearest Neighbor (kNN)）\n\n学习向量量化（Learning Vector Quantization (LVQ)）\n\n自组织映射（Self-Organizing Map (SOM)）\n\n局部加权学习（Locally Weighted Learning (LWL)）\n\n\n优点：\n\n\n算法简单、结果易于解读\n\n\n缺点：\n\n\n内存使用非常高\n\n计算成本高\n\n不可能用于高维特征空间\n\n\n贝叶斯算法（Bayesian Algorithms）\n\n\n\n\n贝叶斯方法是指明确应用了贝叶斯定理来解决如分类和回归等问题的方法。\n\n\n例子：\n\n\n朴素贝叶斯（Naive Bayes）\n\n高斯朴素贝叶斯（Gaussian Naive Bayes）\n\n多项式朴素贝叶斯（Multinomial Naive Bayes）\n\n平均一致依赖估计器（Averaged One-Dependence Estimators (AODE)）\n\n贝叶斯信念网络（Bayesian Belief Network (BBN)）\n\n贝叶斯网络（Bayesian Network (BN)）\n\n\n优点：\n\n\n快速、易于训练、给出了它们所需的资源能带来良好的表现\n\n\n缺点：\n\n\n如果输入变量是相关的，则会出现问题\n\n\n关联规则学习算法（Association Rule Learning Algorithms）\n\n\n\n\n关联规则学习方法能够提取出对数据中的变量之间的关系的最佳解释。比如说一家超市的销售数据中存在规则 {洋葱，土豆}=> {汉堡}，那说明当一位客户同时购买了洋葱和土豆的时候，他很有可能还会购买汉堡肉。\n\n\n例子：\n\n\nApriori 算法（Apriori algorithm）\n\nEclat 算法（Eclat algorithm）\n\nFP-growth\n\n\n图模型（Graphical Models）\n\n\n\n\n图模型或概率图模型（PGM/probabilistic graphical model）是一种概率模型，一个图（graph）可以通过其表示随机变量之间的条件依赖结构（conditional dependence structure）。\n\n\n例子：\n\n\n贝叶斯网络（Bayesian network）\n\n马尔可夫随机域（Markov random field）\n\n链图（Chain Graphs）\n\n祖先图（Ancestral graph）\n\n\n优点：\n\n\n模型清晰，能被直观地理解\n\n\n缺点：\n\n\n确定其依赖的拓扑很困难，有时候也很模糊","source":"_drafts/算法目录.md","raw":"title: 算法目录\nauthor: 丹丹\ntags: []\ncategories: []\ndate: 2021-04-06 21:46:00\n---\nhttps://zhuanlan.zhihu.com/p/25327755\n\n\n![upload successful](/img/image.png)\n目录\n\n\n正则化算法（Regularization Algorithms）\n\n集成算法（Ensemble Algorithms）\n\n决策树算法（Decision Tree Algorithm）\n\n回归（Regression）\n\n人工神经网络（Artificial Neural Network）\n\n深度学习（Deep Learning）\n\n支持向量机（Support Vector Machine）\n\n降维算法（Dimensionality Reduction Algorithms）\n\n聚类算法（Clustering Algorithms）\n\n基于实例的算法（Instance-based Algorithms）\n\n贝叶斯算法（Bayesian Algorithms）\n\n关联规则学习算法（Association Rule Learning Algorithms）\n\n图模型（Graphical Models）\n\n\n\n\n\n\n\n正则化算法（Regularization Algorithms）\n\n\n\n\n它是另一种方法（通常是回归方法）的拓展，这种方法会基于模型复杂性对其进行惩罚，它喜欢相对简单能够更好的泛化的模型。\n\n\n例子：\n\n\n岭回归（Ridge Regression）\n\n最小绝对收缩与选择算子（LASSO）\n\nGLASSO\n\n弹性网络（Elastic Net）\n\n最小角回归（Least-Angle Regression）\n\n\n优点：\n\n\n其惩罚会减少过拟合\n\n总会有解决方法\n\n\n缺点：\n\n\n惩罚会造成欠拟合\n\n很难校准\n\n\n集成算法（Ensemble algorithms）\n\n\n\n\n集成方法是由多个较弱的模型集成模型组，其中的模型可以单独进行训练，并且它们的预测能以某种方式结合起来去做出一个总体预测。\n\n\n该算法主要的问题是要找出哪些较弱的模型可以结合起来，以及结合的方法。这是一个非常强大的技术集，因此广受欢迎。\n\n\nBoosting\n\nBootstrapped Aggregation（Bagging）\n\nAdaBoost\n\n层叠泛化（Stacked Generalization）（blending）\n\n梯度推进机（Gradient Boosting Machines，GBM）\n\n梯度提升回归树（Gradient Boosted Regression Trees，GBRT）\n\n随机森林（Random Forest）\n\n\n优点：\n\n\n当先最先进的预测几乎都使用了算法集成。它比使用单个模型预测出来的结果要精确的多\n\n\n缺点：\n\n\n需要大量的维护工作\n\n\n决策树算法（Decision Tree Algorithm）\n\n\n\n\n决策树学习使用一个决策树作为一个预测模型，它将对一个 item（表征在分支上）观察所得映射成关于该 item 的目标值的结论（表征在叶子中）。\n\n\n树模型中的目标是可变的，可以采一组有限值，被称为分类树；在这些树结构中，叶子表示类标签，分支表示表征这些类标签的连接的特征。\n\n\n例子：\n\n\n分类和回归树（Classification and Regression Tree，CART）\n\nIterative Dichotomiser 3（ID3）\n\nC4.5 和 C5.0（一种强大方法的两个不同版本）\n\n\n优点：\n\n\n容易解释\n\n非参数型\n\n\n缺点：\n\n\n趋向过拟合\n\n可能或陷于局部最小值中\n\n没有在线学习\n\n\n回归（Regression）算法\n\n\n\n\n回归是用于估计两种变量之间关系的统计过程。当用于分析因变量和一个 多个自变量之间的关系时，该算法能提供很多建模和分析多个变量的技巧。具体一点说，回归分析可以帮助我们理解当任意一个自变量变化，另一个自变量不变时，因变量变化的典型值。最常见的是，回归分析能在给定自变量的条件下估计出因变量的条件期望。\n\n\n回归算法是统计学中的主要算法，它已被纳入统计机器学习。\n\n\n例子：\n\n\n普通最小二乘回归（Ordinary Least Squares Regression，OLSR）\n\n线性回归（Linear Regression）\n\n逻辑回归（Logistic Regression）\n\n逐步回归（Stepwise Regression）\n\n多元自适应回归样条（Multivariate Adaptive Regression Splines，MARS）\n\n本地散点平滑估计（Locally Estimated Scatterplot Smoothing，LOESS）\n\n\n优点：\n\n\n直接、快速\n\n知名度高\n\n\n缺点：\n\n\n要求严格的假设\n\n需要处理异常值\n\n\n人工神经网络\n\n\n\n\n人工神经网络是受生物神经网络启发而构建的算法模型。\n\n\n它是一种模式匹配，常被用于回归和分类问题，但拥有庞大的子域，由数百种算法和各类问题的变体组成。\n\n\n例子：\n\n\n感知器\n\n反向传播\n\nHopfield 网络\n\n径向基函数网络（Radial Basis Function Network，RBFN）\n\n\n优点：\n\n\n在语音、语义、视觉、各类游戏（如围棋）的任务中表现极好。\n\n算法可以快速调整，适应新的问题。\n\n\n缺点：\n\n\n需要大量数据进行训练\n\n训练要求很高的硬件配置\n\n模型处于「黑箱状态」，难以理解内部机制\n\n元参数（Metaparameter）与网络拓扑选择困难。\n\n\n深度学习（Deep Learning）\n\n\n\n\n深度学习是人工神经网络的最新分支，它受益于当代硬件的快速发展。\n\n\n众多研究者目前的方向主要集中于构建更大、更复杂的神经网络，目前有许多方法正在聚焦半监督学习问题，其中用于训练的大数据集只包含很少的标记。\n\n\n例子：\n\n\n深玻耳兹曼机（Deep Boltzmann Machine，DBM）\n\nDeep Belief Networks（DBN）\n\n卷积神经网络（CNN）\n\nStacked Auto-Encoders\n\n\n优点/缺点：见神经网络\n\n\n支持向量机（Support Vector Machines）\n\n\n\n\n给定一组训练事例，其中每个事例都属于两个类别中的一个，支持向量机（SVM）训练算法可以在被输入新的事例后将其分类到两个类别中的一个，使自身成为非概率二进制线性分类器。\n\n\nSVM 模型将训练事例表示为空间中的点，它们被映射到一幅图中，由一条明确的、尽可能宽的间隔分开以区分两个类别。\n\n\n随后，新的示例会被映射到同一空间中，并基于它们落在间隔的哪一侧来预测它属于的类别。\n\n\n优点：\n\n\n在非线性可分问题上表现优秀\n\n\n缺点：\n\n\n非常难以训练\n\n很难解释\n\n\n降维算法（Dimensionality Reduction Algorithms）\n\n\n\n\n和集簇方法类似，降维追求并利用数据的内在结构，目的在于使用较少的信息总结或描述数据。\n\n\n这一算法可用于可视化高维数据或简化接下来可用于监督学习中的数据。许多这样的方法可针对分类和回归的使用进行调整。\n\n\n例子：\n\n\n主成分分析（Principal Component Analysis (PCA)）\n\n主成分回归（Principal Component Regression (PCR)）\n\n偏最小二乘回归（Partial Least Squares Regression (PLSR)）\n\nSammon 映射（Sammon Mapping）\n\n多维尺度变换（Multidimensional Scaling (MDS)）\n\n投影寻踪（Projection Pursuit）\n\n线性判别分析（Linear Discriminant Analysis (LDA)）\n\n混合判别分析（Mixture Discriminant Analysis (MDA)）\n\n二次判别分析（Quadratic Discriminant Analysis (QDA)）\n\n灵活判别分析（Flexible Discriminant Analysis (FDA)）\n\n\n优点：\n\n\n可处理大规模数据集\n\n无需在数据上进行假设\n\n\n缺点：\n\n\n难以搞定非线性数据\n\n难以理解结果的意义\n\n\n聚类算法（Clustering Algorithms）\n\n\n\n\n聚类算法是指对一组目标进行分类，属于同一组（亦即一个类，cluster）的目标被划分在一组中，与其他组目标相比，同一组目标更加彼此相似（在某种意义上）。\n\n\n例子：\n\n\nK-均值（k-Means）\n\nk-Medians 算法\n\nExpectation Maximi 封层 ation (EM)\n\n最大期望算法（EM）\n\n分层集群（Hierarchical Clstering）\n\n\n优点：\n\n\n让数据变得有意义\n\n\n缺点：\n\n\n结果难以解读，针对不寻常的数据组，结果可能无用。\n\n\n基于实例的算法（Instance-based Algorithms）\n\n\n\n\n基于实例的算法（有时也称为基于记忆的学习）是这样学 习算法，不是明确归纳，而是将新的问题例子与训练过程中见过的例子进行对比，这些见过的例子就在存储器中。\n\n\n之所以叫基于实例的算法是因为它直接从训练实例中建构出假设。这意味这，假设的复杂度能随着数据的增长而变化：最糟的情况是，假设是一个训练项目列表，分类一个单独新实例计算复杂度为 O（n）\n\n\n例子：\n\n\nK 最近邻（k-Nearest Neighbor (kNN)）\n\n学习向量量化（Learning Vector Quantization (LVQ)）\n\n自组织映射（Self-Organizing Map (SOM)）\n\n局部加权学习（Locally Weighted Learning (LWL)）\n\n\n优点：\n\n\n算法简单、结果易于解读\n\n\n缺点：\n\n\n内存使用非常高\n\n计算成本高\n\n不可能用于高维特征空间\n\n\n贝叶斯算法（Bayesian Algorithms）\n\n\n\n\n贝叶斯方法是指明确应用了贝叶斯定理来解决如分类和回归等问题的方法。\n\n\n例子：\n\n\n朴素贝叶斯（Naive Bayes）\n\n高斯朴素贝叶斯（Gaussian Naive Bayes）\n\n多项式朴素贝叶斯（Multinomial Naive Bayes）\n\n平均一致依赖估计器（Averaged One-Dependence Estimators (AODE)）\n\n贝叶斯信念网络（Bayesian Belief Network (BBN)）\n\n贝叶斯网络（Bayesian Network (BN)）\n\n\n优点：\n\n\n快速、易于训练、给出了它们所需的资源能带来良好的表现\n\n\n缺点：\n\n\n如果输入变量是相关的，则会出现问题\n\n\n关联规则学习算法（Association Rule Learning Algorithms）\n\n\n\n\n关联规则学习方法能够提取出对数据中的变量之间的关系的最佳解释。比如说一家超市的销售数据中存在规则 {洋葱，土豆}=> {汉堡}，那说明当一位客户同时购买了洋葱和土豆的时候，他很有可能还会购买汉堡肉。\n\n\n例子：\n\n\nApriori 算法（Apriori algorithm）\n\nEclat 算法（Eclat algorithm）\n\nFP-growth\n\n\n图模型（Graphical Models）\n\n\n\n\n图模型或概率图模型（PGM/probabilistic graphical model）是一种概率模型，一个图（graph）可以通过其表示随机变量之间的条件依赖结构（conditional dependence structure）。\n\n\n例子：\n\n\n贝叶斯网络（Bayesian network）\n\n马尔可夫随机域（Markov random field）\n\n链图（Chain Graphs）\n\n祖先图（Ancestral graph）\n\n\n优点：\n\n\n模型清晰，能被直观地理解\n\n\n缺点：\n\n\n确定其依赖的拓扑很困难，有时候也很模糊","slug":"算法目录","published":0,"updated":"2021-04-06T14:08:31.420Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5ri002d9ohz4zef0pkh","content":"<p><a class=\"link\"   href=\"https://zhuanlan.zhihu.com/p/25327755\" >https://zhuanlan.zhihu.com/p/25327755<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/image.png\"\n                      alt=\"upload successful\"\n                ><br>目录</p>\n<p>正则化算法（Regularization Algorithms）</p>\n<p>集成算法（Ensemble Algorithms）</p>\n<p>决策树算法（Decision Tree Algorithm）</p>\n<p>回归（Regression）</p>\n<p>人工神经网络（Artificial Neural Network）</p>\n<p>深度学习（Deep Learning）</p>\n<p>支持向量机（Support Vector Machine）</p>\n<p>降维算法（Dimensionality Reduction Algorithms）</p>\n<p>聚类算法（Clustering Algorithms）</p>\n<p>基于实例的算法（Instance-based Algorithms）</p>\n<p>贝叶斯算法（Bayesian Algorithms）</p>\n<p>关联规则学习算法（Association Rule Learning Algorithms）</p>\n<p>图模型（Graphical Models）</p>\n<p>正则化算法（Regularization Algorithms）</p>\n<p>它是另一种方法（通常是回归方法）的拓展，这种方法会基于模型复杂性对其进行惩罚，它喜欢相对简单能够更好的泛化的模型。</p>\n<p>例子：</p>\n<p>岭回归（Ridge Regression）</p>\n<p>最小绝对收缩与选择算子（LASSO）</p>\n<p>GLASSO</p>\n<p>弹性网络（Elastic Net）</p>\n<p>最小角回归（Least-Angle Regression）</p>\n<p>优点：</p>\n<p>其惩罚会减少过拟合</p>\n<p>总会有解决方法</p>\n<p>缺点：</p>\n<p>惩罚会造成欠拟合</p>\n<p>很难校准</p>\n<p>集成算法（Ensemble algorithms）</p>\n<p>集成方法是由多个较弱的模型集成模型组，其中的模型可以单独进行训练，并且它们的预测能以某种方式结合起来去做出一个总体预测。</p>\n<p>该算法主要的问题是要找出哪些较弱的模型可以结合起来，以及结合的方法。这是一个非常强大的技术集，因此广受欢迎。</p>\n<p>Boosting</p>\n<p>Bootstrapped Aggregation（Bagging）</p>\n<p>AdaBoost</p>\n<p>层叠泛化（Stacked Generalization）（blending）</p>\n<p>梯度推进机（Gradient Boosting Machines，GBM）</p>\n<p>梯度提升回归树（Gradient Boosted Regression Trees，GBRT）</p>\n<p>随机森林（Random Forest）</p>\n<p>优点：</p>\n<p>当先最先进的预测几乎都使用了算法集成。它比使用单个模型预测出来的结果要精确的多</p>\n<p>缺点：</p>\n<p>需要大量的维护工作</p>\n<p>决策树算法（Decision Tree Algorithm）</p>\n<p>决策树学习使用一个决策树作为一个预测模型，它将对一个 item（表征在分支上）观察所得映射成关于该 item 的目标值的结论（表征在叶子中）。</p>\n<p>树模型中的目标是可变的，可以采一组有限值，被称为分类树；在这些树结构中，叶子表示类标签，分支表示表征这些类标签的连接的特征。</p>\n<p>例子：</p>\n<p>分类和回归树（Classification and Regression Tree，CART）</p>\n<p>Iterative Dichotomiser 3（ID3）</p>\n<p>C4.5 和 C5.0（一种强大方法的两个不同版本）</p>\n<p>优点：</p>\n<p>容易解释</p>\n<p>非参数型</p>\n<p>缺点：</p>\n<p>趋向过拟合</p>\n<p>可能或陷于局部最小值中</p>\n<p>没有在线学习</p>\n<p>回归（Regression）算法</p>\n<p>回归是用于估计两种变量之间关系的统计过程。当用于分析因变量和一个 多个自变量之间的关系时，该算法能提供很多建模和分析多个变量的技巧。具体一点说，回归分析可以帮助我们理解当任意一个自变量变化，另一个自变量不变时，因变量变化的典型值。最常见的是，回归分析能在给定自变量的条件下估计出因变量的条件期望。</p>\n<p>回归算法是统计学中的主要算法，它已被纳入统计机器学习。</p>\n<p>例子：</p>\n<p>普通最小二乘回归（Ordinary Least Squares Regression，OLSR）</p>\n<p>线性回归（Linear Regression）</p>\n<p>逻辑回归（Logistic Regression）</p>\n<p>逐步回归（Stepwise Regression）</p>\n<p>多元自适应回归样条（Multivariate Adaptive Regression Splines，MARS）</p>\n<p>本地散点平滑估计（Locally Estimated Scatterplot Smoothing，LOESS）</p>\n<p>优点：</p>\n<p>直接、快速</p>\n<p>知名度高</p>\n<p>缺点：</p>\n<p>要求严格的假设</p>\n<p>需要处理异常值</p>\n<p>人工神经网络</p>\n<p>人工神经网络是受生物神经网络启发而构建的算法模型。</p>\n<p>它是一种模式匹配，常被用于回归和分类问题，但拥有庞大的子域，由数百种算法和各类问题的变体组成。</p>\n<p>例子：</p>\n<p>感知器</p>\n<p>反向传播</p>\n<p>Hopfield 网络</p>\n<p>径向基函数网络（Radial Basis Function Network，RBFN）</p>\n<p>优点：</p>\n<p>在语音、语义、视觉、各类游戏（如围棋）的任务中表现极好。</p>\n<p>算法可以快速调整，适应新的问题。</p>\n<p>缺点：</p>\n<p>需要大量数据进行训练</p>\n<p>训练要求很高的硬件配置</p>\n<p>模型处于「黑箱状态」，难以理解内部机制</p>\n<p>元参数（Metaparameter）与网络拓扑选择困难。</p>\n<p>深度学习（Deep Learning）</p>\n<p>深度学习是人工神经网络的最新分支，它受益于当代硬件的快速发展。</p>\n<p>众多研究者目前的方向主要集中于构建更大、更复杂的神经网络，目前有许多方法正在聚焦半监督学习问题，其中用于训练的大数据集只包含很少的标记。</p>\n<p>例子：</p>\n<p>深玻耳兹曼机（Deep Boltzmann Machine，DBM）</p>\n<p>Deep Belief Networks（DBN）</p>\n<p>卷积神经网络（CNN）</p>\n<p>Stacked Auto-Encoders</p>\n<p>优点/缺点：见神经网络</p>\n<p>支持向量机（Support Vector Machines）</p>\n<p>给定一组训练事例，其中每个事例都属于两个类别中的一个，支持向量机（SVM）训练算法可以在被输入新的事例后将其分类到两个类别中的一个，使自身成为非概率二进制线性分类器。</p>\n<p>SVM 模型将训练事例表示为空间中的点，它们被映射到一幅图中，由一条明确的、尽可能宽的间隔分开以区分两个类别。</p>\n<p>随后，新的示例会被映射到同一空间中，并基于它们落在间隔的哪一侧来预测它属于的类别。</p>\n<p>优点：</p>\n<p>在非线性可分问题上表现优秀</p>\n<p>缺点：</p>\n<p>非常难以训练</p>\n<p>很难解释</p>\n<p>降维算法（Dimensionality Reduction Algorithms）</p>\n<p>和集簇方法类似，降维追求并利用数据的内在结构，目的在于使用较少的信息总结或描述数据。</p>\n<p>这一算法可用于可视化高维数据或简化接下来可用于监督学习中的数据。许多这样的方法可针对分类和回归的使用进行调整。</p>\n<p>例子：</p>\n<p>主成分分析（Principal Component Analysis (PCA)）</p>\n<p>主成分回归（Principal Component Regression (PCR)）</p>\n<p>偏最小二乘回归（Partial Least Squares Regression (PLSR)）</p>\n<p>Sammon 映射（Sammon Mapping）</p>\n<p>多维尺度变换（Multidimensional Scaling (MDS)）</p>\n<p>投影寻踪（Projection Pursuit）</p>\n<p>线性判别分析（Linear Discriminant Analysis (LDA)）</p>\n<p>混合判别分析（Mixture Discriminant Analysis (MDA)）</p>\n<p>二次判别分析（Quadratic Discriminant Analysis (QDA)）</p>\n<p>灵活判别分析（Flexible Discriminant Analysis (FDA)）</p>\n<p>优点：</p>\n<p>可处理大规模数据集</p>\n<p>无需在数据上进行假设</p>\n<p>缺点：</p>\n<p>难以搞定非线性数据</p>\n<p>难以理解结果的意义</p>\n<p>聚类算法（Clustering Algorithms）</p>\n<p>聚类算法是指对一组目标进行分类，属于同一组（亦即一个类，cluster）的目标被划分在一组中，与其他组目标相比，同一组目标更加彼此相似（在某种意义上）。</p>\n<p>例子：</p>\n<p>K-均值（k-Means）</p>\n<p>k-Medians 算法</p>\n<p>Expectation Maximi 封层 ation (EM)</p>\n<p>最大期望算法（EM）</p>\n<p>分层集群（Hierarchical Clstering）</p>\n<p>优点：</p>\n<p>让数据变得有意义</p>\n<p>缺点：</p>\n<p>结果难以解读，针对不寻常的数据组，结果可能无用。</p>\n<p>基于实例的算法（Instance-based Algorithms）</p>\n<p>基于实例的算法（有时也称为基于记忆的学习）是这样学 习算法，不是明确归纳，而是将新的问题例子与训练过程中见过的例子进行对比，这些见过的例子就在存储器中。</p>\n<p>之所以叫基于实例的算法是因为它直接从训练实例中建构出假设。这意味这，假设的复杂度能随着数据的增长而变化：最糟的情况是，假设是一个训练项目列表，分类一个单独新实例计算复杂度为 O（n）</p>\n<p>例子：</p>\n<p>K 最近邻（k-Nearest Neighbor (kNN)）</p>\n<p>学习向量量化（Learning Vector Quantization (LVQ)）</p>\n<p>自组织映射（Self-Organizing Map (SOM)）</p>\n<p>局部加权学习（Locally Weighted Learning (LWL)）</p>\n<p>优点：</p>\n<p>算法简单、结果易于解读</p>\n<p>缺点：</p>\n<p>内存使用非常高</p>\n<p>计算成本高</p>\n<p>不可能用于高维特征空间</p>\n<p>贝叶斯算法（Bayesian Algorithms）</p>\n<p>贝叶斯方法是指明确应用了贝叶斯定理来解决如分类和回归等问题的方法。</p>\n<p>例子：</p>\n<p>朴素贝叶斯（Naive Bayes）</p>\n<p>高斯朴素贝叶斯（Gaussian Naive Bayes）</p>\n<p>多项式朴素贝叶斯（Multinomial Naive Bayes）</p>\n<p>平均一致依赖估计器（Averaged One-Dependence Estimators (AODE)）</p>\n<p>贝叶斯信念网络（Bayesian Belief Network (BBN)）</p>\n<p>贝叶斯网络（Bayesian Network (BN)）</p>\n<p>优点：</p>\n<p>快速、易于训练、给出了它们所需的资源能带来良好的表现</p>\n<p>缺点：</p>\n<p>如果输入变量是相关的，则会出现问题</p>\n<p>关联规则学习算法（Association Rule Learning Algorithms）</p>\n<p>关联规则学习方法能够提取出对数据中的变量之间的关系的最佳解释。比如说一家超市的销售数据中存在规则 {洋葱，土豆}=&gt; {汉堡}，那说明当一位客户同时购买了洋葱和土豆的时候，他很有可能还会购买汉堡肉。</p>\n<p>例子：</p>\n<p>Apriori 算法（Apriori algorithm）</p>\n<p>Eclat 算法（Eclat algorithm）</p>\n<p>FP-growth</p>\n<p>图模型（Graphical Models）</p>\n<p>图模型或概率图模型（PGM/probabilistic graphical model）是一种概率模型，一个图（graph）可以通过其表示随机变量之间的条件依赖结构（conditional dependence structure）。</p>\n<p>例子：</p>\n<p>贝叶斯网络（Bayesian network）</p>\n<p>马尔可夫随机域（Markov random field）</p>\n<p>链图（Chain Graphs）</p>\n<p>祖先图（Ancestral graph）</p>\n<p>优点：</p>\n<p>模型清晰，能被直观地理解</p>\n<p>缺点：</p>\n<p>确定其依赖的拓扑很困难，有时候也很模糊</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a class=\"link\"   href=\"https://zhuanlan.zhihu.com/p/25327755\" >https://zhuanlan.zhihu.com/p/25327755<i class=\"fas fa-external-link-alt\"></i></a></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/image.png\"\n                      alt=\"upload successful\"\n                ><br>目录</p>\n<p>正则化算法（Regularization Algorithms）</p>\n<p>集成算法（Ensemble Algorithms）</p>\n<p>决策树算法（Decision Tree Algorithm）</p>\n<p>回归（Regression）</p>\n<p>人工神经网络（Artificial Neural Network）</p>\n<p>深度学习（Deep Learning）</p>\n<p>支持向量机（Support Vector Machine）</p>\n<p>降维算法（Dimensionality Reduction Algorithms）</p>\n<p>聚类算法（Clustering Algorithms）</p>\n<p>基于实例的算法（Instance-based Algorithms）</p>\n<p>贝叶斯算法（Bayesian Algorithms）</p>\n<p>关联规则学习算法（Association Rule Learning Algorithms）</p>\n<p>图模型（Graphical Models）</p>\n<p>正则化算法（Regularization Algorithms）</p>\n<p>它是另一种方法（通常是回归方法）的拓展，这种方法会基于模型复杂性对其进行惩罚，它喜欢相对简单能够更好的泛化的模型。</p>\n<p>例子：</p>\n<p>岭回归（Ridge Regression）</p>\n<p>最小绝对收缩与选择算子（LASSO）</p>\n<p>GLASSO</p>\n<p>弹性网络（Elastic Net）</p>\n<p>最小角回归（Least-Angle Regression）</p>\n<p>优点：</p>\n<p>其惩罚会减少过拟合</p>\n<p>总会有解决方法</p>\n<p>缺点：</p>\n<p>惩罚会造成欠拟合</p>\n<p>很难校准</p>\n<p>集成算法（Ensemble algorithms）</p>\n<p>集成方法是由多个较弱的模型集成模型组，其中的模型可以单独进行训练，并且它们的预测能以某种方式结合起来去做出一个总体预测。</p>\n<p>该算法主要的问题是要找出哪些较弱的模型可以结合起来，以及结合的方法。这是一个非常强大的技术集，因此广受欢迎。</p>\n<p>Boosting</p>\n<p>Bootstrapped Aggregation（Bagging）</p>\n<p>AdaBoost</p>\n<p>层叠泛化（Stacked Generalization）（blending）</p>\n<p>梯度推进机（Gradient Boosting Machines，GBM）</p>\n<p>梯度提升回归树（Gradient Boosted Regression Trees，GBRT）</p>\n<p>随机森林（Random Forest）</p>\n<p>优点：</p>\n<p>当先最先进的预测几乎都使用了算法集成。它比使用单个模型预测出来的结果要精确的多</p>\n<p>缺点：</p>\n<p>需要大量的维护工作</p>\n<p>决策树算法（Decision Tree Algorithm）</p>\n<p>决策树学习使用一个决策树作为一个预测模型，它将对一个 item（表征在分支上）观察所得映射成关于该 item 的目标值的结论（表征在叶子中）。</p>\n<p>树模型中的目标是可变的，可以采一组有限值，被称为分类树；在这些树结构中，叶子表示类标签，分支表示表征这些类标签的连接的特征。</p>\n<p>例子：</p>\n<p>分类和回归树（Classification and Regression Tree，CART）</p>\n<p>Iterative Dichotomiser 3（ID3）</p>\n<p>C4.5 和 C5.0（一种强大方法的两个不同版本）</p>\n<p>优点：</p>\n<p>容易解释</p>\n<p>非参数型</p>\n<p>缺点：</p>\n<p>趋向过拟合</p>\n<p>可能或陷于局部最小值中</p>\n<p>没有在线学习</p>\n<p>回归（Regression）算法</p>\n<p>回归是用于估计两种变量之间关系的统计过程。当用于分析因变量和一个 多个自变量之间的关系时，该算法能提供很多建模和分析多个变量的技巧。具体一点说，回归分析可以帮助我们理解当任意一个自变量变化，另一个自变量不变时，因变量变化的典型值。最常见的是，回归分析能在给定自变量的条件下估计出因变量的条件期望。</p>\n<p>回归算法是统计学中的主要算法，它已被纳入统计机器学习。</p>\n<p>例子：</p>\n<p>普通最小二乘回归（Ordinary Least Squares Regression，OLSR）</p>\n<p>线性回归（Linear Regression）</p>\n<p>逻辑回归（Logistic Regression）</p>\n<p>逐步回归（Stepwise Regression）</p>\n<p>多元自适应回归样条（Multivariate Adaptive Regression Splines，MARS）</p>\n<p>本地散点平滑估计（Locally Estimated Scatterplot Smoothing，LOESS）</p>\n<p>优点：</p>\n<p>直接、快速</p>\n<p>知名度高</p>\n<p>缺点：</p>\n<p>要求严格的假设</p>\n<p>需要处理异常值</p>\n<p>人工神经网络</p>\n<p>人工神经网络是受生物神经网络启发而构建的算法模型。</p>\n<p>它是一种模式匹配，常被用于回归和分类问题，但拥有庞大的子域，由数百种算法和各类问题的变体组成。</p>\n<p>例子：</p>\n<p>感知器</p>\n<p>反向传播</p>\n<p>Hopfield 网络</p>\n<p>径向基函数网络（Radial Basis Function Network，RBFN）</p>\n<p>优点：</p>\n<p>在语音、语义、视觉、各类游戏（如围棋）的任务中表现极好。</p>\n<p>算法可以快速调整，适应新的问题。</p>\n<p>缺点：</p>\n<p>需要大量数据进行训练</p>\n<p>训练要求很高的硬件配置</p>\n<p>模型处于「黑箱状态」，难以理解内部机制</p>\n<p>元参数（Metaparameter）与网络拓扑选择困难。</p>\n<p>深度学习（Deep Learning）</p>\n<p>深度学习是人工神经网络的最新分支，它受益于当代硬件的快速发展。</p>\n<p>众多研究者目前的方向主要集中于构建更大、更复杂的神经网络，目前有许多方法正在聚焦半监督学习问题，其中用于训练的大数据集只包含很少的标记。</p>\n<p>例子：</p>\n<p>深玻耳兹曼机（Deep Boltzmann Machine，DBM）</p>\n<p>Deep Belief Networks（DBN）</p>\n<p>卷积神经网络（CNN）</p>\n<p>Stacked Auto-Encoders</p>\n<p>优点/缺点：见神经网络</p>\n<p>支持向量机（Support Vector Machines）</p>\n<p>给定一组训练事例，其中每个事例都属于两个类别中的一个，支持向量机（SVM）训练算法可以在被输入新的事例后将其分类到两个类别中的一个，使自身成为非概率二进制线性分类器。</p>\n<p>SVM 模型将训练事例表示为空间中的点，它们被映射到一幅图中，由一条明确的、尽可能宽的间隔分开以区分两个类别。</p>\n<p>随后，新的示例会被映射到同一空间中，并基于它们落在间隔的哪一侧来预测它属于的类别。</p>\n<p>优点：</p>\n<p>在非线性可分问题上表现优秀</p>\n<p>缺点：</p>\n<p>非常难以训练</p>\n<p>很难解释</p>\n<p>降维算法（Dimensionality Reduction Algorithms）</p>\n<p>和集簇方法类似，降维追求并利用数据的内在结构，目的在于使用较少的信息总结或描述数据。</p>\n<p>这一算法可用于可视化高维数据或简化接下来可用于监督学习中的数据。许多这样的方法可针对分类和回归的使用进行调整。</p>\n<p>例子：</p>\n<p>主成分分析（Principal Component Analysis (PCA)）</p>\n<p>主成分回归（Principal Component Regression (PCR)）</p>\n<p>偏最小二乘回归（Partial Least Squares Regression (PLSR)）</p>\n<p>Sammon 映射（Sammon Mapping）</p>\n<p>多维尺度变换（Multidimensional Scaling (MDS)）</p>\n<p>投影寻踪（Projection Pursuit）</p>\n<p>线性判别分析（Linear Discriminant Analysis (LDA)）</p>\n<p>混合判别分析（Mixture Discriminant Analysis (MDA)）</p>\n<p>二次判别分析（Quadratic Discriminant Analysis (QDA)）</p>\n<p>灵活判别分析（Flexible Discriminant Analysis (FDA)）</p>\n<p>优点：</p>\n<p>可处理大规模数据集</p>\n<p>无需在数据上进行假设</p>\n<p>缺点：</p>\n<p>难以搞定非线性数据</p>\n<p>难以理解结果的意义</p>\n<p>聚类算法（Clustering Algorithms）</p>\n<p>聚类算法是指对一组目标进行分类，属于同一组（亦即一个类，cluster）的目标被划分在一组中，与其他组目标相比，同一组目标更加彼此相似（在某种意义上）。</p>\n<p>例子：</p>\n<p>K-均值（k-Means）</p>\n<p>k-Medians 算法</p>\n<p>Expectation Maximi 封层 ation (EM)</p>\n<p>最大期望算法（EM）</p>\n<p>分层集群（Hierarchical Clstering）</p>\n<p>优点：</p>\n<p>让数据变得有意义</p>\n<p>缺点：</p>\n<p>结果难以解读，针对不寻常的数据组，结果可能无用。</p>\n<p>基于实例的算法（Instance-based Algorithms）</p>\n<p>基于实例的算法（有时也称为基于记忆的学习）是这样学 习算法，不是明确归纳，而是将新的问题例子与训练过程中见过的例子进行对比，这些见过的例子就在存储器中。</p>\n<p>之所以叫基于实例的算法是因为它直接从训练实例中建构出假设。这意味这，假设的复杂度能随着数据的增长而变化：最糟的情况是，假设是一个训练项目列表，分类一个单独新实例计算复杂度为 O（n）</p>\n<p>例子：</p>\n<p>K 最近邻（k-Nearest Neighbor (kNN)）</p>\n<p>学习向量量化（Learning Vector Quantization (LVQ)）</p>\n<p>自组织映射（Self-Organizing Map (SOM)）</p>\n<p>局部加权学习（Locally Weighted Learning (LWL)）</p>\n<p>优点：</p>\n<p>算法简单、结果易于解读</p>\n<p>缺点：</p>\n<p>内存使用非常高</p>\n<p>计算成本高</p>\n<p>不可能用于高维特征空间</p>\n<p>贝叶斯算法（Bayesian Algorithms）</p>\n<p>贝叶斯方法是指明确应用了贝叶斯定理来解决如分类和回归等问题的方法。</p>\n<p>例子：</p>\n<p>朴素贝叶斯（Naive Bayes）</p>\n<p>高斯朴素贝叶斯（Gaussian Naive Bayes）</p>\n<p>多项式朴素贝叶斯（Multinomial Naive Bayes）</p>\n<p>平均一致依赖估计器（Averaged One-Dependence Estimators (AODE)）</p>\n<p>贝叶斯信念网络（Bayesian Belief Network (BBN)）</p>\n<p>贝叶斯网络（Bayesian Network (BN)）</p>\n<p>优点：</p>\n<p>快速、易于训练、给出了它们所需的资源能带来良好的表现</p>\n<p>缺点：</p>\n<p>如果输入变量是相关的，则会出现问题</p>\n<p>关联规则学习算法（Association Rule Learning Algorithms）</p>\n<p>关联规则学习方法能够提取出对数据中的变量之间的关系的最佳解释。比如说一家超市的销售数据中存在规则 {洋葱，土豆}=&gt; {汉堡}，那说明当一位客户同时购买了洋葱和土豆的时候，他很有可能还会购买汉堡肉。</p>\n<p>例子：</p>\n<p>Apriori 算法（Apriori algorithm）</p>\n<p>Eclat 算法（Eclat algorithm）</p>\n<p>FP-growth</p>\n<p>图模型（Graphical Models）</p>\n<p>图模型或概率图模型（PGM/probabilistic graphical model）是一种概率模型，一个图（graph）可以通过其表示随机变量之间的条件依赖结构（conditional dependence structure）。</p>\n<p>例子：</p>\n<p>贝叶斯网络（Bayesian network）</p>\n<p>马尔可夫随机域（Markov random field）</p>\n<p>链图（Chain Graphs）</p>\n<p>祖先图（Ancestral graph）</p>\n<p>优点：</p>\n<p>模型清晰，能被直观地理解</p>\n<p>缺点：</p>\n<p>确定其依赖的拓扑很困难，有时候也很模糊</p>\n"},{"title":"探索性数据分析","author":"丹丹","abbrlink":8366,"mathjax":true,"date":"2021-04-06T14:20:00.000Z","_content":"## 数据组成\n### 结构化\n\n- 数值型数据\n\t- 连续型\n\t- 离散型\n- 分类型数据\n\t- 分类型\n    - 二元型\n\t- 有序型\n    \n### 非结构化\n- 时序数据：对同一变量连续的采集，多用在IOT领域\n- 空间数据：关注对象与空间座标\n- 图形数据：物理、社交网络上的关系，多用在网络优化和推荐系统\n\n## 单变量分析-位置估计\n### 均值\n- 一般均值\n- 切尾均值\n- 加权均值\n\t- 例如对不敏感或低信任的数据源降权\n\n### 稳健估计量\n稳健指的是对极值不敏感，同义词为耐抗性\n- 一般中位数\n- 加权中位数\n\n## 单变量分析-变异性估计\n变异性是统计学的一个核心概念，统计学关注如何测量变异性、如何降低变异性、如何识别真实变异性的各种来源、如何在存在变异性的情况下做出决策\n\n### 标准偏差\n\n- 标准偏差\n\t- 负的会抵销正的 \n    $$\\frac{\\sum (x-\\bar{x})}{n}$$\n- 平均绝对偏差\n\t$$\\frac{\\sum |x-\\bar{x} |}{n}$$\n- 方差\n\t- 如果在方差公式使用了直观的除数n，就会低估方差的真实质和总体的标准偏差，这被称为有偏估计。但如果除以n-1则为无偏估计。在这种情况下自由度是n-1，因为其中有一个限制：标准偏差依赖于计算样本的均值。大多数情况下样本数够大，不用担心这问题\n\t$$s^2 = \\frac{\\sum (x-\\bar{x})^2}{n-1}$$\n- 标准偏差\n\t$$s = \\sqrt{\\frac{\\sum (x-\\bar{x})^2}{n-1}}$$\n- 中位数绝对偏差（MAD）\n\t- 方差、偏差对于极值会很敏感，因为平方。相对来说MAD就是一个稳健的估计量\n    $$MAD=中位数(|x_1-m|,|x_2-m|,...,|x_n-m|)$$\n    \n### 基于百分位数的估计量\n- 四分位距\n- 全距\n\n## 单变量分析-探索数据分布\n### 数值型数据\n- 箱型图\n- 频数图/直方图\n- 核密度图\n\n### 分类型数据\n- 条型图\n- 饼图\n- 期望值\n- 众数\n\n## 双变量分析-相关性\n- 相关矩阵\n- 散点图\n\n## 多变量分析\n- 六边形图\n- 等势线图\n- 列联表\n\t- 两个特征交叉后计数\n- 小提琴图\n\n\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](https://book.douban.com/subject/30354581/)","source":"_posts/2021-04-06_探索性数据分析.md","raw":"title: 探索性数据分析\nauthor: 丹丹\nabbrlink: 8366\nmathjax: true\ntags: []\ncategories:\n  - 统计与机器学习\n  - 商業統計\ndate: 2021-04-06 22:20:00\n---\n## 数据组成\n### 结构化\n\n- 数值型数据\n\t- 连续型\n\t- 离散型\n- 分类型数据\n\t- 分类型\n    - 二元型\n\t- 有序型\n    \n### 非结构化\n- 时序数据：对同一变量连续的采集，多用在IOT领域\n- 空间数据：关注对象与空间座标\n- 图形数据：物理、社交网络上的关系，多用在网络优化和推荐系统\n\n## 单变量分析-位置估计\n### 均值\n- 一般均值\n- 切尾均值\n- 加权均值\n\t- 例如对不敏感或低信任的数据源降权\n\n### 稳健估计量\n稳健指的是对极值不敏感，同义词为耐抗性\n- 一般中位数\n- 加权中位数\n\n## 单变量分析-变异性估计\n变异性是统计学的一个核心概念，统计学关注如何测量变异性、如何降低变异性、如何识别真实变异性的各种来源、如何在存在变异性的情况下做出决策\n\n### 标准偏差\n\n- 标准偏差\n\t- 负的会抵销正的 \n    $$\\frac{\\sum (x-\\bar{x})}{n}$$\n- 平均绝对偏差\n\t$$\\frac{\\sum |x-\\bar{x} |}{n}$$\n- 方差\n\t- 如果在方差公式使用了直观的除数n，就会低估方差的真实质和总体的标准偏差，这被称为有偏估计。但如果除以n-1则为无偏估计。在这种情况下自由度是n-1，因为其中有一个限制：标准偏差依赖于计算样本的均值。大多数情况下样本数够大，不用担心这问题\n\t$$s^2 = \\frac{\\sum (x-\\bar{x})^2}{n-1}$$\n- 标准偏差\n\t$$s = \\sqrt{\\frac{\\sum (x-\\bar{x})^2}{n-1}}$$\n- 中位数绝对偏差（MAD）\n\t- 方差、偏差对于极值会很敏感，因为平方。相对来说MAD就是一个稳健的估计量\n    $$MAD=中位数(|x_1-m|,|x_2-m|,...,|x_n-m|)$$\n    \n### 基于百分位数的估计量\n- 四分位距\n- 全距\n\n## 单变量分析-探索数据分布\n### 数值型数据\n- 箱型图\n- 频数图/直方图\n- 核密度图\n\n### 分类型数据\n- 条型图\n- 饼图\n- 期望值\n- 众数\n\n## 双变量分析-相关性\n- 相关矩阵\n- 散点图\n\n## 多变量分析\n- 六边形图\n- 等势线图\n- 列联表\n\t- 两个特征交叉后计数\n- 小提琴图\n\n\n\n> 参考：\n\n1. [从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战](https://book.douban.com/subject/30354581/)","slug":"2021-04-06_探索性数据分析","published":1,"updated":"2021-04-06T18:00:22.978Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5rk002e9ohzbk4yfkxo","content":"<h2 id=\"数据组成\"><a href=\"#数据组成\" class=\"headerlink\" title=\"数据组成\"></a>数据组成</h2><h3 id=\"结构化\"><a href=\"#结构化\" class=\"headerlink\" title=\"结构化\"></a>结构化</h3><ul>\n<li>数值型数据<ul>\n<li>连续型</li>\n<li>离散型</li>\n</ul>\n</li>\n<li>分类型数据<ul>\n<li>分类型</li>\n<li>二元型</li>\n<li>有序型</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"非结构化\"><a href=\"#非结构化\" class=\"headerlink\" title=\"非结构化\"></a>非结构化</h3><ul>\n<li>时序数据：对同一变量连续的采集，多用在IOT领域</li>\n<li>空间数据：关注对象与空间座标</li>\n<li>图形数据：物理、社交网络上的关系，多用在网络优化和推荐系统</li>\n</ul>\n<h2 id=\"单变量分析-位置估计\"><a href=\"#单变量分析-位置估计\" class=\"headerlink\" title=\"单变量分析-位置估计\"></a>单变量分析-位置估计</h2><h3 id=\"均值\"><a href=\"#均值\" class=\"headerlink\" title=\"均值\"></a>均值</h3><ul>\n<li>一般均值</li>\n<li>切尾均值</li>\n<li>加权均值<ul>\n<li>例如对不敏感或低信任的数据源降权</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"稳健估计量\"><a href=\"#稳健估计量\" class=\"headerlink\" title=\"稳健估计量\"></a>稳健估计量</h3><p>稳健指的是对极值不敏感，同义词为耐抗性</p>\n<ul>\n<li>一般中位数</li>\n<li>加权中位数</li>\n</ul>\n<h2 id=\"单变量分析-变异性估计\"><a href=\"#单变量分析-变异性估计\" class=\"headerlink\" title=\"单变量分析-变异性估计\"></a>单变量分析-变异性估计</h2><p>变异性是统计学的一个核心概念，统计学关注如何测量变异性、如何降低变异性、如何识别真实变异性的各种来源、如何在存在变异性的情况下做出决策</p>\n<h3 id=\"标准偏差\"><a href=\"#标准偏差\" class=\"headerlink\" title=\"标准偏差\"></a>标准偏差</h3><ul>\n<li>标准偏差<ul>\n<li>负的会抵销正的 <script type=\"math/tex; mode=display\">\\frac{\\sum (x-\\bar{x})}{n}</script></li>\n</ul>\n</li>\n<li>平均绝对偏差<script type=\"math/tex; mode=display\">\\frac{\\sum |x-\\bar{x} |}{n}</script></li>\n<li>方差<ul>\n<li>如果在方差公式使用了直观的除数n，就会低估方差的真实质和总体的标准偏差，这被称为有偏估计。但如果除以n-1则为无偏估计。在这种情况下自由度是n-1，因为其中有一个限制：标准偏差依赖于计算样本的均值。大多数情况下样本数够大，不用担心这问题<script type=\"math/tex; mode=display\">s^2 = \\frac{\\sum (x-\\bar{x})^2}{n-1}</script></li>\n</ul>\n</li>\n<li>标准偏差<script type=\"math/tex; mode=display\">s = \\sqrt{\\frac{\\sum (x-\\bar{x})^2}{n-1}}</script></li>\n<li>中位数绝对偏差（MAD）<ul>\n<li>方差、偏差对于极值会很敏感，因为平方。相对来说MAD就是一个稳健的估计量<script type=\"math/tex; mode=display\">MAD=中位数(|x_1-m|,|x_2-m|,...,|x_n-m|)</script></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"基于百分位数的估计量\"><a href=\"#基于百分位数的估计量\" class=\"headerlink\" title=\"基于百分位数的估计量\"></a>基于百分位数的估计量</h3><ul>\n<li>四分位距</li>\n<li>全距</li>\n</ul>\n<h2 id=\"单变量分析-探索数据分布\"><a href=\"#单变量分析-探索数据分布\" class=\"headerlink\" title=\"单变量分析-探索数据分布\"></a>单变量分析-探索数据分布</h2><h3 id=\"数值型数据\"><a href=\"#数值型数据\" class=\"headerlink\" title=\"数值型数据\"></a>数值型数据</h3><ul>\n<li>箱型图</li>\n<li>频数图/直方图</li>\n<li>核密度图</li>\n</ul>\n<h3 id=\"分类型数据\"><a href=\"#分类型数据\" class=\"headerlink\" title=\"分类型数据\"></a>分类型数据</h3><ul>\n<li>条型图</li>\n<li>饼图</li>\n<li>期望值</li>\n<li>众数</li>\n</ul>\n<h2 id=\"双变量分析-相关性\"><a href=\"#双变量分析-相关性\" class=\"headerlink\" title=\"双变量分析-相关性\"></a>双变量分析-相关性</h2><ul>\n<li>相关矩阵</li>\n<li>散点图</li>\n</ul>\n<h2 id=\"多变量分析\"><a href=\"#多变量分析\" class=\"headerlink\" title=\"多变量分析\"></a>多变量分析</h2><ul>\n<li>六边形图</li>\n<li>等势线图</li>\n<li>列联表<ul>\n<li>两个特征交叉后计数</li>\n</ul>\n</li>\n<li>小提琴图</li>\n</ul>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://book.douban.com/subject/30354581/\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"数据组成\"><a href=\"#数据组成\" class=\"headerlink\" title=\"数据组成\"></a>数据组成</h2><h3 id=\"结构化\"><a href=\"#结构化\" class=\"headerlink\" title=\"结构化\"></a>结构化</h3><ul>\n<li>数值型数据<ul>\n<li>连续型</li>\n<li>离散型</li>\n</ul>\n</li>\n<li>分类型数据<ul>\n<li>分类型</li>\n<li>二元型</li>\n<li>有序型</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"非结构化\"><a href=\"#非结构化\" class=\"headerlink\" title=\"非结构化\"></a>非结构化</h3><ul>\n<li>时序数据：对同一变量连续的采集，多用在IOT领域</li>\n<li>空间数据：关注对象与空间座标</li>\n<li>图形数据：物理、社交网络上的关系，多用在网络优化和推荐系统</li>\n</ul>\n<h2 id=\"单变量分析-位置估计\"><a href=\"#单变量分析-位置估计\" class=\"headerlink\" title=\"单变量分析-位置估计\"></a>单变量分析-位置估计</h2><h3 id=\"均值\"><a href=\"#均值\" class=\"headerlink\" title=\"均值\"></a>均值</h3><ul>\n<li>一般均值</li>\n<li>切尾均值</li>\n<li>加权均值<ul>\n<li>例如对不敏感或低信任的数据源降权</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"稳健估计量\"><a href=\"#稳健估计量\" class=\"headerlink\" title=\"稳健估计量\"></a>稳健估计量</h3><p>稳健指的是对极值不敏感，同义词为耐抗性</p>\n<ul>\n<li>一般中位数</li>\n<li>加权中位数</li>\n</ul>\n<h2 id=\"单变量分析-变异性估计\"><a href=\"#单变量分析-变异性估计\" class=\"headerlink\" title=\"单变量分析-变异性估计\"></a>单变量分析-变异性估计</h2><p>变异性是统计学的一个核心概念，统计学关注如何测量变异性、如何降低变异性、如何识别真实变异性的各种来源、如何在存在变异性的情况下做出决策</p>\n<h3 id=\"标准偏差\"><a href=\"#标准偏差\" class=\"headerlink\" title=\"标准偏差\"></a>标准偏差</h3><ul>\n<li>标准偏差<ul>\n<li>负的会抵销正的 <script type=\"math/tex; mode=display\">\\frac{\\sum (x-\\bar{x})}{n}</script></li>\n</ul>\n</li>\n<li>平均绝对偏差<script type=\"math/tex; mode=display\">\\frac{\\sum |x-\\bar{x} |}{n}</script></li>\n<li>方差<ul>\n<li>如果在方差公式使用了直观的除数n，就会低估方差的真实质和总体的标准偏差，这被称为有偏估计。但如果除以n-1则为无偏估计。在这种情况下自由度是n-1，因为其中有一个限制：标准偏差依赖于计算样本的均值。大多数情况下样本数够大，不用担心这问题<script type=\"math/tex; mode=display\">s^2 = \\frac{\\sum (x-\\bar{x})^2}{n-1}</script></li>\n</ul>\n</li>\n<li>标准偏差<script type=\"math/tex; mode=display\">s = \\sqrt{\\frac{\\sum (x-\\bar{x})^2}{n-1}}</script></li>\n<li>中位数绝对偏差（MAD）<ul>\n<li>方差、偏差对于极值会很敏感，因为平方。相对来说MAD就是一个稳健的估计量<script type=\"math/tex; mode=display\">MAD=中位数(|x_1-m|,|x_2-m|,...,|x_n-m|)</script></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"基于百分位数的估计量\"><a href=\"#基于百分位数的估计量\" class=\"headerlink\" title=\"基于百分位数的估计量\"></a>基于百分位数的估计量</h3><ul>\n<li>四分位距</li>\n<li>全距</li>\n</ul>\n<h2 id=\"单变量分析-探索数据分布\"><a href=\"#单变量分析-探索数据分布\" class=\"headerlink\" title=\"单变量分析-探索数据分布\"></a>单变量分析-探索数据分布</h2><h3 id=\"数值型数据\"><a href=\"#数值型数据\" class=\"headerlink\" title=\"数值型数据\"></a>数值型数据</h3><ul>\n<li>箱型图</li>\n<li>频数图/直方图</li>\n<li>核密度图</li>\n</ul>\n<h3 id=\"分类型数据\"><a href=\"#分类型数据\" class=\"headerlink\" title=\"分类型数据\"></a>分类型数据</h3><ul>\n<li>条型图</li>\n<li>饼图</li>\n<li>期望值</li>\n<li>众数</li>\n</ul>\n<h2 id=\"双变量分析-相关性\"><a href=\"#双变量分析-相关性\" class=\"headerlink\" title=\"双变量分析-相关性\"></a>双变量分析-相关性</h2><ul>\n<li>相关矩阵</li>\n<li>散点图</li>\n</ul>\n<h2 id=\"多变量分析\"><a href=\"#多变量分析\" class=\"headerlink\" title=\"多变量分析\"></a>多变量分析</h2><ul>\n<li>六边形图</li>\n<li>等势线图</li>\n<li>列联表<ul>\n<li>两个特征交叉后计数</li>\n</ul>\n</li>\n<li>小提琴图</li>\n</ul>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://book.douban.com/subject/30354581/\" >从机器学习到深度学习：基于Scikit-learn与TensorFlow的高效开发实战<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"Pandas","abbrlink":6703,"date":"2019-06-27T16:00:00.000Z","_content":"\n## 基本设置\n\n\n```python\npd.set_option(\"max_columns\", 50)\n```\n\n## 数据缺失检查\n\n\n```python\napts=pd.Series([\"Hangzhou\", \"Beijing\", \"Shenzhen\"])\nprint(apts.notnull())\nprint(apts.isnull())\n```\n\n    0    True\n    1    True\n    2    True\n    dtype: bool\n    0    False\n    1    False\n    2    False\n    dtype: bool\n\n\n## Series\n\n\n```python\n# -*- coding: utf-8 -*- \nfrom pandas import Series\n\nprint(\"===用数组生成Series===\")\nobj = Series([4, 7, -5, 3])\nprint(obj)\nprint(obj.values)\nprint(obj.index)\nprint(\"\")\n\nprint(\"===指定Series的index===\")\nobj2 = Series([4, 7, -5, 3], index = ['d', 'b', 'a', 'c'])\nprint(obj2)\nprint(obj2.index)\nprint(obj2['a'])\nobj2['d'] = 6\nprint(obj2[['c', 'a', 'd']])\nprint(obj2[obj2 > 0])  # 找出大于0的元素\nprint('b' in obj2) # 判断索引是否存在\nprint('e' in obj2)\nprint(\"\")\n\nprint(\"===使用字典生成Series===\")\nsdata = {'Ohio':45000, 'Texas':71000, 'Oregon':16000, 'Utah':5000}\nobj3 = Series(sdata)\nprint(obj3)\nprint(\"\")\n\nprint(\"===使用字典生成Series，并额外指定index，不匹配部分为NaN===\")\nstates = ['California', 'Ohio', 'Oregon', 'Texas']\nobj4 = Series(sdata, index = states)\nprint(obj4)\nprint(\"\")\n\nprint(\"===Series相加，相同索引部分相加===\")\nprint(obj3 + obj4)\nprint(\"\")\n\nprint(\"===指定Series及其索引的名字===\")\nobj4.name = 'population'\nobj4.index.name = 'state'\nprint( obj4)\nprint(\"\")\n\nprint(\"===替换index===\")\nobj.index = ['Bob', 'Steve', 'Jeff', 'Ryan']\nprint(obj)\n```\n\n    ===用数组生成Series===\n    0    4\n    1    7\n    2   -5\n    3    3\n    dtype: int64\n    [ 4  7 -5  3]\n    RangeIndex(start=0, stop=4, step=1)\n    \n    ===指定Series的index===\n    d    4\n    b    7\n    a   -5\n    c    3\n    dtype: int64\n    Index(['d', 'b', 'a', 'c'], dtype='object')\n    -5\n    c    3\n    a   -5\n    d    6\n    dtype: int64\n    d    6\n    b    7\n    c    3\n    dtype: int64\n    True\n    False\n    \n    ===使用字典生成Series===\n    Ohio      45000\n    Texas     71000\n    Oregon    16000\n    Utah       5000\n    dtype: int64\n    \n    ===使用字典生成Series，并额外指定index，不匹配部分为NaN===\n    California        NaN\n    Ohio          45000.0\n    Oregon        16000.0\n    Texas         71000.0\n    dtype: float64\n    \n    ===Series相加，相同索引部分相加===\n    California         NaN\n    Ohio           90000.0\n    Oregon         32000.0\n    Texas         142000.0\n    Utah               NaN\n    dtype: float64\n    \n    ===指定Series及其索引的名字===\n    state\n    California        NaN\n    Ohio          45000.0\n    Oregon        16000.0\n    Texas         71000.0\n    Name: population, dtype: float64\n    \n    ===替换index===\n    Bob      4\n    Steve    7\n    Jeff    -5\n    Ryan     3\n    dtype: int64\n\n\n## 填充\n\n\n```python\n\n# -*- coding: utf-8 -*- \nimport numpy as np\nfrom numpy import nan as NA\nimport pandas as pd\nfrom pandas import Series, DataFrame, Index\n\nprint(\"===填充0===\")\ndf = DataFrame(np.random.randn(7, 3))\ndf.iloc[:4, 1] = NA\ndf.iloc[:2, 2] = NA\nprint(df.fillna(0))\ndf.fillna(0, inplace = True)\nprint(df)\nprint('')\n\nprint(\"===不同行列填充不同的值===\")\nprint(df.fillna({1:0.5, 3:-1}))  # 第3列不存在\nprint('')\n\nprint(\"===不同的填充方式===\")\ndf = DataFrame(np.random.randn(6, 3))\ndf.iloc[2:, 1] = NA\ndf.iloc[4:, 2] = NA\nprint(df)\nprint(df.fillna(method = 'ffill'))\nprint(df.fillna(method = 'ffill', limit = 2))\nprint('')\n\nprint(\"===用统计数据填充===\")\ndata = Series([1., NA, 3.5, NA, 7])\nprint(data.fillna(data.mean()))\n\n```\n\n    ===填充0===\n              0         1         2\n    0  0.619043  0.000000  0.000000\n    1  1.262121  0.000000  0.000000\n    2 -0.536828  0.000000  1.354608\n    3  0.273867  0.000000  1.046143\n    4  0.648504  0.366829 -0.122517\n    5  0.773085 -0.547392 -0.289962\n    6  0.070365 -1.258029  0.144977\n              0         1         2\n    0  0.619043  0.000000  0.000000\n    1  1.262121  0.000000  0.000000\n    2 -0.536828  0.000000  1.354608\n    3  0.273867  0.000000  1.046143\n    4  0.648504  0.366829 -0.122517\n    5  0.773085 -0.547392 -0.289962\n    6  0.070365 -1.258029  0.144977\n    \n    ===不同行列填充不同的值===\n              0         1         2\n    0  0.619043  0.000000  0.000000\n    1  1.262121  0.000000  0.000000\n    2 -0.536828  0.000000  1.354608\n    3  0.273867  0.000000  1.046143\n    4  0.648504  0.366829 -0.122517\n    5  0.773085 -0.547392 -0.289962\n    6  0.070365 -1.258029  0.144977\n    \n    ===不同的填充方式===\n              0         1         2\n    0  0.755876  1.438577  0.986349\n    1  0.457114 -0.435046 -0.365518\n    2  0.631733       NaN  1.537871\n    3  1.217393       NaN  0.636592\n    4 -1.095912       NaN       NaN\n    5 -1.314859       NaN       NaN\n              0         1         2\n    0  0.755876  1.438577  0.986349\n    1  0.457114 -0.435046 -0.365518\n    2  0.631733 -0.435046  1.537871\n    3  1.217393 -0.435046  0.636592\n    4 -1.095912 -0.435046  0.636592\n    5 -1.314859 -0.435046  0.636592\n              0         1         2\n    0  0.755876  1.438577  0.986349\n    1  0.457114 -0.435046 -0.365518\n    2  0.631733 -0.435046  1.537871\n    3  1.217393 -0.435046  0.636592\n    4 -1.095912       NaN  0.636592\n    5 -1.314859       NaN  0.636592\n    \n    ===用统计数据填充===\n    0    1.000000\n    1    3.833333\n    2    3.500000\n    3    3.833333\n    4    7.000000\n    dtype: float64\n\n\n## DataFrame\n\n\n```python\n# -*- coding: utf-8 -*- \nimport numpy as np\nfrom pandas import Series, DataFrame\n\nprint(\"===指定索引，在列中指定不存在的列，默认数据用NaN===\")\nframe2 = DataFrame(data,\n                    columns = ['year', 'state', 'pop', 'debt'],\n                    index = ['one', 'two', 'three', 'four', 'five'])\nprint(frame2)\nprint(frame2['state'])\nprint(frame2.year)\nprint(frame2.loc['three'])\nframe2['debt'] = 16.5 # 修改一整列\nprint(frame2)\nframe2.debt = np.arange(5)  # 用numpy数组修改元素\nprint(frame2)\nprint('')\n\nprint(\"===用Series指定要修改的索引及其对应的值，没有指定的默认数据用NaN===\")\nval = Series([-1.2, -1.5, -1.7], index = ['two', 'four', 'five'])\nframe2['debt'] = val\nprint(frame2)\nprint('')\n\nprint(\"===赋值给新列===\")\nframe2['eastern'] = (frame2.state == 'Ohio')  # 如果state等于Ohio为True\nprint(frame2)\nprint(frame2.columns)\nprint('')\n\nprint(\"===DataFrame转置===\")\npop = {'Nevada':{2001:2.4, 2002:2.9},\n        'Ohio':{2000:1.5, 2001:1.7, 2002:3.6}}\nframe3 = DataFrame(pop)\nprint(frame3)\nprint(frame3.T)\nprint('')\n\nprint(\"===指定索引顺序，以及使用切片初始化数据===\")\nprint(DataFrame(pop))\npdata = {'Ohio':frame3['Ohio'][:-1], 'Nevada':frame3['Nevada'][:2]}\nprint(DataFrame(pdata))\nprint('')\n\nprint(\"===指定索引和列的名称===\")\nframe3.index.name = 'year'\nframe3.columns.name = 'state'\nprint(frame3)\nprint(frame3.values)\nprint(frame2.values)\nprint('')\n\nprint(\"===stack===\")\nprint(frame3.stack())\n```\n\n    ===指定索引，在列中指定不存在的列，默认数据用NaN===\n           year   state  pop debt\n    one    2000    Ohio  1.5  NaN\n    two    2001    Ohio  1.7  NaN\n    three  2002    Ohio  3.6  NaN\n    four   2001  Nevada  2.4  NaN\n    five   2002  Nevada  2.9  NaN\n    one        Ohio\n    two        Ohio\n    three      Ohio\n    four     Nevada\n    five     Nevada\n    Name: state, dtype: object\n    one      2000\n    two      2001\n    three    2002\n    four     2001\n    five     2002\n    Name: year, dtype: int64\n    year     2002\n    state    Ohio\n    pop       3.6\n    debt      NaN\n    Name: three, dtype: object\n           year   state  pop  debt\n    one    2000    Ohio  1.5  16.5\n    two    2001    Ohio  1.7  16.5\n    three  2002    Ohio  3.6  16.5\n    four   2001  Nevada  2.4  16.5\n    five   2002  Nevada  2.9  16.5\n           year   state  pop  debt\n    one    2000    Ohio  1.5     0\n    two    2001    Ohio  1.7     1\n    three  2002    Ohio  3.6     2\n    four   2001  Nevada  2.4     3\n    five   2002  Nevada  2.9     4\n    \n    ===用Series指定要修改的索引及其对应的值，没有指定的默认数据用NaN===\n           year   state  pop  debt\n    one    2000    Ohio  1.5   NaN\n    two    2001    Ohio  1.7  -1.2\n    three  2002    Ohio  3.6   NaN\n    four   2001  Nevada  2.4  -1.5\n    five   2002  Nevada  2.9  -1.7\n    \n    ===赋值给新列===\n           year   state  pop  debt  eastern\n    one    2000    Ohio  1.5   NaN     True\n    two    2001    Ohio  1.7  -1.2     True\n    three  2002    Ohio  3.6   NaN     True\n    four   2001  Nevada  2.4  -1.5    False\n    five   2002  Nevada  2.9  -1.7    False\n    Index(['year', 'state', 'pop', 'debt', 'eastern'], dtype='object')\n    \n    ===DataFrame转置===\n          Nevada  Ohio\n    2000     NaN   1.5\n    2001     2.4   1.7\n    2002     2.9   3.6\n            2000  2001  2002\n    Nevada   NaN   2.4   2.9\n    Ohio     1.5   1.7   3.6\n    \n    ===指定索引顺序，以及使用切片初始化数据===\n          Nevada  Ohio\n    2000     NaN   1.5\n    2001     2.4   1.7\n    2002     2.9   3.6\n          Ohio  Nevada\n    2000   1.5     NaN\n    2001   1.7     2.4\n    \n    ===指定索引和列的名称===\n    state  Nevada  Ohio\n    year               \n    2000      NaN   1.5\n    2001      2.4   1.7\n    2002      2.9   3.6\n    [[nan 1.5]\n     [2.4 1.7]\n     [2.9 3.6]]\n    [[2000 'Ohio' 1.5 nan True]\n     [2001 'Ohio' 1.7 -1.2 True]\n     [2002 'Ohio' 3.6 nan True]\n     [2001 'Nevada' 2.4 -1.5 False]\n     [2002 'Nevada' 2.9 -1.7 False]]\n    \n    ===stack===\n    year  state \n    2000  Ohio      1.5\n    2001  Nevada    2.4\n          Ohio      1.7\n    2002  Nevada    2.9\n          Ohio      3.6\n    dtype: float64\n\n\n## Append, Join和Concatenate\n\n\n```python\ndf1 = pd.DataFrame({'apts': [55000, 60000],\n                   'cars': [200000, 300000],},\n                  index = ['Shanghai', 'Beijing'])\ndf2 = pd.DataFrame({'apts': [25000, 20000],\n                   'cars': [150000, 120000],},\n                  index = ['Hangzhou', 'Najing'])\ndf3 = pd.DataFrame({'apts': [30000, 10000],\n                   'cars': [180000, 100000],},\n                  index = ['Guangzhou', 'Chongqing'])\ndf4 = pd.DataFrame({'salaries': [10000, 30000, 30000, 20000, 15000],\n                  'cities': ['Suzhou', 'Beijing', 'Shanghai', 'Guangzhou', 'Tianjin']})\nprint(df1)\nprint(df2)\nprint(df3)\nprint(df4)\n```\n\n               apts    cars\n    Shanghai  55000  200000\n    Beijing   60000  300000\n               apts    cars\n    Hangzhou  25000  150000\n    Najing    20000  120000\n                apts    cars\n    Guangzhou  30000  180000\n    Chongqing  10000  100000\n       salaries     cities\n    0     10000     Suzhou\n    1     30000    Beijing\n    2     30000   Shanghai\n    3     20000  Guangzhou\n    4     15000    Tianjin\n\n\n\n```python\nprint(\"===concat===\")\nframes = [df1, df2, df3]\nresult = pd.concat(frames)\nprint(result)\nprint(\"\")\nresult2 = pd.concat(frames, keys=['x', 'y', 'z'])\nprint(result2)\nprint(\"\")\nprint(pd.concat([df1, df2], axis=1, sort=False))\n```\n\n    ===concat===\n                apts    cars\n    Shanghai   55000  200000\n    Beijing    60000  300000\n    Hangzhou   25000  150000\n    Najing     20000  120000\n    Guangzhou  30000  180000\n    Chongqing  10000  100000\n    \n                  apts    cars\n    x Shanghai   55000  200000\n      Beijing    60000  300000\n    y Hangzhou   25000  150000\n      Najing     20000  120000\n    z Guangzhou  30000  180000\n      Chongqing  10000  100000\n    \n                 apts      cars     apts      cars\n    Shanghai  55000.0  200000.0      NaN       NaN\n    Beijing   60000.0  300000.0      NaN       NaN\n    Hangzhou      NaN       NaN  25000.0  150000.0\n    Najing        NaN       NaN  20000.0  120000.0\n\n\n\n```python\nprint(\"===append===\")\nprint(df1.append(df2))\nprint(df1.append(df3))\n\n```\n\n    ===append===\n               apts    cars\n    Shanghai  55000  200000\n    Beijing   60000  300000\n    Hangzhou  25000  150000\n    Najing    20000  120000\n                apts    cars\n    Shanghai   55000  200000\n    Beijing    60000  300000\n    Guangzhou  30000  180000\n    Chongqing  10000  100000\n\n\n\n```python\nprint(\"===join===\")\nprint(df1.join(df4))\nprint(\"\")\nprint(df1.join(df4, how='right'))\nprint(\"\")\nprint(df1.join(df4, how='left'))\nprint(\"\")\nprint(df1.join(df4, how='inner'))\nprint(\"\")\nprint(df1.join(df4, how='outer'))\n```\n\n    ===join===\n               apts    cars  salaries cities\n    Shanghai  55000  200000       NaN    NaN\n    Beijing   60000  300000       NaN    NaN\n    \n       apts  cars  salaries     cities\n    0   NaN   NaN     10000     Suzhou\n    1   NaN   NaN     30000    Beijing\n    2   NaN   NaN     30000   Shanghai\n    3   NaN   NaN     20000  Guangzhou\n    4   NaN   NaN     15000    Tianjin\n    \n               apts    cars  salaries cities\n    Shanghai  55000  200000       NaN    NaN\n    Beijing   60000  300000       NaN    NaN\n    \n    Empty DataFrame\n    Columns: [apts, cars, salaries, cities]\n    Index: []\n    \n                 apts      cars  salaries     cities\n    Shanghai  55000.0  200000.0       NaN        NaN\n    Beijing   60000.0  300000.0       NaN        NaN\n    0             NaN       NaN   10000.0     Suzhou\n    1             NaN       NaN   30000.0    Beijing\n    2             NaN       NaN   30000.0   Shanghai\n    3             NaN       NaN   20000.0  Guangzhou\n    4             NaN       NaN   15000.0    Tianjin\n\n\n## groupby\n\n\n```python\nimport pandas as pd\nsalaries = pd.DataFrame({\n    'Name': ['July', 'Chu', 'Chu', 'Lin', 'July', 'July', 'Chu', 'July'],\n    'Year': [2016,2016,2016,2016,2017,2017,2017,2017],\n    'Salary': [10000,2000,4000,5000,18000,25000,3000,4000],\n    'Bonus': [3000,1000,1000,1200,4000,2300,500,1000]\n})\n\ngroup_by_name = salaries.groupby('Name')\ndisplay(group_by_name.sum())\n\ngroup_by_name_year = salaries.groupby(['Name', 'Year'])\ndisplay(group_by_name_year.sum())\ndisplay(group_by_name_year.size())\ndisplay(group_by_name_year.describe())\n```\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Year</th>\n      <th>Salary</th>\n      <th>Bonus</th>\n    </tr>\n    <tr>\n      <th>Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Chu</th>\n      <td>6049</td>\n      <td>9000</td>\n      <td>2500</td>\n    </tr>\n    <tr>\n      <th>July</th>\n      <td>8067</td>\n      <td>57000</td>\n      <td>10300</td>\n    </tr>\n    <tr>\n      <th>Lin</th>\n      <td>2016</td>\n      <td>5000</td>\n      <td>1200</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>Salary</th>\n      <th>Bonus</th>\n    </tr>\n    <tr>\n      <th>Name</th>\n      <th>Year</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Chu</th>\n      <th>2016</th>\n      <td>6000</td>\n      <td>2000</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>3000</td>\n      <td>500</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">July</th>\n      <th>2016</th>\n      <td>10000</td>\n      <td>3000</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>47000</td>\n      <td>7300</td>\n    </tr>\n    <tr>\n      <th>Lin</th>\n      <th>2016</th>\n      <td>5000</td>\n      <td>1200</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n    Name  Year\n    Chu   2016    2\n          2017    1\n    July  2016    1\n          2017    3\n    Lin   2016    1\n    dtype: int64\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th></th>\n      <th colspan=\"8\" halign=\"left\">Bonus</th>\n      <th colspan=\"8\" halign=\"left\">Salary</th>\n    </tr>\n    <tr>\n      <th></th>\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n    <tr>\n      <th>Name</th>\n      <th>Year</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Chu</th>\n      <th>2016</th>\n      <td>2.0</td>\n      <td>1000.000000</td>\n      <td>0.00000</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>2.0</td>\n      <td>3000.000000</td>\n      <td>1414.213562</td>\n      <td>2000.0</td>\n      <td>2500.0</td>\n      <td>3000.0</td>\n      <td>3500.0</td>\n      <td>4000.0</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>1.0</td>\n      <td>500.000000</td>\n      <td>NaN</td>\n      <td>500.0</td>\n      <td>500.0</td>\n      <td>500.0</td>\n      <td>500.0</td>\n      <td>500.0</td>\n      <td>1.0</td>\n      <td>3000.000000</td>\n      <td>NaN</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">July</th>\n      <th>2016</th>\n      <td>1.0</td>\n      <td>3000.000000</td>\n      <td>NaN</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>1.0</td>\n      <td>10000.000000</td>\n      <td>NaN</td>\n      <td>10000.0</td>\n      <td>10000.0</td>\n      <td>10000.0</td>\n      <td>10000.0</td>\n      <td>10000.0</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>3.0</td>\n      <td>2433.333333</td>\n      <td>1504.43788</td>\n      <td>1000.0</td>\n      <td>1650.0</td>\n      <td>2300.0</td>\n      <td>3150.0</td>\n      <td>4000.0</td>\n      <td>3.0</td>\n      <td>15666.666667</td>\n      <td>10692.676622</td>\n      <td>4000.0</td>\n      <td>11000.0</td>\n      <td>18000.0</td>\n      <td>21500.0</td>\n      <td>25000.0</td>\n    </tr>\n    <tr>\n      <th>Lin</th>\n      <th>2016</th>\n      <td>1.0</td>\n      <td>1200.000000</td>\n      <td>NaN</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>1.0</td>\n      <td>5000.000000</td>\n      <td>NaN</td>\n      <td>5000.0</td>\n      <td>5000.0</td>\n      <td>5000.0</td>\n      <td>5000.0</td>\n      <td>5000.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n","source":"_posts/2019-06-28_Pandas.md","raw":"---\ntitle: Pandas\ncategories:\n  - Python\nabbrlink: 6703\ndate: 2019-06-28 00:00:00\n---\n\n## 基本设置\n\n\n```python\npd.set_option(\"max_columns\", 50)\n```\n\n## 数据缺失检查\n\n\n```python\napts=pd.Series([\"Hangzhou\", \"Beijing\", \"Shenzhen\"])\nprint(apts.notnull())\nprint(apts.isnull())\n```\n\n    0    True\n    1    True\n    2    True\n    dtype: bool\n    0    False\n    1    False\n    2    False\n    dtype: bool\n\n\n## Series\n\n\n```python\n# -*- coding: utf-8 -*- \nfrom pandas import Series\n\nprint(\"===用数组生成Series===\")\nobj = Series([4, 7, -5, 3])\nprint(obj)\nprint(obj.values)\nprint(obj.index)\nprint(\"\")\n\nprint(\"===指定Series的index===\")\nobj2 = Series([4, 7, -5, 3], index = ['d', 'b', 'a', 'c'])\nprint(obj2)\nprint(obj2.index)\nprint(obj2['a'])\nobj2['d'] = 6\nprint(obj2[['c', 'a', 'd']])\nprint(obj2[obj2 > 0])  # 找出大于0的元素\nprint('b' in obj2) # 判断索引是否存在\nprint('e' in obj2)\nprint(\"\")\n\nprint(\"===使用字典生成Series===\")\nsdata = {'Ohio':45000, 'Texas':71000, 'Oregon':16000, 'Utah':5000}\nobj3 = Series(sdata)\nprint(obj3)\nprint(\"\")\n\nprint(\"===使用字典生成Series，并额外指定index，不匹配部分为NaN===\")\nstates = ['California', 'Ohio', 'Oregon', 'Texas']\nobj4 = Series(sdata, index = states)\nprint(obj4)\nprint(\"\")\n\nprint(\"===Series相加，相同索引部分相加===\")\nprint(obj3 + obj4)\nprint(\"\")\n\nprint(\"===指定Series及其索引的名字===\")\nobj4.name = 'population'\nobj4.index.name = 'state'\nprint( obj4)\nprint(\"\")\n\nprint(\"===替换index===\")\nobj.index = ['Bob', 'Steve', 'Jeff', 'Ryan']\nprint(obj)\n```\n\n    ===用数组生成Series===\n    0    4\n    1    7\n    2   -5\n    3    3\n    dtype: int64\n    [ 4  7 -5  3]\n    RangeIndex(start=0, stop=4, step=1)\n    \n    ===指定Series的index===\n    d    4\n    b    7\n    a   -5\n    c    3\n    dtype: int64\n    Index(['d', 'b', 'a', 'c'], dtype='object')\n    -5\n    c    3\n    a   -5\n    d    6\n    dtype: int64\n    d    6\n    b    7\n    c    3\n    dtype: int64\n    True\n    False\n    \n    ===使用字典生成Series===\n    Ohio      45000\n    Texas     71000\n    Oregon    16000\n    Utah       5000\n    dtype: int64\n    \n    ===使用字典生成Series，并额外指定index，不匹配部分为NaN===\n    California        NaN\n    Ohio          45000.0\n    Oregon        16000.0\n    Texas         71000.0\n    dtype: float64\n    \n    ===Series相加，相同索引部分相加===\n    California         NaN\n    Ohio           90000.0\n    Oregon         32000.0\n    Texas         142000.0\n    Utah               NaN\n    dtype: float64\n    \n    ===指定Series及其索引的名字===\n    state\n    California        NaN\n    Ohio          45000.0\n    Oregon        16000.0\n    Texas         71000.0\n    Name: population, dtype: float64\n    \n    ===替换index===\n    Bob      4\n    Steve    7\n    Jeff    -5\n    Ryan     3\n    dtype: int64\n\n\n## 填充\n\n\n```python\n\n# -*- coding: utf-8 -*- \nimport numpy as np\nfrom numpy import nan as NA\nimport pandas as pd\nfrom pandas import Series, DataFrame, Index\n\nprint(\"===填充0===\")\ndf = DataFrame(np.random.randn(7, 3))\ndf.iloc[:4, 1] = NA\ndf.iloc[:2, 2] = NA\nprint(df.fillna(0))\ndf.fillna(0, inplace = True)\nprint(df)\nprint('')\n\nprint(\"===不同行列填充不同的值===\")\nprint(df.fillna({1:0.5, 3:-1}))  # 第3列不存在\nprint('')\n\nprint(\"===不同的填充方式===\")\ndf = DataFrame(np.random.randn(6, 3))\ndf.iloc[2:, 1] = NA\ndf.iloc[4:, 2] = NA\nprint(df)\nprint(df.fillna(method = 'ffill'))\nprint(df.fillna(method = 'ffill', limit = 2))\nprint('')\n\nprint(\"===用统计数据填充===\")\ndata = Series([1., NA, 3.5, NA, 7])\nprint(data.fillna(data.mean()))\n\n```\n\n    ===填充0===\n              0         1         2\n    0  0.619043  0.000000  0.000000\n    1  1.262121  0.000000  0.000000\n    2 -0.536828  0.000000  1.354608\n    3  0.273867  0.000000  1.046143\n    4  0.648504  0.366829 -0.122517\n    5  0.773085 -0.547392 -0.289962\n    6  0.070365 -1.258029  0.144977\n              0         1         2\n    0  0.619043  0.000000  0.000000\n    1  1.262121  0.000000  0.000000\n    2 -0.536828  0.000000  1.354608\n    3  0.273867  0.000000  1.046143\n    4  0.648504  0.366829 -0.122517\n    5  0.773085 -0.547392 -0.289962\n    6  0.070365 -1.258029  0.144977\n    \n    ===不同行列填充不同的值===\n              0         1         2\n    0  0.619043  0.000000  0.000000\n    1  1.262121  0.000000  0.000000\n    2 -0.536828  0.000000  1.354608\n    3  0.273867  0.000000  1.046143\n    4  0.648504  0.366829 -0.122517\n    5  0.773085 -0.547392 -0.289962\n    6  0.070365 -1.258029  0.144977\n    \n    ===不同的填充方式===\n              0         1         2\n    0  0.755876  1.438577  0.986349\n    1  0.457114 -0.435046 -0.365518\n    2  0.631733       NaN  1.537871\n    3  1.217393       NaN  0.636592\n    4 -1.095912       NaN       NaN\n    5 -1.314859       NaN       NaN\n              0         1         2\n    0  0.755876  1.438577  0.986349\n    1  0.457114 -0.435046 -0.365518\n    2  0.631733 -0.435046  1.537871\n    3  1.217393 -0.435046  0.636592\n    4 -1.095912 -0.435046  0.636592\n    5 -1.314859 -0.435046  0.636592\n              0         1         2\n    0  0.755876  1.438577  0.986349\n    1  0.457114 -0.435046 -0.365518\n    2  0.631733 -0.435046  1.537871\n    3  1.217393 -0.435046  0.636592\n    4 -1.095912       NaN  0.636592\n    5 -1.314859       NaN  0.636592\n    \n    ===用统计数据填充===\n    0    1.000000\n    1    3.833333\n    2    3.500000\n    3    3.833333\n    4    7.000000\n    dtype: float64\n\n\n## DataFrame\n\n\n```python\n# -*- coding: utf-8 -*- \nimport numpy as np\nfrom pandas import Series, DataFrame\n\nprint(\"===指定索引，在列中指定不存在的列，默认数据用NaN===\")\nframe2 = DataFrame(data,\n                    columns = ['year', 'state', 'pop', 'debt'],\n                    index = ['one', 'two', 'three', 'four', 'five'])\nprint(frame2)\nprint(frame2['state'])\nprint(frame2.year)\nprint(frame2.loc['three'])\nframe2['debt'] = 16.5 # 修改一整列\nprint(frame2)\nframe2.debt = np.arange(5)  # 用numpy数组修改元素\nprint(frame2)\nprint('')\n\nprint(\"===用Series指定要修改的索引及其对应的值，没有指定的默认数据用NaN===\")\nval = Series([-1.2, -1.5, -1.7], index = ['two', 'four', 'five'])\nframe2['debt'] = val\nprint(frame2)\nprint('')\n\nprint(\"===赋值给新列===\")\nframe2['eastern'] = (frame2.state == 'Ohio')  # 如果state等于Ohio为True\nprint(frame2)\nprint(frame2.columns)\nprint('')\n\nprint(\"===DataFrame转置===\")\npop = {'Nevada':{2001:2.4, 2002:2.9},\n        'Ohio':{2000:1.5, 2001:1.7, 2002:3.6}}\nframe3 = DataFrame(pop)\nprint(frame3)\nprint(frame3.T)\nprint('')\n\nprint(\"===指定索引顺序，以及使用切片初始化数据===\")\nprint(DataFrame(pop))\npdata = {'Ohio':frame3['Ohio'][:-1], 'Nevada':frame3['Nevada'][:2]}\nprint(DataFrame(pdata))\nprint('')\n\nprint(\"===指定索引和列的名称===\")\nframe3.index.name = 'year'\nframe3.columns.name = 'state'\nprint(frame3)\nprint(frame3.values)\nprint(frame2.values)\nprint('')\n\nprint(\"===stack===\")\nprint(frame3.stack())\n```\n\n    ===指定索引，在列中指定不存在的列，默认数据用NaN===\n           year   state  pop debt\n    one    2000    Ohio  1.5  NaN\n    two    2001    Ohio  1.7  NaN\n    three  2002    Ohio  3.6  NaN\n    four   2001  Nevada  2.4  NaN\n    five   2002  Nevada  2.9  NaN\n    one        Ohio\n    two        Ohio\n    three      Ohio\n    four     Nevada\n    five     Nevada\n    Name: state, dtype: object\n    one      2000\n    two      2001\n    three    2002\n    four     2001\n    five     2002\n    Name: year, dtype: int64\n    year     2002\n    state    Ohio\n    pop       3.6\n    debt      NaN\n    Name: three, dtype: object\n           year   state  pop  debt\n    one    2000    Ohio  1.5  16.5\n    two    2001    Ohio  1.7  16.5\n    three  2002    Ohio  3.6  16.5\n    four   2001  Nevada  2.4  16.5\n    five   2002  Nevada  2.9  16.5\n           year   state  pop  debt\n    one    2000    Ohio  1.5     0\n    two    2001    Ohio  1.7     1\n    three  2002    Ohio  3.6     2\n    four   2001  Nevada  2.4     3\n    five   2002  Nevada  2.9     4\n    \n    ===用Series指定要修改的索引及其对应的值，没有指定的默认数据用NaN===\n           year   state  pop  debt\n    one    2000    Ohio  1.5   NaN\n    two    2001    Ohio  1.7  -1.2\n    three  2002    Ohio  3.6   NaN\n    four   2001  Nevada  2.4  -1.5\n    five   2002  Nevada  2.9  -1.7\n    \n    ===赋值给新列===\n           year   state  pop  debt  eastern\n    one    2000    Ohio  1.5   NaN     True\n    two    2001    Ohio  1.7  -1.2     True\n    three  2002    Ohio  3.6   NaN     True\n    four   2001  Nevada  2.4  -1.5    False\n    five   2002  Nevada  2.9  -1.7    False\n    Index(['year', 'state', 'pop', 'debt', 'eastern'], dtype='object')\n    \n    ===DataFrame转置===\n          Nevada  Ohio\n    2000     NaN   1.5\n    2001     2.4   1.7\n    2002     2.9   3.6\n            2000  2001  2002\n    Nevada   NaN   2.4   2.9\n    Ohio     1.5   1.7   3.6\n    \n    ===指定索引顺序，以及使用切片初始化数据===\n          Nevada  Ohio\n    2000     NaN   1.5\n    2001     2.4   1.7\n    2002     2.9   3.6\n          Ohio  Nevada\n    2000   1.5     NaN\n    2001   1.7     2.4\n    \n    ===指定索引和列的名称===\n    state  Nevada  Ohio\n    year               \n    2000      NaN   1.5\n    2001      2.4   1.7\n    2002      2.9   3.6\n    [[nan 1.5]\n     [2.4 1.7]\n     [2.9 3.6]]\n    [[2000 'Ohio' 1.5 nan True]\n     [2001 'Ohio' 1.7 -1.2 True]\n     [2002 'Ohio' 3.6 nan True]\n     [2001 'Nevada' 2.4 -1.5 False]\n     [2002 'Nevada' 2.9 -1.7 False]]\n    \n    ===stack===\n    year  state \n    2000  Ohio      1.5\n    2001  Nevada    2.4\n          Ohio      1.7\n    2002  Nevada    2.9\n          Ohio      3.6\n    dtype: float64\n\n\n## Append, Join和Concatenate\n\n\n```python\ndf1 = pd.DataFrame({'apts': [55000, 60000],\n                   'cars': [200000, 300000],},\n                  index = ['Shanghai', 'Beijing'])\ndf2 = pd.DataFrame({'apts': [25000, 20000],\n                   'cars': [150000, 120000],},\n                  index = ['Hangzhou', 'Najing'])\ndf3 = pd.DataFrame({'apts': [30000, 10000],\n                   'cars': [180000, 100000],},\n                  index = ['Guangzhou', 'Chongqing'])\ndf4 = pd.DataFrame({'salaries': [10000, 30000, 30000, 20000, 15000],\n                  'cities': ['Suzhou', 'Beijing', 'Shanghai', 'Guangzhou', 'Tianjin']})\nprint(df1)\nprint(df2)\nprint(df3)\nprint(df4)\n```\n\n               apts    cars\n    Shanghai  55000  200000\n    Beijing   60000  300000\n               apts    cars\n    Hangzhou  25000  150000\n    Najing    20000  120000\n                apts    cars\n    Guangzhou  30000  180000\n    Chongqing  10000  100000\n       salaries     cities\n    0     10000     Suzhou\n    1     30000    Beijing\n    2     30000   Shanghai\n    3     20000  Guangzhou\n    4     15000    Tianjin\n\n\n\n```python\nprint(\"===concat===\")\nframes = [df1, df2, df3]\nresult = pd.concat(frames)\nprint(result)\nprint(\"\")\nresult2 = pd.concat(frames, keys=['x', 'y', 'z'])\nprint(result2)\nprint(\"\")\nprint(pd.concat([df1, df2], axis=1, sort=False))\n```\n\n    ===concat===\n                apts    cars\n    Shanghai   55000  200000\n    Beijing    60000  300000\n    Hangzhou   25000  150000\n    Najing     20000  120000\n    Guangzhou  30000  180000\n    Chongqing  10000  100000\n    \n                  apts    cars\n    x Shanghai   55000  200000\n      Beijing    60000  300000\n    y Hangzhou   25000  150000\n      Najing     20000  120000\n    z Guangzhou  30000  180000\n      Chongqing  10000  100000\n    \n                 apts      cars     apts      cars\n    Shanghai  55000.0  200000.0      NaN       NaN\n    Beijing   60000.0  300000.0      NaN       NaN\n    Hangzhou      NaN       NaN  25000.0  150000.0\n    Najing        NaN       NaN  20000.0  120000.0\n\n\n\n```python\nprint(\"===append===\")\nprint(df1.append(df2))\nprint(df1.append(df3))\n\n```\n\n    ===append===\n               apts    cars\n    Shanghai  55000  200000\n    Beijing   60000  300000\n    Hangzhou  25000  150000\n    Najing    20000  120000\n                apts    cars\n    Shanghai   55000  200000\n    Beijing    60000  300000\n    Guangzhou  30000  180000\n    Chongqing  10000  100000\n\n\n\n```python\nprint(\"===join===\")\nprint(df1.join(df4))\nprint(\"\")\nprint(df1.join(df4, how='right'))\nprint(\"\")\nprint(df1.join(df4, how='left'))\nprint(\"\")\nprint(df1.join(df4, how='inner'))\nprint(\"\")\nprint(df1.join(df4, how='outer'))\n```\n\n    ===join===\n               apts    cars  salaries cities\n    Shanghai  55000  200000       NaN    NaN\n    Beijing   60000  300000       NaN    NaN\n    \n       apts  cars  salaries     cities\n    0   NaN   NaN     10000     Suzhou\n    1   NaN   NaN     30000    Beijing\n    2   NaN   NaN     30000   Shanghai\n    3   NaN   NaN     20000  Guangzhou\n    4   NaN   NaN     15000    Tianjin\n    \n               apts    cars  salaries cities\n    Shanghai  55000  200000       NaN    NaN\n    Beijing   60000  300000       NaN    NaN\n    \n    Empty DataFrame\n    Columns: [apts, cars, salaries, cities]\n    Index: []\n    \n                 apts      cars  salaries     cities\n    Shanghai  55000.0  200000.0       NaN        NaN\n    Beijing   60000.0  300000.0       NaN        NaN\n    0             NaN       NaN   10000.0     Suzhou\n    1             NaN       NaN   30000.0    Beijing\n    2             NaN       NaN   30000.0   Shanghai\n    3             NaN       NaN   20000.0  Guangzhou\n    4             NaN       NaN   15000.0    Tianjin\n\n\n## groupby\n\n\n```python\nimport pandas as pd\nsalaries = pd.DataFrame({\n    'Name': ['July', 'Chu', 'Chu', 'Lin', 'July', 'July', 'Chu', 'July'],\n    'Year': [2016,2016,2016,2016,2017,2017,2017,2017],\n    'Salary': [10000,2000,4000,5000,18000,25000,3000,4000],\n    'Bonus': [3000,1000,1000,1200,4000,2300,500,1000]\n})\n\ngroup_by_name = salaries.groupby('Name')\ndisplay(group_by_name.sum())\n\ngroup_by_name_year = salaries.groupby(['Name', 'Year'])\ndisplay(group_by_name_year.sum())\ndisplay(group_by_name_year.size())\ndisplay(group_by_name_year.describe())\n```\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Year</th>\n      <th>Salary</th>\n      <th>Bonus</th>\n    </tr>\n    <tr>\n      <th>Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Chu</th>\n      <td>6049</td>\n      <td>9000</td>\n      <td>2500</td>\n    </tr>\n    <tr>\n      <th>July</th>\n      <td>8067</td>\n      <td>57000</td>\n      <td>10300</td>\n    </tr>\n    <tr>\n      <th>Lin</th>\n      <td>2016</td>\n      <td>5000</td>\n      <td>1200</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>Salary</th>\n      <th>Bonus</th>\n    </tr>\n    <tr>\n      <th>Name</th>\n      <th>Year</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Chu</th>\n      <th>2016</th>\n      <td>6000</td>\n      <td>2000</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>3000</td>\n      <td>500</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">July</th>\n      <th>2016</th>\n      <td>10000</td>\n      <td>3000</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>47000</td>\n      <td>7300</td>\n    </tr>\n    <tr>\n      <th>Lin</th>\n      <th>2016</th>\n      <td>5000</td>\n      <td>1200</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n    Name  Year\n    Chu   2016    2\n          2017    1\n    July  2016    1\n          2017    3\n    Lin   2016    1\n    dtype: int64\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th></th>\n      <th colspan=\"8\" halign=\"left\">Bonus</th>\n      <th colspan=\"8\" halign=\"left\">Salary</th>\n    </tr>\n    <tr>\n      <th></th>\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n    <tr>\n      <th>Name</th>\n      <th>Year</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Chu</th>\n      <th>2016</th>\n      <td>2.0</td>\n      <td>1000.000000</td>\n      <td>0.00000</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>2.0</td>\n      <td>3000.000000</td>\n      <td>1414.213562</td>\n      <td>2000.0</td>\n      <td>2500.0</td>\n      <td>3000.0</td>\n      <td>3500.0</td>\n      <td>4000.0</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>1.0</td>\n      <td>500.000000</td>\n      <td>NaN</td>\n      <td>500.0</td>\n      <td>500.0</td>\n      <td>500.0</td>\n      <td>500.0</td>\n      <td>500.0</td>\n      <td>1.0</td>\n      <td>3000.000000</td>\n      <td>NaN</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">July</th>\n      <th>2016</th>\n      <td>1.0</td>\n      <td>3000.000000</td>\n      <td>NaN</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>1.0</td>\n      <td>10000.000000</td>\n      <td>NaN</td>\n      <td>10000.0</td>\n      <td>10000.0</td>\n      <td>10000.0</td>\n      <td>10000.0</td>\n      <td>10000.0</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>3.0</td>\n      <td>2433.333333</td>\n      <td>1504.43788</td>\n      <td>1000.0</td>\n      <td>1650.0</td>\n      <td>2300.0</td>\n      <td>3150.0</td>\n      <td>4000.0</td>\n      <td>3.0</td>\n      <td>15666.666667</td>\n      <td>10692.676622</td>\n      <td>4000.0</td>\n      <td>11000.0</td>\n      <td>18000.0</td>\n      <td>21500.0</td>\n      <td>25000.0</td>\n    </tr>\n    <tr>\n      <th>Lin</th>\n      <th>2016</th>\n      <td>1.0</td>\n      <td>1200.000000</td>\n      <td>NaN</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>1.0</td>\n      <td>5000.000000</td>\n      <td>NaN</td>\n      <td>5000.0</td>\n      <td>5000.0</td>\n      <td>5000.0</td>\n      <td>5000.0</td>\n      <td>5000.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n","slug":"2019-06-28_Pandas","published":1,"updated":"2021-04-06T13:57:34.574Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5rl002f9ohz5m58b4du","content":"<h2 id=\"基本设置\"><a href=\"#基本设置\" class=\"headerlink\" title=\"基本设置\"></a>基本设置</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pd.set_option(<span class=\"string\">&quot;max_columns&quot;</span>, <span class=\"number\">50</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据缺失检查\"><a href=\"#数据缺失检查\" class=\"headerlink\" title=\"数据缺失检查\"></a>数据缺失检查</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apts=pd.Series([<span class=\"string\">&quot;Hangzhou&quot;</span>, <span class=\"string\">&quot;Beijing&quot;</span>, <span class=\"string\">&quot;Shenzhen&quot;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(apts.notnull())</span><br><span class=\"line\"><span class=\"built_in\">print</span>(apts.isnull())</span><br></pre></td></tr></table></figure>\n<pre><code>0    True\n1    True\n2    True\ndtype: bool\n0    False\n1    False\n2    False\ndtype: bool\n</code></pre><h2 id=\"Series\"><a href=\"#Series\" class=\"headerlink\" title=\"Series\"></a>Series</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*- </span></span><br><span class=\"line\"><span class=\"keyword\">from</span> pandas <span class=\"keyword\">import</span> Series</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===用数组生成Series===&quot;</span>)</span><br><span class=\"line\">obj = Series([<span class=\"number\">4</span>, <span class=\"number\">7</span>, -<span class=\"number\">5</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj.values)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj.index)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===指定Series的index===&quot;</span>)</span><br><span class=\"line\">obj2 = Series([<span class=\"number\">4</span>, <span class=\"number\">7</span>, -<span class=\"number\">5</span>, <span class=\"number\">3</span>], index = [<span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj2.index)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj2[<span class=\"string\">&#x27;a&#x27;</span>])</span><br><span class=\"line\">obj2[<span class=\"string\">&#x27;d&#x27;</span>] = <span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj2[[<span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj2[obj2 &gt; <span class=\"number\">0</span>])  <span class=\"comment\"># 找出大于0的元素</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;b&#x27;</span> <span class=\"keyword\">in</span> obj2) <span class=\"comment\"># 判断索引是否存在</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;e&#x27;</span> <span class=\"keyword\">in</span> obj2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===使用字典生成Series===&quot;</span>)</span><br><span class=\"line\">sdata = &#123;<span class=\"string\">&#x27;Ohio&#x27;</span>:<span class=\"number\">45000</span>, <span class=\"string\">&#x27;Texas&#x27;</span>:<span class=\"number\">71000</span>, <span class=\"string\">&#x27;Oregon&#x27;</span>:<span class=\"number\">16000</span>, <span class=\"string\">&#x27;Utah&#x27;</span>:<span class=\"number\">5000</span>&#125;</span><br><span class=\"line\">obj3 = Series(sdata)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj3)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===使用字典生成Series，并额外指定index，不匹配部分为NaN===&quot;</span>)</span><br><span class=\"line\">states = [<span class=\"string\">&#x27;California&#x27;</span>, <span class=\"string\">&#x27;Ohio&#x27;</span>, <span class=\"string\">&#x27;Oregon&#x27;</span>, <span class=\"string\">&#x27;Texas&#x27;</span>]</span><br><span class=\"line\">obj4 = Series(sdata, index = states)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj4)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===Series相加，相同索引部分相加===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj3 + obj4)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===指定Series及其索引的名字===&quot;</span>)</span><br><span class=\"line\">obj4.name = <span class=\"string\">&#x27;population&#x27;</span></span><br><span class=\"line\">obj4.index.name = <span class=\"string\">&#x27;state&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>( obj4)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===替换index===&quot;</span>)</span><br><span class=\"line\">obj.index = [<span class=\"string\">&#x27;Bob&#x27;</span>, <span class=\"string\">&#x27;Steve&#x27;</span>, <span class=\"string\">&#x27;Jeff&#x27;</span>, <span class=\"string\">&#x27;Ryan&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj)</span><br></pre></td></tr></table></figure>\n<pre><code>===用数组生成Series===\n0    4\n1    7\n2   -5\n3    3\ndtype: int64\n[ 4  7 -5  3]\nRangeIndex(start=0, stop=4, step=1)\n\n===指定Series的index===\nd    4\nb    7\na   -5\nc    3\ndtype: int64\nIndex([&#39;d&#39;, &#39;b&#39;, &#39;a&#39;, &#39;c&#39;], dtype=&#39;object&#39;)\n-5\nc    3\na   -5\nd    6\ndtype: int64\nd    6\nb    7\nc    3\ndtype: int64\nTrue\nFalse\n\n===使用字典生成Series===\nOhio      45000\nTexas     71000\nOregon    16000\nUtah       5000\ndtype: int64\n\n===使用字典生成Series，并额外指定index，不匹配部分为NaN===\nCalifornia        NaN\nOhio          45000.0\nOregon        16000.0\nTexas         71000.0\ndtype: float64\n\n===Series相加，相同索引部分相加===\nCalifornia         NaN\nOhio           90000.0\nOregon         32000.0\nTexas         142000.0\nUtah               NaN\ndtype: float64\n\n===指定Series及其索引的名字===\nstate\nCalifornia        NaN\nOhio          45000.0\nOregon        16000.0\nTexas         71000.0\nName: population, dtype: float64\n\n===替换index===\nBob      4\nSteve    7\nJeff    -5\nRyan     3\ndtype: int64\n</code></pre><h2 id=\"填充\"><a href=\"#填充\" class=\"headerlink\" title=\"填充\"></a>填充</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*- </span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> nan <span class=\"keyword\">as</span> NA</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">from</span> pandas <span class=\"keyword\">import</span> Series, DataFrame, Index</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===填充0===&quot;</span>)</span><br><span class=\"line\">df = DataFrame(np.random.randn(<span class=\"number\">7</span>, <span class=\"number\">3</span>))</span><br><span class=\"line\">df.iloc[:<span class=\"number\">4</span>, <span class=\"number\">1</span>] = NA</span><br><span class=\"line\">df.iloc[:<span class=\"number\">2</span>, <span class=\"number\">2</span>] = NA</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df.fillna(<span class=\"number\">0</span>))</span><br><span class=\"line\">df.fillna(<span class=\"number\">0</span>, inplace = <span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===不同行列填充不同的值===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df.fillna(&#123;<span class=\"number\">1</span>:<span class=\"number\">0.5</span>, <span class=\"number\">3</span>:-<span class=\"number\">1</span>&#125;))  <span class=\"comment\"># 第3列不存在</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===不同的填充方式===&quot;</span>)</span><br><span class=\"line\">df = DataFrame(np.random.randn(<span class=\"number\">6</span>, <span class=\"number\">3</span>))</span><br><span class=\"line\">df.iloc[<span class=\"number\">2</span>:, <span class=\"number\">1</span>] = NA</span><br><span class=\"line\">df.iloc[<span class=\"number\">4</span>:, <span class=\"number\">2</span>] = NA</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df.fillna(method = <span class=\"string\">&#x27;ffill&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df.fillna(method = <span class=\"string\">&#x27;ffill&#x27;</span>, limit = <span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===用统计数据填充===&quot;</span>)</span><br><span class=\"line\">data = Series([<span class=\"number\">1.</span>, NA, <span class=\"number\">3.5</span>, NA, <span class=\"number\">7</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(data.fillna(data.mean()))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>===填充0===\n          0         1         2\n0  0.619043  0.000000  0.000000\n1  1.262121  0.000000  0.000000\n2 -0.536828  0.000000  1.354608\n3  0.273867  0.000000  1.046143\n4  0.648504  0.366829 -0.122517\n5  0.773085 -0.547392 -0.289962\n6  0.070365 -1.258029  0.144977\n          0         1         2\n0  0.619043  0.000000  0.000000\n1  1.262121  0.000000  0.000000\n2 -0.536828  0.000000  1.354608\n3  0.273867  0.000000  1.046143\n4  0.648504  0.366829 -0.122517\n5  0.773085 -0.547392 -0.289962\n6  0.070365 -1.258029  0.144977\n\n===不同行列填充不同的值===\n          0         1         2\n0  0.619043  0.000000  0.000000\n1  1.262121  0.000000  0.000000\n2 -0.536828  0.000000  1.354608\n3  0.273867  0.000000  1.046143\n4  0.648504  0.366829 -0.122517\n5  0.773085 -0.547392 -0.289962\n6  0.070365 -1.258029  0.144977\n\n===不同的填充方式===\n          0         1         2\n0  0.755876  1.438577  0.986349\n1  0.457114 -0.435046 -0.365518\n2  0.631733       NaN  1.537871\n3  1.217393       NaN  0.636592\n4 -1.095912       NaN       NaN\n5 -1.314859       NaN       NaN\n          0         1         2\n0  0.755876  1.438577  0.986349\n1  0.457114 -0.435046 -0.365518\n2  0.631733 -0.435046  1.537871\n3  1.217393 -0.435046  0.636592\n4 -1.095912 -0.435046  0.636592\n5 -1.314859 -0.435046  0.636592\n          0         1         2\n0  0.755876  1.438577  0.986349\n1  0.457114 -0.435046 -0.365518\n2  0.631733 -0.435046  1.537871\n3  1.217393 -0.435046  0.636592\n4 -1.095912       NaN  0.636592\n5 -1.314859       NaN  0.636592\n\n===用统计数据填充===\n0    1.000000\n1    3.833333\n2    3.500000\n3    3.833333\n4    7.000000\ndtype: float64\n</code></pre><h2 id=\"DataFrame\"><a href=\"#DataFrame\" class=\"headerlink\" title=\"DataFrame\"></a>DataFrame</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*- </span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> pandas <span class=\"keyword\">import</span> Series, DataFrame</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===指定索引，在列中指定不存在的列，默认数据用NaN===&quot;</span>)</span><br><span class=\"line\">frame2 = DataFrame(data,</span><br><span class=\"line\">                    columns = [<span class=\"string\">&#x27;year&#x27;</span>, <span class=\"string\">&#x27;state&#x27;</span>, <span class=\"string\">&#x27;pop&#x27;</span>, <span class=\"string\">&#x27;debt&#x27;</span>],</span><br><span class=\"line\">                    index = [<span class=\"string\">&#x27;one&#x27;</span>, <span class=\"string\">&#x27;two&#x27;</span>, <span class=\"string\">&#x27;three&#x27;</span>, <span class=\"string\">&#x27;four&#x27;</span>, <span class=\"string\">&#x27;five&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2[<span class=\"string\">&#x27;state&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2.year)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2.loc[<span class=\"string\">&#x27;three&#x27;</span>])</span><br><span class=\"line\">frame2[<span class=\"string\">&#x27;debt&#x27;</span>] = <span class=\"number\">16.5</span> <span class=\"comment\"># 修改一整列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2)</span><br><span class=\"line\">frame2.debt = np.arange(<span class=\"number\">5</span>)  <span class=\"comment\"># 用numpy数组修改元素</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===用Series指定要修改的索引及其对应的值，没有指定的默认数据用NaN===&quot;</span>)</span><br><span class=\"line\">val = Series([-<span class=\"number\">1.2</span>, -<span class=\"number\">1.5</span>, -<span class=\"number\">1.7</span>], index = [<span class=\"string\">&#x27;two&#x27;</span>, <span class=\"string\">&#x27;four&#x27;</span>, <span class=\"string\">&#x27;five&#x27;</span>])</span><br><span class=\"line\">frame2[<span class=\"string\">&#x27;debt&#x27;</span>] = val</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===赋值给新列===&quot;</span>)</span><br><span class=\"line\">frame2[<span class=\"string\">&#x27;eastern&#x27;</span>] = (frame2.state == <span class=\"string\">&#x27;Ohio&#x27;</span>)  <span class=\"comment\"># 如果state等于Ohio为True</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2.columns)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===DataFrame转置===&quot;</span>)</span><br><span class=\"line\">pop = &#123;<span class=\"string\">&#x27;Nevada&#x27;</span>:&#123;<span class=\"number\">2001</span>:<span class=\"number\">2.4</span>, <span class=\"number\">2002</span>:<span class=\"number\">2.9</span>&#125;,</span><br><span class=\"line\">        <span class=\"string\">&#x27;Ohio&#x27;</span>:&#123;<span class=\"number\">2000</span>:<span class=\"number\">1.5</span>, <span class=\"number\">2001</span>:<span class=\"number\">1.7</span>, <span class=\"number\">2002</span>:<span class=\"number\">3.6</span>&#125;&#125;</span><br><span class=\"line\">frame3 = DataFrame(pop)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame3)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame3.T)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===指定索引顺序，以及使用切片初始化数据===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(DataFrame(pop))</span><br><span class=\"line\">pdata = &#123;<span class=\"string\">&#x27;Ohio&#x27;</span>:frame3[<span class=\"string\">&#x27;Ohio&#x27;</span>][:-<span class=\"number\">1</span>], <span class=\"string\">&#x27;Nevada&#x27;</span>:frame3[<span class=\"string\">&#x27;Nevada&#x27;</span>][:<span class=\"number\">2</span>]&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(DataFrame(pdata))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===指定索引和列的名称===&quot;</span>)</span><br><span class=\"line\">frame3.index.name = <span class=\"string\">&#x27;year&#x27;</span></span><br><span class=\"line\">frame3.columns.name = <span class=\"string\">&#x27;state&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame3)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame3.values)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2.values)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===stack===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame3.stack())</span><br></pre></td></tr></table></figure>\n<pre><code>===指定索引，在列中指定不存在的列，默认数据用NaN===\n       year   state  pop debt\none    2000    Ohio  1.5  NaN\ntwo    2001    Ohio  1.7  NaN\nthree  2002    Ohio  3.6  NaN\nfour   2001  Nevada  2.4  NaN\nfive   2002  Nevada  2.9  NaN\none        Ohio\ntwo        Ohio\nthree      Ohio\nfour     Nevada\nfive     Nevada\nName: state, dtype: object\none      2000\ntwo      2001\nthree    2002\nfour     2001\nfive     2002\nName: year, dtype: int64\nyear     2002\nstate    Ohio\npop       3.6\ndebt      NaN\nName: three, dtype: object\n       year   state  pop  debt\none    2000    Ohio  1.5  16.5\ntwo    2001    Ohio  1.7  16.5\nthree  2002    Ohio  3.6  16.5\nfour   2001  Nevada  2.4  16.5\nfive   2002  Nevada  2.9  16.5\n       year   state  pop  debt\none    2000    Ohio  1.5     0\ntwo    2001    Ohio  1.7     1\nthree  2002    Ohio  3.6     2\nfour   2001  Nevada  2.4     3\nfive   2002  Nevada  2.9     4\n\n===用Series指定要修改的索引及其对应的值，没有指定的默认数据用NaN===\n       year   state  pop  debt\none    2000    Ohio  1.5   NaN\ntwo    2001    Ohio  1.7  -1.2\nthree  2002    Ohio  3.6   NaN\nfour   2001  Nevada  2.4  -1.5\nfive   2002  Nevada  2.9  -1.7\n\n===赋值给新列===\n       year   state  pop  debt  eastern\none    2000    Ohio  1.5   NaN     True\ntwo    2001    Ohio  1.7  -1.2     True\nthree  2002    Ohio  3.6   NaN     True\nfour   2001  Nevada  2.4  -1.5    False\nfive   2002  Nevada  2.9  -1.7    False\nIndex([&#39;year&#39;, &#39;state&#39;, &#39;pop&#39;, &#39;debt&#39;, &#39;eastern&#39;], dtype=&#39;object&#39;)\n\n===DataFrame转置===\n      Nevada  Ohio\n2000     NaN   1.5\n2001     2.4   1.7\n2002     2.9   3.6\n        2000  2001  2002\nNevada   NaN   2.4   2.9\nOhio     1.5   1.7   3.6\n\n===指定索引顺序，以及使用切片初始化数据===\n      Nevada  Ohio\n2000     NaN   1.5\n2001     2.4   1.7\n2002     2.9   3.6\n      Ohio  Nevada\n2000   1.5     NaN\n2001   1.7     2.4\n\n===指定索引和列的名称===\nstate  Nevada  Ohio\nyear               \n2000      NaN   1.5\n2001      2.4   1.7\n2002      2.9   3.6\n[[nan 1.5]\n [2.4 1.7]\n [2.9 3.6]]\n[[2000 &#39;Ohio&#39; 1.5 nan True]\n [2001 &#39;Ohio&#39; 1.7 -1.2 True]\n [2002 &#39;Ohio&#39; 3.6 nan True]\n [2001 &#39;Nevada&#39; 2.4 -1.5 False]\n [2002 &#39;Nevada&#39; 2.9 -1.7 False]]\n\n===stack===\nyear  state \n2000  Ohio      1.5\n2001  Nevada    2.4\n      Ohio      1.7\n2002  Nevada    2.9\n      Ohio      3.6\ndtype: float64\n</code></pre><h2 id=\"Append-Join和Concatenate\"><a href=\"#Append-Join和Concatenate\" class=\"headerlink\" title=\"Append, Join和Concatenate\"></a>Append, Join和Concatenate</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df1 = pd.DataFrame(&#123;<span class=\"string\">&#x27;apts&#x27;</span>: [<span class=\"number\">55000</span>, <span class=\"number\">60000</span>],</span><br><span class=\"line\">                   <span class=\"string\">&#x27;cars&#x27;</span>: [<span class=\"number\">200000</span>, <span class=\"number\">300000</span>],&#125;,</span><br><span class=\"line\">                  index = [<span class=\"string\">&#x27;Shanghai&#x27;</span>, <span class=\"string\">&#x27;Beijing&#x27;</span>])</span><br><span class=\"line\">df2 = pd.DataFrame(&#123;<span class=\"string\">&#x27;apts&#x27;</span>: [<span class=\"number\">25000</span>, <span class=\"number\">20000</span>],</span><br><span class=\"line\">                   <span class=\"string\">&#x27;cars&#x27;</span>: [<span class=\"number\">150000</span>, <span class=\"number\">120000</span>],&#125;,</span><br><span class=\"line\">                  index = [<span class=\"string\">&#x27;Hangzhou&#x27;</span>, <span class=\"string\">&#x27;Najing&#x27;</span>])</span><br><span class=\"line\">df3 = pd.DataFrame(&#123;<span class=\"string\">&#x27;apts&#x27;</span>: [<span class=\"number\">30000</span>, <span class=\"number\">10000</span>],</span><br><span class=\"line\">                   <span class=\"string\">&#x27;cars&#x27;</span>: [<span class=\"number\">180000</span>, <span class=\"number\">100000</span>],&#125;,</span><br><span class=\"line\">                  index = [<span class=\"string\">&#x27;Guangzhou&#x27;</span>, <span class=\"string\">&#x27;Chongqing&#x27;</span>])</span><br><span class=\"line\">df4 = pd.DataFrame(&#123;<span class=\"string\">&#x27;salaries&#x27;</span>: [<span class=\"number\">10000</span>, <span class=\"number\">30000</span>, <span class=\"number\">30000</span>, <span class=\"number\">20000</span>, <span class=\"number\">15000</span>],</span><br><span class=\"line\">                  <span class=\"string\">&#x27;cities&#x27;</span>: [<span class=\"string\">&#x27;Suzhou&#x27;</span>, <span class=\"string\">&#x27;Beijing&#x27;</span>, <span class=\"string\">&#x27;Shanghai&#x27;</span>, <span class=\"string\">&#x27;Guangzhou&#x27;</span>, <span class=\"string\">&#x27;Tianjin&#x27;</span>]&#125;)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df3)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df4)</span><br></pre></td></tr></table></figure>\n<pre><code>           apts    cars\nShanghai  55000  200000\nBeijing   60000  300000\n           apts    cars\nHangzhou  25000  150000\nNajing    20000  120000\n            apts    cars\nGuangzhou  30000  180000\nChongqing  10000  100000\n   salaries     cities\n0     10000     Suzhou\n1     30000    Beijing\n2     30000   Shanghai\n3     20000  Guangzhou\n4     15000    Tianjin\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===concat===&quot;</span>)</span><br><span class=\"line\">frames = [df1, df2, df3]</span><br><span class=\"line\">result = pd.concat(frames)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">result2 = pd.concat(frames, keys=[<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"string\">&#x27;y&#x27;</span>, <span class=\"string\">&#x27;z&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(result2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.concat([df1, df2], axis=<span class=\"number\">1</span>, sort=<span class=\"literal\">False</span>))</span><br></pre></td></tr></table></figure>\n<pre><code>===concat===\n            apts    cars\nShanghai   55000  200000\nBeijing    60000  300000\nHangzhou   25000  150000\nNajing     20000  120000\nGuangzhou  30000  180000\nChongqing  10000  100000\n\n              apts    cars\nx Shanghai   55000  200000\n  Beijing    60000  300000\ny Hangzhou   25000  150000\n  Najing     20000  120000\nz Guangzhou  30000  180000\n  Chongqing  10000  100000\n\n             apts      cars     apts      cars\nShanghai  55000.0  200000.0      NaN       NaN\nBeijing   60000.0  300000.0      NaN       NaN\nHangzhou      NaN       NaN  25000.0  150000.0\nNajing        NaN       NaN  20000.0  120000.0\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===append===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df1.append(df2))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df1.append(df3))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>===append===\n           apts    cars\nShanghai  55000  200000\nBeijing   60000  300000\nHangzhou  25000  150000\nNajing    20000  120000\n            apts    cars\nShanghai   55000  200000\nBeijing    60000  300000\nGuangzhou  30000  180000\nChongqing  10000  100000\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===join===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df1.join(df4))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df1.join(df4, how=<span class=\"string\">&#x27;right&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df1.join(df4, how=<span class=\"string\">&#x27;left&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df1.join(df4, how=<span class=\"string\">&#x27;inner&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df1.join(df4, how=<span class=\"string\">&#x27;outer&#x27;</span>))</span><br></pre></td></tr></table></figure>\n<pre><code>===join===\n           apts    cars  salaries cities\nShanghai  55000  200000       NaN    NaN\nBeijing   60000  300000       NaN    NaN\n\n   apts  cars  salaries     cities\n0   NaN   NaN     10000     Suzhou\n1   NaN   NaN     30000    Beijing\n2   NaN   NaN     30000   Shanghai\n3   NaN   NaN     20000  Guangzhou\n4   NaN   NaN     15000    Tianjin\n\n           apts    cars  salaries cities\nShanghai  55000  200000       NaN    NaN\nBeijing   60000  300000       NaN    NaN\n\nEmpty DataFrame\nColumns: [apts, cars, salaries, cities]\nIndex: []\n\n             apts      cars  salaries     cities\nShanghai  55000.0  200000.0       NaN        NaN\nBeijing   60000.0  300000.0       NaN        NaN\n0             NaN       NaN   10000.0     Suzhou\n1             NaN       NaN   30000.0    Beijing\n2             NaN       NaN   30000.0   Shanghai\n3             NaN       NaN   20000.0  Guangzhou\n4             NaN       NaN   15000.0    Tianjin\n</code></pre><h2 id=\"groupby\"><a href=\"#groupby\" class=\"headerlink\" title=\"groupby\"></a>groupby</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\">salaries = pd.DataFrame(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;Name&#x27;</span>: [<span class=\"string\">&#x27;July&#x27;</span>, <span class=\"string\">&#x27;Chu&#x27;</span>, <span class=\"string\">&#x27;Chu&#x27;</span>, <span class=\"string\">&#x27;Lin&#x27;</span>, <span class=\"string\">&#x27;July&#x27;</span>, <span class=\"string\">&#x27;July&#x27;</span>, <span class=\"string\">&#x27;Chu&#x27;</span>, <span class=\"string\">&#x27;July&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Year&#x27;</span>: [<span class=\"number\">2016</span>,<span class=\"number\">2016</span>,<span class=\"number\">2016</span>,<span class=\"number\">2016</span>,<span class=\"number\">2017</span>,<span class=\"number\">2017</span>,<span class=\"number\">2017</span>,<span class=\"number\">2017</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Salary&#x27;</span>: [<span class=\"number\">10000</span>,<span class=\"number\">2000</span>,<span class=\"number\">4000</span>,<span class=\"number\">5000</span>,<span class=\"number\">18000</span>,<span class=\"number\">25000</span>,<span class=\"number\">3000</span>,<span class=\"number\">4000</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Bonus&#x27;</span>: [<span class=\"number\">3000</span>,<span class=\"number\">1000</span>,<span class=\"number\">1000</span>,<span class=\"number\">1200</span>,<span class=\"number\">4000</span>,<span class=\"number\">2300</span>,<span class=\"number\">500</span>,<span class=\"number\">1000</span>]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">group_by_name = salaries.groupby(<span class=\"string\">&#x27;Name&#x27;</span>)</span><br><span class=\"line\">display(group_by_name.<span class=\"built_in\">sum</span>())</span><br><span class=\"line\"></span><br><span class=\"line\">group_by_name_year = salaries.groupby([<span class=\"string\">&#x27;Name&#x27;</span>, <span class=\"string\">&#x27;Year&#x27;</span>])</span><br><span class=\"line\">display(group_by_name_year.<span class=\"built_in\">sum</span>())</span><br><span class=\"line\">display(group_by_name_year.size())</span><br><span class=\"line\">display(group_by_name_year.describe())</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Year</th>\n      <th>Salary</th>\n      <th>Bonus</th>\n    </tr>\n    <tr>\n      <th>Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Chu</th>\n      <td>6049</td>\n      <td>9000</td>\n      <td>2500</td>\n    </tr>\n    <tr>\n      <th>July</th>\n      <td>8067</td>\n      <td>57000</td>\n      <td>10300</td>\n    </tr>\n    <tr>\n      <th>Lin</th>\n      <td>2016</td>\n      <td>5000</td>\n      <td>1200</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>Salary</th>\n      <th>Bonus</th>\n    </tr>\n    <tr>\n      <th>Name</th>\n      <th>Year</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Chu</th>\n      <th>2016</th>\n      <td>6000</td>\n      <td>2000</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>3000</td>\n      <td>500</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">July</th>\n      <th>2016</th>\n      <td>10000</td>\n      <td>3000</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>47000</td>\n      <td>7300</td>\n    </tr>\n    <tr>\n      <th>Lin</th>\n      <th>2016</th>\n      <td>5000</td>\n      <td>1200</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<pre><code>Name  Year\nChu   2016    2\n      2017    1\nJuly  2016    1\n      2017    3\nLin   2016    1\ndtype: int64\n</code></pre><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th></th>\n      <th colspan=\"8\" halign=\"left\">Bonus</th>\n      <th colspan=\"8\" halign=\"left\">Salary</th>\n    </tr>\n    <tr>\n      <th></th>\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n    <tr>\n      <th>Name</th>\n      <th>Year</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Chu</th>\n      <th>2016</th>\n      <td>2.0</td>\n      <td>1000.000000</td>\n      <td>0.00000</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>2.0</td>\n      <td>3000.000000</td>\n      <td>1414.213562</td>\n      <td>2000.0</td>\n      <td>2500.0</td>\n      <td>3000.0</td>\n      <td>3500.0</td>\n      <td>4000.0</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>1.0</td>\n      <td>500.000000</td>\n      <td>NaN</td>\n      <td>500.0</td>\n      <td>500.0</td>\n      <td>500.0</td>\n      <td>500.0</td>\n      <td>500.0</td>\n      <td>1.0</td>\n      <td>3000.000000</td>\n      <td>NaN</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">July</th>\n      <th>2016</th>\n      <td>1.0</td>\n      <td>3000.000000</td>\n      <td>NaN</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>1.0</td>\n      <td>10000.000000</td>\n      <td>NaN</td>\n      <td>10000.0</td>\n      <td>10000.0</td>\n      <td>10000.0</td>\n      <td>10000.0</td>\n      <td>10000.0</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>3.0</td>\n      <td>2433.333333</td>\n      <td>1504.43788</td>\n      <td>1000.0</td>\n      <td>1650.0</td>\n      <td>2300.0</td>\n      <td>3150.0</td>\n      <td>4000.0</td>\n      <td>3.0</td>\n      <td>15666.666667</td>\n      <td>10692.676622</td>\n      <td>4000.0</td>\n      <td>11000.0</td>\n      <td>18000.0</td>\n      <td>21500.0</td>\n      <td>25000.0</td>\n    </tr>\n    <tr>\n      <th>Lin</th>\n      <th>2016</th>\n      <td>1.0</td>\n      <td>1200.000000</td>\n      <td>NaN</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>1.0</td>\n      <td>5000.000000</td>\n      <td>NaN</td>\n      <td>5000.0</td>\n      <td>5000.0</td>\n      <td>5000.0</td>\n      <td>5000.0</td>\n      <td>5000.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.julyedu.com/course/getDetail/66/\" >廖雪峰Python数据分析<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"基本设置\"><a href=\"#基本设置\" class=\"headerlink\" title=\"基本设置\"></a>基本设置</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pd.set_option(<span class=\"string\">&quot;max_columns&quot;</span>, <span class=\"number\">50</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据缺失检查\"><a href=\"#数据缺失检查\" class=\"headerlink\" title=\"数据缺失检查\"></a>数据缺失检查</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apts=pd.Series([<span class=\"string\">&quot;Hangzhou&quot;</span>, <span class=\"string\">&quot;Beijing&quot;</span>, <span class=\"string\">&quot;Shenzhen&quot;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(apts.notnull())</span><br><span class=\"line\"><span class=\"built_in\">print</span>(apts.isnull())</span><br></pre></td></tr></table></figure>\n<pre><code>0    True\n1    True\n2    True\ndtype: bool\n0    False\n1    False\n2    False\ndtype: bool\n</code></pre><h2 id=\"Series\"><a href=\"#Series\" class=\"headerlink\" title=\"Series\"></a>Series</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*- </span></span><br><span class=\"line\"><span class=\"keyword\">from</span> pandas <span class=\"keyword\">import</span> Series</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===用数组生成Series===&quot;</span>)</span><br><span class=\"line\">obj = Series([<span class=\"number\">4</span>, <span class=\"number\">7</span>, -<span class=\"number\">5</span>, <span class=\"number\">3</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj.values)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj.index)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===指定Series的index===&quot;</span>)</span><br><span class=\"line\">obj2 = Series([<span class=\"number\">4</span>, <span class=\"number\">7</span>, -<span class=\"number\">5</span>, <span class=\"number\">3</span>], index = [<span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj2.index)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj2[<span class=\"string\">&#x27;a&#x27;</span>])</span><br><span class=\"line\">obj2[<span class=\"string\">&#x27;d&#x27;</span>] = <span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj2[[<span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>]])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj2[obj2 &gt; <span class=\"number\">0</span>])  <span class=\"comment\"># 找出大于0的元素</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;b&#x27;</span> <span class=\"keyword\">in</span> obj2) <span class=\"comment\"># 判断索引是否存在</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;e&#x27;</span> <span class=\"keyword\">in</span> obj2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===使用字典生成Series===&quot;</span>)</span><br><span class=\"line\">sdata = &#123;<span class=\"string\">&#x27;Ohio&#x27;</span>:<span class=\"number\">45000</span>, <span class=\"string\">&#x27;Texas&#x27;</span>:<span class=\"number\">71000</span>, <span class=\"string\">&#x27;Oregon&#x27;</span>:<span class=\"number\">16000</span>, <span class=\"string\">&#x27;Utah&#x27;</span>:<span class=\"number\">5000</span>&#125;</span><br><span class=\"line\">obj3 = Series(sdata)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj3)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===使用字典生成Series，并额外指定index，不匹配部分为NaN===&quot;</span>)</span><br><span class=\"line\">states = [<span class=\"string\">&#x27;California&#x27;</span>, <span class=\"string\">&#x27;Ohio&#x27;</span>, <span class=\"string\">&#x27;Oregon&#x27;</span>, <span class=\"string\">&#x27;Texas&#x27;</span>]</span><br><span class=\"line\">obj4 = Series(sdata, index = states)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj4)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===Series相加，相同索引部分相加===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj3 + obj4)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===指定Series及其索引的名字===&quot;</span>)</span><br><span class=\"line\">obj4.name = <span class=\"string\">&#x27;population&#x27;</span></span><br><span class=\"line\">obj4.index.name = <span class=\"string\">&#x27;state&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>( obj4)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===替换index===&quot;</span>)</span><br><span class=\"line\">obj.index = [<span class=\"string\">&#x27;Bob&#x27;</span>, <span class=\"string\">&#x27;Steve&#x27;</span>, <span class=\"string\">&#x27;Jeff&#x27;</span>, <span class=\"string\">&#x27;Ryan&#x27;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(obj)</span><br></pre></td></tr></table></figure>\n<pre><code>===用数组生成Series===\n0    4\n1    7\n2   -5\n3    3\ndtype: int64\n[ 4  7 -5  3]\nRangeIndex(start=0, stop=4, step=1)\n\n===指定Series的index===\nd    4\nb    7\na   -5\nc    3\ndtype: int64\nIndex([&#39;d&#39;, &#39;b&#39;, &#39;a&#39;, &#39;c&#39;], dtype=&#39;object&#39;)\n-5\nc    3\na   -5\nd    6\ndtype: int64\nd    6\nb    7\nc    3\ndtype: int64\nTrue\nFalse\n\n===使用字典生成Series===\nOhio      45000\nTexas     71000\nOregon    16000\nUtah       5000\ndtype: int64\n\n===使用字典生成Series，并额外指定index，不匹配部分为NaN===\nCalifornia        NaN\nOhio          45000.0\nOregon        16000.0\nTexas         71000.0\ndtype: float64\n\n===Series相加，相同索引部分相加===\nCalifornia         NaN\nOhio           90000.0\nOregon         32000.0\nTexas         142000.0\nUtah               NaN\ndtype: float64\n\n===指定Series及其索引的名字===\nstate\nCalifornia        NaN\nOhio          45000.0\nOregon        16000.0\nTexas         71000.0\nName: population, dtype: float64\n\n===替换index===\nBob      4\nSteve    7\nJeff    -5\nRyan     3\ndtype: int64\n</code></pre><h2 id=\"填充\"><a href=\"#填充\" class=\"headerlink\" title=\"填充\"></a>填充</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*- </span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> nan <span class=\"keyword\">as</span> NA</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">from</span> pandas <span class=\"keyword\">import</span> Series, DataFrame, Index</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===填充0===&quot;</span>)</span><br><span class=\"line\">df = DataFrame(np.random.randn(<span class=\"number\">7</span>, <span class=\"number\">3</span>))</span><br><span class=\"line\">df.iloc[:<span class=\"number\">4</span>, <span class=\"number\">1</span>] = NA</span><br><span class=\"line\">df.iloc[:<span class=\"number\">2</span>, <span class=\"number\">2</span>] = NA</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df.fillna(<span class=\"number\">0</span>))</span><br><span class=\"line\">df.fillna(<span class=\"number\">0</span>, inplace = <span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===不同行列填充不同的值===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df.fillna(&#123;<span class=\"number\">1</span>:<span class=\"number\">0.5</span>, <span class=\"number\">3</span>:-<span class=\"number\">1</span>&#125;))  <span class=\"comment\"># 第3列不存在</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===不同的填充方式===&quot;</span>)</span><br><span class=\"line\">df = DataFrame(np.random.randn(<span class=\"number\">6</span>, <span class=\"number\">3</span>))</span><br><span class=\"line\">df.iloc[<span class=\"number\">2</span>:, <span class=\"number\">1</span>] = NA</span><br><span class=\"line\">df.iloc[<span class=\"number\">4</span>:, <span class=\"number\">2</span>] = NA</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df.fillna(method = <span class=\"string\">&#x27;ffill&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df.fillna(method = <span class=\"string\">&#x27;ffill&#x27;</span>, limit = <span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===用统计数据填充===&quot;</span>)</span><br><span class=\"line\">data = Series([<span class=\"number\">1.</span>, NA, <span class=\"number\">3.5</span>, NA, <span class=\"number\">7</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(data.fillna(data.mean()))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>===填充0===\n          0         1         2\n0  0.619043  0.000000  0.000000\n1  1.262121  0.000000  0.000000\n2 -0.536828  0.000000  1.354608\n3  0.273867  0.000000  1.046143\n4  0.648504  0.366829 -0.122517\n5  0.773085 -0.547392 -0.289962\n6  0.070365 -1.258029  0.144977\n          0         1         2\n0  0.619043  0.000000  0.000000\n1  1.262121  0.000000  0.000000\n2 -0.536828  0.000000  1.354608\n3  0.273867  0.000000  1.046143\n4  0.648504  0.366829 -0.122517\n5  0.773085 -0.547392 -0.289962\n6  0.070365 -1.258029  0.144977\n\n===不同行列填充不同的值===\n          0         1         2\n0  0.619043  0.000000  0.000000\n1  1.262121  0.000000  0.000000\n2 -0.536828  0.000000  1.354608\n3  0.273867  0.000000  1.046143\n4  0.648504  0.366829 -0.122517\n5  0.773085 -0.547392 -0.289962\n6  0.070365 -1.258029  0.144977\n\n===不同的填充方式===\n          0         1         2\n0  0.755876  1.438577  0.986349\n1  0.457114 -0.435046 -0.365518\n2  0.631733       NaN  1.537871\n3  1.217393       NaN  0.636592\n4 -1.095912       NaN       NaN\n5 -1.314859       NaN       NaN\n          0         1         2\n0  0.755876  1.438577  0.986349\n1  0.457114 -0.435046 -0.365518\n2  0.631733 -0.435046  1.537871\n3  1.217393 -0.435046  0.636592\n4 -1.095912 -0.435046  0.636592\n5 -1.314859 -0.435046  0.636592\n          0         1         2\n0  0.755876  1.438577  0.986349\n1  0.457114 -0.435046 -0.365518\n2  0.631733 -0.435046  1.537871\n3  1.217393 -0.435046  0.636592\n4 -1.095912       NaN  0.636592\n5 -1.314859       NaN  0.636592\n\n===用统计数据填充===\n0    1.000000\n1    3.833333\n2    3.500000\n3    3.833333\n4    7.000000\ndtype: float64\n</code></pre><h2 id=\"DataFrame\"><a href=\"#DataFrame\" class=\"headerlink\" title=\"DataFrame\"></a>DataFrame</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*- </span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> pandas <span class=\"keyword\">import</span> Series, DataFrame</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===指定索引，在列中指定不存在的列，默认数据用NaN===&quot;</span>)</span><br><span class=\"line\">frame2 = DataFrame(data,</span><br><span class=\"line\">                    columns = [<span class=\"string\">&#x27;year&#x27;</span>, <span class=\"string\">&#x27;state&#x27;</span>, <span class=\"string\">&#x27;pop&#x27;</span>, <span class=\"string\">&#x27;debt&#x27;</span>],</span><br><span class=\"line\">                    index = [<span class=\"string\">&#x27;one&#x27;</span>, <span class=\"string\">&#x27;two&#x27;</span>, <span class=\"string\">&#x27;three&#x27;</span>, <span class=\"string\">&#x27;four&#x27;</span>, <span class=\"string\">&#x27;five&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2[<span class=\"string\">&#x27;state&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2.year)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2.loc[<span class=\"string\">&#x27;three&#x27;</span>])</span><br><span class=\"line\">frame2[<span class=\"string\">&#x27;debt&#x27;</span>] = <span class=\"number\">16.5</span> <span class=\"comment\"># 修改一整列</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2)</span><br><span class=\"line\">frame2.debt = np.arange(<span class=\"number\">5</span>)  <span class=\"comment\"># 用numpy数组修改元素</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===用Series指定要修改的索引及其对应的值，没有指定的默认数据用NaN===&quot;</span>)</span><br><span class=\"line\">val = Series([-<span class=\"number\">1.2</span>, -<span class=\"number\">1.5</span>, -<span class=\"number\">1.7</span>], index = [<span class=\"string\">&#x27;two&#x27;</span>, <span class=\"string\">&#x27;four&#x27;</span>, <span class=\"string\">&#x27;five&#x27;</span>])</span><br><span class=\"line\">frame2[<span class=\"string\">&#x27;debt&#x27;</span>] = val</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===赋值给新列===&quot;</span>)</span><br><span class=\"line\">frame2[<span class=\"string\">&#x27;eastern&#x27;</span>] = (frame2.state == <span class=\"string\">&#x27;Ohio&#x27;</span>)  <span class=\"comment\"># 如果state等于Ohio为True</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2.columns)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===DataFrame转置===&quot;</span>)</span><br><span class=\"line\">pop = &#123;<span class=\"string\">&#x27;Nevada&#x27;</span>:&#123;<span class=\"number\">2001</span>:<span class=\"number\">2.4</span>, <span class=\"number\">2002</span>:<span class=\"number\">2.9</span>&#125;,</span><br><span class=\"line\">        <span class=\"string\">&#x27;Ohio&#x27;</span>:&#123;<span class=\"number\">2000</span>:<span class=\"number\">1.5</span>, <span class=\"number\">2001</span>:<span class=\"number\">1.7</span>, <span class=\"number\">2002</span>:<span class=\"number\">3.6</span>&#125;&#125;</span><br><span class=\"line\">frame3 = DataFrame(pop)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame3)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame3.T)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===指定索引顺序，以及使用切片初始化数据===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(DataFrame(pop))</span><br><span class=\"line\">pdata = &#123;<span class=\"string\">&#x27;Ohio&#x27;</span>:frame3[<span class=\"string\">&#x27;Ohio&#x27;</span>][:-<span class=\"number\">1</span>], <span class=\"string\">&#x27;Nevada&#x27;</span>:frame3[<span class=\"string\">&#x27;Nevada&#x27;</span>][:<span class=\"number\">2</span>]&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(DataFrame(pdata))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===指定索引和列的名称===&quot;</span>)</span><br><span class=\"line\">frame3.index.name = <span class=\"string\">&#x27;year&#x27;</span></span><br><span class=\"line\">frame3.columns.name = <span class=\"string\">&#x27;state&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame3)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame3.values)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame2.values)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===stack===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(frame3.stack())</span><br></pre></td></tr></table></figure>\n<pre><code>===指定索引，在列中指定不存在的列，默认数据用NaN===\n       year   state  pop debt\none    2000    Ohio  1.5  NaN\ntwo    2001    Ohio  1.7  NaN\nthree  2002    Ohio  3.6  NaN\nfour   2001  Nevada  2.4  NaN\nfive   2002  Nevada  2.9  NaN\none        Ohio\ntwo        Ohio\nthree      Ohio\nfour     Nevada\nfive     Nevada\nName: state, dtype: object\none      2000\ntwo      2001\nthree    2002\nfour     2001\nfive     2002\nName: year, dtype: int64\nyear     2002\nstate    Ohio\npop       3.6\ndebt      NaN\nName: three, dtype: object\n       year   state  pop  debt\none    2000    Ohio  1.5  16.5\ntwo    2001    Ohio  1.7  16.5\nthree  2002    Ohio  3.6  16.5\nfour   2001  Nevada  2.4  16.5\nfive   2002  Nevada  2.9  16.5\n       year   state  pop  debt\none    2000    Ohio  1.5     0\ntwo    2001    Ohio  1.7     1\nthree  2002    Ohio  3.6     2\nfour   2001  Nevada  2.4     3\nfive   2002  Nevada  2.9     4\n\n===用Series指定要修改的索引及其对应的值，没有指定的默认数据用NaN===\n       year   state  pop  debt\none    2000    Ohio  1.5   NaN\ntwo    2001    Ohio  1.7  -1.2\nthree  2002    Ohio  3.6   NaN\nfour   2001  Nevada  2.4  -1.5\nfive   2002  Nevada  2.9  -1.7\n\n===赋值给新列===\n       year   state  pop  debt  eastern\none    2000    Ohio  1.5   NaN     True\ntwo    2001    Ohio  1.7  -1.2     True\nthree  2002    Ohio  3.6   NaN     True\nfour   2001  Nevada  2.4  -1.5    False\nfive   2002  Nevada  2.9  -1.7    False\nIndex([&#39;year&#39;, &#39;state&#39;, &#39;pop&#39;, &#39;debt&#39;, &#39;eastern&#39;], dtype=&#39;object&#39;)\n\n===DataFrame转置===\n      Nevada  Ohio\n2000     NaN   1.5\n2001     2.4   1.7\n2002     2.9   3.6\n        2000  2001  2002\nNevada   NaN   2.4   2.9\nOhio     1.5   1.7   3.6\n\n===指定索引顺序，以及使用切片初始化数据===\n      Nevada  Ohio\n2000     NaN   1.5\n2001     2.4   1.7\n2002     2.9   3.6\n      Ohio  Nevada\n2000   1.5     NaN\n2001   1.7     2.4\n\n===指定索引和列的名称===\nstate  Nevada  Ohio\nyear               \n2000      NaN   1.5\n2001      2.4   1.7\n2002      2.9   3.6\n[[nan 1.5]\n [2.4 1.7]\n [2.9 3.6]]\n[[2000 &#39;Ohio&#39; 1.5 nan True]\n [2001 &#39;Ohio&#39; 1.7 -1.2 True]\n [2002 &#39;Ohio&#39; 3.6 nan True]\n [2001 &#39;Nevada&#39; 2.4 -1.5 False]\n [2002 &#39;Nevada&#39; 2.9 -1.7 False]]\n\n===stack===\nyear  state \n2000  Ohio      1.5\n2001  Nevada    2.4\n      Ohio      1.7\n2002  Nevada    2.9\n      Ohio      3.6\ndtype: float64\n</code></pre><h2 id=\"Append-Join和Concatenate\"><a href=\"#Append-Join和Concatenate\" class=\"headerlink\" title=\"Append, Join和Concatenate\"></a>Append, Join和Concatenate</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df1 = pd.DataFrame(&#123;<span class=\"string\">&#x27;apts&#x27;</span>: [<span class=\"number\">55000</span>, <span class=\"number\">60000</span>],</span><br><span class=\"line\">                   <span class=\"string\">&#x27;cars&#x27;</span>: [<span class=\"number\">200000</span>, <span class=\"number\">300000</span>],&#125;,</span><br><span class=\"line\">                  index = [<span class=\"string\">&#x27;Shanghai&#x27;</span>, <span class=\"string\">&#x27;Beijing&#x27;</span>])</span><br><span class=\"line\">df2 = pd.DataFrame(&#123;<span class=\"string\">&#x27;apts&#x27;</span>: [<span class=\"number\">25000</span>, <span class=\"number\">20000</span>],</span><br><span class=\"line\">                   <span class=\"string\">&#x27;cars&#x27;</span>: [<span class=\"number\">150000</span>, <span class=\"number\">120000</span>],&#125;,</span><br><span class=\"line\">                  index = [<span class=\"string\">&#x27;Hangzhou&#x27;</span>, <span class=\"string\">&#x27;Najing&#x27;</span>])</span><br><span class=\"line\">df3 = pd.DataFrame(&#123;<span class=\"string\">&#x27;apts&#x27;</span>: [<span class=\"number\">30000</span>, <span class=\"number\">10000</span>],</span><br><span class=\"line\">                   <span class=\"string\">&#x27;cars&#x27;</span>: [<span class=\"number\">180000</span>, <span class=\"number\">100000</span>],&#125;,</span><br><span class=\"line\">                  index = [<span class=\"string\">&#x27;Guangzhou&#x27;</span>, <span class=\"string\">&#x27;Chongqing&#x27;</span>])</span><br><span class=\"line\">df4 = pd.DataFrame(&#123;<span class=\"string\">&#x27;salaries&#x27;</span>: [<span class=\"number\">10000</span>, <span class=\"number\">30000</span>, <span class=\"number\">30000</span>, <span class=\"number\">20000</span>, <span class=\"number\">15000</span>],</span><br><span class=\"line\">                  <span class=\"string\">&#x27;cities&#x27;</span>: [<span class=\"string\">&#x27;Suzhou&#x27;</span>, <span class=\"string\">&#x27;Beijing&#x27;</span>, <span class=\"string\">&#x27;Shanghai&#x27;</span>, <span class=\"string\">&#x27;Guangzhou&#x27;</span>, <span class=\"string\">&#x27;Tianjin&#x27;</span>]&#125;)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df3)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df4)</span><br></pre></td></tr></table></figure>\n<pre><code>           apts    cars\nShanghai  55000  200000\nBeijing   60000  300000\n           apts    cars\nHangzhou  25000  150000\nNajing    20000  120000\n            apts    cars\nGuangzhou  30000  180000\nChongqing  10000  100000\n   salaries     cities\n0     10000     Suzhou\n1     30000    Beijing\n2     30000   Shanghai\n3     20000  Guangzhou\n4     15000    Tianjin\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===concat===&quot;</span>)</span><br><span class=\"line\">frames = [df1, df2, df3]</span><br><span class=\"line\">result = pd.concat(frames)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">result2 = pd.concat(frames, keys=[<span class=\"string\">&#x27;x&#x27;</span>, <span class=\"string\">&#x27;y&#x27;</span>, <span class=\"string\">&#x27;z&#x27;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(result2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(pd.concat([df1, df2], axis=<span class=\"number\">1</span>, sort=<span class=\"literal\">False</span>))</span><br></pre></td></tr></table></figure>\n<pre><code>===concat===\n            apts    cars\nShanghai   55000  200000\nBeijing    60000  300000\nHangzhou   25000  150000\nNajing     20000  120000\nGuangzhou  30000  180000\nChongqing  10000  100000\n\n              apts    cars\nx Shanghai   55000  200000\n  Beijing    60000  300000\ny Hangzhou   25000  150000\n  Najing     20000  120000\nz Guangzhou  30000  180000\n  Chongqing  10000  100000\n\n             apts      cars     apts      cars\nShanghai  55000.0  200000.0      NaN       NaN\nBeijing   60000.0  300000.0      NaN       NaN\nHangzhou      NaN       NaN  25000.0  150000.0\nNajing        NaN       NaN  20000.0  120000.0\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===append===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df1.append(df2))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df1.append(df3))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>===append===\n           apts    cars\nShanghai  55000  200000\nBeijing   60000  300000\nHangzhou  25000  150000\nNajing    20000  120000\n            apts    cars\nShanghai   55000  200000\nBeijing    60000  300000\nGuangzhou  30000  180000\nChongqing  10000  100000\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;===join===&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df1.join(df4))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df1.join(df4, how=<span class=\"string\">&#x27;right&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df1.join(df4, how=<span class=\"string\">&#x27;left&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df1.join(df4, how=<span class=\"string\">&#x27;inner&#x27;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(df1.join(df4, how=<span class=\"string\">&#x27;outer&#x27;</span>))</span><br></pre></td></tr></table></figure>\n<pre><code>===join===\n           apts    cars  salaries cities\nShanghai  55000  200000       NaN    NaN\nBeijing   60000  300000       NaN    NaN\n\n   apts  cars  salaries     cities\n0   NaN   NaN     10000     Suzhou\n1   NaN   NaN     30000    Beijing\n2   NaN   NaN     30000   Shanghai\n3   NaN   NaN     20000  Guangzhou\n4   NaN   NaN     15000    Tianjin\n\n           apts    cars  salaries cities\nShanghai  55000  200000       NaN    NaN\nBeijing   60000  300000       NaN    NaN\n\nEmpty DataFrame\nColumns: [apts, cars, salaries, cities]\nIndex: []\n\n             apts      cars  salaries     cities\nShanghai  55000.0  200000.0       NaN        NaN\nBeijing   60000.0  300000.0       NaN        NaN\n0             NaN       NaN   10000.0     Suzhou\n1             NaN       NaN   30000.0    Beijing\n2             NaN       NaN   30000.0   Shanghai\n3             NaN       NaN   20000.0  Guangzhou\n4             NaN       NaN   15000.0    Tianjin\n</code></pre><h2 id=\"groupby\"><a href=\"#groupby\" class=\"headerlink\" title=\"groupby\"></a>groupby</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\">salaries = pd.DataFrame(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;Name&#x27;</span>: [<span class=\"string\">&#x27;July&#x27;</span>, <span class=\"string\">&#x27;Chu&#x27;</span>, <span class=\"string\">&#x27;Chu&#x27;</span>, <span class=\"string\">&#x27;Lin&#x27;</span>, <span class=\"string\">&#x27;July&#x27;</span>, <span class=\"string\">&#x27;July&#x27;</span>, <span class=\"string\">&#x27;Chu&#x27;</span>, <span class=\"string\">&#x27;July&#x27;</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Year&#x27;</span>: [<span class=\"number\">2016</span>,<span class=\"number\">2016</span>,<span class=\"number\">2016</span>,<span class=\"number\">2016</span>,<span class=\"number\">2017</span>,<span class=\"number\">2017</span>,<span class=\"number\">2017</span>,<span class=\"number\">2017</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Salary&#x27;</span>: [<span class=\"number\">10000</span>,<span class=\"number\">2000</span>,<span class=\"number\">4000</span>,<span class=\"number\">5000</span>,<span class=\"number\">18000</span>,<span class=\"number\">25000</span>,<span class=\"number\">3000</span>,<span class=\"number\">4000</span>],</span><br><span class=\"line\">    <span class=\"string\">&#x27;Bonus&#x27;</span>: [<span class=\"number\">3000</span>,<span class=\"number\">1000</span>,<span class=\"number\">1000</span>,<span class=\"number\">1200</span>,<span class=\"number\">4000</span>,<span class=\"number\">2300</span>,<span class=\"number\">500</span>,<span class=\"number\">1000</span>]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">group_by_name = salaries.groupby(<span class=\"string\">&#x27;Name&#x27;</span>)</span><br><span class=\"line\">display(group_by_name.<span class=\"built_in\">sum</span>())</span><br><span class=\"line\"></span><br><span class=\"line\">group_by_name_year = salaries.groupby([<span class=\"string\">&#x27;Name&#x27;</span>, <span class=\"string\">&#x27;Year&#x27;</span>])</span><br><span class=\"line\">display(group_by_name_year.<span class=\"built_in\">sum</span>())</span><br><span class=\"line\">display(group_by_name_year.size())</span><br><span class=\"line\">display(group_by_name_year.describe())</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Year</th>\n      <th>Salary</th>\n      <th>Bonus</th>\n    </tr>\n    <tr>\n      <th>Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Chu</th>\n      <td>6049</td>\n      <td>9000</td>\n      <td>2500</td>\n    </tr>\n    <tr>\n      <th>July</th>\n      <td>8067</td>\n      <td>57000</td>\n      <td>10300</td>\n    </tr>\n    <tr>\n      <th>Lin</th>\n      <td>2016</td>\n      <td>5000</td>\n      <td>1200</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>Salary</th>\n      <th>Bonus</th>\n    </tr>\n    <tr>\n      <th>Name</th>\n      <th>Year</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Chu</th>\n      <th>2016</th>\n      <td>6000</td>\n      <td>2000</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>3000</td>\n      <td>500</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">July</th>\n      <th>2016</th>\n      <td>10000</td>\n      <td>3000</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>47000</td>\n      <td>7300</td>\n    </tr>\n    <tr>\n      <th>Lin</th>\n      <th>2016</th>\n      <td>5000</td>\n      <td>1200</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<pre><code>Name  Year\nChu   2016    2\n      2017    1\nJuly  2016    1\n      2017    3\nLin   2016    1\ndtype: int64\n</code></pre><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th></th>\n      <th colspan=\"8\" halign=\"left\">Bonus</th>\n      <th colspan=\"8\" halign=\"left\">Salary</th>\n    </tr>\n    <tr>\n      <th></th>\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n    <tr>\n      <th>Name</th>\n      <th>Year</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Chu</th>\n      <th>2016</th>\n      <td>2.0</td>\n      <td>1000.000000</td>\n      <td>0.00000</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>1000.0</td>\n      <td>2.0</td>\n      <td>3000.000000</td>\n      <td>1414.213562</td>\n      <td>2000.0</td>\n      <td>2500.0</td>\n      <td>3000.0</td>\n      <td>3500.0</td>\n      <td>4000.0</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>1.0</td>\n      <td>500.000000</td>\n      <td>NaN</td>\n      <td>500.0</td>\n      <td>500.0</td>\n      <td>500.0</td>\n      <td>500.0</td>\n      <td>500.0</td>\n      <td>1.0</td>\n      <td>3000.000000</td>\n      <td>NaN</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">July</th>\n      <th>2016</th>\n      <td>1.0</td>\n      <td>3000.000000</td>\n      <td>NaN</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>3000.0</td>\n      <td>1.0</td>\n      <td>10000.000000</td>\n      <td>NaN</td>\n      <td>10000.0</td>\n      <td>10000.0</td>\n      <td>10000.0</td>\n      <td>10000.0</td>\n      <td>10000.0</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>3.0</td>\n      <td>2433.333333</td>\n      <td>1504.43788</td>\n      <td>1000.0</td>\n      <td>1650.0</td>\n      <td>2300.0</td>\n      <td>3150.0</td>\n      <td>4000.0</td>\n      <td>3.0</td>\n      <td>15666.666667</td>\n      <td>10692.676622</td>\n      <td>4000.0</td>\n      <td>11000.0</td>\n      <td>18000.0</td>\n      <td>21500.0</td>\n      <td>25000.0</td>\n    </tr>\n    <tr>\n      <th>Lin</th>\n      <th>2016</th>\n      <td>1.0</td>\n      <td>1200.000000</td>\n      <td>NaN</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>1.0</td>\n      <td>5000.000000</td>\n      <td>NaN</td>\n      <td>5000.0</td>\n      <td>5000.0</td>\n      <td>5000.0</td>\n      <td>5000.0</td>\n      <td>5000.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.julyedu.com/course/getDetail/66/\" >廖雪峰Python数据分析<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"数据抽取","abbrlink":25692,"date":"2019-06-29T16:00:00.000Z","_content":"\n## csv I/O\n\n\n```python\nimport pandas as pd\n\ndisplay(pd.read_csv('2019-06-30_数据抽取_data1.csv'))\ndisplay(pd.read_table('2019-06-30_数据抽取_data1.csv', sep=','))\ndisplay(pd.read_csv('2019-06-30_数据抽取_data2.csv', header=None))\ndisplay(pd.read_csv('2019-06-30_数据抽取_data2.csv', names=['a', 'b', 'c', 'd', 'message']))\n\n# data.to_csv('output.csv')\n```\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n      <th>d</th>\n      <th>message</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>hello</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>world</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n      <td>10</td>\n      <td>11</td>\n      <td>12</td>\n      <td>foo</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n      <th>d</th>\n      <th>message</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>hello</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>world</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n      <td>10</td>\n      <td>11</td>\n      <td>12</td>\n      <td>foo</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>hello</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>world</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n      <td>10</td>\n      <td>11</td>\n      <td>12</td>\n      <td>foo</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n      <th>d</th>\n      <th>message</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>hello</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>world</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n      <td>10</td>\n      <td>11</td>\n      <td>12</td>\n      <td>foo</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n## json\n\n\n```python\nobj = \\\n\"\"\"\n{\"姓名\": \"张三\",\n \"住处\": [\"天朝\", \"挖煤国\", \"万恶的资本主义日不落帝国\"],\n \"宠物\": null,\n \"兄弟\": [{\"姓名\": \"李四\", \"年龄\": 25, \"宠物\": \"汪星人\"},\n              {\"姓名\": \"王五\", \"年龄\": 23, \"宠物\": \"喵星人\"}]\n}\n\"\"\"\n\nimport json\nresult = json.loads(obj)  #<class 'dict'>\nresult = json.dumps(result, ensure_ascii=False)  #<class 'str'>\nprint(result)\n```\n\n    {\"姓名\": \"张三\", \"住处\": [\"天朝\", \"挖煤国\", \"万恶的资本主义日不落帝国\"], \"宠物\": null, \"兄弟\": [{\"姓名\": \"李四\", \"年龄\": 25, \"宠物\": \"汪星人\"}, {\"姓名\": \"王五\", \"年龄\": 23, \"宠物\": \"喵星人\"}]}\n\n\n## XML/HTML\n\n\n```python\nfrom lxml.html import parse\nfrom urllib.request import urlopen\nimport ssl\n\nssl._create_default_https_context = ssl._create_unverified_context\nparsed = parse(urlopen('https://ask.julyedu.com/'))\n\ndoc = parsed.getroot()\n```\n\n\n```python\n#拿所有<a>\nurls = [lnk.get('href') for lnk in doc.findall('.//a')]\nurls\n```\n\n\n\n\n    ['http://www.julyedu.com/weekend/train9?v=m1',\n     'https://www.julyedu.com',\n     'https://www.julyedu.com/category/index',\n     'https://www.julyedu.com/question',\n     'https://oj.julyedu.com/',\n     'http://jingsai.julyedu.com/',\n     'https://www.julyedu.com/video/index',\n     'https://ask.julyedu.com',\n     'https://www.julyedu.com/active/qiye',\n     None,\n     'https://www.julyedu.com/cart',\n     'https://passport.julyedu.com/login?redirect=http%3A%2F%2Fask.julyedu.com%2F',\n     'https://www.julyedu.com',\n     'https://passport.julyedu.com/login?redirect=https%3A%2F%2Fask.julyedu.com%2F',\n     'https://www.julyedu.com',\n     'https://www.julyedu.com/category/index',\n     'https://www.julyedu.com/question/index',\n     'https://www.julyedu.com/video/index',\n     'https://ask.julyedu.com',\n     'https://www.julyedu.com/cart/',\n     'https://ask.julyedu.com/explore/',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/explore/category-15',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/explore/category-13',\n     'https://ask.julyedu.com/explore/category-18',\n     'https://ask.julyedu.com/explore/category-17',\n     'https://ask.julyedu.com/explore/category-10',\n     'https://ask.julyedu.com/explore/category-16',\n     'https://ask.julyedu.com/explore/category-14',\n     'https://ask.julyedu.com/explore/category-11',\n     'https://ask.julyedu.com/explore/category-4',\n     'https://ask.julyedu.com/setting/privacy/#notifications',\n     'javascript:;',\n     'https://ask.julyedu.com/notifications/',\n     '',\n     'https://ask.julyedu.com/sort_type-hot__day-7',\n     'https://ask.julyedu.com/sort_type-unresponsive',\n     '',\n     'https://ask.julyedu.com/sort_type-hot__day-7',\n     'https://ask.julyedu.com/sort_type-unresponsive',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88655',\n     'https://ask.julyedu.com/question/88655#!answer_form',\n     'https://ask.julyedu.com/explore/category-14',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88654',\n     'https://ask.julyedu.com/question/88654#!answer_form',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88653',\n     'https://ask.julyedu.com/question/88653#!answer_form',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88652',\n     'https://ask.julyedu.com/question/88652#!answer_form',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88651',\n     'https://ask.julyedu.com/question/88651#!answer_form',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88650',\n     'https://ask.julyedu.com/question/88650#!answer_form',\n     'https://ask.julyedu.com/explore/category-14',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88649',\n     'https://ask.julyedu.com/question/88649#!answer_form',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88648',\n     'https://ask.julyedu.com/question/88648#!answer_form',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88647',\n     'https://ask.julyedu.com/question/88647#!answer_form',\n     'https://ask.julyedu.com/explore/category-15',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88646',\n     'https://ask.julyedu.com/question/88646#!answer_form',\n     'https://ask.julyedu.com/explore/category-13',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1007',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://dwz.cn/O9VznNuY',\n     'https://ask.julyedu.com/uploads/article/20190621/489e6c00af84ab51a832781134568131.png',\n     'https://ask.julyedu.com/uploads/article/20190621/424770863c018c01543b2630ed9f0153.png',\n     'https://ask.julyedu.com/article/1007',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1006',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://dwz.cn/bwUTiuHL',\n     'https://ask.julyedu.com/article/1006',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1005',\n     'https://ask.julyedu.com/explore/category-15',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://dwz.cn/ZmFmFUmY',\n     'https://ask.julyedu.com/article/1005',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1004',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://dwz.cn/kFJZuxek',\n     'https://ask.julyedu.com/uploads/article/20190619/eab24a8a5b30672d260dd446d7b21c8b.png',\n     'https://ask.julyedu.com/article/1004',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88645',\n     'https://ask.julyedu.com/question/88645#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1003',\n     'https://ask.julyedu.com/explore/category-13',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://dwz.cn/Ar8fDfbn',\n     'https://ask.julyedu.com/uploads/article/20190618/ad20b22eee771ee56e4f674f341ee397.png',\n     'https://ask.julyedu.com/article/1003',\n     'https://ask.julyedu.com/people/Darlingpan',\n     'https://ask.julyedu.com/question/86722',\n     'https://ask.julyedu.com/people/%E8%8E%B9%E5%AE%9D%E5%AE%9D',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E8%8E%B9%E5%AE%9D%E5%AE%9D',\n     'https://ask.julyedu.com/people/Darlingpan',\n     'https://ask.julyedu.com/question/85510',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7545057',\n     'https://ask.julyedu.com/explore/category-13',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7545057',\n     'https://ask.julyedu.com/people/zdl',\n     'https://ask.julyedu.com/question/88644',\n     'https://ask.julyedu.com/question/88644#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/zdl',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1002',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://dwz.cn/kRg2NTm0',\n     'https://ask.julyedu.com/article/1002',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88643',\n     'https://ask.julyedu.com/question/88643#!answer_form',\n     'https://ask.julyedu.com/explore/category-13',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/question/88642',\n     'https://ask.julyedu.com/question/88642#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/question/88641',\n     'https://ask.julyedu.com/question/88641#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/people/%E4%B8%83%E6%9C%88%E5%9C%A8%E7%BA%BF',\n     'https://ask.julyedu.com/question/88640',\n     'https://ask.julyedu.com/question/88640#!answer_form',\n     'https://ask.julyedu.com/explore/category-4',\n     'https://ask.julyedu.com/people/%E4%B8%83%E6%9C%88%E5%9C%A8%E7%BA%BF',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88639',\n     'https://ask.julyedu.com/question/88639#!answer_form',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88638',\n     'https://ask.julyedu.com/question/88638#!answer_form',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1001',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1001',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1000',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/999',\n     'https://ask.julyedu.com/explore/category-13',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/uploads/article/20190605/6dcda1628e00ed7dfab23d18431f6c9b.png',\n     'https://ask.julyedu.com/article/999',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88634',\n     'https://ask.julyedu.com/question/88634#!answer_form',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88633',\n     'https://ask.julyedu.com/question/88633#!answer_form',\n     'https://ask.julyedu.com/explore/category-18',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88632',\n     'https://ask.julyedu.com/question/88632#!answer_form',\n     'https://ask.julyedu.com/explore/category-14',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E9%80%86%E8%BD%AC',\n     'https://ask.julyedu.com/question/88584',\n     'https://ask.julyedu.com/people/%E8%8B%A5%E6%99%B4',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7479632',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/qq%E7%94%A8%E6%88%B7497804',\n     'https://ask.julyedu.com/people/',\n     'https://ask.julyedu.com/question/86859',\n     'https://ask.julyedu.com/people/%E5%BE%AE%E4%BF%A1%E7%94%A8%E6%88%B7488524',\n     'https://ask.julyedu.com/people/%E5%BE%AE%E4%BF%A1%E7%94%A8%E6%88%B7480301',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/Michael+Michael',\n     'https://ask.julyedu.com/people/%E4%B8%83%E6%9C%88%E5%9C%A8%E7%BA%BF',\n     'https://ask.julyedu.com/question/88631',\n     'https://ask.julyedu.com/question/88631#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E4%B8%83%E6%9C%88%E5%9C%A8%E7%BA%BF',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/question/88629',\n     'https://ask.julyedu.com/question/88629#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/question/88630',\n     'https://ask.julyedu.com/question/88630#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/question/88628',\n     'https://ask.julyedu.com/question/88628#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88627',\n     'https://ask.julyedu.com/question/88627#!answer_form',\n     'https://ask.julyedu.com/explore/category-13',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88626',\n     'https://ask.julyedu.com/question/88626#!answer_form',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88625',\n     'https://ask.julyedu.com/question/88625#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88624',\n     'https://ask.julyedu.com/question/88624#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88623',\n     'https://ask.julyedu.com/question/88623#!answer_form',\n     'https://ask.julyedu.com/explore/category-14',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88622',\n     'https://ask.julyedu.com/question/88622#!answer_form',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88621',\n     'https://ask.julyedu.com/question/88621#!answer_form',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88619',\n     'https://ask.julyedu.com/question/88619#!answer_form',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E5%BC%A0%E7%BF%94',\n     'https://ask.julyedu.com/question/88617',\n     'https://ask.julyedu.com/question/88617#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E5%BC%A0%E7%BF%94',\n     'https://ask.julyedu.com/people/%E5%BC%A0%E7%BF%94',\n     'https://ask.julyedu.com/question/88618',\n     'https://ask.julyedu.com/question/88618#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E5%BC%A0%E7%BF%94',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/question/88616',\n     'https://ask.julyedu.com/question/88616#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/people/afei3009',\n     'https://ask.julyedu.com/question/88615',\n     'https://ask.julyedu.com/question/88615#!answer_form',\n     'https://ask.julyedu.com/explore/category-13',\n     'https://ask.julyedu.com/people/afei3009',\n     'javascript:;',\n     'https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-2',\n     'https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-3',\n     'https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-4',\n     'https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-2',\n     'https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-56',\n     'https://ask.julyedu.com/topic/channel-hot',\n     'https://ask.julyedu.com/topic/python',\n     'https://ask.julyedu.com/topic/python',\n     'https://ask.julyedu.com/topic/活动',\n     'https://ask.julyedu.com/topic/活动',\n     'https://ask.julyedu.com/topic/GAN',\n     'https://ask.julyedu.com/topic/GAN',\n     'https://ask.julyedu.com/topic/面试',\n     'https://ask.julyedu.com/topic/面试',\n     'https://ask.julyedu.com/people/',\n     'https://ask.julyedu.com/people/xiaoyan2015',\n     'https://ask.julyedu.com/people/xiaoyan2015',\n     'https://ask.julyedu.com/people/qyzx_zhx',\n     'https://ask.julyedu.com/people/qyzx_zhx',\n     'https://ask.julyedu.com/people/%E7%A4%BE%E5%8C%BA%E5%B0%8F%E7%AE%A1%E5%AE%B6',\n     'https://ask.julyedu.com/people/%E7%A4%BE%E5%8C%BA%E5%B0%8F%E7%AE%A1%E5%AE%B6',\n     'https://ask.julyedu.com/people/unasm',\n     'https://ask.julyedu.com/people/unasm',\n     'https://ask.julyedu.com/people/Alina',\n     'https://ask.julyedu.com/people/Alina',\n     'http://www.julyedu.com/weekend/train9?v=m1',\n     'http://q.url.cn/AB8aue?_type=wpa&qidian=true',\n     'http://www.julyedu.com/distribution/index',\n     'http://weibo.com/askjulyedu',\n     None,\n     'https://www.julyedu.com/help/index/about',\n     'https://www.julyedu.com/help/index/contact',\n     'https://www.julyedu.com/help/index/join',\n     'https://ask.julyedu.com/question/55',\n     'https://tianchi.aliyun.com',\n     'https://cloud.tencent.com/developer/edu',\n     'https://www.aidaxue.com/?ch=qyzx',\n     'https://www.epubit.com',\n     'http://www.miitbeian.gov.cn/',\n     'https://www.cnzz.com/stat/website.php?web_id=1259748782',\n     'https://www.julyedu.com',\n     'https://www.julyedu.com/help/index/about',\n     'https://www.julyedu.com/help/index/join',\n     'http://weibo.com/askjulyedu',\n     'javascript:',\n     'https://tianchi.aliyun.com',\n     'https://cloud.tencent.com/developer/edu',\n     'https://www.aidaxue.com/?ch=qyzx',\n     'https://www.epubit.com']\n\n\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n","source":"_posts/2019-06-30_数据抽取.md","raw":"---\ntitle: 数据抽取\ncategories:\n  - 统计与机器学习\n  - 其他\nabbrlink: 25692\ndate: 2019-06-30 00:00:00\n---\n\n## csv I/O\n\n\n```python\nimport pandas as pd\n\ndisplay(pd.read_csv('2019-06-30_数据抽取_data1.csv'))\ndisplay(pd.read_table('2019-06-30_数据抽取_data1.csv', sep=','))\ndisplay(pd.read_csv('2019-06-30_数据抽取_data2.csv', header=None))\ndisplay(pd.read_csv('2019-06-30_数据抽取_data2.csv', names=['a', 'b', 'c', 'd', 'message']))\n\n# data.to_csv('output.csv')\n```\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n      <th>d</th>\n      <th>message</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>hello</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>world</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n      <td>10</td>\n      <td>11</td>\n      <td>12</td>\n      <td>foo</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n      <th>d</th>\n      <th>message</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>hello</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>world</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n      <td>10</td>\n      <td>11</td>\n      <td>12</td>\n      <td>foo</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>hello</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>world</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n      <td>10</td>\n      <td>11</td>\n      <td>12</td>\n      <td>foo</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n      <th>d</th>\n      <th>message</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>hello</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>world</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n      <td>10</td>\n      <td>11</td>\n      <td>12</td>\n      <td>foo</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n## json\n\n\n```python\nobj = \\\n\"\"\"\n{\"姓名\": \"张三\",\n \"住处\": [\"天朝\", \"挖煤国\", \"万恶的资本主义日不落帝国\"],\n \"宠物\": null,\n \"兄弟\": [{\"姓名\": \"李四\", \"年龄\": 25, \"宠物\": \"汪星人\"},\n              {\"姓名\": \"王五\", \"年龄\": 23, \"宠物\": \"喵星人\"}]\n}\n\"\"\"\n\nimport json\nresult = json.loads(obj)  #<class 'dict'>\nresult = json.dumps(result, ensure_ascii=False)  #<class 'str'>\nprint(result)\n```\n\n    {\"姓名\": \"张三\", \"住处\": [\"天朝\", \"挖煤国\", \"万恶的资本主义日不落帝国\"], \"宠物\": null, \"兄弟\": [{\"姓名\": \"李四\", \"年龄\": 25, \"宠物\": \"汪星人\"}, {\"姓名\": \"王五\", \"年龄\": 23, \"宠物\": \"喵星人\"}]}\n\n\n## XML/HTML\n\n\n```python\nfrom lxml.html import parse\nfrom urllib.request import urlopen\nimport ssl\n\nssl._create_default_https_context = ssl._create_unverified_context\nparsed = parse(urlopen('https://ask.julyedu.com/'))\n\ndoc = parsed.getroot()\n```\n\n\n```python\n#拿所有<a>\nurls = [lnk.get('href') for lnk in doc.findall('.//a')]\nurls\n```\n\n\n\n\n    ['http://www.julyedu.com/weekend/train9?v=m1',\n     'https://www.julyedu.com',\n     'https://www.julyedu.com/category/index',\n     'https://www.julyedu.com/question',\n     'https://oj.julyedu.com/',\n     'http://jingsai.julyedu.com/',\n     'https://www.julyedu.com/video/index',\n     'https://ask.julyedu.com',\n     'https://www.julyedu.com/active/qiye',\n     None,\n     'https://www.julyedu.com/cart',\n     'https://passport.julyedu.com/login?redirect=http%3A%2F%2Fask.julyedu.com%2F',\n     'https://www.julyedu.com',\n     'https://passport.julyedu.com/login?redirect=https%3A%2F%2Fask.julyedu.com%2F',\n     'https://www.julyedu.com',\n     'https://www.julyedu.com/category/index',\n     'https://www.julyedu.com/question/index',\n     'https://www.julyedu.com/video/index',\n     'https://ask.julyedu.com',\n     'https://www.julyedu.com/cart/',\n     'https://ask.julyedu.com/explore/',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/explore/category-15',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/explore/category-13',\n     'https://ask.julyedu.com/explore/category-18',\n     'https://ask.julyedu.com/explore/category-17',\n     'https://ask.julyedu.com/explore/category-10',\n     'https://ask.julyedu.com/explore/category-16',\n     'https://ask.julyedu.com/explore/category-14',\n     'https://ask.julyedu.com/explore/category-11',\n     'https://ask.julyedu.com/explore/category-4',\n     'https://ask.julyedu.com/setting/privacy/#notifications',\n     'javascript:;',\n     'https://ask.julyedu.com/notifications/',\n     '',\n     'https://ask.julyedu.com/sort_type-hot__day-7',\n     'https://ask.julyedu.com/sort_type-unresponsive',\n     '',\n     'https://ask.julyedu.com/sort_type-hot__day-7',\n     'https://ask.julyedu.com/sort_type-unresponsive',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88655',\n     'https://ask.julyedu.com/question/88655#!answer_form',\n     'https://ask.julyedu.com/explore/category-14',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88654',\n     'https://ask.julyedu.com/question/88654#!answer_form',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88653',\n     'https://ask.julyedu.com/question/88653#!answer_form',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88652',\n     'https://ask.julyedu.com/question/88652#!answer_form',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88651',\n     'https://ask.julyedu.com/question/88651#!answer_form',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88650',\n     'https://ask.julyedu.com/question/88650#!answer_form',\n     'https://ask.julyedu.com/explore/category-14',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88649',\n     'https://ask.julyedu.com/question/88649#!answer_form',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88648',\n     'https://ask.julyedu.com/question/88648#!answer_form',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88647',\n     'https://ask.julyedu.com/question/88647#!answer_form',\n     'https://ask.julyedu.com/explore/category-15',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88646',\n     'https://ask.julyedu.com/question/88646#!answer_form',\n     'https://ask.julyedu.com/explore/category-13',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1007',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://dwz.cn/O9VznNuY',\n     'https://ask.julyedu.com/uploads/article/20190621/489e6c00af84ab51a832781134568131.png',\n     'https://ask.julyedu.com/uploads/article/20190621/424770863c018c01543b2630ed9f0153.png',\n     'https://ask.julyedu.com/article/1007',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1006',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://dwz.cn/bwUTiuHL',\n     'https://ask.julyedu.com/article/1006',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1005',\n     'https://ask.julyedu.com/explore/category-15',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://dwz.cn/ZmFmFUmY',\n     'https://ask.julyedu.com/article/1005',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1004',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://dwz.cn/kFJZuxek',\n     'https://ask.julyedu.com/uploads/article/20190619/eab24a8a5b30672d260dd446d7b21c8b.png',\n     'https://ask.julyedu.com/article/1004',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88645',\n     'https://ask.julyedu.com/question/88645#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1003',\n     'https://ask.julyedu.com/explore/category-13',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://dwz.cn/Ar8fDfbn',\n     'https://ask.julyedu.com/uploads/article/20190618/ad20b22eee771ee56e4f674f341ee397.png',\n     'https://ask.julyedu.com/article/1003',\n     'https://ask.julyedu.com/people/Darlingpan',\n     'https://ask.julyedu.com/question/86722',\n     'https://ask.julyedu.com/people/%E8%8E%B9%E5%AE%9D%E5%AE%9D',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E8%8E%B9%E5%AE%9D%E5%AE%9D',\n     'https://ask.julyedu.com/people/Darlingpan',\n     'https://ask.julyedu.com/question/85510',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7545057',\n     'https://ask.julyedu.com/explore/category-13',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7545057',\n     'https://ask.julyedu.com/people/zdl',\n     'https://ask.julyedu.com/question/88644',\n     'https://ask.julyedu.com/question/88644#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/zdl',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1002',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://dwz.cn/kRg2NTm0',\n     'https://ask.julyedu.com/article/1002',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88643',\n     'https://ask.julyedu.com/question/88643#!answer_form',\n     'https://ask.julyedu.com/explore/category-13',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/question/88642',\n     'https://ask.julyedu.com/question/88642#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/question/88641',\n     'https://ask.julyedu.com/question/88641#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/people/%E4%B8%83%E6%9C%88%E5%9C%A8%E7%BA%BF',\n     'https://ask.julyedu.com/question/88640',\n     'https://ask.julyedu.com/question/88640#!answer_form',\n     'https://ask.julyedu.com/explore/category-4',\n     'https://ask.julyedu.com/people/%E4%B8%83%E6%9C%88%E5%9C%A8%E7%BA%BF',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88639',\n     'https://ask.julyedu.com/question/88639#!answer_form',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88638',\n     'https://ask.julyedu.com/question/88638#!answer_form',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1001',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1001',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1000',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/1000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/article/999',\n     'https://ask.julyedu.com/explore/category-13',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/uploads/article/20190605/6dcda1628e00ed7dfab23d18431f6c9b.png',\n     'https://ask.julyedu.com/article/999',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88634',\n     'https://ask.julyedu.com/question/88634#!answer_form',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88633',\n     'https://ask.julyedu.com/question/88633#!answer_form',\n     'https://ask.julyedu.com/explore/category-18',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88632',\n     'https://ask.julyedu.com/question/88632#!answer_form',\n     'https://ask.julyedu.com/explore/category-14',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E9%80%86%E8%BD%AC',\n     'https://ask.julyedu.com/question/88584',\n     'https://ask.julyedu.com/people/%E8%8B%A5%E6%99%B4',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7479632',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/qq%E7%94%A8%E6%88%B7497804',\n     'https://ask.julyedu.com/people/',\n     'https://ask.julyedu.com/question/86859',\n     'https://ask.julyedu.com/people/%E5%BE%AE%E4%BF%A1%E7%94%A8%E6%88%B7488524',\n     'https://ask.julyedu.com/people/%E5%BE%AE%E4%BF%A1%E7%94%A8%E6%88%B7480301',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/Michael+Michael',\n     'https://ask.julyedu.com/people/%E4%B8%83%E6%9C%88%E5%9C%A8%E7%BA%BF',\n     'https://ask.julyedu.com/question/88631',\n     'https://ask.julyedu.com/question/88631#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E4%B8%83%E6%9C%88%E5%9C%A8%E7%BA%BF',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/question/88629',\n     'https://ask.julyedu.com/question/88629#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/question/88630',\n     'https://ask.julyedu.com/question/88630#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/question/88628',\n     'https://ask.julyedu.com/question/88628#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88627',\n     'https://ask.julyedu.com/question/88627#!answer_form',\n     'https://ask.julyedu.com/explore/category-13',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88626',\n     'https://ask.julyedu.com/question/88626#!answer_form',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88625',\n     'https://ask.julyedu.com/question/88625#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88624',\n     'https://ask.julyedu.com/question/88624#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88623',\n     'https://ask.julyedu.com/question/88623#!answer_form',\n     'https://ask.julyedu.com/explore/category-14',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88622',\n     'https://ask.julyedu.com/question/88622#!answer_form',\n     'https://ask.julyedu.com/explore/category-1',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88621',\n     'https://ask.julyedu.com/question/88621#!answer_form',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/question/88619',\n     'https://ask.julyedu.com/question/88619#!answer_form',\n     'https://ask.julyedu.com/explore/category-7',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000',\n     'https://ask.julyedu.com/people/%E5%BC%A0%E7%BF%94',\n     'https://ask.julyedu.com/question/88617',\n     'https://ask.julyedu.com/question/88617#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E5%BC%A0%E7%BF%94',\n     'https://ask.julyedu.com/people/%E5%BC%A0%E7%BF%94',\n     'https://ask.julyedu.com/question/88618',\n     'https://ask.julyedu.com/question/88618#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E5%BC%A0%E7%BF%94',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/question/88616',\n     'https://ask.julyedu.com/question/88616#!answer_form',\n     'https://ask.julyedu.com/explore/category-5',\n     'https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476',\n     'https://ask.julyedu.com/people/afei3009',\n     'https://ask.julyedu.com/question/88615',\n     'https://ask.julyedu.com/question/88615#!answer_form',\n     'https://ask.julyedu.com/explore/category-13',\n     'https://ask.julyedu.com/people/afei3009',\n     'javascript:;',\n     'https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-2',\n     'https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-3',\n     'https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-4',\n     'https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-2',\n     'https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-56',\n     'https://ask.julyedu.com/topic/channel-hot',\n     'https://ask.julyedu.com/topic/python',\n     'https://ask.julyedu.com/topic/python',\n     'https://ask.julyedu.com/topic/活动',\n     'https://ask.julyedu.com/topic/活动',\n     'https://ask.julyedu.com/topic/GAN',\n     'https://ask.julyedu.com/topic/GAN',\n     'https://ask.julyedu.com/topic/面试',\n     'https://ask.julyedu.com/topic/面试',\n     'https://ask.julyedu.com/people/',\n     'https://ask.julyedu.com/people/xiaoyan2015',\n     'https://ask.julyedu.com/people/xiaoyan2015',\n     'https://ask.julyedu.com/people/qyzx_zhx',\n     'https://ask.julyedu.com/people/qyzx_zhx',\n     'https://ask.julyedu.com/people/%E7%A4%BE%E5%8C%BA%E5%B0%8F%E7%AE%A1%E5%AE%B6',\n     'https://ask.julyedu.com/people/%E7%A4%BE%E5%8C%BA%E5%B0%8F%E7%AE%A1%E5%AE%B6',\n     'https://ask.julyedu.com/people/unasm',\n     'https://ask.julyedu.com/people/unasm',\n     'https://ask.julyedu.com/people/Alina',\n     'https://ask.julyedu.com/people/Alina',\n     'http://www.julyedu.com/weekend/train9?v=m1',\n     'http://q.url.cn/AB8aue?_type=wpa&qidian=true',\n     'http://www.julyedu.com/distribution/index',\n     'http://weibo.com/askjulyedu',\n     None,\n     'https://www.julyedu.com/help/index/about',\n     'https://www.julyedu.com/help/index/contact',\n     'https://www.julyedu.com/help/index/join',\n     'https://ask.julyedu.com/question/55',\n     'https://tianchi.aliyun.com',\n     'https://cloud.tencent.com/developer/edu',\n     'https://www.aidaxue.com/?ch=qyzx',\n     'https://www.epubit.com',\n     'http://www.miitbeian.gov.cn/',\n     'https://www.cnzz.com/stat/website.php?web_id=1259748782',\n     'https://www.julyedu.com',\n     'https://www.julyedu.com/help/index/about',\n     'https://www.julyedu.com/help/index/join',\n     'http://weibo.com/askjulyedu',\n     'javascript:',\n     'https://tianchi.aliyun.com',\n     'https://cloud.tencent.com/developer/edu',\n     'https://www.aidaxue.com/?ch=qyzx',\n     'https://www.epubit.com']\n\n\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n","slug":"2019-06-30_数据抽取","published":1,"updated":"2021-04-06T13:50:37.333Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5rm002h9ohz074a5yri","content":"<h2 id=\"csv-I-O\"><a href=\"#csv-I-O\" class=\"headerlink\" title=\"csv I/O\"></a>csv I/O</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">display(pd.read_csv(<span class=\"string\">&#x27;2019-06-30_数据抽取_data1.csv&#x27;</span>))</span><br><span class=\"line\">display(pd.read_table(<span class=\"string\">&#x27;2019-06-30_数据抽取_data1.csv&#x27;</span>, sep=<span class=\"string\">&#x27;,&#x27;</span>))</span><br><span class=\"line\">display(pd.read_csv(<span class=\"string\">&#x27;2019-06-30_数据抽取_data2.csv&#x27;</span>, header=<span class=\"literal\">None</span>))</span><br><span class=\"line\">display(pd.read_csv(<span class=\"string\">&#x27;2019-06-30_数据抽取_data2.csv&#x27;</span>, names=[<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;message&#x27;</span>]))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># data.to_csv(&#x27;output.csv&#x27;)</span></span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n      <th>d</th>\n      <th>message</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>hello</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>world</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n      <td>10</td>\n      <td>11</td>\n      <td>12</td>\n      <td>foo</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n      <th>d</th>\n      <th>message</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>hello</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>world</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n      <td>10</td>\n      <td>11</td>\n      <td>12</td>\n      <td>foo</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>hello</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>world</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n      <td>10</td>\n      <td>11</td>\n      <td>12</td>\n      <td>foo</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n      <th>d</th>\n      <th>message</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>hello</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>world</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n      <td>10</td>\n      <td>11</td>\n      <td>12</td>\n      <td>foo</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<h2 id=\"json\"><a href=\"#json\" class=\"headerlink\" title=\"json\"></a>json</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">obj = \\</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&quot;姓名&quot;: &quot;张三&quot;,</span></span><br><span class=\"line\"><span class=\"string\"> &quot;住处&quot;: [&quot;天朝&quot;, &quot;挖煤国&quot;, &quot;万恶的资本主义日不落帝国&quot;],</span></span><br><span class=\"line\"><span class=\"string\"> &quot;宠物&quot;: null,</span></span><br><span class=\"line\"><span class=\"string\"> &quot;兄弟&quot;: [&#123;&quot;姓名&quot;: &quot;李四&quot;, &quot;年龄&quot;: 25, &quot;宠物&quot;: &quot;汪星人&quot;&#125;,</span></span><br><span class=\"line\"><span class=\"string\">              &#123;&quot;姓名&quot;: &quot;王五&quot;, &quot;年龄&quot;: 23, &quot;宠物&quot;: &quot;喵星人&quot;&#125;]</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\">result = json.loads(obj)  <span class=\"comment\">#&lt;class &#x27;dict&#x27;&gt;</span></span><br><span class=\"line\">result = json.dumps(result, ensure_ascii=<span class=\"literal\">False</span>)  <span class=\"comment\">#&lt;class &#x27;str&#x27;&gt;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br></pre></td></tr></table></figure>\n<pre><code>&#123;&quot;姓名&quot;: &quot;张三&quot;, &quot;住处&quot;: [&quot;天朝&quot;, &quot;挖煤国&quot;, &quot;万恶的资本主义日不落帝国&quot;], &quot;宠物&quot;: null, &quot;兄弟&quot;: [&#123;&quot;姓名&quot;: &quot;李四&quot;, &quot;年龄&quot;: 25, &quot;宠物&quot;: &quot;汪星人&quot;&#125;, &#123;&quot;姓名&quot;: &quot;王五&quot;, &quot;年龄&quot;: 23, &quot;宠物&quot;: &quot;喵星人&quot;&#125;]&#125;\n</code></pre><h2 id=\"XML-HTML\"><a href=\"#XML-HTML\" class=\"headerlink\" title=\"XML/HTML\"></a>XML/HTML</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> lxml.html <span class=\"keyword\">import</span> parse</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.request <span class=\"keyword\">import</span> urlopen</span><br><span class=\"line\"><span class=\"keyword\">import</span> ssl</span><br><span class=\"line\"></span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\">parsed = parse(urlopen(<span class=\"string\">&#x27;https://ask.julyedu.com/&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">doc = parsed.getroot()</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#拿所有&lt;a&gt;</span></span><br><span class=\"line\">urls = [lnk.get(<span class=\"string\">&#x27;href&#x27;</span>) <span class=\"keyword\">for</span> lnk <span class=\"keyword\">in</span> doc.findall(<span class=\"string\">&#x27;.//a&#x27;</span>)]</span><br><span class=\"line\">urls</span><br></pre></td></tr></table></figure>\n<pre><code>[&#39;http://www.julyedu.com/weekend/train9?v=m1&#39;,\n &#39;https://www.julyedu.com&#39;,\n &#39;https://www.julyedu.com/category/index&#39;,\n &#39;https://www.julyedu.com/question&#39;,\n &#39;https://oj.julyedu.com/&#39;,\n &#39;http://jingsai.julyedu.com/&#39;,\n &#39;https://www.julyedu.com/video/index&#39;,\n &#39;https://ask.julyedu.com&#39;,\n &#39;https://www.julyedu.com/active/qiye&#39;,\n None,\n &#39;https://www.julyedu.com/cart&#39;,\n &#39;https://passport.julyedu.com/login?redirect=http%3A%2F%2Fask.julyedu.com%2F&#39;,\n &#39;https://www.julyedu.com&#39;,\n &#39;https://passport.julyedu.com/login?redirect=https%3A%2F%2Fask.julyedu.com%2F&#39;,\n &#39;https://www.julyedu.com&#39;,\n &#39;https://www.julyedu.com/category/index&#39;,\n &#39;https://www.julyedu.com/question/index&#39;,\n &#39;https://www.julyedu.com/video/index&#39;,\n &#39;https://ask.julyedu.com&#39;,\n &#39;https://www.julyedu.com/cart/&#39;,\n &#39;https://ask.julyedu.com/explore/&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/explore/category-15&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/explore/category-13&#39;,\n &#39;https://ask.julyedu.com/explore/category-18&#39;,\n &#39;https://ask.julyedu.com/explore/category-17&#39;,\n &#39;https://ask.julyedu.com/explore/category-10&#39;,\n &#39;https://ask.julyedu.com/explore/category-16&#39;,\n &#39;https://ask.julyedu.com/explore/category-14&#39;,\n &#39;https://ask.julyedu.com/explore/category-11&#39;,\n &#39;https://ask.julyedu.com/explore/category-4&#39;,\n &#39;https://ask.julyedu.com/setting/privacy/#notifications&#39;,\n &#39;javascript:;&#39;,\n &#39;https://ask.julyedu.com/notifications/&#39;,\n &#39;&#39;,\n &#39;https://ask.julyedu.com/sort_type-hot__day-7&#39;,\n &#39;https://ask.julyedu.com/sort_type-unresponsive&#39;,\n &#39;&#39;,\n &#39;https://ask.julyedu.com/sort_type-hot__day-7&#39;,\n &#39;https://ask.julyedu.com/sort_type-unresponsive&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88655&#39;,\n &#39;https://ask.julyedu.com/question/88655#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-14&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88654&#39;,\n &#39;https://ask.julyedu.com/question/88654#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88653&#39;,\n &#39;https://ask.julyedu.com/question/88653#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88652&#39;,\n &#39;https://ask.julyedu.com/question/88652#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88651&#39;,\n &#39;https://ask.julyedu.com/question/88651#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88650&#39;,\n &#39;https://ask.julyedu.com/question/88650#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-14&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88649&#39;,\n &#39;https://ask.julyedu.com/question/88649#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88648&#39;,\n &#39;https://ask.julyedu.com/question/88648#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88647&#39;,\n &#39;https://ask.julyedu.com/question/88647#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-15&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88646&#39;,\n &#39;https://ask.julyedu.com/question/88646#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-13&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1007&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://dwz.cn/O9VznNuY&#39;,\n &#39;https://ask.julyedu.com/uploads/article/20190621/489e6c00af84ab51a832781134568131.png&#39;,\n &#39;https://ask.julyedu.com/uploads/article/20190621/424770863c018c01543b2630ed9f0153.png&#39;,\n &#39;https://ask.julyedu.com/article/1007&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1006&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://dwz.cn/bwUTiuHL&#39;,\n &#39;https://ask.julyedu.com/article/1006&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1005&#39;,\n &#39;https://ask.julyedu.com/explore/category-15&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://dwz.cn/ZmFmFUmY&#39;,\n &#39;https://ask.julyedu.com/article/1005&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1004&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://dwz.cn/kFJZuxek&#39;,\n &#39;https://ask.julyedu.com/uploads/article/20190619/eab24a8a5b30672d260dd446d7b21c8b.png&#39;,\n &#39;https://ask.julyedu.com/article/1004&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88645&#39;,\n &#39;https://ask.julyedu.com/question/88645#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1003&#39;,\n &#39;https://ask.julyedu.com/explore/category-13&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://dwz.cn/Ar8fDfbn&#39;,\n &#39;https://ask.julyedu.com/uploads/article/20190618/ad20b22eee771ee56e4f674f341ee397.png&#39;,\n &#39;https://ask.julyedu.com/article/1003&#39;,\n &#39;https://ask.julyedu.com/people/Darlingpan&#39;,\n &#39;https://ask.julyedu.com/question/86722&#39;,\n &#39;https://ask.julyedu.com/people/%E8%8E%B9%E5%AE%9D%E5%AE%9D&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E8%8E%B9%E5%AE%9D%E5%AE%9D&#39;,\n &#39;https://ask.julyedu.com/people/Darlingpan&#39;,\n &#39;https://ask.julyedu.com/question/85510&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7545057&#39;,\n &#39;https://ask.julyedu.com/explore/category-13&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7545057&#39;,\n &#39;https://ask.julyedu.com/people/zdl&#39;,\n &#39;https://ask.julyedu.com/question/88644&#39;,\n &#39;https://ask.julyedu.com/question/88644#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/zdl&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1002&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://dwz.cn/kRg2NTm0&#39;,\n &#39;https://ask.julyedu.com/article/1002&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88643&#39;,\n &#39;https://ask.julyedu.com/question/88643#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-13&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/question/88642&#39;,\n &#39;https://ask.julyedu.com/question/88642#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/question/88641&#39;,\n &#39;https://ask.julyedu.com/question/88641#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/people/%E4%B8%83%E6%9C%88%E5%9C%A8%E7%BA%BF&#39;,\n &#39;https://ask.julyedu.com/question/88640&#39;,\n &#39;https://ask.julyedu.com/question/88640#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-4&#39;,\n &#39;https://ask.julyedu.com/people/%E4%B8%83%E6%9C%88%E5%9C%A8%E7%BA%BF&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88639&#39;,\n &#39;https://ask.julyedu.com/question/88639#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88638&#39;,\n &#39;https://ask.julyedu.com/question/88638#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1001&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1001&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1000&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/999&#39;,\n &#39;https://ask.julyedu.com/explore/category-13&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/uploads/article/20190605/6dcda1628e00ed7dfab23d18431f6c9b.png&#39;,\n &#39;https://ask.julyedu.com/article/999&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88634&#39;,\n &#39;https://ask.julyedu.com/question/88634#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88633&#39;,\n &#39;https://ask.julyedu.com/question/88633#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-18&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88632&#39;,\n &#39;https://ask.julyedu.com/question/88632#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-14&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E9%80%86%E8%BD%AC&#39;,\n &#39;https://ask.julyedu.com/question/88584&#39;,\n &#39;https://ask.julyedu.com/people/%E8%8B%A5%E6%99%B4&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7479632&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/qq%E7%94%A8%E6%88%B7497804&#39;,\n &#39;https://ask.julyedu.com/people/&#39;,\n &#39;https://ask.julyedu.com/question/86859&#39;,\n &#39;https://ask.julyedu.com/people/%E5%BE%AE%E4%BF%A1%E7%94%A8%E6%88%B7488524&#39;,\n &#39;https://ask.julyedu.com/people/%E5%BE%AE%E4%BF%A1%E7%94%A8%E6%88%B7480301&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/Michael+Michael&#39;,\n &#39;https://ask.julyedu.com/people/%E4%B8%83%E6%9C%88%E5%9C%A8%E7%BA%BF&#39;,\n &#39;https://ask.julyedu.com/question/88631&#39;,\n &#39;https://ask.julyedu.com/question/88631#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E4%B8%83%E6%9C%88%E5%9C%A8%E7%BA%BF&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/question/88629&#39;,\n &#39;https://ask.julyedu.com/question/88629#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/question/88630&#39;,\n &#39;https://ask.julyedu.com/question/88630#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/question/88628&#39;,\n &#39;https://ask.julyedu.com/question/88628#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88627&#39;,\n &#39;https://ask.julyedu.com/question/88627#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-13&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88626&#39;,\n &#39;https://ask.julyedu.com/question/88626#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88625&#39;,\n &#39;https://ask.julyedu.com/question/88625#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88624&#39;,\n &#39;https://ask.julyedu.com/question/88624#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88623&#39;,\n &#39;https://ask.julyedu.com/question/88623#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-14&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88622&#39;,\n &#39;https://ask.julyedu.com/question/88622#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88621&#39;,\n &#39;https://ask.julyedu.com/question/88621#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88619&#39;,\n &#39;https://ask.julyedu.com/question/88619#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E5%BC%A0%E7%BF%94&#39;,\n &#39;https://ask.julyedu.com/question/88617&#39;,\n &#39;https://ask.julyedu.com/question/88617#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E5%BC%A0%E7%BF%94&#39;,\n &#39;https://ask.julyedu.com/people/%E5%BC%A0%E7%BF%94&#39;,\n &#39;https://ask.julyedu.com/question/88618&#39;,\n &#39;https://ask.julyedu.com/question/88618#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E5%BC%A0%E7%BF%94&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/question/88616&#39;,\n &#39;https://ask.julyedu.com/question/88616#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/people/afei3009&#39;,\n &#39;https://ask.julyedu.com/question/88615&#39;,\n &#39;https://ask.julyedu.com/question/88615#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-13&#39;,\n &#39;https://ask.julyedu.com/people/afei3009&#39;,\n &#39;javascript:;&#39;,\n &#39;https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-2&#39;,\n &#39;https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-3&#39;,\n &#39;https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-4&#39;,\n &#39;https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-2&#39;,\n &#39;https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-56&#39;,\n &#39;https://ask.julyedu.com/topic/channel-hot&#39;,\n &#39;https://ask.julyedu.com/topic/python&#39;,\n &#39;https://ask.julyedu.com/topic/python&#39;,\n &#39;https://ask.julyedu.com/topic/活动&#39;,\n &#39;https://ask.julyedu.com/topic/活动&#39;,\n &#39;https://ask.julyedu.com/topic/GAN&#39;,\n &#39;https://ask.julyedu.com/topic/GAN&#39;,\n &#39;https://ask.julyedu.com/topic/面试&#39;,\n &#39;https://ask.julyedu.com/topic/面试&#39;,\n &#39;https://ask.julyedu.com/people/&#39;,\n &#39;https://ask.julyedu.com/people/xiaoyan2015&#39;,\n &#39;https://ask.julyedu.com/people/xiaoyan2015&#39;,\n &#39;https://ask.julyedu.com/people/qyzx_zhx&#39;,\n &#39;https://ask.julyedu.com/people/qyzx_zhx&#39;,\n &#39;https://ask.julyedu.com/people/%E7%A4%BE%E5%8C%BA%E5%B0%8F%E7%AE%A1%E5%AE%B6&#39;,\n &#39;https://ask.julyedu.com/people/%E7%A4%BE%E5%8C%BA%E5%B0%8F%E7%AE%A1%E5%AE%B6&#39;,\n &#39;https://ask.julyedu.com/people/unasm&#39;,\n &#39;https://ask.julyedu.com/people/unasm&#39;,\n &#39;https://ask.julyedu.com/people/Alina&#39;,\n &#39;https://ask.julyedu.com/people/Alina&#39;,\n &#39;http://www.julyedu.com/weekend/train9?v=m1&#39;,\n &#39;http://q.url.cn/AB8aue?_type=wpa&amp;qidian=true&#39;,\n &#39;http://www.julyedu.com/distribution/index&#39;,\n &#39;http://weibo.com/askjulyedu&#39;,\n None,\n &#39;https://www.julyedu.com/help/index/about&#39;,\n &#39;https://www.julyedu.com/help/index/contact&#39;,\n &#39;https://www.julyedu.com/help/index/join&#39;,\n &#39;https://ask.julyedu.com/question/55&#39;,\n &#39;https://tianchi.aliyun.com&#39;,\n &#39;https://cloud.tencent.com/developer/edu&#39;,\n &#39;https://www.aidaxue.com/?ch=qyzx&#39;,\n &#39;https://www.epubit.com&#39;,\n &#39;http://www.miitbeian.gov.cn/&#39;,\n &#39;https://www.cnzz.com/stat/website.php?web_id=1259748782&#39;,\n &#39;https://www.julyedu.com&#39;,\n &#39;https://www.julyedu.com/help/index/about&#39;,\n &#39;https://www.julyedu.com/help/index/join&#39;,\n &#39;http://weibo.com/askjulyedu&#39;,\n &#39;javascript:&#39;,\n &#39;https://tianchi.aliyun.com&#39;,\n &#39;https://cloud.tencent.com/developer/edu&#39;,\n &#39;https://www.aidaxue.com/?ch=qyzx&#39;,\n &#39;https://www.epubit.com&#39;]\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.julyedu.com/course/getDetail/66/\" >廖雪峰Python数据分析<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"csv-I-O\"><a href=\"#csv-I-O\" class=\"headerlink\" title=\"csv I/O\"></a>csv I/O</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"></span><br><span class=\"line\">display(pd.read_csv(<span class=\"string\">&#x27;2019-06-30_数据抽取_data1.csv&#x27;</span>))</span><br><span class=\"line\">display(pd.read_table(<span class=\"string\">&#x27;2019-06-30_数据抽取_data1.csv&#x27;</span>, sep=<span class=\"string\">&#x27;,&#x27;</span>))</span><br><span class=\"line\">display(pd.read_csv(<span class=\"string\">&#x27;2019-06-30_数据抽取_data2.csv&#x27;</span>, header=<span class=\"literal\">None</span>))</span><br><span class=\"line\">display(pd.read_csv(<span class=\"string\">&#x27;2019-06-30_数据抽取_data2.csv&#x27;</span>, names=[<span class=\"string\">&#x27;a&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;c&#x27;</span>, <span class=\"string\">&#x27;d&#x27;</span>, <span class=\"string\">&#x27;message&#x27;</span>]))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># data.to_csv(&#x27;output.csv&#x27;)</span></span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n      <th>d</th>\n      <th>message</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>hello</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>world</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n      <td>10</td>\n      <td>11</td>\n      <td>12</td>\n      <td>foo</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n      <th>d</th>\n      <th>message</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>hello</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>world</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n      <td>10</td>\n      <td>11</td>\n      <td>12</td>\n      <td>foo</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>hello</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>world</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n      <td>10</td>\n      <td>11</td>\n      <td>12</td>\n      <td>foo</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n      <th>d</th>\n      <th>message</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n      <td>hello</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>world</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>9</td>\n      <td>10</td>\n      <td>11</td>\n      <td>12</td>\n      <td>foo</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<h2 id=\"json\"><a href=\"#json\" class=\"headerlink\" title=\"json\"></a>json</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">obj = \\</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">&#123;&quot;姓名&quot;: &quot;张三&quot;,</span></span><br><span class=\"line\"><span class=\"string\"> &quot;住处&quot;: [&quot;天朝&quot;, &quot;挖煤国&quot;, &quot;万恶的资本主义日不落帝国&quot;],</span></span><br><span class=\"line\"><span class=\"string\"> &quot;宠物&quot;: null,</span></span><br><span class=\"line\"><span class=\"string\"> &quot;兄弟&quot;: [&#123;&quot;姓名&quot;: &quot;李四&quot;, &quot;年龄&quot;: 25, &quot;宠物&quot;: &quot;汪星人&quot;&#125;,</span></span><br><span class=\"line\"><span class=\"string\">              &#123;&quot;姓名&quot;: &quot;王五&quot;, &quot;年龄&quot;: 23, &quot;宠物&quot;: &quot;喵星人&quot;&#125;]</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\">result = json.loads(obj)  <span class=\"comment\">#&lt;class &#x27;dict&#x27;&gt;</span></span><br><span class=\"line\">result = json.dumps(result, ensure_ascii=<span class=\"literal\">False</span>)  <span class=\"comment\">#&lt;class &#x27;str&#x27;&gt;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br></pre></td></tr></table></figure>\n<pre><code>&#123;&quot;姓名&quot;: &quot;张三&quot;, &quot;住处&quot;: [&quot;天朝&quot;, &quot;挖煤国&quot;, &quot;万恶的资本主义日不落帝国&quot;], &quot;宠物&quot;: null, &quot;兄弟&quot;: [&#123;&quot;姓名&quot;: &quot;李四&quot;, &quot;年龄&quot;: 25, &quot;宠物&quot;: &quot;汪星人&quot;&#125;, &#123;&quot;姓名&quot;: &quot;王五&quot;, &quot;年龄&quot;: 23, &quot;宠物&quot;: &quot;喵星人&quot;&#125;]&#125;\n</code></pre><h2 id=\"XML-HTML\"><a href=\"#XML-HTML\" class=\"headerlink\" title=\"XML/HTML\"></a>XML/HTML</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> lxml.html <span class=\"keyword\">import</span> parse</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.request <span class=\"keyword\">import</span> urlopen</span><br><span class=\"line\"><span class=\"keyword\">import</span> ssl</span><br><span class=\"line\"></span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\">parsed = parse(urlopen(<span class=\"string\">&#x27;https://ask.julyedu.com/&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">doc = parsed.getroot()</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#拿所有&lt;a&gt;</span></span><br><span class=\"line\">urls = [lnk.get(<span class=\"string\">&#x27;href&#x27;</span>) <span class=\"keyword\">for</span> lnk <span class=\"keyword\">in</span> doc.findall(<span class=\"string\">&#x27;.//a&#x27;</span>)]</span><br><span class=\"line\">urls</span><br></pre></td></tr></table></figure>\n<pre><code>[&#39;http://www.julyedu.com/weekend/train9?v=m1&#39;,\n &#39;https://www.julyedu.com&#39;,\n &#39;https://www.julyedu.com/category/index&#39;,\n &#39;https://www.julyedu.com/question&#39;,\n &#39;https://oj.julyedu.com/&#39;,\n &#39;http://jingsai.julyedu.com/&#39;,\n &#39;https://www.julyedu.com/video/index&#39;,\n &#39;https://ask.julyedu.com&#39;,\n &#39;https://www.julyedu.com/active/qiye&#39;,\n None,\n &#39;https://www.julyedu.com/cart&#39;,\n &#39;https://passport.julyedu.com/login?redirect=http%3A%2F%2Fask.julyedu.com%2F&#39;,\n &#39;https://www.julyedu.com&#39;,\n &#39;https://passport.julyedu.com/login?redirect=https%3A%2F%2Fask.julyedu.com%2F&#39;,\n &#39;https://www.julyedu.com&#39;,\n &#39;https://www.julyedu.com/category/index&#39;,\n &#39;https://www.julyedu.com/question/index&#39;,\n &#39;https://www.julyedu.com/video/index&#39;,\n &#39;https://ask.julyedu.com&#39;,\n &#39;https://www.julyedu.com/cart/&#39;,\n &#39;https://ask.julyedu.com/explore/&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/explore/category-15&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/explore/category-13&#39;,\n &#39;https://ask.julyedu.com/explore/category-18&#39;,\n &#39;https://ask.julyedu.com/explore/category-17&#39;,\n &#39;https://ask.julyedu.com/explore/category-10&#39;,\n &#39;https://ask.julyedu.com/explore/category-16&#39;,\n &#39;https://ask.julyedu.com/explore/category-14&#39;,\n &#39;https://ask.julyedu.com/explore/category-11&#39;,\n &#39;https://ask.julyedu.com/explore/category-4&#39;,\n &#39;https://ask.julyedu.com/setting/privacy/#notifications&#39;,\n &#39;javascript:;&#39;,\n &#39;https://ask.julyedu.com/notifications/&#39;,\n &#39;&#39;,\n &#39;https://ask.julyedu.com/sort_type-hot__day-7&#39;,\n &#39;https://ask.julyedu.com/sort_type-unresponsive&#39;,\n &#39;&#39;,\n &#39;https://ask.julyedu.com/sort_type-hot__day-7&#39;,\n &#39;https://ask.julyedu.com/sort_type-unresponsive&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88655&#39;,\n &#39;https://ask.julyedu.com/question/88655#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-14&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88654&#39;,\n &#39;https://ask.julyedu.com/question/88654#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88653&#39;,\n &#39;https://ask.julyedu.com/question/88653#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88652&#39;,\n &#39;https://ask.julyedu.com/question/88652#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88651&#39;,\n &#39;https://ask.julyedu.com/question/88651#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88650&#39;,\n &#39;https://ask.julyedu.com/question/88650#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-14&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88649&#39;,\n &#39;https://ask.julyedu.com/question/88649#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88648&#39;,\n &#39;https://ask.julyedu.com/question/88648#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88647&#39;,\n &#39;https://ask.julyedu.com/question/88647#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-15&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88646&#39;,\n &#39;https://ask.julyedu.com/question/88646#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-13&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1007&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://dwz.cn/O9VznNuY&#39;,\n &#39;https://ask.julyedu.com/uploads/article/20190621/489e6c00af84ab51a832781134568131.png&#39;,\n &#39;https://ask.julyedu.com/uploads/article/20190621/424770863c018c01543b2630ed9f0153.png&#39;,\n &#39;https://ask.julyedu.com/article/1007&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1006&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://dwz.cn/bwUTiuHL&#39;,\n &#39;https://ask.julyedu.com/article/1006&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1005&#39;,\n &#39;https://ask.julyedu.com/explore/category-15&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://dwz.cn/ZmFmFUmY&#39;,\n &#39;https://ask.julyedu.com/article/1005&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1004&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://dwz.cn/kFJZuxek&#39;,\n &#39;https://ask.julyedu.com/uploads/article/20190619/eab24a8a5b30672d260dd446d7b21c8b.png&#39;,\n &#39;https://ask.julyedu.com/article/1004&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88645&#39;,\n &#39;https://ask.julyedu.com/question/88645#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1003&#39;,\n &#39;https://ask.julyedu.com/explore/category-13&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://dwz.cn/Ar8fDfbn&#39;,\n &#39;https://ask.julyedu.com/uploads/article/20190618/ad20b22eee771ee56e4f674f341ee397.png&#39;,\n &#39;https://ask.julyedu.com/article/1003&#39;,\n &#39;https://ask.julyedu.com/people/Darlingpan&#39;,\n &#39;https://ask.julyedu.com/question/86722&#39;,\n &#39;https://ask.julyedu.com/people/%E8%8E%B9%E5%AE%9D%E5%AE%9D&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E8%8E%B9%E5%AE%9D%E5%AE%9D&#39;,\n &#39;https://ask.julyedu.com/people/Darlingpan&#39;,\n &#39;https://ask.julyedu.com/question/85510&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7545057&#39;,\n &#39;https://ask.julyedu.com/explore/category-13&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7545057&#39;,\n &#39;https://ask.julyedu.com/people/zdl&#39;,\n &#39;https://ask.julyedu.com/question/88644&#39;,\n &#39;https://ask.julyedu.com/question/88644#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/zdl&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1002&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://dwz.cn/kRg2NTm0&#39;,\n &#39;https://ask.julyedu.com/article/1002&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88643&#39;,\n &#39;https://ask.julyedu.com/question/88643#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-13&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/question/88642&#39;,\n &#39;https://ask.julyedu.com/question/88642#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/question/88641&#39;,\n &#39;https://ask.julyedu.com/question/88641#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/people/%E4%B8%83%E6%9C%88%E5%9C%A8%E7%BA%BF&#39;,\n &#39;https://ask.julyedu.com/question/88640&#39;,\n &#39;https://ask.julyedu.com/question/88640#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-4&#39;,\n &#39;https://ask.julyedu.com/people/%E4%B8%83%E6%9C%88%E5%9C%A8%E7%BA%BF&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88639&#39;,\n &#39;https://ask.julyedu.com/question/88639#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88638&#39;,\n &#39;https://ask.julyedu.com/question/88638#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1001&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1001&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1000&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/1000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/article/999&#39;,\n &#39;https://ask.julyedu.com/explore/category-13&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/uploads/article/20190605/6dcda1628e00ed7dfab23d18431f6c9b.png&#39;,\n &#39;https://ask.julyedu.com/article/999&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88634&#39;,\n &#39;https://ask.julyedu.com/question/88634#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88633&#39;,\n &#39;https://ask.julyedu.com/question/88633#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-18&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88632&#39;,\n &#39;https://ask.julyedu.com/question/88632#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-14&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E9%80%86%E8%BD%AC&#39;,\n &#39;https://ask.julyedu.com/question/88584&#39;,\n &#39;https://ask.julyedu.com/people/%E8%8B%A5%E6%99%B4&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7479632&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/qq%E7%94%A8%E6%88%B7497804&#39;,\n &#39;https://ask.julyedu.com/people/&#39;,\n &#39;https://ask.julyedu.com/question/86859&#39;,\n &#39;https://ask.julyedu.com/people/%E5%BE%AE%E4%BF%A1%E7%94%A8%E6%88%B7488524&#39;,\n &#39;https://ask.julyedu.com/people/%E5%BE%AE%E4%BF%A1%E7%94%A8%E6%88%B7480301&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/Michael+Michael&#39;,\n &#39;https://ask.julyedu.com/people/%E4%B8%83%E6%9C%88%E5%9C%A8%E7%BA%BF&#39;,\n &#39;https://ask.julyedu.com/question/88631&#39;,\n &#39;https://ask.julyedu.com/question/88631#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E4%B8%83%E6%9C%88%E5%9C%A8%E7%BA%BF&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/question/88629&#39;,\n &#39;https://ask.julyedu.com/question/88629#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/question/88630&#39;,\n &#39;https://ask.julyedu.com/question/88630#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/question/88628&#39;,\n &#39;https://ask.julyedu.com/question/88628#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88627&#39;,\n &#39;https://ask.julyedu.com/question/88627#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-13&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88626&#39;,\n &#39;https://ask.julyedu.com/question/88626#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88625&#39;,\n &#39;https://ask.julyedu.com/question/88625#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88624&#39;,\n &#39;https://ask.julyedu.com/question/88624#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88623&#39;,\n &#39;https://ask.julyedu.com/question/88623#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-14&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88622&#39;,\n &#39;https://ask.julyedu.com/question/88622#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-1&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88621&#39;,\n &#39;https://ask.julyedu.com/question/88621#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/question/88619&#39;,\n &#39;https://ask.julyedu.com/question/88619#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-7&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7527000&#39;,\n &#39;https://ask.julyedu.com/people/%E5%BC%A0%E7%BF%94&#39;,\n &#39;https://ask.julyedu.com/question/88617&#39;,\n &#39;https://ask.julyedu.com/question/88617#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E5%BC%A0%E7%BF%94&#39;,\n &#39;https://ask.julyedu.com/people/%E5%BC%A0%E7%BF%94&#39;,\n &#39;https://ask.julyedu.com/question/88618&#39;,\n &#39;https://ask.julyedu.com/question/88618#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E5%BC%A0%E7%BF%94&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/question/88616&#39;,\n &#39;https://ask.julyedu.com/question/88616#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-5&#39;,\n &#39;https://ask.julyedu.com/people/%E6%89%8B%E6%9C%BA%E7%94%A8%E6%88%B7505476&#39;,\n &#39;https://ask.julyedu.com/people/afei3009&#39;,\n &#39;https://ask.julyedu.com/question/88615&#39;,\n &#39;https://ask.julyedu.com/question/88615#!answer_form&#39;,\n &#39;https://ask.julyedu.com/explore/category-13&#39;,\n &#39;https://ask.julyedu.com/people/afei3009&#39;,\n &#39;javascript:;&#39;,\n &#39;https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-2&#39;,\n &#39;https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-3&#39;,\n &#39;https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-4&#39;,\n &#39;https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-2&#39;,\n &#39;https://ask.julyedu.com/sort_type-new__day-0__is_recommend-0__page-56&#39;,\n &#39;https://ask.julyedu.com/topic/channel-hot&#39;,\n &#39;https://ask.julyedu.com/topic/python&#39;,\n &#39;https://ask.julyedu.com/topic/python&#39;,\n &#39;https://ask.julyedu.com/topic/活动&#39;,\n &#39;https://ask.julyedu.com/topic/活动&#39;,\n &#39;https://ask.julyedu.com/topic/GAN&#39;,\n &#39;https://ask.julyedu.com/topic/GAN&#39;,\n &#39;https://ask.julyedu.com/topic/面试&#39;,\n &#39;https://ask.julyedu.com/topic/面试&#39;,\n &#39;https://ask.julyedu.com/people/&#39;,\n &#39;https://ask.julyedu.com/people/xiaoyan2015&#39;,\n &#39;https://ask.julyedu.com/people/xiaoyan2015&#39;,\n &#39;https://ask.julyedu.com/people/qyzx_zhx&#39;,\n &#39;https://ask.julyedu.com/people/qyzx_zhx&#39;,\n &#39;https://ask.julyedu.com/people/%E7%A4%BE%E5%8C%BA%E5%B0%8F%E7%AE%A1%E5%AE%B6&#39;,\n &#39;https://ask.julyedu.com/people/%E7%A4%BE%E5%8C%BA%E5%B0%8F%E7%AE%A1%E5%AE%B6&#39;,\n &#39;https://ask.julyedu.com/people/unasm&#39;,\n &#39;https://ask.julyedu.com/people/unasm&#39;,\n &#39;https://ask.julyedu.com/people/Alina&#39;,\n &#39;https://ask.julyedu.com/people/Alina&#39;,\n &#39;http://www.julyedu.com/weekend/train9?v=m1&#39;,\n &#39;http://q.url.cn/AB8aue?_type=wpa&amp;qidian=true&#39;,\n &#39;http://www.julyedu.com/distribution/index&#39;,\n &#39;http://weibo.com/askjulyedu&#39;,\n None,\n &#39;https://www.julyedu.com/help/index/about&#39;,\n &#39;https://www.julyedu.com/help/index/contact&#39;,\n &#39;https://www.julyedu.com/help/index/join&#39;,\n &#39;https://ask.julyedu.com/question/55&#39;,\n &#39;https://tianchi.aliyun.com&#39;,\n &#39;https://cloud.tencent.com/developer/edu&#39;,\n &#39;https://www.aidaxue.com/?ch=qyzx&#39;,\n &#39;https://www.epubit.com&#39;,\n &#39;http://www.miitbeian.gov.cn/&#39;,\n &#39;https://www.cnzz.com/stat/website.php?web_id=1259748782&#39;,\n &#39;https://www.julyedu.com&#39;,\n &#39;https://www.julyedu.com/help/index/about&#39;,\n &#39;https://www.julyedu.com/help/index/join&#39;,\n &#39;http://weibo.com/askjulyedu&#39;,\n &#39;javascript:&#39;,\n &#39;https://tianchi.aliyun.com&#39;,\n &#39;https://cloud.tencent.com/developer/edu&#39;,\n &#39;https://www.aidaxue.com/?ch=qyzx&#39;,\n &#39;https://www.epubit.com&#39;]\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.julyedu.com/course/getDetail/66/\" >廖雪峰Python数据分析<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"6种分类模型比较","mathjax":false,"abbrlink":32513,"date":"2019-08-06T16:00:00.000Z","_content":"\n## 数据集载入\n\n\n```python\n# -*- coding: utf-8 -*-\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\ndf = pd.read_csv(u\"2019-08-01_金融数据描述_data1.csv\",encoding = 'gbk')\n```\n\n\n```python\ndf.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 4754 entries, 0 to 4753\n    Data columns (total 90 columns):\n    Unnamed: 0                                    4754 non-null int64\n    custid                                        4754 non-null int64\n    trade_no                                      4754 non-null object\n    bank_card_no                                  4754 non-null object\n    low_volume_percent                            4752 non-null float64\n    middle_volume_percent                         4752 non-null float64\n    take_amount_in_later_12_month_highest         4754 non-null int64\n    trans_amount_increase_rate_lately             4751 non-null float64\n    trans_activity_month                          4752 non-null float64\n    trans_activity_day                            4752 non-null float64\n    transd_mcc                                    4752 non-null float64\n    trans_days_interval_filter                    4746 non-null float64\n    trans_days_interval                           4752 non-null float64\n    regional_mobility                             4752 non-null float64\n    student_feature                               1756 non-null float64\n    repayment_capability                          4754 non-null int64\n    is_high_user                                  4754 non-null int64\n    number_of_trans_from_2011                     4752 non-null float64\n    first_transaction_time                        4752 non-null float64\n    historical_trans_amount                       4754 non-null int64\n    historical_trans_day                          4752 non-null float64\n    rank_trad_1_month                             4752 non-null float64\n    trans_amount_3_month                          4754 non-null int64\n    avg_consume_less_12_valid_month               4752 non-null float64\n    abs                                           4754 non-null int64\n    top_trans_count_last_1_month                  4752 non-null float64\n    avg_price_last_12_month                       4754 non-null int64\n    avg_price_top_last_12_valid_month             4650 non-null float64\n    reg_preference_for_trad                       4752 non-null object\n    trans_top_time_last_1_month                   4746 non-null float64\n    trans_top_time_last_6_month                   4746 non-null float64\n    consume_top_time_last_1_month                 4746 non-null float64\n    consume_top_time_last_6_month                 4746 non-null float64\n    cross_consume_count_last_1_month              4328 non-null float64\n    trans_fail_top_count_enum_last_1_month        4738 non-null float64\n    trans_fail_top_count_enum_last_6_month        4738 non-null float64\n    trans_fail_top_count_enum_last_12_month       4738 non-null float64\n    consume_mini_time_last_1_month                4728 non-null float64\n    max_cumulative_consume_later_1_month          4754 non-null int64\n    max_consume_count_later_6_month               4746 non-null float64\n    railway_consume_count_last_12_month           4742 non-null float64\n    pawns_auctions_trusts_consume_last_1_month    4754 non-null int64\n    pawns_auctions_trusts_consume_last_6_month    4754 non-null int64\n    jewelry_consume_count_last_6_month            4742 non-null float64\n    status                                        4754 non-null int64\n    source                                        4754 non-null object\n    first_transaction_day                         4752 non-null float64\n    trans_day_last_12_month                       4752 non-null float64\n    id_name                                       4478 non-null object\n    apply_score                                   4450 non-null float64\n    apply_credibility                             4450 non-null float64\n    query_org_count                               4450 non-null float64\n    query_finance_count                           4450 non-null float64\n    query_cash_count                              4450 non-null float64\n    query_sum_count                               4450 non-null float64\n    latest_query_time                             4450 non-null object\n    latest_one_month_apply                        4450 non-null float64\n    latest_three_month_apply                      4450 non-null float64\n    latest_six_month_apply                        4450 non-null float64\n    loans_score                                   4457 non-null float64\n    loans_credibility_behavior                    4457 non-null float64\n    loans_count                                   4457 non-null float64\n    loans_settle_count                            4457 non-null float64\n    loans_overdue_count                           4457 non-null float64\n    loans_org_count_behavior                      4457 non-null float64\n    consfin_org_count_behavior                    4457 non-null float64\n    loans_cash_count                              4457 non-null float64\n    latest_one_month_loan                         4457 non-null float64\n    latest_three_month_loan                       4457 non-null float64\n    latest_six_month_loan                         4457 non-null float64\n    history_suc_fee                               4457 non-null float64\n    history_fail_fee                              4457 non-null float64\n    latest_one_month_suc                          4457 non-null float64\n    latest_one_month_fail                         4457 non-null float64\n    loans_long_time                               4457 non-null float64\n    loans_latest_time                             4457 non-null object\n    loans_credit_limit                            4457 non-null float64\n    loans_credibility_limit                       4457 non-null float64\n    loans_org_count_current                       4457 non-null float64\n    loans_product_count                           4457 non-null float64\n    loans_max_limit                               4457 non-null float64\n    loans_avg_limit                               4457 non-null float64\n    consfin_credit_limit                          4457 non-null float64\n    consfin_credibility                           4457 non-null float64\n    consfin_org_count_current                     4457 non-null float64\n    consfin_product_count                         4457 non-null float64\n    consfin_max_limit                             4457 non-null float64\n    consfin_avg_limit                             4457 non-null float64\n    latest_query_day                              4450 non-null float64\n    loans_latest_day                              4457 non-null float64\n    dtypes: float64(70), int64(13), object(7)\n    memory usage: 3.3+ MB\n\n\n## 特征预处理\n\n### 删除无用\n\n\n```python\ndelete = ['Unnamed: 0', 'custid', 'trade_no', 'bank_card_no','id_name','latest_query_time','source','loans_latest_time','first_transaction_time', 'student_feature']\ndf = df.drop(delete,axis=1)\n```\n\n### 处理分类型特征\n\n\n```python\nfrom sklearn.preprocessing import LabelEncoder\ndf['reg_preference_for_trad'] = LabelEncoder().fit_transform(df['reg_preference_for_trad'].astype(str))\n```\n\n### 使用众数填充\n\n\n```python\nfrom sklearn.preprocessing import Imputer\nfor i in range(df.shape[1]):\n    feature = df.iloc[:,i].values.reshape(-1,1)\n    imp_mode = Imputer(strategy='most_frequent')\n    df.iloc[:,i] = imp_mode.fit_transform(feature)\n```\n\n## 数据划分\n\n\n```python\nX = df[:].drop(\"status\",axis=1)\ny = df[\"status\"]\n```\n\n\n```python\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle = False)\n```\n\n## 数据归一化\n\n\n```python\nfrom sklearn.preprocessing import minmax_scale\nX_train = minmax_scale(X_train)\nX_test =  minmax_scale(X_test)\n```\n\n## 建模与预测\n\n### 使用一般建模方法\n\n\n```python\nfrom sklearn.metrics import *\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score\n\nLR = LogisticRegression()\nLR = LR.fit(X_train, y_train)\n# LR = cross_val_score(LR, X_train, y_train, cv = 5)\n\nsvc = SVC(kernel='linear', probability = True)\nsvc = svc.fit(X_train, y_train)\n# svc = cross_val_score(svc,X_train,y_train, cv = 5)\n\nDT = DecisionTreeClassifier(max_depth = 6)\nDT = DT.fit(X_train, y_train)\n# DT = cross_val_score(DT, X_train, y_train, cv = 5)\n\nRF = RandomForestClassifier()\nRF = RF.fit(X_train, y_train)\n# RF = cross_val_score(RF, X_train, y_train, cv = 5)\n\nKNN = KNeighborsClassifier()\nKNN = KNN.fit(X_train, y_train)\n# LR = cross_val_score(LR, X_train, y_train, cv = 5)\n\nGBDT = GradientBoostingClassifier()\nGBDT = GBDT.fit(X_train, y_train)\n# LR = cross_val_score(LR, X_train, y_train, cv = 5)\n\nnames = [\"LR\", \"SVC\", 'DT', \"RF\", \"KNN\", \"GBDT\"]\nmodels = [LR, svc, DT, RF, KNN, GBDT]\nevaluates = ['accuracy', 'precision', 'recall', 'f1', 'roc_auc']\n```\n\n\n```python\ndf_list = []\nfor name,model in zip(names,models):\n    y_train_pred = model.predict(X_train)\n    y_test_pred = model.predict(X_test)\n    \n    #accuracy\n    train_accuracy = model.score(X_train,y_train)\n    test_accuracy = model.score(X_test,y_test)\n    \n    \n    #precision   \n    train_precision = precision_score(y_train,y_train_pred)\n    test_precision = precision_score(y_test,y_test_pred)   \n    \n    #recall\n    train_recall = recall_score(y_train,y_train_pred)\n    test_recall = recall_score(y_test,y_test_pred)   \n    \n    #f1\n    train_f1 = f1_score(y_train,y_train_pred)\n    test_f1 = f1_score(y_test,y_test_pred)   \n    \n    #auc\n    y_train_pred = model.predict_proba(X_train)[:,1]\n    y_test_pred = model.predict_proba(X_test)[:,1]\n    \n    train_auc = roc_auc_score(y_train,y_train_pred)\n    test_auc = roc_auc_score(y_test,y_test_pred)\n    \n    print('{} 训练集： accuracy:{:.3},precision:{:.3}, recall:{:.3}, f1:{:.3}, auc:{:.3}'.format(name,train_accuracy,train_precision,train_recall,train_f1,train_auc))\n    print('{} 测试集： accuracy:{:.3},precision:{:.3}, recall:{:.3}, f1:{:.3}, auc:{:.3}'.format(name,test_accuracy,test_precision,test_recall,test_f1,test_auc))\n    print('\\n')\n    df = pd.DataFrame(np.array([train_accuracy,train_precision,train_recall,train_f1,train_auc,test_accuracy,test_precision,test_recall,test_f1,test_auc]).reshape(2,-1),\n                  index = ['train','test'],\n                  columns = ['Accuracy','Precision','Recall','F1-Score','AUC-Score'])\n    df_list.append(df)\n\npd.concat(df_list,axis=0,keys=names)\n```\n\n    LR 训练集： accuracy:0.801,precision:0.742, recall:0.279, f1:0.406, auc:0.8\n    LR 测试集： accuracy:0.789,precision:0.752, recall:0.365, f1:0.491, auc:0.787\n    \n    \n    SVC 训练集： accuracy:0.793,precision:0.809, recall:0.196, f1:0.316, auc:0.809\n    SVC 测试集： accuracy:0.771,precision:0.843, recall:0.222, f1:0.351, auc:0.796\n    \n    \n    DT 训练集： accuracy:0.829,precision:0.723, recall:0.487, f1:0.582, auc:0.832\n    DT 测试集： accuracy:0.727,precision:0.516, recall:0.361, f1:0.425, auc:0.707\n    \n    \n    RF 训练集： accuracy:0.981,precision:0.999, recall:0.924, f1:0.96, auc:0.999\n    RF 测试集： accuracy:0.722,precision:0.509, recall:0.218, f1:0.305, auc:0.673\n    \n    \n    KNN 训练集： accuracy:0.816,precision:0.741, recall:0.379, f1:0.501, auc:0.848\n    KNN 测试集： accuracy:0.708,precision:0.445, recall:0.184, f1:0.261, auc:0.623\n    \n    \n    GBDT 训练集： accuracy:0.859,precision:0.867, recall:0.497, f1:0.632, auc:0.913\n    GBDT 测试集： accuracy:0.754,precision:0.573, recall:0.474, f1:0.519, auc:0.771\n    \n    \n\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>Accuracy</th>\n      <th>Precision</th>\n      <th>Recall</th>\n      <th>F1-Score</th>\n      <th>AUC-Score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">LR</th>\n      <th>train</th>\n      <td>0.800684</td>\n      <td>0.742120</td>\n      <td>0.279396</td>\n      <td>0.405956</td>\n      <td>0.799942</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.788644</td>\n      <td>0.751938</td>\n      <td>0.364662</td>\n      <td>0.491139</td>\n      <td>0.786801</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">SVC</th>\n      <th>train</th>\n      <td>0.792795</td>\n      <td>0.808889</td>\n      <td>0.196332</td>\n      <td>0.315972</td>\n      <td>0.809276</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.770768</td>\n      <td>0.842857</td>\n      <td>0.221805</td>\n      <td>0.351190</td>\n      <td>0.796191</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">DT</th>\n      <th>train</th>\n      <td>0.829345</td>\n      <td>0.722756</td>\n      <td>0.486516</td>\n      <td>0.581560</td>\n      <td>0.831990</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.726604</td>\n      <td>0.516129</td>\n      <td>0.360902</td>\n      <td>0.424779</td>\n      <td>0.706676</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">RF</th>\n      <th>train</th>\n      <td>0.981331</td>\n      <td>0.998834</td>\n      <td>0.924488</td>\n      <td>0.960224</td>\n      <td>0.999103</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.722397</td>\n      <td>0.508772</td>\n      <td>0.218045</td>\n      <td>0.305263</td>\n      <td>0.672949</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">KNN</th>\n      <th>train</th>\n      <td>0.816198</td>\n      <td>0.740506</td>\n      <td>0.378641</td>\n      <td>0.501071</td>\n      <td>0.847694</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.707676</td>\n      <td>0.445455</td>\n      <td>0.184211</td>\n      <td>0.260638</td>\n      <td>0.623415</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">GBDT</th>\n      <th>train</th>\n      <td>0.858796</td>\n      <td>0.866541</td>\n      <td>0.497303</td>\n      <td>0.631940</td>\n      <td>0.912630</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.753943</td>\n      <td>0.572727</td>\n      <td>0.473684</td>\n      <td>0.518519</td>\n      <td>0.770979</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\ndef draw_roc_curve(train_pre_proba,test_pre_proba,train_auc,test_auc,model_name,num):\n    fpr,tpr,roc_auc = train_pre_proba\n    test_fpr,test_tpr,test_roc_auc = test_pre_proba\n    \n    plt.figure()\n    lw = 2\n    plt.plot(fpr, tpr, color='darkorange',\n             lw=lw, label='ROC curve (area = %0.2f)' % train_auc)\n    plt.plot(test_fpr, test_tpr, color='red',\n         lw=lw, label='ROC curve (area = %0.2f)' %test_auc)\n    plt.plot([0, 1], [0, 1], color='navy', lw=lw, linestyle='--')\n    #plt.xlim([0.0, 1.0])\n    #plt.ylim([0.0, 1.05])\n    plt.xlabel('False Positive Rate')\n    plt.ylabel('True Positive Rate')\n    plt.title('Roc example '+ model_name)\n    plt.legend(loc=\"lower right\")\n    plt.savefig(\"../img/2019-08-07_5种分类模型比较_{}.png\".format(num))\n    plt.close()\n    \nfor num,name,model in zip(range(1,7),names,models):\n    \n    y_train_pred = model.predict_proba(X_train)[:,1]\n    y_test_pred = model.predict_proba(X_test)[:,1]\n\n\n    train_roc = roc_curve(y_train,y_train_pred)\n    test_roc = roc_curve(y_test,y_test_pred)\n\n    train_auc = roc_auc_score(y_train,y_train_pred)\n    test_auc = roc_auc_score(y_test,y_test_pred)\n\n    draw_roc_curve(train_roc,test_roc,train_auc,test_auc,name,num)\n```\n\n![](/img/2019-08-07_5种分类模型比较_1.png)\n\n![](/img/2019-08-07_5种分类模型比较_2.png)\n\n![](/img/2019-08-07_5种分类模型比较_3.png)\n\n![](/img/2019-08-07_5种分类模型比较_4.png)\n\n![](/img/2019-08-07_5种分类模型比较_5.png)\n\n![](/img/2019-08-07_5种分类模型比较_6.png)\n\n### 使用k-folds交叉建模\n\n\n```python\nfrom sklearn.model_selection import KFold\n\ndef run_cv(X,y,clf_class,**kwargs):\n    kf = KFold(n_splits = 5, shuffle = False, random_state = 0)\n    y_pred = y.copy()\n    clf = clf_class(**kwargs)\n    \n    for train_index , test_index in kf.split(X):\n        X_train, X_test = X[train_index], X[test_index]\n        y_train, y_test = y[train_index], y[test_index]\n        \n        clf.fit(X_train,y_train)\n        y_pred[test_index] = clf.predict(X_test)\n    return y_pred\n```\n\n\n```python\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.neighbors import KNeighborsClassifier \nfrom sklearn.linear_model import LogisticRegression\n\nLR_CV_result = run_cv(X_train,y_train,LogisticRegression)\nRF_CV_result = run_cv(X_train,y_train,RandomForestClassifier)\nKNN_CV_result = run_cv(X_train,y_train,KNeighborsClassifier)\n```\n\n\n```python\ndef accuracy(y_true,y_pred):\n    return np.mean(y_true == y_pred)\n\nprint (\"Logistic Regression (L2 is default): \" + str(accuracy(y_train, LR_CV_result)))\nprint (\"Random forest: \" + str(accuracy(y_train, RF_CV_result)))\nprint (\"K-nearest-neighbors: \" + str(accuracy(y_train, KNN_CV_result)))\n```\n\n    Logistic Regression (L2 is default): 0.7933210623192216\n    Random forest: 0.7812253484091507\n    K-nearest-neighbors: 0.7520378648435446\n\n\n> 参考：\n\n1. [DataWhale数据挖掘实战营](https://github.com/datawhalechina/Datawhale_Learning/tree/master/doc/%E7%90%86%E8%AE%BA%E5%BA%94%E7%94%A8/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98)\n2. [吴裕雄 PYTHON 机器学习——集成学习梯度提升决策树GRADIENTBOOSTINGCLASSIFIER分类模型](https://www.cnblogs.com/tszr/p/10801558.html)\n3. [使用5种分类模型进行用户贷款逾期预测](http://yezuolin.com/2018/11/TheModelofUserLoanOverdueEvaluation/)\n4. [sklearn.model_selection.KFold](https://blog.csdn.net/kancy110/article/details/74910185/)\n","source":"_posts/2019-08-07_6种分类模型比较.md","raw":"---\ntitle: 6种分类模型比较\ncategories:\n  - 统计与机器学习\n  - 其他\nmathjax: false\nabbrlink: 32513\ndate: 2019-08-07 00:00:00\n---\n\n## 数据集载入\n\n\n```python\n# -*- coding: utf-8 -*-\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\ndf = pd.read_csv(u\"2019-08-01_金融数据描述_data1.csv\",encoding = 'gbk')\n```\n\n\n```python\ndf.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 4754 entries, 0 to 4753\n    Data columns (total 90 columns):\n    Unnamed: 0                                    4754 non-null int64\n    custid                                        4754 non-null int64\n    trade_no                                      4754 non-null object\n    bank_card_no                                  4754 non-null object\n    low_volume_percent                            4752 non-null float64\n    middle_volume_percent                         4752 non-null float64\n    take_amount_in_later_12_month_highest         4754 non-null int64\n    trans_amount_increase_rate_lately             4751 non-null float64\n    trans_activity_month                          4752 non-null float64\n    trans_activity_day                            4752 non-null float64\n    transd_mcc                                    4752 non-null float64\n    trans_days_interval_filter                    4746 non-null float64\n    trans_days_interval                           4752 non-null float64\n    regional_mobility                             4752 non-null float64\n    student_feature                               1756 non-null float64\n    repayment_capability                          4754 non-null int64\n    is_high_user                                  4754 non-null int64\n    number_of_trans_from_2011                     4752 non-null float64\n    first_transaction_time                        4752 non-null float64\n    historical_trans_amount                       4754 non-null int64\n    historical_trans_day                          4752 non-null float64\n    rank_trad_1_month                             4752 non-null float64\n    trans_amount_3_month                          4754 non-null int64\n    avg_consume_less_12_valid_month               4752 non-null float64\n    abs                                           4754 non-null int64\n    top_trans_count_last_1_month                  4752 non-null float64\n    avg_price_last_12_month                       4754 non-null int64\n    avg_price_top_last_12_valid_month             4650 non-null float64\n    reg_preference_for_trad                       4752 non-null object\n    trans_top_time_last_1_month                   4746 non-null float64\n    trans_top_time_last_6_month                   4746 non-null float64\n    consume_top_time_last_1_month                 4746 non-null float64\n    consume_top_time_last_6_month                 4746 non-null float64\n    cross_consume_count_last_1_month              4328 non-null float64\n    trans_fail_top_count_enum_last_1_month        4738 non-null float64\n    trans_fail_top_count_enum_last_6_month        4738 non-null float64\n    trans_fail_top_count_enum_last_12_month       4738 non-null float64\n    consume_mini_time_last_1_month                4728 non-null float64\n    max_cumulative_consume_later_1_month          4754 non-null int64\n    max_consume_count_later_6_month               4746 non-null float64\n    railway_consume_count_last_12_month           4742 non-null float64\n    pawns_auctions_trusts_consume_last_1_month    4754 non-null int64\n    pawns_auctions_trusts_consume_last_6_month    4754 non-null int64\n    jewelry_consume_count_last_6_month            4742 non-null float64\n    status                                        4754 non-null int64\n    source                                        4754 non-null object\n    first_transaction_day                         4752 non-null float64\n    trans_day_last_12_month                       4752 non-null float64\n    id_name                                       4478 non-null object\n    apply_score                                   4450 non-null float64\n    apply_credibility                             4450 non-null float64\n    query_org_count                               4450 non-null float64\n    query_finance_count                           4450 non-null float64\n    query_cash_count                              4450 non-null float64\n    query_sum_count                               4450 non-null float64\n    latest_query_time                             4450 non-null object\n    latest_one_month_apply                        4450 non-null float64\n    latest_three_month_apply                      4450 non-null float64\n    latest_six_month_apply                        4450 non-null float64\n    loans_score                                   4457 non-null float64\n    loans_credibility_behavior                    4457 non-null float64\n    loans_count                                   4457 non-null float64\n    loans_settle_count                            4457 non-null float64\n    loans_overdue_count                           4457 non-null float64\n    loans_org_count_behavior                      4457 non-null float64\n    consfin_org_count_behavior                    4457 non-null float64\n    loans_cash_count                              4457 non-null float64\n    latest_one_month_loan                         4457 non-null float64\n    latest_three_month_loan                       4457 non-null float64\n    latest_six_month_loan                         4457 non-null float64\n    history_suc_fee                               4457 non-null float64\n    history_fail_fee                              4457 non-null float64\n    latest_one_month_suc                          4457 non-null float64\n    latest_one_month_fail                         4457 non-null float64\n    loans_long_time                               4457 non-null float64\n    loans_latest_time                             4457 non-null object\n    loans_credit_limit                            4457 non-null float64\n    loans_credibility_limit                       4457 non-null float64\n    loans_org_count_current                       4457 non-null float64\n    loans_product_count                           4457 non-null float64\n    loans_max_limit                               4457 non-null float64\n    loans_avg_limit                               4457 non-null float64\n    consfin_credit_limit                          4457 non-null float64\n    consfin_credibility                           4457 non-null float64\n    consfin_org_count_current                     4457 non-null float64\n    consfin_product_count                         4457 non-null float64\n    consfin_max_limit                             4457 non-null float64\n    consfin_avg_limit                             4457 non-null float64\n    latest_query_day                              4450 non-null float64\n    loans_latest_day                              4457 non-null float64\n    dtypes: float64(70), int64(13), object(7)\n    memory usage: 3.3+ MB\n\n\n## 特征预处理\n\n### 删除无用\n\n\n```python\ndelete = ['Unnamed: 0', 'custid', 'trade_no', 'bank_card_no','id_name','latest_query_time','source','loans_latest_time','first_transaction_time', 'student_feature']\ndf = df.drop(delete,axis=1)\n```\n\n### 处理分类型特征\n\n\n```python\nfrom sklearn.preprocessing import LabelEncoder\ndf['reg_preference_for_trad'] = LabelEncoder().fit_transform(df['reg_preference_for_trad'].astype(str))\n```\n\n### 使用众数填充\n\n\n```python\nfrom sklearn.preprocessing import Imputer\nfor i in range(df.shape[1]):\n    feature = df.iloc[:,i].values.reshape(-1,1)\n    imp_mode = Imputer(strategy='most_frequent')\n    df.iloc[:,i] = imp_mode.fit_transform(feature)\n```\n\n## 数据划分\n\n\n```python\nX = df[:].drop(\"status\",axis=1)\ny = df[\"status\"]\n```\n\n\n```python\nfrom sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle = False)\n```\n\n## 数据归一化\n\n\n```python\nfrom sklearn.preprocessing import minmax_scale\nX_train = minmax_scale(X_train)\nX_test =  minmax_scale(X_test)\n```\n\n## 建模与预测\n\n### 使用一般建模方法\n\n\n```python\nfrom sklearn.metrics import *\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score\n\nLR = LogisticRegression()\nLR = LR.fit(X_train, y_train)\n# LR = cross_val_score(LR, X_train, y_train, cv = 5)\n\nsvc = SVC(kernel='linear', probability = True)\nsvc = svc.fit(X_train, y_train)\n# svc = cross_val_score(svc,X_train,y_train, cv = 5)\n\nDT = DecisionTreeClassifier(max_depth = 6)\nDT = DT.fit(X_train, y_train)\n# DT = cross_val_score(DT, X_train, y_train, cv = 5)\n\nRF = RandomForestClassifier()\nRF = RF.fit(X_train, y_train)\n# RF = cross_val_score(RF, X_train, y_train, cv = 5)\n\nKNN = KNeighborsClassifier()\nKNN = KNN.fit(X_train, y_train)\n# LR = cross_val_score(LR, X_train, y_train, cv = 5)\n\nGBDT = GradientBoostingClassifier()\nGBDT = GBDT.fit(X_train, y_train)\n# LR = cross_val_score(LR, X_train, y_train, cv = 5)\n\nnames = [\"LR\", \"SVC\", 'DT', \"RF\", \"KNN\", \"GBDT\"]\nmodels = [LR, svc, DT, RF, KNN, GBDT]\nevaluates = ['accuracy', 'precision', 'recall', 'f1', 'roc_auc']\n```\n\n\n```python\ndf_list = []\nfor name,model in zip(names,models):\n    y_train_pred = model.predict(X_train)\n    y_test_pred = model.predict(X_test)\n    \n    #accuracy\n    train_accuracy = model.score(X_train,y_train)\n    test_accuracy = model.score(X_test,y_test)\n    \n    \n    #precision   \n    train_precision = precision_score(y_train,y_train_pred)\n    test_precision = precision_score(y_test,y_test_pred)   \n    \n    #recall\n    train_recall = recall_score(y_train,y_train_pred)\n    test_recall = recall_score(y_test,y_test_pred)   \n    \n    #f1\n    train_f1 = f1_score(y_train,y_train_pred)\n    test_f1 = f1_score(y_test,y_test_pred)   \n    \n    #auc\n    y_train_pred = model.predict_proba(X_train)[:,1]\n    y_test_pred = model.predict_proba(X_test)[:,1]\n    \n    train_auc = roc_auc_score(y_train,y_train_pred)\n    test_auc = roc_auc_score(y_test,y_test_pred)\n    \n    print('{} 训练集： accuracy:{:.3},precision:{:.3}, recall:{:.3}, f1:{:.3}, auc:{:.3}'.format(name,train_accuracy,train_precision,train_recall,train_f1,train_auc))\n    print('{} 测试集： accuracy:{:.3},precision:{:.3}, recall:{:.3}, f1:{:.3}, auc:{:.3}'.format(name,test_accuracy,test_precision,test_recall,test_f1,test_auc))\n    print('\\n')\n    df = pd.DataFrame(np.array([train_accuracy,train_precision,train_recall,train_f1,train_auc,test_accuracy,test_precision,test_recall,test_f1,test_auc]).reshape(2,-1),\n                  index = ['train','test'],\n                  columns = ['Accuracy','Precision','Recall','F1-Score','AUC-Score'])\n    df_list.append(df)\n\npd.concat(df_list,axis=0,keys=names)\n```\n\n    LR 训练集： accuracy:0.801,precision:0.742, recall:0.279, f1:0.406, auc:0.8\n    LR 测试集： accuracy:0.789,precision:0.752, recall:0.365, f1:0.491, auc:0.787\n    \n    \n    SVC 训练集： accuracy:0.793,precision:0.809, recall:0.196, f1:0.316, auc:0.809\n    SVC 测试集： accuracy:0.771,precision:0.843, recall:0.222, f1:0.351, auc:0.796\n    \n    \n    DT 训练集： accuracy:0.829,precision:0.723, recall:0.487, f1:0.582, auc:0.832\n    DT 测试集： accuracy:0.727,precision:0.516, recall:0.361, f1:0.425, auc:0.707\n    \n    \n    RF 训练集： accuracy:0.981,precision:0.999, recall:0.924, f1:0.96, auc:0.999\n    RF 测试集： accuracy:0.722,precision:0.509, recall:0.218, f1:0.305, auc:0.673\n    \n    \n    KNN 训练集： accuracy:0.816,precision:0.741, recall:0.379, f1:0.501, auc:0.848\n    KNN 测试集： accuracy:0.708,precision:0.445, recall:0.184, f1:0.261, auc:0.623\n    \n    \n    GBDT 训练集： accuracy:0.859,precision:0.867, recall:0.497, f1:0.632, auc:0.913\n    GBDT 测试集： accuracy:0.754,precision:0.573, recall:0.474, f1:0.519, auc:0.771\n    \n    \n\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>Accuracy</th>\n      <th>Precision</th>\n      <th>Recall</th>\n      <th>F1-Score</th>\n      <th>AUC-Score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">LR</th>\n      <th>train</th>\n      <td>0.800684</td>\n      <td>0.742120</td>\n      <td>0.279396</td>\n      <td>0.405956</td>\n      <td>0.799942</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.788644</td>\n      <td>0.751938</td>\n      <td>0.364662</td>\n      <td>0.491139</td>\n      <td>0.786801</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">SVC</th>\n      <th>train</th>\n      <td>0.792795</td>\n      <td>0.808889</td>\n      <td>0.196332</td>\n      <td>0.315972</td>\n      <td>0.809276</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.770768</td>\n      <td>0.842857</td>\n      <td>0.221805</td>\n      <td>0.351190</td>\n      <td>0.796191</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">DT</th>\n      <th>train</th>\n      <td>0.829345</td>\n      <td>0.722756</td>\n      <td>0.486516</td>\n      <td>0.581560</td>\n      <td>0.831990</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.726604</td>\n      <td>0.516129</td>\n      <td>0.360902</td>\n      <td>0.424779</td>\n      <td>0.706676</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">RF</th>\n      <th>train</th>\n      <td>0.981331</td>\n      <td>0.998834</td>\n      <td>0.924488</td>\n      <td>0.960224</td>\n      <td>0.999103</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.722397</td>\n      <td>0.508772</td>\n      <td>0.218045</td>\n      <td>0.305263</td>\n      <td>0.672949</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">KNN</th>\n      <th>train</th>\n      <td>0.816198</td>\n      <td>0.740506</td>\n      <td>0.378641</td>\n      <td>0.501071</td>\n      <td>0.847694</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.707676</td>\n      <td>0.445455</td>\n      <td>0.184211</td>\n      <td>0.260638</td>\n      <td>0.623415</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">GBDT</th>\n      <th>train</th>\n      <td>0.858796</td>\n      <td>0.866541</td>\n      <td>0.497303</td>\n      <td>0.631940</td>\n      <td>0.912630</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.753943</td>\n      <td>0.572727</td>\n      <td>0.473684</td>\n      <td>0.518519</td>\n      <td>0.770979</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\ndef draw_roc_curve(train_pre_proba,test_pre_proba,train_auc,test_auc,model_name,num):\n    fpr,tpr,roc_auc = train_pre_proba\n    test_fpr,test_tpr,test_roc_auc = test_pre_proba\n    \n    plt.figure()\n    lw = 2\n    plt.plot(fpr, tpr, color='darkorange',\n             lw=lw, label='ROC curve (area = %0.2f)' % train_auc)\n    plt.plot(test_fpr, test_tpr, color='red',\n         lw=lw, label='ROC curve (area = %0.2f)' %test_auc)\n    plt.plot([0, 1], [0, 1], color='navy', lw=lw, linestyle='--')\n    #plt.xlim([0.0, 1.0])\n    #plt.ylim([0.0, 1.05])\n    plt.xlabel('False Positive Rate')\n    plt.ylabel('True Positive Rate')\n    plt.title('Roc example '+ model_name)\n    plt.legend(loc=\"lower right\")\n    plt.savefig(\"../img/2019-08-07_5种分类模型比较_{}.png\".format(num))\n    plt.close()\n    \nfor num,name,model in zip(range(1,7),names,models):\n    \n    y_train_pred = model.predict_proba(X_train)[:,1]\n    y_test_pred = model.predict_proba(X_test)[:,1]\n\n\n    train_roc = roc_curve(y_train,y_train_pred)\n    test_roc = roc_curve(y_test,y_test_pred)\n\n    train_auc = roc_auc_score(y_train,y_train_pred)\n    test_auc = roc_auc_score(y_test,y_test_pred)\n\n    draw_roc_curve(train_roc,test_roc,train_auc,test_auc,name,num)\n```\n\n![](/img/2019-08-07_5种分类模型比较_1.png)\n\n![](/img/2019-08-07_5种分类模型比较_2.png)\n\n![](/img/2019-08-07_5种分类模型比较_3.png)\n\n![](/img/2019-08-07_5种分类模型比较_4.png)\n\n![](/img/2019-08-07_5种分类模型比较_5.png)\n\n![](/img/2019-08-07_5种分类模型比较_6.png)\n\n### 使用k-folds交叉建模\n\n\n```python\nfrom sklearn.model_selection import KFold\n\ndef run_cv(X,y,clf_class,**kwargs):\n    kf = KFold(n_splits = 5, shuffle = False, random_state = 0)\n    y_pred = y.copy()\n    clf = clf_class(**kwargs)\n    \n    for train_index , test_index in kf.split(X):\n        X_train, X_test = X[train_index], X[test_index]\n        y_train, y_test = y[train_index], y[test_index]\n        \n        clf.fit(X_train,y_train)\n        y_pred[test_index] = clf.predict(X_test)\n    return y_pred\n```\n\n\n```python\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.model_selection import cross_val_score\nfrom sklearn.neighbors import KNeighborsClassifier \nfrom sklearn.linear_model import LogisticRegression\n\nLR_CV_result = run_cv(X_train,y_train,LogisticRegression)\nRF_CV_result = run_cv(X_train,y_train,RandomForestClassifier)\nKNN_CV_result = run_cv(X_train,y_train,KNeighborsClassifier)\n```\n\n\n```python\ndef accuracy(y_true,y_pred):\n    return np.mean(y_true == y_pred)\n\nprint (\"Logistic Regression (L2 is default): \" + str(accuracy(y_train, LR_CV_result)))\nprint (\"Random forest: \" + str(accuracy(y_train, RF_CV_result)))\nprint (\"K-nearest-neighbors: \" + str(accuracy(y_train, KNN_CV_result)))\n```\n\n    Logistic Regression (L2 is default): 0.7933210623192216\n    Random forest: 0.7812253484091507\n    K-nearest-neighbors: 0.7520378648435446\n\n\n> 参考：\n\n1. [DataWhale数据挖掘实战营](https://github.com/datawhalechina/Datawhale_Learning/tree/master/doc/%E7%90%86%E8%AE%BA%E5%BA%94%E7%94%A8/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98)\n2. [吴裕雄 PYTHON 机器学习——集成学习梯度提升决策树GRADIENTBOOSTINGCLASSIFIER分类模型](https://www.cnblogs.com/tszr/p/10801558.html)\n3. [使用5种分类模型进行用户贷款逾期预测](http://yezuolin.com/2018/11/TheModelofUserLoanOverdueEvaluation/)\n4. [sklearn.model_selection.KFold](https://blog.csdn.net/kancy110/article/details/74910185/)\n","slug":"2019-08-07_6种分类模型比较","published":1,"updated":"2021-04-06T13:49:38.273Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5rn002k9ohz0gen0f8d","content":"<h2 id=\"数据集载入\"><a href=\"#数据集载入\" class=\"headerlink\" title=\"数据集载入\"></a>数据集载入</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib <span class=\"keyword\">import</span> pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"><span class=\"keyword\">import</span> warnings</span><br><span class=\"line\">warnings.filterwarnings(<span class=\"string\">&#x27;ignore&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">u&quot;2019-08-01_金融数据描述_data1.csv&quot;</span>,encoding = <span class=\"string\">&#x27;gbk&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.info()</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 4754 entries, 0 to 4753\nData columns (total 90 columns):\nUnnamed: 0                                    4754 non-null int64\ncustid                                        4754 non-null int64\ntrade_no                                      4754 non-null object\nbank_card_no                                  4754 non-null object\nlow_volume_percent                            4752 non-null float64\nmiddle_volume_percent                         4752 non-null float64\ntake_amount_in_later_12_month_highest         4754 non-null int64\ntrans_amount_increase_rate_lately             4751 non-null float64\ntrans_activity_month                          4752 non-null float64\ntrans_activity_day                            4752 non-null float64\ntransd_mcc                                    4752 non-null float64\ntrans_days_interval_filter                    4746 non-null float64\ntrans_days_interval                           4752 non-null float64\nregional_mobility                             4752 non-null float64\nstudent_feature                               1756 non-null float64\nrepayment_capability                          4754 non-null int64\nis_high_user                                  4754 non-null int64\nnumber_of_trans_from_2011                     4752 non-null float64\nfirst_transaction_time                        4752 non-null float64\nhistorical_trans_amount                       4754 non-null int64\nhistorical_trans_day                          4752 non-null float64\nrank_trad_1_month                             4752 non-null float64\ntrans_amount_3_month                          4754 non-null int64\navg_consume_less_12_valid_month               4752 non-null float64\nabs                                           4754 non-null int64\ntop_trans_count_last_1_month                  4752 non-null float64\navg_price_last_12_month                       4754 non-null int64\navg_price_top_last_12_valid_month             4650 non-null float64\nreg_preference_for_trad                       4752 non-null object\ntrans_top_time_last_1_month                   4746 non-null float64\ntrans_top_time_last_6_month                   4746 non-null float64\nconsume_top_time_last_1_month                 4746 non-null float64\nconsume_top_time_last_6_month                 4746 non-null float64\ncross_consume_count_last_1_month              4328 non-null float64\ntrans_fail_top_count_enum_last_1_month        4738 non-null float64\ntrans_fail_top_count_enum_last_6_month        4738 non-null float64\ntrans_fail_top_count_enum_last_12_month       4738 non-null float64\nconsume_mini_time_last_1_month                4728 non-null float64\nmax_cumulative_consume_later_1_month          4754 non-null int64\nmax_consume_count_later_6_month               4746 non-null float64\nrailway_consume_count_last_12_month           4742 non-null float64\npawns_auctions_trusts_consume_last_1_month    4754 non-null int64\npawns_auctions_trusts_consume_last_6_month    4754 non-null int64\njewelry_consume_count_last_6_month            4742 non-null float64\nstatus                                        4754 non-null int64\nsource                                        4754 non-null object\nfirst_transaction_day                         4752 non-null float64\ntrans_day_last_12_month                       4752 non-null float64\nid_name                                       4478 non-null object\napply_score                                   4450 non-null float64\napply_credibility                             4450 non-null float64\nquery_org_count                               4450 non-null float64\nquery_finance_count                           4450 non-null float64\nquery_cash_count                              4450 non-null float64\nquery_sum_count                               4450 non-null float64\nlatest_query_time                             4450 non-null object\nlatest_one_month_apply                        4450 non-null float64\nlatest_three_month_apply                      4450 non-null float64\nlatest_six_month_apply                        4450 non-null float64\nloans_score                                   4457 non-null float64\nloans_credibility_behavior                    4457 non-null float64\nloans_count                                   4457 non-null float64\nloans_settle_count                            4457 non-null float64\nloans_overdue_count                           4457 non-null float64\nloans_org_count_behavior                      4457 non-null float64\nconsfin_org_count_behavior                    4457 non-null float64\nloans_cash_count                              4457 non-null float64\nlatest_one_month_loan                         4457 non-null float64\nlatest_three_month_loan                       4457 non-null float64\nlatest_six_month_loan                         4457 non-null float64\nhistory_suc_fee                               4457 non-null float64\nhistory_fail_fee                              4457 non-null float64\nlatest_one_month_suc                          4457 non-null float64\nlatest_one_month_fail                         4457 non-null float64\nloans_long_time                               4457 non-null float64\nloans_latest_time                             4457 non-null object\nloans_credit_limit                            4457 non-null float64\nloans_credibility_limit                       4457 non-null float64\nloans_org_count_current                       4457 non-null float64\nloans_product_count                           4457 non-null float64\nloans_max_limit                               4457 non-null float64\nloans_avg_limit                               4457 non-null float64\nconsfin_credit_limit                          4457 non-null float64\nconsfin_credibility                           4457 non-null float64\nconsfin_org_count_current                     4457 non-null float64\nconsfin_product_count                         4457 non-null float64\nconsfin_max_limit                             4457 non-null float64\nconsfin_avg_limit                             4457 non-null float64\nlatest_query_day                              4450 non-null float64\nloans_latest_day                              4457 non-null float64\ndtypes: float64(70), int64(13), object(7)\nmemory usage: 3.3+ MB\n</code></pre><h2 id=\"特征预处理\"><a href=\"#特征预处理\" class=\"headerlink\" title=\"特征预处理\"></a>特征预处理</h2><h3 id=\"删除无用\"><a href=\"#删除无用\" class=\"headerlink\" title=\"删除无用\"></a>删除无用</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">delete = [<span class=\"string\">&#x27;Unnamed: 0&#x27;</span>, <span class=\"string\">&#x27;custid&#x27;</span>, <span class=\"string\">&#x27;trade_no&#x27;</span>, <span class=\"string\">&#x27;bank_card_no&#x27;</span>,<span class=\"string\">&#x27;id_name&#x27;</span>,<span class=\"string\">&#x27;latest_query_time&#x27;</span>,<span class=\"string\">&#x27;source&#x27;</span>,<span class=\"string\">&#x27;loans_latest_time&#x27;</span>,<span class=\"string\">&#x27;first_transaction_time&#x27;</span>, <span class=\"string\">&#x27;student_feature&#x27;</span>]</span><br><span class=\"line\">df = df.drop(delete,axis=<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"处理分类型特征\"><a href=\"#处理分类型特征\" class=\"headerlink\" title=\"处理分类型特征\"></a>处理分类型特征</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelEncoder</span><br><span class=\"line\">df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>] = LabelEncoder().fit_transform(df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>].astype(<span class=\"built_in\">str</span>))</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用众数填充\"><a href=\"#使用众数填充\" class=\"headerlink\" title=\"使用众数填充\"></a>使用众数填充</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> Imputer</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(df.shape[<span class=\"number\">1</span>]):</span><br><span class=\"line\">    feature = df.iloc[:,i].values.reshape(-<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">    imp_mode = Imputer(strategy=<span class=\"string\">&#x27;most_frequent&#x27;</span>)</span><br><span class=\"line\">    df.iloc[:,i] = imp_mode.fit_transform(feature)</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据划分\"><a href=\"#数据划分\" class=\"headerlink\" title=\"数据划分\"></a>数据划分</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X = df[:].drop(<span class=\"string\">&quot;status&quot;</span>,axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">y = df[<span class=\"string\">&quot;status&quot;</span>]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class=\"number\">0.2</span>, shuffle = <span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据归一化\"><a href=\"#数据归一化\" class=\"headerlink\" title=\"数据归一化\"></a>数据归一化</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> minmax_scale</span><br><span class=\"line\">X_train = minmax_scale(X_train)</span><br><span class=\"line\">X_test =  minmax_scale(X_test)</span><br></pre></td></tr></table></figure>\n<h2 id=\"建模与预测\"><a href=\"#建模与预测\" class=\"headerlink\" title=\"建模与预测\"></a>建模与预测</h2><h3 id=\"使用一般建模方法\"><a href=\"#使用一般建模方法\" class=\"headerlink\" title=\"使用一般建模方法\"></a>使用一般建模方法</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> SVC</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier, GradientBoostingClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_score</span><br><span class=\"line\"></span><br><span class=\"line\">LR = LogisticRegression()</span><br><span class=\"line\">LR = LR.fit(X_train, y_train)</span><br><span class=\"line\"><span class=\"comment\"># LR = cross_val_score(LR, X_train, y_train, cv = 5)</span></span><br><span class=\"line\"></span><br><span class=\"line\">svc = SVC(kernel=<span class=\"string\">&#x27;linear&#x27;</span>, probability = <span class=\"literal\">True</span>)</span><br><span class=\"line\">svc = svc.fit(X_train, y_train)</span><br><span class=\"line\"><span class=\"comment\"># svc = cross_val_score(svc,X_train,y_train, cv = 5)</span></span><br><span class=\"line\"></span><br><span class=\"line\">DT = DecisionTreeClassifier(max_depth = <span class=\"number\">6</span>)</span><br><span class=\"line\">DT = DT.fit(X_train, y_train)</span><br><span class=\"line\"><span class=\"comment\"># DT = cross_val_score(DT, X_train, y_train, cv = 5)</span></span><br><span class=\"line\"></span><br><span class=\"line\">RF = RandomForestClassifier()</span><br><span class=\"line\">RF = RF.fit(X_train, y_train)</span><br><span class=\"line\"><span class=\"comment\"># RF = cross_val_score(RF, X_train, y_train, cv = 5)</span></span><br><span class=\"line\"></span><br><span class=\"line\">KNN = KNeighborsClassifier()</span><br><span class=\"line\">KNN = KNN.fit(X_train, y_train)</span><br><span class=\"line\"><span class=\"comment\"># LR = cross_val_score(LR, X_train, y_train, cv = 5)</span></span><br><span class=\"line\"></span><br><span class=\"line\">GBDT = GradientBoostingClassifier()</span><br><span class=\"line\">GBDT = GBDT.fit(X_train, y_train)</span><br><span class=\"line\"><span class=\"comment\"># LR = cross_val_score(LR, X_train, y_train, cv = 5)</span></span><br><span class=\"line\"></span><br><span class=\"line\">names = [<span class=\"string\">&quot;LR&quot;</span>, <span class=\"string\">&quot;SVC&quot;</span>, <span class=\"string\">&#x27;DT&#x27;</span>, <span class=\"string\">&quot;RF&quot;</span>, <span class=\"string\">&quot;KNN&quot;</span>, <span class=\"string\">&quot;GBDT&quot;</span>]</span><br><span class=\"line\">models = [LR, svc, DT, RF, KNN, GBDT]</span><br><span class=\"line\">evaluates = [<span class=\"string\">&#x27;accuracy&#x27;</span>, <span class=\"string\">&#x27;precision&#x27;</span>, <span class=\"string\">&#x27;recall&#x27;</span>, <span class=\"string\">&#x27;f1&#x27;</span>, <span class=\"string\">&#x27;roc_auc&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_list = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> name,model <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(names,models):</span><br><span class=\"line\">    y_train_pred = model.predict(X_train)</span><br><span class=\"line\">    y_test_pred = model.predict(X_test)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#accuracy</span></span><br><span class=\"line\">    train_accuracy = model.score(X_train,y_train)</span><br><span class=\"line\">    test_accuracy = model.score(X_test,y_test)</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#precision   </span></span><br><span class=\"line\">    train_precision = precision_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_precision = precision_score(y_test,y_test_pred)   </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#recall</span></span><br><span class=\"line\">    train_recall = recall_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_recall = recall_score(y_test,y_test_pred)   </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#f1</span></span><br><span class=\"line\">    train_f1 = f1_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_f1 = f1_score(y_test,y_test_pred)   </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#auc</span></span><br><span class=\"line\">    y_train_pred = model.predict_proba(X_train)[:,<span class=\"number\">1</span>]</span><br><span class=\"line\">    y_test_pred = model.predict_proba(X_test)[:,<span class=\"number\">1</span>]</span><br><span class=\"line\">    </span><br><span class=\"line\">    train_auc = roc_auc_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_auc = roc_auc_score(y_test,y_test_pred)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#123;&#125; 训练集： accuracy:&#123;:.3&#125;,precision:&#123;:.3&#125;, recall:&#123;:.3&#125;, f1:&#123;:.3&#125;, auc:&#123;:.3&#125;&#x27;</span>.<span class=\"built_in\">format</span>(name,train_accuracy,train_precision,train_recall,train_f1,train_auc))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#123;&#125; 测试集： accuracy:&#123;:.3&#125;,precision:&#123;:.3&#125;, recall:&#123;:.3&#125;, f1:&#123;:.3&#125;, auc:&#123;:.3&#125;&#x27;</span>.<span class=\"built_in\">format</span>(name,test_accuracy,test_precision,test_recall,test_f1,test_auc))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">    df = pd.DataFrame(np.array([train_accuracy,train_precision,train_recall,train_f1,train_auc,test_accuracy,test_precision,test_recall,test_f1,test_auc]).reshape(<span class=\"number\">2</span>,-<span class=\"number\">1</span>),</span><br><span class=\"line\">                  index = [<span class=\"string\">&#x27;train&#x27;</span>,<span class=\"string\">&#x27;test&#x27;</span>],</span><br><span class=\"line\">                  columns = [<span class=\"string\">&#x27;Accuracy&#x27;</span>,<span class=\"string\">&#x27;Precision&#x27;</span>,<span class=\"string\">&#x27;Recall&#x27;</span>,<span class=\"string\">&#x27;F1-Score&#x27;</span>,<span class=\"string\">&#x27;AUC-Score&#x27;</span>])</span><br><span class=\"line\">    df_list.append(df)</span><br><span class=\"line\"></span><br><span class=\"line\">pd.concat(df_list,axis=<span class=\"number\">0</span>,keys=names)</span><br></pre></td></tr></table></figure>\n<pre><code>LR 训练集： accuracy:0.801,precision:0.742, recall:0.279, f1:0.406, auc:0.8\nLR 测试集： accuracy:0.789,precision:0.752, recall:0.365, f1:0.491, auc:0.787\n\n\nSVC 训练集： accuracy:0.793,precision:0.809, recall:0.196, f1:0.316, auc:0.809\nSVC 测试集： accuracy:0.771,precision:0.843, recall:0.222, f1:0.351, auc:0.796\n\n\nDT 训练集： accuracy:0.829,precision:0.723, recall:0.487, f1:0.582, auc:0.832\nDT 测试集： accuracy:0.727,precision:0.516, recall:0.361, f1:0.425, auc:0.707\n\n\nRF 训练集： accuracy:0.981,precision:0.999, recall:0.924, f1:0.96, auc:0.999\nRF 测试集： accuracy:0.722,precision:0.509, recall:0.218, f1:0.305, auc:0.673\n\n\nKNN 训练集： accuracy:0.816,precision:0.741, recall:0.379, f1:0.501, auc:0.848\nKNN 测试集： accuracy:0.708,precision:0.445, recall:0.184, f1:0.261, auc:0.623\n\n\nGBDT 训练集： accuracy:0.859,precision:0.867, recall:0.497, f1:0.632, auc:0.913\nGBDT 测试集： accuracy:0.754,precision:0.573, recall:0.474, f1:0.519, auc:0.771\n</code></pre><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>Accuracy</th>\n      <th>Precision</th>\n      <th>Recall</th>\n      <th>F1-Score</th>\n      <th>AUC-Score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">LR</th>\n      <th>train</th>\n      <td>0.800684</td>\n      <td>0.742120</td>\n      <td>0.279396</td>\n      <td>0.405956</td>\n      <td>0.799942</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.788644</td>\n      <td>0.751938</td>\n      <td>0.364662</td>\n      <td>0.491139</td>\n      <td>0.786801</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">SVC</th>\n      <th>train</th>\n      <td>0.792795</td>\n      <td>0.808889</td>\n      <td>0.196332</td>\n      <td>0.315972</td>\n      <td>0.809276</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.770768</td>\n      <td>0.842857</td>\n      <td>0.221805</td>\n      <td>0.351190</td>\n      <td>0.796191</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">DT</th>\n      <th>train</th>\n      <td>0.829345</td>\n      <td>0.722756</td>\n      <td>0.486516</td>\n      <td>0.581560</td>\n      <td>0.831990</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.726604</td>\n      <td>0.516129</td>\n      <td>0.360902</td>\n      <td>0.424779</td>\n      <td>0.706676</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">RF</th>\n      <th>train</th>\n      <td>0.981331</td>\n      <td>0.998834</td>\n      <td>0.924488</td>\n      <td>0.960224</td>\n      <td>0.999103</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.722397</td>\n      <td>0.508772</td>\n      <td>0.218045</td>\n      <td>0.305263</td>\n      <td>0.672949</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">KNN</th>\n      <th>train</th>\n      <td>0.816198</td>\n      <td>0.740506</td>\n      <td>0.378641</td>\n      <td>0.501071</td>\n      <td>0.847694</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.707676</td>\n      <td>0.445455</td>\n      <td>0.184211</td>\n      <td>0.260638</td>\n      <td>0.623415</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">GBDT</th>\n      <th>train</th>\n      <td>0.858796</td>\n      <td>0.866541</td>\n      <td>0.497303</td>\n      <td>0.631940</td>\n      <td>0.912630</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.753943</td>\n      <td>0.572727</td>\n      <td>0.473684</td>\n      <td>0.518519</td>\n      <td>0.770979</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">draw_roc_curve</span>(<span class=\"params\">train_pre_proba,test_pre_proba,train_auc,test_auc,model_name,num</span>):</span></span><br><span class=\"line\">    fpr,tpr,roc_auc = train_pre_proba</span><br><span class=\"line\">    test_fpr,test_tpr,test_roc_auc = test_pre_proba</span><br><span class=\"line\">    </span><br><span class=\"line\">    plt.figure()</span><br><span class=\"line\">    lw = <span class=\"number\">2</span></span><br><span class=\"line\">    plt.plot(fpr, tpr, color=<span class=\"string\">&#x27;darkorange&#x27;</span>,</span><br><span class=\"line\">             lw=lw, label=<span class=\"string\">&#x27;ROC curve (area = %0.2f)&#x27;</span> % train_auc)</span><br><span class=\"line\">    plt.plot(test_fpr, test_tpr, color=<span class=\"string\">&#x27;red&#x27;</span>,</span><br><span class=\"line\">         lw=lw, label=<span class=\"string\">&#x27;ROC curve (area = %0.2f)&#x27;</span> %test_auc)</span><br><span class=\"line\">    plt.plot([<span class=\"number\">0</span>, <span class=\"number\">1</span>], [<span class=\"number\">0</span>, <span class=\"number\">1</span>], color=<span class=\"string\">&#x27;navy&#x27;</span>, lw=lw, linestyle=<span class=\"string\">&#x27;--&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\">#plt.xlim([0.0, 1.0])</span></span><br><span class=\"line\">    <span class=\"comment\">#plt.ylim([0.0, 1.05])</span></span><br><span class=\"line\">    plt.xlabel(<span class=\"string\">&#x27;False Positive Rate&#x27;</span>)</span><br><span class=\"line\">    plt.ylabel(<span class=\"string\">&#x27;True Positive Rate&#x27;</span>)</span><br><span class=\"line\">    plt.title(<span class=\"string\">&#x27;Roc example &#x27;</span>+ model_name)</span><br><span class=\"line\">    plt.legend(loc=<span class=\"string\">&quot;lower right&quot;</span>)</span><br><span class=\"line\">    plt.savefig(<span class=\"string\">&quot;../img/2019-08-07_5种分类模型比较_&#123;&#125;.png&quot;</span>.<span class=\"built_in\">format</span>(num))</span><br><span class=\"line\">    plt.close()</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">for</span> num,name,model <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">7</span>),names,models):</span><br><span class=\"line\">    </span><br><span class=\"line\">    y_train_pred = model.predict_proba(X_train)[:,<span class=\"number\">1</span>]</span><br><span class=\"line\">    y_test_pred = model.predict_proba(X_test)[:,<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    train_roc = roc_curve(y_train,y_train_pred)</span><br><span class=\"line\">    test_roc = roc_curve(y_test,y_test_pred)</span><br><span class=\"line\"></span><br><span class=\"line\">    train_auc = roc_auc_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_auc = roc_auc_score(y_test,y_test_pred)</span><br><span class=\"line\"></span><br><span class=\"line\">    draw_roc_curve(train_roc,test_roc,train_auc,test_auc,name,num)</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-07_5种分类模型比较_1.png\"\n                      alt=\"\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-07_5种分类模型比较_2.png\"\n                      alt=\"\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-07_5种分类模型比较_3.png\"\n                      alt=\"\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-07_5种分类模型比较_4.png\"\n                      alt=\"\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-07_5种分类模型比较_5.png\"\n                      alt=\"\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-07_5种分类模型比较_6.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"使用k-folds交叉建模\"><a href=\"#使用k-folds交叉建模\" class=\"headerlink\" title=\"使用k-folds交叉建模\"></a>使用k-folds交叉建模</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> KFold</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_cv</span>(<span class=\"params\">X,y,clf_class,**kwargs</span>):</span></span><br><span class=\"line\">    kf = KFold(n_splits = <span class=\"number\">5</span>, shuffle = <span class=\"literal\">False</span>, random_state = <span class=\"number\">0</span>)</span><br><span class=\"line\">    y_pred = y.copy()</span><br><span class=\"line\">    clf = clf_class(**kwargs)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> train_index , test_index <span class=\"keyword\">in</span> kf.split(X):</span><br><span class=\"line\">        X_train, X_test = X[train_index], X[test_index]</span><br><span class=\"line\">        y_train, y_test = y[train_index], y[test_index]</span><br><span class=\"line\">        </span><br><span class=\"line\">        clf.fit(X_train,y_train)</span><br><span class=\"line\">        y_pred[test_index] = clf.predict(X_test)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> y_pred</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier, GradientBoostingClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> SVC</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsClassifier </span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\"></span><br><span class=\"line\">LR_CV_result = run_cv(X_train,y_train,LogisticRegression)</span><br><span class=\"line\">RF_CV_result = run_cv(X_train,y_train,RandomForestClassifier)</span><br><span class=\"line\">KNN_CV_result = run_cv(X_train,y_train,KNeighborsClassifier)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">accuracy</span>(<span class=\"params\">y_true,y_pred</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> np.mean(y_true == y_pred)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&quot;Logistic Regression (L2 is default): &quot;</span> + <span class=\"built_in\">str</span>(accuracy(y_train, LR_CV_result)))</span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&quot;Random forest: &quot;</span> + <span class=\"built_in\">str</span>(accuracy(y_train, RF_CV_result)))</span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&quot;K-nearest-neighbors: &quot;</span> + <span class=\"built_in\">str</span>(accuracy(y_train, KNN_CV_result)))</span><br></pre></td></tr></table></figure>\n<pre><code>Logistic Regression (L2 is default): 0.7933210623192216\nRandom forest: 0.7812253484091507\nK-nearest-neighbors: 0.7520378648435446\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://github.com/datawhalechina/Datawhale_Learning/tree/master/doc/%E7%90%86%E8%AE%BA%E5%BA%94%E7%94%A8/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98\" >DataWhale数据挖掘实战营<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/tszr/p/10801558.html\" >吴裕雄 PYTHON 机器学习——集成学习梯度提升决策树GRADIENTBOOSTINGCLASSIFIER分类模型<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"http://yezuolin.com/2018/11/TheModelofUserLoanOverdueEvaluation/\" >使用5种分类模型进行用户贷款逾期预测<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://blog.csdn.net/kancy110/article/details/74910185/\" >sklearn.model_selection.KFold<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"数据集载入\"><a href=\"#数据集载入\" class=\"headerlink\" title=\"数据集载入\"></a>数据集载入</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib <span class=\"keyword\">import</span> pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"><span class=\"keyword\">import</span> warnings</span><br><span class=\"line\">warnings.filterwarnings(<span class=\"string\">&#x27;ignore&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">u&quot;2019-08-01_金融数据描述_data1.csv&quot;</span>,encoding = <span class=\"string\">&#x27;gbk&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.info()</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 4754 entries, 0 to 4753\nData columns (total 90 columns):\nUnnamed: 0                                    4754 non-null int64\ncustid                                        4754 non-null int64\ntrade_no                                      4754 non-null object\nbank_card_no                                  4754 non-null object\nlow_volume_percent                            4752 non-null float64\nmiddle_volume_percent                         4752 non-null float64\ntake_amount_in_later_12_month_highest         4754 non-null int64\ntrans_amount_increase_rate_lately             4751 non-null float64\ntrans_activity_month                          4752 non-null float64\ntrans_activity_day                            4752 non-null float64\ntransd_mcc                                    4752 non-null float64\ntrans_days_interval_filter                    4746 non-null float64\ntrans_days_interval                           4752 non-null float64\nregional_mobility                             4752 non-null float64\nstudent_feature                               1756 non-null float64\nrepayment_capability                          4754 non-null int64\nis_high_user                                  4754 non-null int64\nnumber_of_trans_from_2011                     4752 non-null float64\nfirst_transaction_time                        4752 non-null float64\nhistorical_trans_amount                       4754 non-null int64\nhistorical_trans_day                          4752 non-null float64\nrank_trad_1_month                             4752 non-null float64\ntrans_amount_3_month                          4754 non-null int64\navg_consume_less_12_valid_month               4752 non-null float64\nabs                                           4754 non-null int64\ntop_trans_count_last_1_month                  4752 non-null float64\navg_price_last_12_month                       4754 non-null int64\navg_price_top_last_12_valid_month             4650 non-null float64\nreg_preference_for_trad                       4752 non-null object\ntrans_top_time_last_1_month                   4746 non-null float64\ntrans_top_time_last_6_month                   4746 non-null float64\nconsume_top_time_last_1_month                 4746 non-null float64\nconsume_top_time_last_6_month                 4746 non-null float64\ncross_consume_count_last_1_month              4328 non-null float64\ntrans_fail_top_count_enum_last_1_month        4738 non-null float64\ntrans_fail_top_count_enum_last_6_month        4738 non-null float64\ntrans_fail_top_count_enum_last_12_month       4738 non-null float64\nconsume_mini_time_last_1_month                4728 non-null float64\nmax_cumulative_consume_later_1_month          4754 non-null int64\nmax_consume_count_later_6_month               4746 non-null float64\nrailway_consume_count_last_12_month           4742 non-null float64\npawns_auctions_trusts_consume_last_1_month    4754 non-null int64\npawns_auctions_trusts_consume_last_6_month    4754 non-null int64\njewelry_consume_count_last_6_month            4742 non-null float64\nstatus                                        4754 non-null int64\nsource                                        4754 non-null object\nfirst_transaction_day                         4752 non-null float64\ntrans_day_last_12_month                       4752 non-null float64\nid_name                                       4478 non-null object\napply_score                                   4450 non-null float64\napply_credibility                             4450 non-null float64\nquery_org_count                               4450 non-null float64\nquery_finance_count                           4450 non-null float64\nquery_cash_count                              4450 non-null float64\nquery_sum_count                               4450 non-null float64\nlatest_query_time                             4450 non-null object\nlatest_one_month_apply                        4450 non-null float64\nlatest_three_month_apply                      4450 non-null float64\nlatest_six_month_apply                        4450 non-null float64\nloans_score                                   4457 non-null float64\nloans_credibility_behavior                    4457 non-null float64\nloans_count                                   4457 non-null float64\nloans_settle_count                            4457 non-null float64\nloans_overdue_count                           4457 non-null float64\nloans_org_count_behavior                      4457 non-null float64\nconsfin_org_count_behavior                    4457 non-null float64\nloans_cash_count                              4457 non-null float64\nlatest_one_month_loan                         4457 non-null float64\nlatest_three_month_loan                       4457 non-null float64\nlatest_six_month_loan                         4457 non-null float64\nhistory_suc_fee                               4457 non-null float64\nhistory_fail_fee                              4457 non-null float64\nlatest_one_month_suc                          4457 non-null float64\nlatest_one_month_fail                         4457 non-null float64\nloans_long_time                               4457 non-null float64\nloans_latest_time                             4457 non-null object\nloans_credit_limit                            4457 non-null float64\nloans_credibility_limit                       4457 non-null float64\nloans_org_count_current                       4457 non-null float64\nloans_product_count                           4457 non-null float64\nloans_max_limit                               4457 non-null float64\nloans_avg_limit                               4457 non-null float64\nconsfin_credit_limit                          4457 non-null float64\nconsfin_credibility                           4457 non-null float64\nconsfin_org_count_current                     4457 non-null float64\nconsfin_product_count                         4457 non-null float64\nconsfin_max_limit                             4457 non-null float64\nconsfin_avg_limit                             4457 non-null float64\nlatest_query_day                              4450 non-null float64\nloans_latest_day                              4457 non-null float64\ndtypes: float64(70), int64(13), object(7)\nmemory usage: 3.3+ MB\n</code></pre><h2 id=\"特征预处理\"><a href=\"#特征预处理\" class=\"headerlink\" title=\"特征预处理\"></a>特征预处理</h2><h3 id=\"删除无用\"><a href=\"#删除无用\" class=\"headerlink\" title=\"删除无用\"></a>删除无用</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">delete = [<span class=\"string\">&#x27;Unnamed: 0&#x27;</span>, <span class=\"string\">&#x27;custid&#x27;</span>, <span class=\"string\">&#x27;trade_no&#x27;</span>, <span class=\"string\">&#x27;bank_card_no&#x27;</span>,<span class=\"string\">&#x27;id_name&#x27;</span>,<span class=\"string\">&#x27;latest_query_time&#x27;</span>,<span class=\"string\">&#x27;source&#x27;</span>,<span class=\"string\">&#x27;loans_latest_time&#x27;</span>,<span class=\"string\">&#x27;first_transaction_time&#x27;</span>, <span class=\"string\">&#x27;student_feature&#x27;</span>]</span><br><span class=\"line\">df = df.drop(delete,axis=<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"处理分类型特征\"><a href=\"#处理分类型特征\" class=\"headerlink\" title=\"处理分类型特征\"></a>处理分类型特征</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelEncoder</span><br><span class=\"line\">df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>] = LabelEncoder().fit_transform(df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>].astype(<span class=\"built_in\">str</span>))</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用众数填充\"><a href=\"#使用众数填充\" class=\"headerlink\" title=\"使用众数填充\"></a>使用众数填充</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> Imputer</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(df.shape[<span class=\"number\">1</span>]):</span><br><span class=\"line\">    feature = df.iloc[:,i].values.reshape(-<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">    imp_mode = Imputer(strategy=<span class=\"string\">&#x27;most_frequent&#x27;</span>)</span><br><span class=\"line\">    df.iloc[:,i] = imp_mode.fit_transform(feature)</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据划分\"><a href=\"#数据划分\" class=\"headerlink\" title=\"数据划分\"></a>数据划分</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X = df[:].drop(<span class=\"string\">&quot;status&quot;</span>,axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">y = df[<span class=\"string\">&quot;status&quot;</span>]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class=\"number\">0.2</span>, shuffle = <span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据归一化\"><a href=\"#数据归一化\" class=\"headerlink\" title=\"数据归一化\"></a>数据归一化</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> minmax_scale</span><br><span class=\"line\">X_train = minmax_scale(X_train)</span><br><span class=\"line\">X_test =  minmax_scale(X_test)</span><br></pre></td></tr></table></figure>\n<h2 id=\"建模与预测\"><a href=\"#建模与预测\" class=\"headerlink\" title=\"建模与预测\"></a>建模与预测</h2><h3 id=\"使用一般建模方法\"><a href=\"#使用一般建模方法\" class=\"headerlink\" title=\"使用一般建模方法\"></a>使用一般建模方法</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> SVC</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier, GradientBoostingClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_score</span><br><span class=\"line\"></span><br><span class=\"line\">LR = LogisticRegression()</span><br><span class=\"line\">LR = LR.fit(X_train, y_train)</span><br><span class=\"line\"><span class=\"comment\"># LR = cross_val_score(LR, X_train, y_train, cv = 5)</span></span><br><span class=\"line\"></span><br><span class=\"line\">svc = SVC(kernel=<span class=\"string\">&#x27;linear&#x27;</span>, probability = <span class=\"literal\">True</span>)</span><br><span class=\"line\">svc = svc.fit(X_train, y_train)</span><br><span class=\"line\"><span class=\"comment\"># svc = cross_val_score(svc,X_train,y_train, cv = 5)</span></span><br><span class=\"line\"></span><br><span class=\"line\">DT = DecisionTreeClassifier(max_depth = <span class=\"number\">6</span>)</span><br><span class=\"line\">DT = DT.fit(X_train, y_train)</span><br><span class=\"line\"><span class=\"comment\"># DT = cross_val_score(DT, X_train, y_train, cv = 5)</span></span><br><span class=\"line\"></span><br><span class=\"line\">RF = RandomForestClassifier()</span><br><span class=\"line\">RF = RF.fit(X_train, y_train)</span><br><span class=\"line\"><span class=\"comment\"># RF = cross_val_score(RF, X_train, y_train, cv = 5)</span></span><br><span class=\"line\"></span><br><span class=\"line\">KNN = KNeighborsClassifier()</span><br><span class=\"line\">KNN = KNN.fit(X_train, y_train)</span><br><span class=\"line\"><span class=\"comment\"># LR = cross_val_score(LR, X_train, y_train, cv = 5)</span></span><br><span class=\"line\"></span><br><span class=\"line\">GBDT = GradientBoostingClassifier()</span><br><span class=\"line\">GBDT = GBDT.fit(X_train, y_train)</span><br><span class=\"line\"><span class=\"comment\"># LR = cross_val_score(LR, X_train, y_train, cv = 5)</span></span><br><span class=\"line\"></span><br><span class=\"line\">names = [<span class=\"string\">&quot;LR&quot;</span>, <span class=\"string\">&quot;SVC&quot;</span>, <span class=\"string\">&#x27;DT&#x27;</span>, <span class=\"string\">&quot;RF&quot;</span>, <span class=\"string\">&quot;KNN&quot;</span>, <span class=\"string\">&quot;GBDT&quot;</span>]</span><br><span class=\"line\">models = [LR, svc, DT, RF, KNN, GBDT]</span><br><span class=\"line\">evaluates = [<span class=\"string\">&#x27;accuracy&#x27;</span>, <span class=\"string\">&#x27;precision&#x27;</span>, <span class=\"string\">&#x27;recall&#x27;</span>, <span class=\"string\">&#x27;f1&#x27;</span>, <span class=\"string\">&#x27;roc_auc&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_list = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> name,model <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(names,models):</span><br><span class=\"line\">    y_train_pred = model.predict(X_train)</span><br><span class=\"line\">    y_test_pred = model.predict(X_test)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#accuracy</span></span><br><span class=\"line\">    train_accuracy = model.score(X_train,y_train)</span><br><span class=\"line\">    test_accuracy = model.score(X_test,y_test)</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#precision   </span></span><br><span class=\"line\">    train_precision = precision_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_precision = precision_score(y_test,y_test_pred)   </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#recall</span></span><br><span class=\"line\">    train_recall = recall_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_recall = recall_score(y_test,y_test_pred)   </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#f1</span></span><br><span class=\"line\">    train_f1 = f1_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_f1 = f1_score(y_test,y_test_pred)   </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#auc</span></span><br><span class=\"line\">    y_train_pred = model.predict_proba(X_train)[:,<span class=\"number\">1</span>]</span><br><span class=\"line\">    y_test_pred = model.predict_proba(X_test)[:,<span class=\"number\">1</span>]</span><br><span class=\"line\">    </span><br><span class=\"line\">    train_auc = roc_auc_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_auc = roc_auc_score(y_test,y_test_pred)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#123;&#125; 训练集： accuracy:&#123;:.3&#125;,precision:&#123;:.3&#125;, recall:&#123;:.3&#125;, f1:&#123;:.3&#125;, auc:&#123;:.3&#125;&#x27;</span>.<span class=\"built_in\">format</span>(name,train_accuracy,train_precision,train_recall,train_f1,train_auc))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#123;&#125; 测试集： accuracy:&#123;:.3&#125;,precision:&#123;:.3&#125;, recall:&#123;:.3&#125;, f1:&#123;:.3&#125;, auc:&#123;:.3&#125;&#x27;</span>.<span class=\"built_in\">format</span>(name,test_accuracy,test_precision,test_recall,test_f1,test_auc))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">    df = pd.DataFrame(np.array([train_accuracy,train_precision,train_recall,train_f1,train_auc,test_accuracy,test_precision,test_recall,test_f1,test_auc]).reshape(<span class=\"number\">2</span>,-<span class=\"number\">1</span>),</span><br><span class=\"line\">                  index = [<span class=\"string\">&#x27;train&#x27;</span>,<span class=\"string\">&#x27;test&#x27;</span>],</span><br><span class=\"line\">                  columns = [<span class=\"string\">&#x27;Accuracy&#x27;</span>,<span class=\"string\">&#x27;Precision&#x27;</span>,<span class=\"string\">&#x27;Recall&#x27;</span>,<span class=\"string\">&#x27;F1-Score&#x27;</span>,<span class=\"string\">&#x27;AUC-Score&#x27;</span>])</span><br><span class=\"line\">    df_list.append(df)</span><br><span class=\"line\"></span><br><span class=\"line\">pd.concat(df_list,axis=<span class=\"number\">0</span>,keys=names)</span><br></pre></td></tr></table></figure>\n<pre><code>LR 训练集： accuracy:0.801,precision:0.742, recall:0.279, f1:0.406, auc:0.8\nLR 测试集： accuracy:0.789,precision:0.752, recall:0.365, f1:0.491, auc:0.787\n\n\nSVC 训练集： accuracy:0.793,precision:0.809, recall:0.196, f1:0.316, auc:0.809\nSVC 测试集： accuracy:0.771,precision:0.843, recall:0.222, f1:0.351, auc:0.796\n\n\nDT 训练集： accuracy:0.829,precision:0.723, recall:0.487, f1:0.582, auc:0.832\nDT 测试集： accuracy:0.727,precision:0.516, recall:0.361, f1:0.425, auc:0.707\n\n\nRF 训练集： accuracy:0.981,precision:0.999, recall:0.924, f1:0.96, auc:0.999\nRF 测试集： accuracy:0.722,precision:0.509, recall:0.218, f1:0.305, auc:0.673\n\n\nKNN 训练集： accuracy:0.816,precision:0.741, recall:0.379, f1:0.501, auc:0.848\nKNN 测试集： accuracy:0.708,precision:0.445, recall:0.184, f1:0.261, auc:0.623\n\n\nGBDT 训练集： accuracy:0.859,precision:0.867, recall:0.497, f1:0.632, auc:0.913\nGBDT 测试集： accuracy:0.754,precision:0.573, recall:0.474, f1:0.519, auc:0.771\n</code></pre><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>Accuracy</th>\n      <th>Precision</th>\n      <th>Recall</th>\n      <th>F1-Score</th>\n      <th>AUC-Score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">LR</th>\n      <th>train</th>\n      <td>0.800684</td>\n      <td>0.742120</td>\n      <td>0.279396</td>\n      <td>0.405956</td>\n      <td>0.799942</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.788644</td>\n      <td>0.751938</td>\n      <td>0.364662</td>\n      <td>0.491139</td>\n      <td>0.786801</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">SVC</th>\n      <th>train</th>\n      <td>0.792795</td>\n      <td>0.808889</td>\n      <td>0.196332</td>\n      <td>0.315972</td>\n      <td>0.809276</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.770768</td>\n      <td>0.842857</td>\n      <td>0.221805</td>\n      <td>0.351190</td>\n      <td>0.796191</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">DT</th>\n      <th>train</th>\n      <td>0.829345</td>\n      <td>0.722756</td>\n      <td>0.486516</td>\n      <td>0.581560</td>\n      <td>0.831990</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.726604</td>\n      <td>0.516129</td>\n      <td>0.360902</td>\n      <td>0.424779</td>\n      <td>0.706676</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">RF</th>\n      <th>train</th>\n      <td>0.981331</td>\n      <td>0.998834</td>\n      <td>0.924488</td>\n      <td>0.960224</td>\n      <td>0.999103</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.722397</td>\n      <td>0.508772</td>\n      <td>0.218045</td>\n      <td>0.305263</td>\n      <td>0.672949</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">KNN</th>\n      <th>train</th>\n      <td>0.816198</td>\n      <td>0.740506</td>\n      <td>0.378641</td>\n      <td>0.501071</td>\n      <td>0.847694</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.707676</td>\n      <td>0.445455</td>\n      <td>0.184211</td>\n      <td>0.260638</td>\n      <td>0.623415</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">GBDT</th>\n      <th>train</th>\n      <td>0.858796</td>\n      <td>0.866541</td>\n      <td>0.497303</td>\n      <td>0.631940</td>\n      <td>0.912630</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.753943</td>\n      <td>0.572727</td>\n      <td>0.473684</td>\n      <td>0.518519</td>\n      <td>0.770979</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">draw_roc_curve</span>(<span class=\"params\">train_pre_proba,test_pre_proba,train_auc,test_auc,model_name,num</span>):</span></span><br><span class=\"line\">    fpr,tpr,roc_auc = train_pre_proba</span><br><span class=\"line\">    test_fpr,test_tpr,test_roc_auc = test_pre_proba</span><br><span class=\"line\">    </span><br><span class=\"line\">    plt.figure()</span><br><span class=\"line\">    lw = <span class=\"number\">2</span></span><br><span class=\"line\">    plt.plot(fpr, tpr, color=<span class=\"string\">&#x27;darkorange&#x27;</span>,</span><br><span class=\"line\">             lw=lw, label=<span class=\"string\">&#x27;ROC curve (area = %0.2f)&#x27;</span> % train_auc)</span><br><span class=\"line\">    plt.plot(test_fpr, test_tpr, color=<span class=\"string\">&#x27;red&#x27;</span>,</span><br><span class=\"line\">         lw=lw, label=<span class=\"string\">&#x27;ROC curve (area = %0.2f)&#x27;</span> %test_auc)</span><br><span class=\"line\">    plt.plot([<span class=\"number\">0</span>, <span class=\"number\">1</span>], [<span class=\"number\">0</span>, <span class=\"number\">1</span>], color=<span class=\"string\">&#x27;navy&#x27;</span>, lw=lw, linestyle=<span class=\"string\">&#x27;--&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\">#plt.xlim([0.0, 1.0])</span></span><br><span class=\"line\">    <span class=\"comment\">#plt.ylim([0.0, 1.05])</span></span><br><span class=\"line\">    plt.xlabel(<span class=\"string\">&#x27;False Positive Rate&#x27;</span>)</span><br><span class=\"line\">    plt.ylabel(<span class=\"string\">&#x27;True Positive Rate&#x27;</span>)</span><br><span class=\"line\">    plt.title(<span class=\"string\">&#x27;Roc example &#x27;</span>+ model_name)</span><br><span class=\"line\">    plt.legend(loc=<span class=\"string\">&quot;lower right&quot;</span>)</span><br><span class=\"line\">    plt.savefig(<span class=\"string\">&quot;../img/2019-08-07_5种分类模型比较_&#123;&#125;.png&quot;</span>.<span class=\"built_in\">format</span>(num))</span><br><span class=\"line\">    plt.close()</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">for</span> num,name,model <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">7</span>),names,models):</span><br><span class=\"line\">    </span><br><span class=\"line\">    y_train_pred = model.predict_proba(X_train)[:,<span class=\"number\">1</span>]</span><br><span class=\"line\">    y_test_pred = model.predict_proba(X_test)[:,<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    train_roc = roc_curve(y_train,y_train_pred)</span><br><span class=\"line\">    test_roc = roc_curve(y_test,y_test_pred)</span><br><span class=\"line\"></span><br><span class=\"line\">    train_auc = roc_auc_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_auc = roc_auc_score(y_test,y_test_pred)</span><br><span class=\"line\"></span><br><span class=\"line\">    draw_roc_curve(train_roc,test_roc,train_auc,test_auc,name,num)</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-07_5种分类模型比较_1.png\"\n                      alt=\"\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-07_5种分类模型比较_2.png\"\n                      alt=\"\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-07_5种分类模型比较_3.png\"\n                      alt=\"\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-07_5种分类模型比较_4.png\"\n                      alt=\"\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-07_5种分类模型比较_5.png\"\n                      alt=\"\"\n                ></p>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-07_5种分类模型比较_6.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"使用k-folds交叉建模\"><a href=\"#使用k-folds交叉建模\" class=\"headerlink\" title=\"使用k-folds交叉建模\"></a>使用k-folds交叉建模</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> KFold</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run_cv</span>(<span class=\"params\">X,y,clf_class,**kwargs</span>):</span></span><br><span class=\"line\">    kf = KFold(n_splits = <span class=\"number\">5</span>, shuffle = <span class=\"literal\">False</span>, random_state = <span class=\"number\">0</span>)</span><br><span class=\"line\">    y_pred = y.copy()</span><br><span class=\"line\">    clf = clf_class(**kwargs)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> train_index , test_index <span class=\"keyword\">in</span> kf.split(X):</span><br><span class=\"line\">        X_train, X_test = X[train_index], X[test_index]</span><br><span class=\"line\">        y_train, y_test = y[train_index], y[test_index]</span><br><span class=\"line\">        </span><br><span class=\"line\">        clf.fit(X_train,y_train)</span><br><span class=\"line\">        y_pred[test_index] = clf.predict(X_test)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> y_pred</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier, GradientBoostingClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> SVC</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_score</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsClassifier </span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\"></span><br><span class=\"line\">LR_CV_result = run_cv(X_train,y_train,LogisticRegression)</span><br><span class=\"line\">RF_CV_result = run_cv(X_train,y_train,RandomForestClassifier)</span><br><span class=\"line\">KNN_CV_result = run_cv(X_train,y_train,KNeighborsClassifier)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">accuracy</span>(<span class=\"params\">y_true,y_pred</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> np.mean(y_true == y_pred)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&quot;Logistic Regression (L2 is default): &quot;</span> + <span class=\"built_in\">str</span>(accuracy(y_train, LR_CV_result)))</span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&quot;Random forest: &quot;</span> + <span class=\"built_in\">str</span>(accuracy(y_train, RF_CV_result)))</span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&quot;K-nearest-neighbors: &quot;</span> + <span class=\"built_in\">str</span>(accuracy(y_train, KNN_CV_result)))</span><br></pre></td></tr></table></figure>\n<pre><code>Logistic Regression (L2 is default): 0.7933210623192216\nRandom forest: 0.7812253484091507\nK-nearest-neighbors: 0.7520378648435446\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://github.com/datawhalechina/Datawhale_Learning/tree/master/doc/%E7%90%86%E8%AE%BA%E5%BA%94%E7%94%A8/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98\" >DataWhale数据挖掘实战营<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/tszr/p/10801558.html\" >吴裕雄 PYTHON 机器学习——集成学习梯度提升决策树GRADIENTBOOSTINGCLASSIFIER分类模型<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"http://yezuolin.com/2018/11/TheModelofUserLoanOverdueEvaluation/\" >使用5种分类模型进行用户贷款逾期预测<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://blog.csdn.net/kancy110/article/details/74910185/\" >sklearn.model_selection.KFold<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"Sklearn","mathjax":false,"abbrlink":53999,"date":"2019-08-27T16:00:00.000Z","_content":"\n## 简单范例\n\n\n```python\nimport warnings\nwarnings.filterwarnings('ignore')  \nfrom sklearn import neighbors, datasets, preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n\niris = datasets.load_iris()\nX, y = iris.data[:, :2], iris.target\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=33)\n\nscaler = preprocessing.StandardScaler().fit(X_train)\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)\n\nknn = neighbors.KNeighborsClassifier(n_neighbors=5)\nknn.fit(X_train, y_train)\n\ny_pred = knn.predict(X_test)\n\naccuracy_score(y_test, y_pred)\n```\n\n\n\n\n    0.631578947368421\n\n\n\n## 数据分割\n\n\n```python\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=33)\n```\n\n## 数据处理\n\n### Standardization\n\n\n```python\nfrom sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler().fit(X_train)\nscaler.transform(X_train)\n```\n\n\n\n\n    array([[-0.91090798, -1.59775374],\n           [-1.0271058 ,  0.08448757],\n           [ 0.59966379, -1.59775374],\n           [ 0.01867465, -0.96691325],\n           [ 0.48346596, -0.33607276],\n           [-1.25950146,  0.29476773],\n           [-1.37569929,  0.71532806],\n           [-0.79471015, -1.17719341],\n           [-1.14330363,  0.71532806],\n           [ 2.45882905,  1.55644871],\n           [-0.79471015,  0.71532806],\n           [-0.79471015,  1.34616854],\n           [-0.21372101, -0.33607276],\n           [ 0.83205945, -0.1257926 ],\n           [-0.44611666,  1.76672887],\n           [ 1.41304859,  0.29476773],\n           [ 0.01867465, -0.54635292],\n           [ 2.22643339, -0.96691325],\n           [-0.32991883, -1.17719341],\n           [ 0.13487248,  0.29476773],\n           [-1.0271058 ,  1.13588838],\n           [-1.49189712, -1.59775374],\n           [ 0.59966379, -0.54635292],\n           [-1.60809495, -0.33607276],\n           [-0.91090798,  1.13588838],\n           [ 1.64544425, -0.1257926 ],\n           [ 0.25107031,  0.71532806],\n           [ 0.48346596, -1.8080339 ],\n           [ 1.8778399 , -0.54635292],\n           [ 1.18065293, -0.1257926 ],\n           [ 0.71586162, -0.54635292],\n           [-0.09752318, -1.17719341],\n           [-0.91090798,  0.92560822],\n           [-0.79471015,  1.55644871],\n           [ 1.18065293, -0.54635292],\n           [-0.67851232, -0.75663309],\n           [-0.79471015,  1.55644871],\n           [-0.21372101, -1.17719341],\n           [ 0.36726814, -0.1257926 ],\n           [ 0.94825728, -0.33607276],\n           [ 0.71586162, -0.54635292],\n           [-1.72429277, -0.1257926 ],\n           [ 1.64544425,  1.13588838],\n           [-0.79471015,  0.92560822],\n           [ 0.59966379, -1.17719341],\n           [-1.60809495,  0.29476773],\n           [ 2.11023556, -0.1257926 ],\n           [ 0.71586162,  0.29476773],\n           [-0.79471015,  1.55644871],\n           [ 0.83205945,  0.29476773],\n           [ 0.59966379, -0.75663309],\n           [-0.91090798,  0.92560822],\n           [-0.67851232,  0.71532806],\n           [ 0.71586162, -0.75663309],\n           [ 0.01867465,  1.97700903],\n           [-0.09752318,  2.81812969],\n           [-1.37569929,  0.29476773],\n           [ 1.29685076,  0.08448757],\n           [ 0.59966379, -0.33607276],\n           [-0.32991883,  0.92560822],\n           [-0.09752318, -0.96691325],\n           [-0.91090798,  0.50504789],\n           [ 0.25107031, -1.8080339 ],\n           [-1.0271058 , -0.1257926 ],\n           [-0.91090798, -2.22859423],\n           [ 0.94825728, -0.1257926 ],\n           [-0.09752318, -0.54635292],\n           [-0.32991883, -0.96691325],\n           [-0.32991883, -1.59775374],\n           [-1.14330363,  0.08448757],\n           [ 0.25107031, -0.33607276],\n           [-0.91090798, -0.1257926 ],\n           [ 1.29685076,  0.08448757],\n           [ 1.06445511, -1.17719341],\n           [-0.56231449,  1.34616854],\n           [-0.67851232,  2.1872892 ],\n           [-0.91090798,  0.71532806],\n           [-1.37569929,  1.13588838],\n           [ 2.22643339,  1.55644871],\n           [ 1.76164208, -0.33607276],\n           [-1.37569929,  0.08448757],\n           [-0.32991883, -1.38747358],\n           [ 0.01867465, -0.75663309],\n           [ 1.06445511,  0.50504789],\n           [ 0.01867465, -0.75663309],\n           [-0.44611666,  1.34616854],\n           [-0.91090798,  0.71532806],\n           [ 0.25107031, -0.75663309],\n           [-0.09752318, -0.54635292],\n           [ 0.36726814, -0.54635292],\n           [-0.79471015,  0.50504789],\n           [-0.21372101, -0.1257926 ],\n           [-0.44611666, -0.1257926 ],\n           [-0.44611666,  1.76672887],\n           [ 1.06445511,  0.50504789],\n           [-1.0271058 , -1.17719341],\n           [ 0.48346596,  0.71532806],\n           [-0.32991883, -1.38747358],\n           [ 2.22643339, -0.54635292],\n           [-0.44611666,  0.71532806],\n           [ 1.06445511, -0.1257926 ],\n           [-0.32991883,  2.39756936],\n           [-0.91090798,  0.29476773],\n           [-1.14330363, -0.1257926 ],\n           [ 0.01867465, -0.75663309],\n           [ 0.13487248, -0.1257926 ],\n           [ 1.52924642, -0.1257926 ],\n           [-1.0271058 , -1.38747358],\n           [ 0.59966379, -1.17719341],\n           [-0.21372101, -0.1257926 ],\n           [ 2.22643339, -0.1257926 ],\n           [-0.44611666,  0.71532806]])\n\n\n\n### Normalization\n\n\n```python\nfrom sklearn.preprocessing import Normalizer\n\nscaler = Normalizer().fit(X_train)\nscaler.transform(X_train)\n```\n\n\n\n\n    array([[0.90849045, 0.41790561],\n           [0.84507884, 0.53464171],\n           [0.93935732, 0.34293997],\n           [0.91250932, 0.4090559 ],\n           [0.90580954, 0.42368511],\n           [0.82659925, 0.56279098],\n           [0.80417614, 0.59439106],\n           [0.89792072, 0.44015722],\n           [0.81602448, 0.57801734],\n           [0.90116674, 0.43347261],\n           [0.83205029, 0.5547002 ],\n           [0.80942185, 0.58722762],\n           [0.88799441, 0.45985425],\n           [0.90795938, 0.41905818],\n           [0.81067923, 0.58549055],\n           [0.90947448, 0.41575976],\n           [0.90055164, 0.43474907],\n           [0.94744567, 0.31991672],\n           [0.91036648, 0.41380294],\n           [0.87903186, 0.47676304],\n           [0.80588181, 0.59207643],\n           [0.89043468, 0.45511106],\n           [0.91381155, 0.40613847],\n           [0.8349582 , 0.55031336],\n           [0.81153434, 0.58430473],\n           [0.92307692, 0.38461538],\n           [0.87002219, 0.49301257],\n           [0.94242775, 0.33440985],\n           [0.93528626, 0.3538921 ],\n           [0.9149178 , 0.40364021],\n           [0.91615733, 0.40081883],\n           [0.91578821, 0.4016615 ],\n           [0.81923192, 0.57346234],\n           [0.80188283, 0.59748132],\n           [0.9246781 , 0.38074981],\n           [0.88749608, 0.46081527],\n           [0.80188283, 0.59748132],\n           [0.91313788, 0.40765084],\n           [0.89734997, 0.44131966],\n           [0.91551945, 0.4022737 ],\n           [0.91615733, 0.40081883],\n           [0.82012695, 0.5721816 ],\n           [0.89442719, 0.4472136 ],\n           [0.82451335, 0.5658425 ],\n           [0.92949071, 0.36884552],\n           [0.80873608, 0.5881717 ],\n           [0.93015522, 0.36716653],\n           [0.89442719, 0.4472136 ],\n           [0.80188283, 0.59748132],\n           [0.89717068, 0.44168403],\n           [0.91914503, 0.3939193 ],\n           [0.81923192, 0.57346234],\n           [0.83696961, 0.54724936],\n           [0.92136416, 0.38870051],\n           [0.82321279, 0.56773296],\n           [0.79159032, 0.61105218],\n           [0.8209052 , 0.57106449],\n           [0.9121687 , 0.40981492],\n           [0.90838094, 0.41814361],\n           [0.84366149, 0.53687549],\n           [0.90981905, 0.41500518],\n           [0.83460941, 0.55084221],\n           [0.93887632, 0.34425465],\n           [0.8528513 , 0.52215386],\n           [0.92847669, 0.37139068],\n           [0.91036648, 0.41380294],\n           [0.89755433, 0.44090388],\n           [0.90407227, 0.42737962],\n           [0.92257988, 0.38580613],\n           [0.84003938, 0.54252543],\n           [0.90034895, 0.43516866],\n           [0.85749293, 0.51449576],\n           [0.9121687 , 0.40981492],\n           [0.93690259, 0.34959052],\n           [0.81995808, 0.57242357],\n           [0.78526917, 0.61915453],\n           [0.8269265 , 0.56231002],\n           [0.787505  , 0.61630826],\n           [0.89674427, 0.44254912],\n           [0.92935209, 0.36919466],\n           [0.82926643, 0.55885346],\n           [0.91653938, 0.39994446],\n           [0.90658206, 0.42202958],\n           [0.89708903, 0.44184982],\n           [0.90658206, 0.42202958],\n           [0.82493237, 0.56523144],\n           [0.8269265 , 0.56231002],\n           [0.91192151, 0.41036468],\n           [0.89755433, 0.44090388],\n           [0.90882955, 0.41716766],\n           [0.83957016, 0.54325128],\n           [0.88147997, 0.47222141],\n           [0.87415728, 0.48564293],\n           [0.81067923, 0.58549055],\n           [0.89708903, 0.44184982],\n           [0.89076187, 0.45447034],\n           [0.87681241, 0.48083261],\n           [0.91653938, 0.39994446],\n           [0.93979342, 0.34174306],\n           [0.84623284, 0.53281327],\n           [0.91268458, 0.40866474],\n           [0.79476781, 0.6069136 ],\n           [0.8422714 , 0.5390537 ],\n           [0.8479983 , 0.52999894],\n           [0.90658206, 0.42202958],\n           [0.89138513, 0.45324668],\n           [0.92114622, 0.38921671],\n           [0.89806271, 0.43986745],\n           [0.92949071, 0.36884552],\n           [0.88147997, 0.47222141],\n           [0.93177739, 0.36303015],\n           [0.84623284, 0.53281327]])\n\n\n\n### Binarization\n\n\n```python\nfrom sklearn.preprocessing import Binarizer\n\nbinarizer = Binarizer(threshold=0.0).fit(X)\nbinarizer.transform(X)\n```\n\n\n\n\n    array([[1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.]])\n\n\n\n### Encoding Categorical Features\n\n\n```python\nfrom sklearn.preprocessing import LabelEncoder\n\nenc = LabelEncoder()\nenc.fit_transform(y)\n```\n\n\n\n\n    array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n           0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n           0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n           2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n           2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])\n\n\n\n### Imputing Missing Values\n\n\n```python\nfrom sklearn.preprocessing import Imputer\n\nimp = Imputer(missing_values=0, strategy='mean', axis=0)\nimp.fit_transform(X_train)\n```\n\n\n\n\n    array([[-0.91090798, -1.59775374],\n           [-1.0271058 ,  0.08448757],\n           [ 0.59966379, -1.59775374],\n           [ 0.01867465, -0.96691325],\n           [ 0.48346596, -0.33607276],\n           [-1.25950146,  0.29476773],\n           [-1.37569929,  0.71532806],\n           [-0.79471015, -1.17719341],\n           [-1.14330363,  0.71532806],\n           [ 2.45882905,  1.55644871],\n           [-0.79471015,  0.71532806],\n           [-0.79471015,  1.34616854],\n           [-0.21372101, -0.33607276],\n           [ 0.83205945, -0.1257926 ],\n           [-0.44611666,  1.76672887],\n           [ 1.41304859,  0.29476773],\n           [ 0.01867465, -0.54635292],\n           [ 2.22643339, -0.96691325],\n           [-0.32991883, -1.17719341],\n           [ 0.13487248,  0.29476773],\n           [-1.0271058 ,  1.13588838],\n           [-1.49189712, -1.59775374],\n           [ 0.59966379, -0.54635292],\n           [-1.60809495, -0.33607276],\n           [-0.91090798,  1.13588838],\n           [ 1.64544425, -0.1257926 ],\n           [ 0.25107031,  0.71532806],\n           [ 0.48346596, -1.8080339 ],\n           [ 1.8778399 , -0.54635292],\n           [ 1.18065293, -0.1257926 ],\n           [ 0.71586162, -0.54635292],\n           [-0.09752318, -1.17719341],\n           [-0.91090798,  0.92560822],\n           [-0.79471015,  1.55644871],\n           [ 1.18065293, -0.54635292],\n           [-0.67851232, -0.75663309],\n           [-0.79471015,  1.55644871],\n           [-0.21372101, -1.17719341],\n           [ 0.36726814, -0.1257926 ],\n           [ 0.94825728, -0.33607276],\n           [ 0.71586162, -0.54635292],\n           [-1.72429277, -0.1257926 ],\n           [ 1.64544425,  1.13588838],\n           [-0.79471015,  0.92560822],\n           [ 0.59966379, -1.17719341],\n           [-1.60809495,  0.29476773],\n           [ 2.11023556, -0.1257926 ],\n           [ 0.71586162,  0.29476773],\n           [-0.79471015,  1.55644871],\n           [ 0.83205945,  0.29476773],\n           [ 0.59966379, -0.75663309],\n           [-0.91090798,  0.92560822],\n           [-0.67851232,  0.71532806],\n           [ 0.71586162, -0.75663309],\n           [ 0.01867465,  1.97700903],\n           [-0.09752318,  2.81812969],\n           [-1.37569929,  0.29476773],\n           [ 1.29685076,  0.08448757],\n           [ 0.59966379, -0.33607276],\n           [-0.32991883,  0.92560822],\n           [-0.09752318, -0.96691325],\n           [-0.91090798,  0.50504789],\n           [ 0.25107031, -1.8080339 ],\n           [-1.0271058 , -0.1257926 ],\n           [-0.91090798, -2.22859423],\n           [ 0.94825728, -0.1257926 ],\n           [-0.09752318, -0.54635292],\n           [-0.32991883, -0.96691325],\n           [-0.32991883, -1.59775374],\n           [-1.14330363,  0.08448757],\n           [ 0.25107031, -0.33607276],\n           [-0.91090798, -0.1257926 ],\n           [ 1.29685076,  0.08448757],\n           [ 1.06445511, -1.17719341],\n           [-0.56231449,  1.34616854],\n           [-0.67851232,  2.1872892 ],\n           [-0.91090798,  0.71532806],\n           [-1.37569929,  1.13588838],\n           [ 2.22643339,  1.55644871],\n           [ 1.76164208, -0.33607276],\n           [-1.37569929,  0.08448757],\n           [-0.32991883, -1.38747358],\n           [ 0.01867465, -0.75663309],\n           [ 1.06445511,  0.50504789],\n           [ 0.01867465, -0.75663309],\n           [-0.44611666,  1.34616854],\n           [-0.91090798,  0.71532806],\n           [ 0.25107031, -0.75663309],\n           [-0.09752318, -0.54635292],\n           [ 0.36726814, -0.54635292],\n           [-0.79471015,  0.50504789],\n           [-0.21372101, -0.1257926 ],\n           [-0.44611666, -0.1257926 ],\n           [-0.44611666,  1.76672887],\n           [ 1.06445511,  0.50504789],\n           [-1.0271058 , -1.17719341],\n           [ 0.48346596,  0.71532806],\n           [-0.32991883, -1.38747358],\n           [ 2.22643339, -0.54635292],\n           [-0.44611666,  0.71532806],\n           [ 1.06445511, -0.1257926 ],\n           [-0.32991883,  2.39756936],\n           [-0.91090798,  0.29476773],\n           [-1.14330363, -0.1257926 ],\n           [ 0.01867465, -0.75663309],\n           [ 0.13487248, -0.1257926 ],\n           [ 1.52924642, -0.1257926 ],\n           [-1.0271058 , -1.38747358],\n           [ 0.59966379, -1.17719341],\n           [-0.21372101, -0.1257926 ],\n           [ 2.22643339, -0.1257926 ],\n           [-0.44611666,  0.71532806]])\n\n\n\n### Generating Polynomial Features\n\n\n```python\nfrom sklearn.preprocessing import PolynomialFeatures\n\npoly = PolynomialFeatures(5)\npoly.fit_transform(X_train) \n```\n\n\n\n\n    array([[1.00000000e+00, 5.00000000e+00, 2.30000000e+00, ...,\n            3.04175000e+02, 1.39920500e+02, 6.43634300e+01],\n           [1.00000000e+00, 4.90000000e+00, 3.10000000e+00, ...,\n            7.15281910e+02, 4.52525290e+02, 2.86291510e+02],\n           [1.00000000e+00, 6.30000000e+00, 2.30000000e+00, ...,\n            4.82908230e+02, 1.76299830e+02, 6.43634300e+01],\n           ...,\n           [1.00000000e+00, 5.60000000e+00, 3.00000000e+00, ...,\n            8.46720000e+02, 4.53600000e+02, 2.43000000e+02],\n           [1.00000000e+00, 7.70000000e+00, 3.00000000e+00, ...,\n            1.60083000e+03, 6.23700000e+02, 2.43000000e+02],\n           [1.00000000e+00, 5.40000000e+00, 3.40000000e+00, ...,\n            1.14610464e+03, 7.21621440e+02, 4.54354240e+02]])\n\n\n\n## 模型\n\n### 监督学习\n\n#### Linear Regression\n\n\n```python\nfrom sklearn.linear_model import LinearRegression\n\nlr = LinearRegression(normalize=True)\nlr.fit(X, y)\ny_pred = lr.predict(X_test)\ny_pred\n```\n\n\n\n\n    array([ 0.99503595,  1.60221544,  0.06895097,  1.6466104 ,  1.48027593,\n            1.18075657,  0.01486294,  0.17150435,  1.38179294,  1.68538268,\n            1.61190851, -0.02390934,  1.11697547,  1.28893263,  1.74916378,\n            1.50935514,  1.15167736,  0.24497852,  1.18075657,  1.90580519,\n            0.27968041,  0.42100606,  1.51904821,  0.26998734,  1.66192615,\n            1.4261879 ,  1.22515153,  1.35271373,  1.51904821,  1.07820319,\n            1.04912398,  1.60221544,  0.98534288,  1.31801184,  1.60221544,\n            1.66599654,  1.19607232,  0.93125485])\n\n\n\n#### Support Vector Machines (SVM)\n\n\n```python\nfrom sklearn.svm import SVC\n\nsvc = SVC(kernel='linear')\nsvc.fit(X, y)\ny_pred = svc.predict(X_test)\ny_pred\n```\n\n\n\n\n    array([1, 2, 0, 2, 1, 2, 0, 0, 2, 2, 2, 0, 2, 1, 2, 2, 1, 0, 2, 2, 0, 0,\n           2, 0, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1])\n\n\n\n#### Naive Bayes\n\n\n```python\nfrom sklearn.naive_bayes import GaussianNB\n\ngnb = GaussianNB()\ngnb.fit(X, y)\ny_pred = gnb.predict(X_test)\ny_pred\n```\n\n\n\n\n    array([1, 2, 0, 2, 1, 2, 0, 0, 2, 2, 2, 0, 2, 1, 2, 2, 1, 0, 2, 2, 0, 0,\n           2, 0, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1])\n\n\n\n#### KNN\n\n\n```python\nfrom sklearn import neighbors\n\nknn = neighbors.KNeighborsClassifier(n_neighbors=5)\nknn.fit(X, y)\ny_pred = knn.predict(X_test)\ny_pred\n```\n\n\n\n\n    array([1, 1, 0, 2, 1, 2, 0, 0, 2, 2, 2, 0, 2, 1, 2, 2, 2, 0, 2, 2, 0, 0,\n           2, 0, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1])\n\n\n\n### 无监督学习\n\n#### Principal Component Analysis (PCA)\n\n\n```python\nfrom sklearn.decomposition import PCA\n\npca = PCA(n_components=0.95)\npca.fit_transform(X_train)\n```\n\n\n\n\n    array([[-0.70718738, -0.83172028],\n           [-0.88369354, -0.0450529 ],\n           [ 0.58678167, -0.70664389],\n           [ 0.06023749, -0.45614195],\n           [ 0.42951803, -0.11904867],\n           [-1.09238696,  0.03524066],\n           [-1.21116556,  0.22469156],\n           [-0.62689382, -0.62302686],\n           [-1.0120934 ,  0.24393409],\n           [ 2.03504005,  0.94033749],\n           [-0.71348516,  0.27279787],\n           [-0.74234894,  0.57140611],\n           [-0.16769846, -0.17677623],\n           [ 0.71850501,  0.00935119],\n           [-0.46298322,  0.79934205],\n           [ 1.19694289,  0.25652966],\n           [ 0.04099497, -0.25706979],\n           [ 1.95142302, -0.273338  ],\n           [-0.22874949, -0.58454182],\n           [ 0.10204601,  0.15069579],\n           [-0.93179984,  0.45262751],\n           [-1.20486778, -0.87982658],\n           [ 0.53867537, -0.20896349],\n           [-1.36213142, -0.29223136],\n           [-0.83226376,  0.46224877],\n           [ 1.41525757,  0.07670002],\n           [ 0.18233956,  0.35938921],\n           [ 0.49686685, -0.81580123],\n           [ 1.63357226, -0.10312962],\n           [ 1.01711325,  0.03821497],\n           [ 0.63821145, -0.19934223],\n           [-0.02967733, -0.5652993 ],\n           [-0.8226425 ,  0.36271269],\n           [-0.7519702 ,  0.67094219],\n           [ 1.03635577, -0.16085719],\n           [-0.54660026, -0.41433344],\n           [-0.7519702 ,  0.67094219],\n           [-0.12921341, -0.57492056],\n           [ 0.32036069, -0.02913385],\n           [ 0.82766235, -0.08056363],\n           [ 0.63821145, -0.19934223],\n           [-1.47128876, -0.20231654],\n           [ 1.35753001,  0.6739165 ],\n           [-0.72310642,  0.37233395],\n           [ 0.56753915, -0.50757173],\n           [-1.3909952 ,  0.00637688],\n           [ 1.8134019 ,  0.11518506],\n           [ 0.59972641,  0.19880209],\n           [-0.7519702 ,  0.67094219],\n           [ 0.69926249,  0.20842335],\n           [ 0.54829663, -0.30849957],\n           [-0.8226425 ,  0.36271269],\n           [-0.61394908,  0.28241913],\n           [ 0.64783271, -0.29887831],\n           [-0.07446016,  0.93736317],\n           [-0.21248128,  1.32588624],\n           [-1.19192304,  0.0256194 ],\n           [ 1.10702807,  0.14737232],\n           [ 0.52905411, -0.10942741],\n           [-0.3249621 ,  0.41081899],\n           [-0.03929859, -0.46576321],\n           [-0.80339998,  0.16364053],\n           [ 0.29779469, -0.83504376],\n           [-0.87407228, -0.14458898],\n           [-0.67832359, -1.13032852],\n           [ 0.81804109,  0.01897245],\n           [-0.05854111, -0.26669105],\n           [-0.23837075, -0.48500574],\n           [-0.20950697, -0.78361398],\n           [-0.98322962, -0.05467416],\n           [ 0.23044587, -0.13829119],\n           [-0.7745362 , -0.13496772],\n           [ 1.10702807,  0.14737232],\n           [ 0.96568347, -0.46908669],\n           [-0.54327678,  0.59064863],\n           [-0.6812979 ,  0.97917169],\n           [-0.81302124,  0.26317661],\n           [-1.23040809,  0.42376373],\n           [ 1.83596789,  0.92109496],\n           [ 1.52441492, -0.0132148 ],\n           [-1.18230178, -0.07391668],\n           [-0.21912823, -0.6840779 ],\n           [ 0.05061623, -0.35660587],\n           [ 0.88871339,  0.32720196],\n           [ 0.05061623, -0.35660587],\n           [-0.4437407 ,  0.60026989],\n           [-0.81302124,  0.26317661],\n           [ 0.24968839, -0.33736335],\n           [-0.05854111, -0.26669105],\n           [ 0.33960321, -0.22820601],\n           [-0.7038639 ,  0.17326179],\n           [-0.17731972, -0.07724015],\n           [-0.37639188, -0.09648267],\n           [-0.46298322,  0.79934205],\n           [ 0.88871339,  0.32720196],\n           [-0.82596598, -0.64226938],\n           [ 0.38141173,  0.37863173],\n           [-0.21912823, -0.6840779 ],\n           [ 1.9321805 , -0.07426584],\n           [-0.41487692,  0.30166165],\n           [ 0.91757717,  0.02859371],\n           [-0.39231092,  1.10757155],\n           [-0.79377872,  0.06410445],\n           [-0.97360836, -0.15421024],\n           [ 0.05061623, -0.35660587],\n           [ 0.12128853, -0.04837637],\n           [ 1.31572149,  0.06707876],\n           [-0.81634472, -0.74180546],\n           [ 0.56753915, -0.50757173],\n           [-0.17731972, -0.07724015],\n           [ 1.91293798,  0.12480632],\n           [-0.41487692,  0.30166165]])\n\n\n\n#### K Means\n\n\n```python\nfrom sklearn.cluster import KMeans\n\nk_means = KMeans(n_clusters=3, random_state=0)\nk_means.fit(X, y)\ny_pred = k_means.predict(X_test)\ny_pred\n```\n\n\n\n\n    array([0, 2, 1, 2, 0, 2, 1, 1, 2, 2, 2, 1, 2, 0, 2, 2, 0, 1, 2, 2, 1, 1,\n           2, 1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 0], dtype=int32)\n\n\n\n## 评估\n\n### 分类\n\n#### Accuracy Score\n\n\n```python\nknn.score(X_test, y_test)\n\nfrom sklearn.metrics import accuracy_score\n\naccuracy_score(y_test, y_pred)\n```\n\n\n\n\n    0.3157894736842105\n\n\n\n#### Classification Report\n\n\n```python\nfrom sklearn.metrics import classification_report\n\nclassification_report(y_test, y_pred)\n```\n\n\n\n\n    '              precision    recall  f1-score   support\\n\\n           0       0.00      0.00      0.00         8\\n           1       0.00      0.00      0.00        11\\n           2       0.71      0.63      0.67        19\\n\\n   micro avg       0.32      0.32      0.32        38\\n   macro avg       0.24      0.21      0.22        38\\nweighted avg       0.35      0.32      0.33        38\\n'\n\n\n\n#### Confusion Matrix\n\n\n```python\nfrom sklearn.metrics import confusion_matrix\n\nconfusion_matrix(y_test, y_pred)\n```\n\n\n\n\n    array([[ 0,  8,  0],\n           [ 6,  0,  5],\n           [ 7,  0, 12]])\n\n\n\n### 回归\n\n#### Mean Absolute Error\n\n\n```python\nfrom sklearn.metrics import mean_absolute_error\n\nmean_absolute_error(y_test, y_pred)\n```\n\n\n\n\n    0.868421052631579\n\n\n\n#### Mean Squared Error\n\n\n```python\nfrom sklearn.metrics import mean_squared_error\n\nmean_squared_error(y_test, y_pred)\n```\n\n\n\n\n    1.236842105263158\n\n\n\n\n```python\n#### R² Score\n```\n\n\n```python\nfrom sklearn.metrics import r2_score\n\nr2_score(y_test, y_pred)\n```\n\n\n\n\n    -0.9734806629834258\n\n\n\n### 聚类\n\n#### Adjusted Rand Index\n\n\n```python\nfrom sklearn.metrics import adjusted_rand_score\n\nadjusted_rand_score(y_test, y_pred)\n```\n\n\n\n\n    0.3273680853325774\n\n\n\n#### V-measure\n\n\n```python\nfrom sklearn.metrics import v_measure_score\n\nv_measure_score(y_test, y_pred)\n```\n\n\n\n\n    0.5040766075368869\n\n\n\n### Cross-Validation\n\n\n```python\nfrom sklearn.model_selection import cross_val_score\n\nprint(cross_val_score(knn, X_train, y_train, cv=4))\nprint(cross_val_score(lr, X, y, cv=2))\n```\n\n    [0.82758621 0.82758621 0.82142857 0.88461538]\n    [-4.31567384 -1.89773191]\n\n\n## 调试\n\n### Grid Search\n\n\n```python\nfrom sklearn.model_selection import GridSearchCV\n\nparams = {\"n_neighbors\": np.arange(1,3), \"metric\": [\"euclidean\", \"cityblock\"]}\ngrid = GridSearchCV(estimator=knn,\n param_grid=params)\ngrid.fit(X_train, y_train)\n\nprint((grid.best_score_))\nprint((grid.best_estimator_.n_neighbors))\n```\n\n    0.8303571428571429\n    2\n\n\n### Randomized Parameter Optimization\n\n\n```python\nfrom sklearn.model_selection import RandomizedSearchCV\nparams = {\"n_neighbors\": list(range(1,5)), \"weights\": [\"uniform\", \"distance\"]}\nrsearch = RandomizedSearchCV(estimator=knn,\n param_distributions=params,\n cv=4,\n n_iter=8,\n random_state=5)\nrsearch.fit(X_train, y_train)\nprint((rsearch.best_score_))\n```\n\n    0.8214285714285714\n\n\n> 参考：\n\n1. [Scikit-Learn Cheat Sheet: Python Machine Learning](https://www.datacamp.com/community/blog/scikit-learn-cheat-sheet)\n","source":"_posts/2019-08-28_Sklearn.md","raw":"---\ntitle: Sklearn\ncategories:\n  - Python\nmathjax: false\nabbrlink: 53999\ndate: 2019-08-28 00:00:00\n---\n\n## 简单范例\n\n\n```python\nimport warnings\nwarnings.filterwarnings('ignore')  \nfrom sklearn import neighbors, datasets, preprocessing\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n\niris = datasets.load_iris()\nX, y = iris.data[:, :2], iris.target\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=33)\n\nscaler = preprocessing.StandardScaler().fit(X_train)\nX_train = scaler.transform(X_train)\nX_test = scaler.transform(X_test)\n\nknn = neighbors.KNeighborsClassifier(n_neighbors=5)\nknn.fit(X_train, y_train)\n\ny_pred = knn.predict(X_test)\n\naccuracy_score(y_test, y_pred)\n```\n\n\n\n\n    0.631578947368421\n\n\n\n## 数据分割\n\n\n```python\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=33)\n```\n\n## 数据处理\n\n### Standardization\n\n\n```python\nfrom sklearn.preprocessing import StandardScaler\n\nscaler = StandardScaler().fit(X_train)\nscaler.transform(X_train)\n```\n\n\n\n\n    array([[-0.91090798, -1.59775374],\n           [-1.0271058 ,  0.08448757],\n           [ 0.59966379, -1.59775374],\n           [ 0.01867465, -0.96691325],\n           [ 0.48346596, -0.33607276],\n           [-1.25950146,  0.29476773],\n           [-1.37569929,  0.71532806],\n           [-0.79471015, -1.17719341],\n           [-1.14330363,  0.71532806],\n           [ 2.45882905,  1.55644871],\n           [-0.79471015,  0.71532806],\n           [-0.79471015,  1.34616854],\n           [-0.21372101, -0.33607276],\n           [ 0.83205945, -0.1257926 ],\n           [-0.44611666,  1.76672887],\n           [ 1.41304859,  0.29476773],\n           [ 0.01867465, -0.54635292],\n           [ 2.22643339, -0.96691325],\n           [-0.32991883, -1.17719341],\n           [ 0.13487248,  0.29476773],\n           [-1.0271058 ,  1.13588838],\n           [-1.49189712, -1.59775374],\n           [ 0.59966379, -0.54635292],\n           [-1.60809495, -0.33607276],\n           [-0.91090798,  1.13588838],\n           [ 1.64544425, -0.1257926 ],\n           [ 0.25107031,  0.71532806],\n           [ 0.48346596, -1.8080339 ],\n           [ 1.8778399 , -0.54635292],\n           [ 1.18065293, -0.1257926 ],\n           [ 0.71586162, -0.54635292],\n           [-0.09752318, -1.17719341],\n           [-0.91090798,  0.92560822],\n           [-0.79471015,  1.55644871],\n           [ 1.18065293, -0.54635292],\n           [-0.67851232, -0.75663309],\n           [-0.79471015,  1.55644871],\n           [-0.21372101, -1.17719341],\n           [ 0.36726814, -0.1257926 ],\n           [ 0.94825728, -0.33607276],\n           [ 0.71586162, -0.54635292],\n           [-1.72429277, -0.1257926 ],\n           [ 1.64544425,  1.13588838],\n           [-0.79471015,  0.92560822],\n           [ 0.59966379, -1.17719341],\n           [-1.60809495,  0.29476773],\n           [ 2.11023556, -0.1257926 ],\n           [ 0.71586162,  0.29476773],\n           [-0.79471015,  1.55644871],\n           [ 0.83205945,  0.29476773],\n           [ 0.59966379, -0.75663309],\n           [-0.91090798,  0.92560822],\n           [-0.67851232,  0.71532806],\n           [ 0.71586162, -0.75663309],\n           [ 0.01867465,  1.97700903],\n           [-0.09752318,  2.81812969],\n           [-1.37569929,  0.29476773],\n           [ 1.29685076,  0.08448757],\n           [ 0.59966379, -0.33607276],\n           [-0.32991883,  0.92560822],\n           [-0.09752318, -0.96691325],\n           [-0.91090798,  0.50504789],\n           [ 0.25107031, -1.8080339 ],\n           [-1.0271058 , -0.1257926 ],\n           [-0.91090798, -2.22859423],\n           [ 0.94825728, -0.1257926 ],\n           [-0.09752318, -0.54635292],\n           [-0.32991883, -0.96691325],\n           [-0.32991883, -1.59775374],\n           [-1.14330363,  0.08448757],\n           [ 0.25107031, -0.33607276],\n           [-0.91090798, -0.1257926 ],\n           [ 1.29685076,  0.08448757],\n           [ 1.06445511, -1.17719341],\n           [-0.56231449,  1.34616854],\n           [-0.67851232,  2.1872892 ],\n           [-0.91090798,  0.71532806],\n           [-1.37569929,  1.13588838],\n           [ 2.22643339,  1.55644871],\n           [ 1.76164208, -0.33607276],\n           [-1.37569929,  0.08448757],\n           [-0.32991883, -1.38747358],\n           [ 0.01867465, -0.75663309],\n           [ 1.06445511,  0.50504789],\n           [ 0.01867465, -0.75663309],\n           [-0.44611666,  1.34616854],\n           [-0.91090798,  0.71532806],\n           [ 0.25107031, -0.75663309],\n           [-0.09752318, -0.54635292],\n           [ 0.36726814, -0.54635292],\n           [-0.79471015,  0.50504789],\n           [-0.21372101, -0.1257926 ],\n           [-0.44611666, -0.1257926 ],\n           [-0.44611666,  1.76672887],\n           [ 1.06445511,  0.50504789],\n           [-1.0271058 , -1.17719341],\n           [ 0.48346596,  0.71532806],\n           [-0.32991883, -1.38747358],\n           [ 2.22643339, -0.54635292],\n           [-0.44611666,  0.71532806],\n           [ 1.06445511, -0.1257926 ],\n           [-0.32991883,  2.39756936],\n           [-0.91090798,  0.29476773],\n           [-1.14330363, -0.1257926 ],\n           [ 0.01867465, -0.75663309],\n           [ 0.13487248, -0.1257926 ],\n           [ 1.52924642, -0.1257926 ],\n           [-1.0271058 , -1.38747358],\n           [ 0.59966379, -1.17719341],\n           [-0.21372101, -0.1257926 ],\n           [ 2.22643339, -0.1257926 ],\n           [-0.44611666,  0.71532806]])\n\n\n\n### Normalization\n\n\n```python\nfrom sklearn.preprocessing import Normalizer\n\nscaler = Normalizer().fit(X_train)\nscaler.transform(X_train)\n```\n\n\n\n\n    array([[0.90849045, 0.41790561],\n           [0.84507884, 0.53464171],\n           [0.93935732, 0.34293997],\n           [0.91250932, 0.4090559 ],\n           [0.90580954, 0.42368511],\n           [0.82659925, 0.56279098],\n           [0.80417614, 0.59439106],\n           [0.89792072, 0.44015722],\n           [0.81602448, 0.57801734],\n           [0.90116674, 0.43347261],\n           [0.83205029, 0.5547002 ],\n           [0.80942185, 0.58722762],\n           [0.88799441, 0.45985425],\n           [0.90795938, 0.41905818],\n           [0.81067923, 0.58549055],\n           [0.90947448, 0.41575976],\n           [0.90055164, 0.43474907],\n           [0.94744567, 0.31991672],\n           [0.91036648, 0.41380294],\n           [0.87903186, 0.47676304],\n           [0.80588181, 0.59207643],\n           [0.89043468, 0.45511106],\n           [0.91381155, 0.40613847],\n           [0.8349582 , 0.55031336],\n           [0.81153434, 0.58430473],\n           [0.92307692, 0.38461538],\n           [0.87002219, 0.49301257],\n           [0.94242775, 0.33440985],\n           [0.93528626, 0.3538921 ],\n           [0.9149178 , 0.40364021],\n           [0.91615733, 0.40081883],\n           [0.91578821, 0.4016615 ],\n           [0.81923192, 0.57346234],\n           [0.80188283, 0.59748132],\n           [0.9246781 , 0.38074981],\n           [0.88749608, 0.46081527],\n           [0.80188283, 0.59748132],\n           [0.91313788, 0.40765084],\n           [0.89734997, 0.44131966],\n           [0.91551945, 0.4022737 ],\n           [0.91615733, 0.40081883],\n           [0.82012695, 0.5721816 ],\n           [0.89442719, 0.4472136 ],\n           [0.82451335, 0.5658425 ],\n           [0.92949071, 0.36884552],\n           [0.80873608, 0.5881717 ],\n           [0.93015522, 0.36716653],\n           [0.89442719, 0.4472136 ],\n           [0.80188283, 0.59748132],\n           [0.89717068, 0.44168403],\n           [0.91914503, 0.3939193 ],\n           [0.81923192, 0.57346234],\n           [0.83696961, 0.54724936],\n           [0.92136416, 0.38870051],\n           [0.82321279, 0.56773296],\n           [0.79159032, 0.61105218],\n           [0.8209052 , 0.57106449],\n           [0.9121687 , 0.40981492],\n           [0.90838094, 0.41814361],\n           [0.84366149, 0.53687549],\n           [0.90981905, 0.41500518],\n           [0.83460941, 0.55084221],\n           [0.93887632, 0.34425465],\n           [0.8528513 , 0.52215386],\n           [0.92847669, 0.37139068],\n           [0.91036648, 0.41380294],\n           [0.89755433, 0.44090388],\n           [0.90407227, 0.42737962],\n           [0.92257988, 0.38580613],\n           [0.84003938, 0.54252543],\n           [0.90034895, 0.43516866],\n           [0.85749293, 0.51449576],\n           [0.9121687 , 0.40981492],\n           [0.93690259, 0.34959052],\n           [0.81995808, 0.57242357],\n           [0.78526917, 0.61915453],\n           [0.8269265 , 0.56231002],\n           [0.787505  , 0.61630826],\n           [0.89674427, 0.44254912],\n           [0.92935209, 0.36919466],\n           [0.82926643, 0.55885346],\n           [0.91653938, 0.39994446],\n           [0.90658206, 0.42202958],\n           [0.89708903, 0.44184982],\n           [0.90658206, 0.42202958],\n           [0.82493237, 0.56523144],\n           [0.8269265 , 0.56231002],\n           [0.91192151, 0.41036468],\n           [0.89755433, 0.44090388],\n           [0.90882955, 0.41716766],\n           [0.83957016, 0.54325128],\n           [0.88147997, 0.47222141],\n           [0.87415728, 0.48564293],\n           [0.81067923, 0.58549055],\n           [0.89708903, 0.44184982],\n           [0.89076187, 0.45447034],\n           [0.87681241, 0.48083261],\n           [0.91653938, 0.39994446],\n           [0.93979342, 0.34174306],\n           [0.84623284, 0.53281327],\n           [0.91268458, 0.40866474],\n           [0.79476781, 0.6069136 ],\n           [0.8422714 , 0.5390537 ],\n           [0.8479983 , 0.52999894],\n           [0.90658206, 0.42202958],\n           [0.89138513, 0.45324668],\n           [0.92114622, 0.38921671],\n           [0.89806271, 0.43986745],\n           [0.92949071, 0.36884552],\n           [0.88147997, 0.47222141],\n           [0.93177739, 0.36303015],\n           [0.84623284, 0.53281327]])\n\n\n\n### Binarization\n\n\n```python\nfrom sklearn.preprocessing import Binarizer\n\nbinarizer = Binarizer(threshold=0.0).fit(X)\nbinarizer.transform(X)\n```\n\n\n\n\n    array([[1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.],\n           [1., 1.]])\n\n\n\n### Encoding Categorical Features\n\n\n```python\nfrom sklearn.preprocessing import LabelEncoder\n\nenc = LabelEncoder()\nenc.fit_transform(y)\n```\n\n\n\n\n    array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n           0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n           0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n           1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n           2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n           2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])\n\n\n\n### Imputing Missing Values\n\n\n```python\nfrom sklearn.preprocessing import Imputer\n\nimp = Imputer(missing_values=0, strategy='mean', axis=0)\nimp.fit_transform(X_train)\n```\n\n\n\n\n    array([[-0.91090798, -1.59775374],\n           [-1.0271058 ,  0.08448757],\n           [ 0.59966379, -1.59775374],\n           [ 0.01867465, -0.96691325],\n           [ 0.48346596, -0.33607276],\n           [-1.25950146,  0.29476773],\n           [-1.37569929,  0.71532806],\n           [-0.79471015, -1.17719341],\n           [-1.14330363,  0.71532806],\n           [ 2.45882905,  1.55644871],\n           [-0.79471015,  0.71532806],\n           [-0.79471015,  1.34616854],\n           [-0.21372101, -0.33607276],\n           [ 0.83205945, -0.1257926 ],\n           [-0.44611666,  1.76672887],\n           [ 1.41304859,  0.29476773],\n           [ 0.01867465, -0.54635292],\n           [ 2.22643339, -0.96691325],\n           [-0.32991883, -1.17719341],\n           [ 0.13487248,  0.29476773],\n           [-1.0271058 ,  1.13588838],\n           [-1.49189712, -1.59775374],\n           [ 0.59966379, -0.54635292],\n           [-1.60809495, -0.33607276],\n           [-0.91090798,  1.13588838],\n           [ 1.64544425, -0.1257926 ],\n           [ 0.25107031,  0.71532806],\n           [ 0.48346596, -1.8080339 ],\n           [ 1.8778399 , -0.54635292],\n           [ 1.18065293, -0.1257926 ],\n           [ 0.71586162, -0.54635292],\n           [-0.09752318, -1.17719341],\n           [-0.91090798,  0.92560822],\n           [-0.79471015,  1.55644871],\n           [ 1.18065293, -0.54635292],\n           [-0.67851232, -0.75663309],\n           [-0.79471015,  1.55644871],\n           [-0.21372101, -1.17719341],\n           [ 0.36726814, -0.1257926 ],\n           [ 0.94825728, -0.33607276],\n           [ 0.71586162, -0.54635292],\n           [-1.72429277, -0.1257926 ],\n           [ 1.64544425,  1.13588838],\n           [-0.79471015,  0.92560822],\n           [ 0.59966379, -1.17719341],\n           [-1.60809495,  0.29476773],\n           [ 2.11023556, -0.1257926 ],\n           [ 0.71586162,  0.29476773],\n           [-0.79471015,  1.55644871],\n           [ 0.83205945,  0.29476773],\n           [ 0.59966379, -0.75663309],\n           [-0.91090798,  0.92560822],\n           [-0.67851232,  0.71532806],\n           [ 0.71586162, -0.75663309],\n           [ 0.01867465,  1.97700903],\n           [-0.09752318,  2.81812969],\n           [-1.37569929,  0.29476773],\n           [ 1.29685076,  0.08448757],\n           [ 0.59966379, -0.33607276],\n           [-0.32991883,  0.92560822],\n           [-0.09752318, -0.96691325],\n           [-0.91090798,  0.50504789],\n           [ 0.25107031, -1.8080339 ],\n           [-1.0271058 , -0.1257926 ],\n           [-0.91090798, -2.22859423],\n           [ 0.94825728, -0.1257926 ],\n           [-0.09752318, -0.54635292],\n           [-0.32991883, -0.96691325],\n           [-0.32991883, -1.59775374],\n           [-1.14330363,  0.08448757],\n           [ 0.25107031, -0.33607276],\n           [-0.91090798, -0.1257926 ],\n           [ 1.29685076,  0.08448757],\n           [ 1.06445511, -1.17719341],\n           [-0.56231449,  1.34616854],\n           [-0.67851232,  2.1872892 ],\n           [-0.91090798,  0.71532806],\n           [-1.37569929,  1.13588838],\n           [ 2.22643339,  1.55644871],\n           [ 1.76164208, -0.33607276],\n           [-1.37569929,  0.08448757],\n           [-0.32991883, -1.38747358],\n           [ 0.01867465, -0.75663309],\n           [ 1.06445511,  0.50504789],\n           [ 0.01867465, -0.75663309],\n           [-0.44611666,  1.34616854],\n           [-0.91090798,  0.71532806],\n           [ 0.25107031, -0.75663309],\n           [-0.09752318, -0.54635292],\n           [ 0.36726814, -0.54635292],\n           [-0.79471015,  0.50504789],\n           [-0.21372101, -0.1257926 ],\n           [-0.44611666, -0.1257926 ],\n           [-0.44611666,  1.76672887],\n           [ 1.06445511,  0.50504789],\n           [-1.0271058 , -1.17719341],\n           [ 0.48346596,  0.71532806],\n           [-0.32991883, -1.38747358],\n           [ 2.22643339, -0.54635292],\n           [-0.44611666,  0.71532806],\n           [ 1.06445511, -0.1257926 ],\n           [-0.32991883,  2.39756936],\n           [-0.91090798,  0.29476773],\n           [-1.14330363, -0.1257926 ],\n           [ 0.01867465, -0.75663309],\n           [ 0.13487248, -0.1257926 ],\n           [ 1.52924642, -0.1257926 ],\n           [-1.0271058 , -1.38747358],\n           [ 0.59966379, -1.17719341],\n           [-0.21372101, -0.1257926 ],\n           [ 2.22643339, -0.1257926 ],\n           [-0.44611666,  0.71532806]])\n\n\n\n### Generating Polynomial Features\n\n\n```python\nfrom sklearn.preprocessing import PolynomialFeatures\n\npoly = PolynomialFeatures(5)\npoly.fit_transform(X_train) \n```\n\n\n\n\n    array([[1.00000000e+00, 5.00000000e+00, 2.30000000e+00, ...,\n            3.04175000e+02, 1.39920500e+02, 6.43634300e+01],\n           [1.00000000e+00, 4.90000000e+00, 3.10000000e+00, ...,\n            7.15281910e+02, 4.52525290e+02, 2.86291510e+02],\n           [1.00000000e+00, 6.30000000e+00, 2.30000000e+00, ...,\n            4.82908230e+02, 1.76299830e+02, 6.43634300e+01],\n           ...,\n           [1.00000000e+00, 5.60000000e+00, 3.00000000e+00, ...,\n            8.46720000e+02, 4.53600000e+02, 2.43000000e+02],\n           [1.00000000e+00, 7.70000000e+00, 3.00000000e+00, ...,\n            1.60083000e+03, 6.23700000e+02, 2.43000000e+02],\n           [1.00000000e+00, 5.40000000e+00, 3.40000000e+00, ...,\n            1.14610464e+03, 7.21621440e+02, 4.54354240e+02]])\n\n\n\n## 模型\n\n### 监督学习\n\n#### Linear Regression\n\n\n```python\nfrom sklearn.linear_model import LinearRegression\n\nlr = LinearRegression(normalize=True)\nlr.fit(X, y)\ny_pred = lr.predict(X_test)\ny_pred\n```\n\n\n\n\n    array([ 0.99503595,  1.60221544,  0.06895097,  1.6466104 ,  1.48027593,\n            1.18075657,  0.01486294,  0.17150435,  1.38179294,  1.68538268,\n            1.61190851, -0.02390934,  1.11697547,  1.28893263,  1.74916378,\n            1.50935514,  1.15167736,  0.24497852,  1.18075657,  1.90580519,\n            0.27968041,  0.42100606,  1.51904821,  0.26998734,  1.66192615,\n            1.4261879 ,  1.22515153,  1.35271373,  1.51904821,  1.07820319,\n            1.04912398,  1.60221544,  0.98534288,  1.31801184,  1.60221544,\n            1.66599654,  1.19607232,  0.93125485])\n\n\n\n#### Support Vector Machines (SVM)\n\n\n```python\nfrom sklearn.svm import SVC\n\nsvc = SVC(kernel='linear')\nsvc.fit(X, y)\ny_pred = svc.predict(X_test)\ny_pred\n```\n\n\n\n\n    array([1, 2, 0, 2, 1, 2, 0, 0, 2, 2, 2, 0, 2, 1, 2, 2, 1, 0, 2, 2, 0, 0,\n           2, 0, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1])\n\n\n\n#### Naive Bayes\n\n\n```python\nfrom sklearn.naive_bayes import GaussianNB\n\ngnb = GaussianNB()\ngnb.fit(X, y)\ny_pred = gnb.predict(X_test)\ny_pred\n```\n\n\n\n\n    array([1, 2, 0, 2, 1, 2, 0, 0, 2, 2, 2, 0, 2, 1, 2, 2, 1, 0, 2, 2, 0, 0,\n           2, 0, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1])\n\n\n\n#### KNN\n\n\n```python\nfrom sklearn import neighbors\n\nknn = neighbors.KNeighborsClassifier(n_neighbors=5)\nknn.fit(X, y)\ny_pred = knn.predict(X_test)\ny_pred\n```\n\n\n\n\n    array([1, 1, 0, 2, 1, 2, 0, 0, 2, 2, 2, 0, 2, 1, 2, 2, 2, 0, 2, 2, 0, 0,\n           2, 0, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1])\n\n\n\n### 无监督学习\n\n#### Principal Component Analysis (PCA)\n\n\n```python\nfrom sklearn.decomposition import PCA\n\npca = PCA(n_components=0.95)\npca.fit_transform(X_train)\n```\n\n\n\n\n    array([[-0.70718738, -0.83172028],\n           [-0.88369354, -0.0450529 ],\n           [ 0.58678167, -0.70664389],\n           [ 0.06023749, -0.45614195],\n           [ 0.42951803, -0.11904867],\n           [-1.09238696,  0.03524066],\n           [-1.21116556,  0.22469156],\n           [-0.62689382, -0.62302686],\n           [-1.0120934 ,  0.24393409],\n           [ 2.03504005,  0.94033749],\n           [-0.71348516,  0.27279787],\n           [-0.74234894,  0.57140611],\n           [-0.16769846, -0.17677623],\n           [ 0.71850501,  0.00935119],\n           [-0.46298322,  0.79934205],\n           [ 1.19694289,  0.25652966],\n           [ 0.04099497, -0.25706979],\n           [ 1.95142302, -0.273338  ],\n           [-0.22874949, -0.58454182],\n           [ 0.10204601,  0.15069579],\n           [-0.93179984,  0.45262751],\n           [-1.20486778, -0.87982658],\n           [ 0.53867537, -0.20896349],\n           [-1.36213142, -0.29223136],\n           [-0.83226376,  0.46224877],\n           [ 1.41525757,  0.07670002],\n           [ 0.18233956,  0.35938921],\n           [ 0.49686685, -0.81580123],\n           [ 1.63357226, -0.10312962],\n           [ 1.01711325,  0.03821497],\n           [ 0.63821145, -0.19934223],\n           [-0.02967733, -0.5652993 ],\n           [-0.8226425 ,  0.36271269],\n           [-0.7519702 ,  0.67094219],\n           [ 1.03635577, -0.16085719],\n           [-0.54660026, -0.41433344],\n           [-0.7519702 ,  0.67094219],\n           [-0.12921341, -0.57492056],\n           [ 0.32036069, -0.02913385],\n           [ 0.82766235, -0.08056363],\n           [ 0.63821145, -0.19934223],\n           [-1.47128876, -0.20231654],\n           [ 1.35753001,  0.6739165 ],\n           [-0.72310642,  0.37233395],\n           [ 0.56753915, -0.50757173],\n           [-1.3909952 ,  0.00637688],\n           [ 1.8134019 ,  0.11518506],\n           [ 0.59972641,  0.19880209],\n           [-0.7519702 ,  0.67094219],\n           [ 0.69926249,  0.20842335],\n           [ 0.54829663, -0.30849957],\n           [-0.8226425 ,  0.36271269],\n           [-0.61394908,  0.28241913],\n           [ 0.64783271, -0.29887831],\n           [-0.07446016,  0.93736317],\n           [-0.21248128,  1.32588624],\n           [-1.19192304,  0.0256194 ],\n           [ 1.10702807,  0.14737232],\n           [ 0.52905411, -0.10942741],\n           [-0.3249621 ,  0.41081899],\n           [-0.03929859, -0.46576321],\n           [-0.80339998,  0.16364053],\n           [ 0.29779469, -0.83504376],\n           [-0.87407228, -0.14458898],\n           [-0.67832359, -1.13032852],\n           [ 0.81804109,  0.01897245],\n           [-0.05854111, -0.26669105],\n           [-0.23837075, -0.48500574],\n           [-0.20950697, -0.78361398],\n           [-0.98322962, -0.05467416],\n           [ 0.23044587, -0.13829119],\n           [-0.7745362 , -0.13496772],\n           [ 1.10702807,  0.14737232],\n           [ 0.96568347, -0.46908669],\n           [-0.54327678,  0.59064863],\n           [-0.6812979 ,  0.97917169],\n           [-0.81302124,  0.26317661],\n           [-1.23040809,  0.42376373],\n           [ 1.83596789,  0.92109496],\n           [ 1.52441492, -0.0132148 ],\n           [-1.18230178, -0.07391668],\n           [-0.21912823, -0.6840779 ],\n           [ 0.05061623, -0.35660587],\n           [ 0.88871339,  0.32720196],\n           [ 0.05061623, -0.35660587],\n           [-0.4437407 ,  0.60026989],\n           [-0.81302124,  0.26317661],\n           [ 0.24968839, -0.33736335],\n           [-0.05854111, -0.26669105],\n           [ 0.33960321, -0.22820601],\n           [-0.7038639 ,  0.17326179],\n           [-0.17731972, -0.07724015],\n           [-0.37639188, -0.09648267],\n           [-0.46298322,  0.79934205],\n           [ 0.88871339,  0.32720196],\n           [-0.82596598, -0.64226938],\n           [ 0.38141173,  0.37863173],\n           [-0.21912823, -0.6840779 ],\n           [ 1.9321805 , -0.07426584],\n           [-0.41487692,  0.30166165],\n           [ 0.91757717,  0.02859371],\n           [-0.39231092,  1.10757155],\n           [-0.79377872,  0.06410445],\n           [-0.97360836, -0.15421024],\n           [ 0.05061623, -0.35660587],\n           [ 0.12128853, -0.04837637],\n           [ 1.31572149,  0.06707876],\n           [-0.81634472, -0.74180546],\n           [ 0.56753915, -0.50757173],\n           [-0.17731972, -0.07724015],\n           [ 1.91293798,  0.12480632],\n           [-0.41487692,  0.30166165]])\n\n\n\n#### K Means\n\n\n```python\nfrom sklearn.cluster import KMeans\n\nk_means = KMeans(n_clusters=3, random_state=0)\nk_means.fit(X, y)\ny_pred = k_means.predict(X_test)\ny_pred\n```\n\n\n\n\n    array([0, 2, 1, 2, 0, 2, 1, 1, 2, 2, 2, 1, 2, 0, 2, 2, 0, 1, 2, 2, 1, 1,\n           2, 1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 0], dtype=int32)\n\n\n\n## 评估\n\n### 分类\n\n#### Accuracy Score\n\n\n```python\nknn.score(X_test, y_test)\n\nfrom sklearn.metrics import accuracy_score\n\naccuracy_score(y_test, y_pred)\n```\n\n\n\n\n    0.3157894736842105\n\n\n\n#### Classification Report\n\n\n```python\nfrom sklearn.metrics import classification_report\n\nclassification_report(y_test, y_pred)\n```\n\n\n\n\n    '              precision    recall  f1-score   support\\n\\n           0       0.00      0.00      0.00         8\\n           1       0.00      0.00      0.00        11\\n           2       0.71      0.63      0.67        19\\n\\n   micro avg       0.32      0.32      0.32        38\\n   macro avg       0.24      0.21      0.22        38\\nweighted avg       0.35      0.32      0.33        38\\n'\n\n\n\n#### Confusion Matrix\n\n\n```python\nfrom sklearn.metrics import confusion_matrix\n\nconfusion_matrix(y_test, y_pred)\n```\n\n\n\n\n    array([[ 0,  8,  0],\n           [ 6,  0,  5],\n           [ 7,  0, 12]])\n\n\n\n### 回归\n\n#### Mean Absolute Error\n\n\n```python\nfrom sklearn.metrics import mean_absolute_error\n\nmean_absolute_error(y_test, y_pred)\n```\n\n\n\n\n    0.868421052631579\n\n\n\n#### Mean Squared Error\n\n\n```python\nfrom sklearn.metrics import mean_squared_error\n\nmean_squared_error(y_test, y_pred)\n```\n\n\n\n\n    1.236842105263158\n\n\n\n\n```python\n#### R² Score\n```\n\n\n```python\nfrom sklearn.metrics import r2_score\n\nr2_score(y_test, y_pred)\n```\n\n\n\n\n    -0.9734806629834258\n\n\n\n### 聚类\n\n#### Adjusted Rand Index\n\n\n```python\nfrom sklearn.metrics import adjusted_rand_score\n\nadjusted_rand_score(y_test, y_pred)\n```\n\n\n\n\n    0.3273680853325774\n\n\n\n#### V-measure\n\n\n```python\nfrom sklearn.metrics import v_measure_score\n\nv_measure_score(y_test, y_pred)\n```\n\n\n\n\n    0.5040766075368869\n\n\n\n### Cross-Validation\n\n\n```python\nfrom sklearn.model_selection import cross_val_score\n\nprint(cross_val_score(knn, X_train, y_train, cv=4))\nprint(cross_val_score(lr, X, y, cv=2))\n```\n\n    [0.82758621 0.82758621 0.82142857 0.88461538]\n    [-4.31567384 -1.89773191]\n\n\n## 调试\n\n### Grid Search\n\n\n```python\nfrom sklearn.model_selection import GridSearchCV\n\nparams = {\"n_neighbors\": np.arange(1,3), \"metric\": [\"euclidean\", \"cityblock\"]}\ngrid = GridSearchCV(estimator=knn,\n param_grid=params)\ngrid.fit(X_train, y_train)\n\nprint((grid.best_score_))\nprint((grid.best_estimator_.n_neighbors))\n```\n\n    0.8303571428571429\n    2\n\n\n### Randomized Parameter Optimization\n\n\n```python\nfrom sklearn.model_selection import RandomizedSearchCV\nparams = {\"n_neighbors\": list(range(1,5)), \"weights\": [\"uniform\", \"distance\"]}\nrsearch = RandomizedSearchCV(estimator=knn,\n param_distributions=params,\n cv=4,\n n_iter=8,\n random_state=5)\nrsearch.fit(X_train, y_train)\nprint((rsearch.best_score_))\n```\n\n    0.8214285714285714\n\n\n> 参考：\n\n1. [Scikit-Learn Cheat Sheet: Python Machine Learning](https://www.datacamp.com/community/blog/scikit-learn-cheat-sheet)\n","slug":"2019-08-28_Sklearn","published":1,"updated":"2021-04-06T13:57:59.081Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5rp002l9ohzaj4b1c6h","content":"<h2 id=\"简单范例\"><a href=\"#简单范例\" class=\"headerlink\" title=\"简单范例\"></a>简单范例</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> warnings</span><br><span class=\"line\">warnings.filterwarnings(<span class=\"string\">&#x27;ignore&#x27;</span>)  </span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> neighbors, datasets, preprocessing</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\"></span><br><span class=\"line\">iris = datasets.load_iris()</span><br><span class=\"line\">X, y = iris.data[:, :<span class=\"number\">2</span>], iris.target</span><br><span class=\"line\"></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=<span class=\"number\">33</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">scaler = preprocessing.StandardScaler().fit(X_train)</span><br><span class=\"line\">X_train = scaler.transform(X_train)</span><br><span class=\"line\">X_test = scaler.transform(X_test)</span><br><span class=\"line\"></span><br><span class=\"line\">knn = neighbors.KNeighborsClassifier(n_neighbors=<span class=\"number\">5</span>)</span><br><span class=\"line\">knn.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">y_pred = knn.predict(X_test)</span><br><span class=\"line\"></span><br><span class=\"line\">accuracy_score(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>0.631578947368421\n</code></pre><h2 id=\"数据分割\"><a href=\"#数据分割\" class=\"headerlink\" title=\"数据分割\"></a>数据分割</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=<span class=\"number\">33</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据处理\"><a href=\"#数据处理\" class=\"headerlink\" title=\"数据处理\"></a>数据处理</h2><h3 id=\"Standardization\"><a href=\"#Standardization\" class=\"headerlink\" title=\"Standardization\"></a>Standardization</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\"></span><br><span class=\"line\">scaler = StandardScaler().fit(X_train)</span><br><span class=\"line\">scaler.transform(X_train)</span><br></pre></td></tr></table></figure>\n<pre><code>array([[-0.91090798, -1.59775374],\n       [-1.0271058 ,  0.08448757],\n       [ 0.59966379, -1.59775374],\n       [ 0.01867465, -0.96691325],\n       [ 0.48346596, -0.33607276],\n       [-1.25950146,  0.29476773],\n       [-1.37569929,  0.71532806],\n       [-0.79471015, -1.17719341],\n       [-1.14330363,  0.71532806],\n       [ 2.45882905,  1.55644871],\n       [-0.79471015,  0.71532806],\n       [-0.79471015,  1.34616854],\n       [-0.21372101, -0.33607276],\n       [ 0.83205945, -0.1257926 ],\n       [-0.44611666,  1.76672887],\n       [ 1.41304859,  0.29476773],\n       [ 0.01867465, -0.54635292],\n       [ 2.22643339, -0.96691325],\n       [-0.32991883, -1.17719341],\n       [ 0.13487248,  0.29476773],\n       [-1.0271058 ,  1.13588838],\n       [-1.49189712, -1.59775374],\n       [ 0.59966379, -0.54635292],\n       [-1.60809495, -0.33607276],\n       [-0.91090798,  1.13588838],\n       [ 1.64544425, -0.1257926 ],\n       [ 0.25107031,  0.71532806],\n       [ 0.48346596, -1.8080339 ],\n       [ 1.8778399 , -0.54635292],\n       [ 1.18065293, -0.1257926 ],\n       [ 0.71586162, -0.54635292],\n       [-0.09752318, -1.17719341],\n       [-0.91090798,  0.92560822],\n       [-0.79471015,  1.55644871],\n       [ 1.18065293, -0.54635292],\n       [-0.67851232, -0.75663309],\n       [-0.79471015,  1.55644871],\n       [-0.21372101, -1.17719341],\n       [ 0.36726814, -0.1257926 ],\n       [ 0.94825728, -0.33607276],\n       [ 0.71586162, -0.54635292],\n       [-1.72429277, -0.1257926 ],\n       [ 1.64544425,  1.13588838],\n       [-0.79471015,  0.92560822],\n       [ 0.59966379, -1.17719341],\n       [-1.60809495,  0.29476773],\n       [ 2.11023556, -0.1257926 ],\n       [ 0.71586162,  0.29476773],\n       [-0.79471015,  1.55644871],\n       [ 0.83205945,  0.29476773],\n       [ 0.59966379, -0.75663309],\n       [-0.91090798,  0.92560822],\n       [-0.67851232,  0.71532806],\n       [ 0.71586162, -0.75663309],\n       [ 0.01867465,  1.97700903],\n       [-0.09752318,  2.81812969],\n       [-1.37569929,  0.29476773],\n       [ 1.29685076,  0.08448757],\n       [ 0.59966379, -0.33607276],\n       [-0.32991883,  0.92560822],\n       [-0.09752318, -0.96691325],\n       [-0.91090798,  0.50504789],\n       [ 0.25107031, -1.8080339 ],\n       [-1.0271058 , -0.1257926 ],\n       [-0.91090798, -2.22859423],\n       [ 0.94825728, -0.1257926 ],\n       [-0.09752318, -0.54635292],\n       [-0.32991883, -0.96691325],\n       [-0.32991883, -1.59775374],\n       [-1.14330363,  0.08448757],\n       [ 0.25107031, -0.33607276],\n       [-0.91090798, -0.1257926 ],\n       [ 1.29685076,  0.08448757],\n       [ 1.06445511, -1.17719341],\n       [-0.56231449,  1.34616854],\n       [-0.67851232,  2.1872892 ],\n       [-0.91090798,  0.71532806],\n       [-1.37569929,  1.13588838],\n       [ 2.22643339,  1.55644871],\n       [ 1.76164208, -0.33607276],\n       [-1.37569929,  0.08448757],\n       [-0.32991883, -1.38747358],\n       [ 0.01867465, -0.75663309],\n       [ 1.06445511,  0.50504789],\n       [ 0.01867465, -0.75663309],\n       [-0.44611666,  1.34616854],\n       [-0.91090798,  0.71532806],\n       [ 0.25107031, -0.75663309],\n       [-0.09752318, -0.54635292],\n       [ 0.36726814, -0.54635292],\n       [-0.79471015,  0.50504789],\n       [-0.21372101, -0.1257926 ],\n       [-0.44611666, -0.1257926 ],\n       [-0.44611666,  1.76672887],\n       [ 1.06445511,  0.50504789],\n       [-1.0271058 , -1.17719341],\n       [ 0.48346596,  0.71532806],\n       [-0.32991883, -1.38747358],\n       [ 2.22643339, -0.54635292],\n       [-0.44611666,  0.71532806],\n       [ 1.06445511, -0.1257926 ],\n       [-0.32991883,  2.39756936],\n       [-0.91090798,  0.29476773],\n       [-1.14330363, -0.1257926 ],\n       [ 0.01867465, -0.75663309],\n       [ 0.13487248, -0.1257926 ],\n       [ 1.52924642, -0.1257926 ],\n       [-1.0271058 , -1.38747358],\n       [ 0.59966379, -1.17719341],\n       [-0.21372101, -0.1257926 ],\n       [ 2.22643339, -0.1257926 ],\n       [-0.44611666,  0.71532806]])\n</code></pre><h3 id=\"Normalization\"><a href=\"#Normalization\" class=\"headerlink\" title=\"Normalization\"></a>Normalization</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> Normalizer</span><br><span class=\"line\"></span><br><span class=\"line\">scaler = Normalizer().fit(X_train)</span><br><span class=\"line\">scaler.transform(X_train)</span><br></pre></td></tr></table></figure>\n<pre><code>array([[0.90849045, 0.41790561],\n       [0.84507884, 0.53464171],\n       [0.93935732, 0.34293997],\n       [0.91250932, 0.4090559 ],\n       [0.90580954, 0.42368511],\n       [0.82659925, 0.56279098],\n       [0.80417614, 0.59439106],\n       [0.89792072, 0.44015722],\n       [0.81602448, 0.57801734],\n       [0.90116674, 0.43347261],\n       [0.83205029, 0.5547002 ],\n       [0.80942185, 0.58722762],\n       [0.88799441, 0.45985425],\n       [0.90795938, 0.41905818],\n       [0.81067923, 0.58549055],\n       [0.90947448, 0.41575976],\n       [0.90055164, 0.43474907],\n       [0.94744567, 0.31991672],\n       [0.91036648, 0.41380294],\n       [0.87903186, 0.47676304],\n       [0.80588181, 0.59207643],\n       [0.89043468, 0.45511106],\n       [0.91381155, 0.40613847],\n       [0.8349582 , 0.55031336],\n       [0.81153434, 0.58430473],\n       [0.92307692, 0.38461538],\n       [0.87002219, 0.49301257],\n       [0.94242775, 0.33440985],\n       [0.93528626, 0.3538921 ],\n       [0.9149178 , 0.40364021],\n       [0.91615733, 0.40081883],\n       [0.91578821, 0.4016615 ],\n       [0.81923192, 0.57346234],\n       [0.80188283, 0.59748132],\n       [0.9246781 , 0.38074981],\n       [0.88749608, 0.46081527],\n       [0.80188283, 0.59748132],\n       [0.91313788, 0.40765084],\n       [0.89734997, 0.44131966],\n       [0.91551945, 0.4022737 ],\n       [0.91615733, 0.40081883],\n       [0.82012695, 0.5721816 ],\n       [0.89442719, 0.4472136 ],\n       [0.82451335, 0.5658425 ],\n       [0.92949071, 0.36884552],\n       [0.80873608, 0.5881717 ],\n       [0.93015522, 0.36716653],\n       [0.89442719, 0.4472136 ],\n       [0.80188283, 0.59748132],\n       [0.89717068, 0.44168403],\n       [0.91914503, 0.3939193 ],\n       [0.81923192, 0.57346234],\n       [0.83696961, 0.54724936],\n       [0.92136416, 0.38870051],\n       [0.82321279, 0.56773296],\n       [0.79159032, 0.61105218],\n       [0.8209052 , 0.57106449],\n       [0.9121687 , 0.40981492],\n       [0.90838094, 0.41814361],\n       [0.84366149, 0.53687549],\n       [0.90981905, 0.41500518],\n       [0.83460941, 0.55084221],\n       [0.93887632, 0.34425465],\n       [0.8528513 , 0.52215386],\n       [0.92847669, 0.37139068],\n       [0.91036648, 0.41380294],\n       [0.89755433, 0.44090388],\n       [0.90407227, 0.42737962],\n       [0.92257988, 0.38580613],\n       [0.84003938, 0.54252543],\n       [0.90034895, 0.43516866],\n       [0.85749293, 0.51449576],\n       [0.9121687 , 0.40981492],\n       [0.93690259, 0.34959052],\n       [0.81995808, 0.57242357],\n       [0.78526917, 0.61915453],\n       [0.8269265 , 0.56231002],\n       [0.787505  , 0.61630826],\n       [0.89674427, 0.44254912],\n       [0.92935209, 0.36919466],\n       [0.82926643, 0.55885346],\n       [0.91653938, 0.39994446],\n       [0.90658206, 0.42202958],\n       [0.89708903, 0.44184982],\n       [0.90658206, 0.42202958],\n       [0.82493237, 0.56523144],\n       [0.8269265 , 0.56231002],\n       [0.91192151, 0.41036468],\n       [0.89755433, 0.44090388],\n       [0.90882955, 0.41716766],\n       [0.83957016, 0.54325128],\n       [0.88147997, 0.47222141],\n       [0.87415728, 0.48564293],\n       [0.81067923, 0.58549055],\n       [0.89708903, 0.44184982],\n       [0.89076187, 0.45447034],\n       [0.87681241, 0.48083261],\n       [0.91653938, 0.39994446],\n       [0.93979342, 0.34174306],\n       [0.84623284, 0.53281327],\n       [0.91268458, 0.40866474],\n       [0.79476781, 0.6069136 ],\n       [0.8422714 , 0.5390537 ],\n       [0.8479983 , 0.52999894],\n       [0.90658206, 0.42202958],\n       [0.89138513, 0.45324668],\n       [0.92114622, 0.38921671],\n       [0.89806271, 0.43986745],\n       [0.92949071, 0.36884552],\n       [0.88147997, 0.47222141],\n       [0.93177739, 0.36303015],\n       [0.84623284, 0.53281327]])\n</code></pre><h3 id=\"Binarization\"><a href=\"#Binarization\" class=\"headerlink\" title=\"Binarization\"></a>Binarization</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> Binarizer</span><br><span class=\"line\"></span><br><span class=\"line\">binarizer = Binarizer(threshold=<span class=\"number\">0.0</span>).fit(X)</span><br><span class=\"line\">binarizer.transform(X)</span><br></pre></td></tr></table></figure>\n<pre><code>array([[1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.]])\n</code></pre><h3 id=\"Encoding-Categorical-Features\"><a href=\"#Encoding-Categorical-Features\" class=\"headerlink\" title=\"Encoding Categorical Features\"></a>Encoding Categorical Features</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelEncoder</span><br><span class=\"line\"></span><br><span class=\"line\">enc = LabelEncoder()</span><br><span class=\"line\">enc.fit_transform(y)</span><br></pre></td></tr></table></figure>\n<pre><code>array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])\n</code></pre><h3 id=\"Imputing-Missing-Values\"><a href=\"#Imputing-Missing-Values\" class=\"headerlink\" title=\"Imputing Missing Values\"></a>Imputing Missing Values</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> Imputer</span><br><span class=\"line\"></span><br><span class=\"line\">imp = Imputer(missing_values=<span class=\"number\">0</span>, strategy=<span class=\"string\">&#x27;mean&#x27;</span>, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">imp.fit_transform(X_train)</span><br></pre></td></tr></table></figure>\n<pre><code>array([[-0.91090798, -1.59775374],\n       [-1.0271058 ,  0.08448757],\n       [ 0.59966379, -1.59775374],\n       [ 0.01867465, -0.96691325],\n       [ 0.48346596, -0.33607276],\n       [-1.25950146,  0.29476773],\n       [-1.37569929,  0.71532806],\n       [-0.79471015, -1.17719341],\n       [-1.14330363,  0.71532806],\n       [ 2.45882905,  1.55644871],\n       [-0.79471015,  0.71532806],\n       [-0.79471015,  1.34616854],\n       [-0.21372101, -0.33607276],\n       [ 0.83205945, -0.1257926 ],\n       [-0.44611666,  1.76672887],\n       [ 1.41304859,  0.29476773],\n       [ 0.01867465, -0.54635292],\n       [ 2.22643339, -0.96691325],\n       [-0.32991883, -1.17719341],\n       [ 0.13487248,  0.29476773],\n       [-1.0271058 ,  1.13588838],\n       [-1.49189712, -1.59775374],\n       [ 0.59966379, -0.54635292],\n       [-1.60809495, -0.33607276],\n       [-0.91090798,  1.13588838],\n       [ 1.64544425, -0.1257926 ],\n       [ 0.25107031,  0.71532806],\n       [ 0.48346596, -1.8080339 ],\n       [ 1.8778399 , -0.54635292],\n       [ 1.18065293, -0.1257926 ],\n       [ 0.71586162, -0.54635292],\n       [-0.09752318, -1.17719341],\n       [-0.91090798,  0.92560822],\n       [-0.79471015,  1.55644871],\n       [ 1.18065293, -0.54635292],\n       [-0.67851232, -0.75663309],\n       [-0.79471015,  1.55644871],\n       [-0.21372101, -1.17719341],\n       [ 0.36726814, -0.1257926 ],\n       [ 0.94825728, -0.33607276],\n       [ 0.71586162, -0.54635292],\n       [-1.72429277, -0.1257926 ],\n       [ 1.64544425,  1.13588838],\n       [-0.79471015,  0.92560822],\n       [ 0.59966379, -1.17719341],\n       [-1.60809495,  0.29476773],\n       [ 2.11023556, -0.1257926 ],\n       [ 0.71586162,  0.29476773],\n       [-0.79471015,  1.55644871],\n       [ 0.83205945,  0.29476773],\n       [ 0.59966379, -0.75663309],\n       [-0.91090798,  0.92560822],\n       [-0.67851232,  0.71532806],\n       [ 0.71586162, -0.75663309],\n       [ 0.01867465,  1.97700903],\n       [-0.09752318,  2.81812969],\n       [-1.37569929,  0.29476773],\n       [ 1.29685076,  0.08448757],\n       [ 0.59966379, -0.33607276],\n       [-0.32991883,  0.92560822],\n       [-0.09752318, -0.96691325],\n       [-0.91090798,  0.50504789],\n       [ 0.25107031, -1.8080339 ],\n       [-1.0271058 , -0.1257926 ],\n       [-0.91090798, -2.22859423],\n       [ 0.94825728, -0.1257926 ],\n       [-0.09752318, -0.54635292],\n       [-0.32991883, -0.96691325],\n       [-0.32991883, -1.59775374],\n       [-1.14330363,  0.08448757],\n       [ 0.25107031, -0.33607276],\n       [-0.91090798, -0.1257926 ],\n       [ 1.29685076,  0.08448757],\n       [ 1.06445511, -1.17719341],\n       [-0.56231449,  1.34616854],\n       [-0.67851232,  2.1872892 ],\n       [-0.91090798,  0.71532806],\n       [-1.37569929,  1.13588838],\n       [ 2.22643339,  1.55644871],\n       [ 1.76164208, -0.33607276],\n       [-1.37569929,  0.08448757],\n       [-0.32991883, -1.38747358],\n       [ 0.01867465, -0.75663309],\n       [ 1.06445511,  0.50504789],\n       [ 0.01867465, -0.75663309],\n       [-0.44611666,  1.34616854],\n       [-0.91090798,  0.71532806],\n       [ 0.25107031, -0.75663309],\n       [-0.09752318, -0.54635292],\n       [ 0.36726814, -0.54635292],\n       [-0.79471015,  0.50504789],\n       [-0.21372101, -0.1257926 ],\n       [-0.44611666, -0.1257926 ],\n       [-0.44611666,  1.76672887],\n       [ 1.06445511,  0.50504789],\n       [-1.0271058 , -1.17719341],\n       [ 0.48346596,  0.71532806],\n       [-0.32991883, -1.38747358],\n       [ 2.22643339, -0.54635292],\n       [-0.44611666,  0.71532806],\n       [ 1.06445511, -0.1257926 ],\n       [-0.32991883,  2.39756936],\n       [-0.91090798,  0.29476773],\n       [-1.14330363, -0.1257926 ],\n       [ 0.01867465, -0.75663309],\n       [ 0.13487248, -0.1257926 ],\n       [ 1.52924642, -0.1257926 ],\n       [-1.0271058 , -1.38747358],\n       [ 0.59966379, -1.17719341],\n       [-0.21372101, -0.1257926 ],\n       [ 2.22643339, -0.1257926 ],\n       [-0.44611666,  0.71532806]])\n</code></pre><h3 id=\"Generating-Polynomial-Features\"><a href=\"#Generating-Polynomial-Features\" class=\"headerlink\" title=\"Generating Polynomial Features\"></a>Generating Polynomial Features</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> PolynomialFeatures</span><br><span class=\"line\"></span><br><span class=\"line\">poly = PolynomialFeatures(<span class=\"number\">5</span>)</span><br><span class=\"line\">poly.fit_transform(X_train) </span><br></pre></td></tr></table></figure>\n<pre><code>array([[1.00000000e+00, 5.00000000e+00, 2.30000000e+00, ...,\n        3.04175000e+02, 1.39920500e+02, 6.43634300e+01],\n       [1.00000000e+00, 4.90000000e+00, 3.10000000e+00, ...,\n        7.15281910e+02, 4.52525290e+02, 2.86291510e+02],\n       [1.00000000e+00, 6.30000000e+00, 2.30000000e+00, ...,\n        4.82908230e+02, 1.76299830e+02, 6.43634300e+01],\n       ...,\n       [1.00000000e+00, 5.60000000e+00, 3.00000000e+00, ...,\n        8.46720000e+02, 4.53600000e+02, 2.43000000e+02],\n       [1.00000000e+00, 7.70000000e+00, 3.00000000e+00, ...,\n        1.60083000e+03, 6.23700000e+02, 2.43000000e+02],\n       [1.00000000e+00, 5.40000000e+00, 3.40000000e+00, ...,\n        1.14610464e+03, 7.21621440e+02, 4.54354240e+02]])\n</code></pre><h2 id=\"模型\"><a href=\"#模型\" class=\"headerlink\" title=\"模型\"></a>模型</h2><h3 id=\"监督学习\"><a href=\"#监督学习\" class=\"headerlink\" title=\"监督学习\"></a>监督学习</h3><h4 id=\"Linear-Regression\"><a href=\"#Linear-Regression\" class=\"headerlink\" title=\"Linear Regression\"></a>Linear Regression</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\"></span><br><span class=\"line\">lr = LinearRegression(normalize=<span class=\"literal\">True</span>)</span><br><span class=\"line\">lr.fit(X, y)</span><br><span class=\"line\">y_pred = lr.predict(X_test)</span><br><span class=\"line\">y_pred</span><br></pre></td></tr></table></figure>\n<pre><code>array([ 0.99503595,  1.60221544,  0.06895097,  1.6466104 ,  1.48027593,\n        1.18075657,  0.01486294,  0.17150435,  1.38179294,  1.68538268,\n        1.61190851, -0.02390934,  1.11697547,  1.28893263,  1.74916378,\n        1.50935514,  1.15167736,  0.24497852,  1.18075657,  1.90580519,\n        0.27968041,  0.42100606,  1.51904821,  0.26998734,  1.66192615,\n        1.4261879 ,  1.22515153,  1.35271373,  1.51904821,  1.07820319,\n        1.04912398,  1.60221544,  0.98534288,  1.31801184,  1.60221544,\n        1.66599654,  1.19607232,  0.93125485])\n</code></pre><h4 id=\"Support-Vector-Machines-SVM\"><a href=\"#Support-Vector-Machines-SVM\" class=\"headerlink\" title=\"Support Vector Machines (SVM)\"></a>Support Vector Machines (SVM)</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> SVC</span><br><span class=\"line\"></span><br><span class=\"line\">svc = SVC(kernel=<span class=\"string\">&#x27;linear&#x27;</span>)</span><br><span class=\"line\">svc.fit(X, y)</span><br><span class=\"line\">y_pred = svc.predict(X_test)</span><br><span class=\"line\">y_pred</span><br></pre></td></tr></table></figure>\n<pre><code>array([1, 2, 0, 2, 1, 2, 0, 0, 2, 2, 2, 0, 2, 1, 2, 2, 1, 0, 2, 2, 0, 0,\n       2, 0, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1])\n</code></pre><h4 id=\"Naive-Bayes\"><a href=\"#Naive-Bayes\" class=\"headerlink\" title=\"Naive Bayes\"></a>Naive Bayes</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.naive_bayes <span class=\"keyword\">import</span> GaussianNB</span><br><span class=\"line\"></span><br><span class=\"line\">gnb = GaussianNB()</span><br><span class=\"line\">gnb.fit(X, y)</span><br><span class=\"line\">y_pred = gnb.predict(X_test)</span><br><span class=\"line\">y_pred</span><br></pre></td></tr></table></figure>\n<pre><code>array([1, 2, 0, 2, 1, 2, 0, 0, 2, 2, 2, 0, 2, 1, 2, 2, 1, 0, 2, 2, 0, 0,\n       2, 0, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1])\n</code></pre><h4 id=\"KNN\"><a href=\"#KNN\" class=\"headerlink\" title=\"KNN\"></a>KNN</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> neighbors</span><br><span class=\"line\"></span><br><span class=\"line\">knn = neighbors.KNeighborsClassifier(n_neighbors=<span class=\"number\">5</span>)</span><br><span class=\"line\">knn.fit(X, y)</span><br><span class=\"line\">y_pred = knn.predict(X_test)</span><br><span class=\"line\">y_pred</span><br></pre></td></tr></table></figure>\n<pre><code>array([1, 1, 0, 2, 1, 2, 0, 0, 2, 2, 2, 0, 2, 1, 2, 2, 2, 0, 2, 2, 0, 0,\n       2, 0, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1])\n</code></pre><h3 id=\"无监督学习\"><a href=\"#无监督学习\" class=\"headerlink\" title=\"无监督学习\"></a>无监督学习</h3><h4 id=\"Principal-Component-Analysis-PCA\"><a href=\"#Principal-Component-Analysis-PCA\" class=\"headerlink\" title=\"Principal Component Analysis (PCA)\"></a>Principal Component Analysis (PCA)</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.decomposition <span class=\"keyword\">import</span> PCA</span><br><span class=\"line\"></span><br><span class=\"line\">pca = PCA(n_components=<span class=\"number\">0.95</span>)</span><br><span class=\"line\">pca.fit_transform(X_train)</span><br></pre></td></tr></table></figure>\n<pre><code>array([[-0.70718738, -0.83172028],\n       [-0.88369354, -0.0450529 ],\n       [ 0.58678167, -0.70664389],\n       [ 0.06023749, -0.45614195],\n       [ 0.42951803, -0.11904867],\n       [-1.09238696,  0.03524066],\n       [-1.21116556,  0.22469156],\n       [-0.62689382, -0.62302686],\n       [-1.0120934 ,  0.24393409],\n       [ 2.03504005,  0.94033749],\n       [-0.71348516,  0.27279787],\n       [-0.74234894,  0.57140611],\n       [-0.16769846, -0.17677623],\n       [ 0.71850501,  0.00935119],\n       [-0.46298322,  0.79934205],\n       [ 1.19694289,  0.25652966],\n       [ 0.04099497, -0.25706979],\n       [ 1.95142302, -0.273338  ],\n       [-0.22874949, -0.58454182],\n       [ 0.10204601,  0.15069579],\n       [-0.93179984,  0.45262751],\n       [-1.20486778, -0.87982658],\n       [ 0.53867537, -0.20896349],\n       [-1.36213142, -0.29223136],\n       [-0.83226376,  0.46224877],\n       [ 1.41525757,  0.07670002],\n       [ 0.18233956,  0.35938921],\n       [ 0.49686685, -0.81580123],\n       [ 1.63357226, -0.10312962],\n       [ 1.01711325,  0.03821497],\n       [ 0.63821145, -0.19934223],\n       [-0.02967733, -0.5652993 ],\n       [-0.8226425 ,  0.36271269],\n       [-0.7519702 ,  0.67094219],\n       [ 1.03635577, -0.16085719],\n       [-0.54660026, -0.41433344],\n       [-0.7519702 ,  0.67094219],\n       [-0.12921341, -0.57492056],\n       [ 0.32036069, -0.02913385],\n       [ 0.82766235, -0.08056363],\n       [ 0.63821145, -0.19934223],\n       [-1.47128876, -0.20231654],\n       [ 1.35753001,  0.6739165 ],\n       [-0.72310642,  0.37233395],\n       [ 0.56753915, -0.50757173],\n       [-1.3909952 ,  0.00637688],\n       [ 1.8134019 ,  0.11518506],\n       [ 0.59972641,  0.19880209],\n       [-0.7519702 ,  0.67094219],\n       [ 0.69926249,  0.20842335],\n       [ 0.54829663, -0.30849957],\n       [-0.8226425 ,  0.36271269],\n       [-0.61394908,  0.28241913],\n       [ 0.64783271, -0.29887831],\n       [-0.07446016,  0.93736317],\n       [-0.21248128,  1.32588624],\n       [-1.19192304,  0.0256194 ],\n       [ 1.10702807,  0.14737232],\n       [ 0.52905411, -0.10942741],\n       [-0.3249621 ,  0.41081899],\n       [-0.03929859, -0.46576321],\n       [-0.80339998,  0.16364053],\n       [ 0.29779469, -0.83504376],\n       [-0.87407228, -0.14458898],\n       [-0.67832359, -1.13032852],\n       [ 0.81804109,  0.01897245],\n       [-0.05854111, -0.26669105],\n       [-0.23837075, -0.48500574],\n       [-0.20950697, -0.78361398],\n       [-0.98322962, -0.05467416],\n       [ 0.23044587, -0.13829119],\n       [-0.7745362 , -0.13496772],\n       [ 1.10702807,  0.14737232],\n       [ 0.96568347, -0.46908669],\n       [-0.54327678,  0.59064863],\n       [-0.6812979 ,  0.97917169],\n       [-0.81302124,  0.26317661],\n       [-1.23040809,  0.42376373],\n       [ 1.83596789,  0.92109496],\n       [ 1.52441492, -0.0132148 ],\n       [-1.18230178, -0.07391668],\n       [-0.21912823, -0.6840779 ],\n       [ 0.05061623, -0.35660587],\n       [ 0.88871339,  0.32720196],\n       [ 0.05061623, -0.35660587],\n       [-0.4437407 ,  0.60026989],\n       [-0.81302124,  0.26317661],\n       [ 0.24968839, -0.33736335],\n       [-0.05854111, -0.26669105],\n       [ 0.33960321, -0.22820601],\n       [-0.7038639 ,  0.17326179],\n       [-0.17731972, -0.07724015],\n       [-0.37639188, -0.09648267],\n       [-0.46298322,  0.79934205],\n       [ 0.88871339,  0.32720196],\n       [-0.82596598, -0.64226938],\n       [ 0.38141173,  0.37863173],\n       [-0.21912823, -0.6840779 ],\n       [ 1.9321805 , -0.07426584],\n       [-0.41487692,  0.30166165],\n       [ 0.91757717,  0.02859371],\n       [-0.39231092,  1.10757155],\n       [-0.79377872,  0.06410445],\n       [-0.97360836, -0.15421024],\n       [ 0.05061623, -0.35660587],\n       [ 0.12128853, -0.04837637],\n       [ 1.31572149,  0.06707876],\n       [-0.81634472, -0.74180546],\n       [ 0.56753915, -0.50757173],\n       [-0.17731972, -0.07724015],\n       [ 1.91293798,  0.12480632],\n       [-0.41487692,  0.30166165]])\n</code></pre><h4 id=\"K-Means\"><a href=\"#K-Means\" class=\"headerlink\" title=\"K Means\"></a>K Means</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.cluster <span class=\"keyword\">import</span> KMeans</span><br><span class=\"line\"></span><br><span class=\"line\">k_means = KMeans(n_clusters=<span class=\"number\">3</span>, random_state=<span class=\"number\">0</span>)</span><br><span class=\"line\">k_means.fit(X, y)</span><br><span class=\"line\">y_pred = k_means.predict(X_test)</span><br><span class=\"line\">y_pred</span><br></pre></td></tr></table></figure>\n<pre><code>array([0, 2, 1, 2, 0, 2, 1, 1, 2, 2, 2, 1, 2, 0, 2, 2, 0, 1, 2, 2, 1, 1,\n       2, 1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 0], dtype=int32)\n</code></pre><h2 id=\"评估\"><a href=\"#评估\" class=\"headerlink\" title=\"评估\"></a>评估</h2><h3 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h3><h4 id=\"Accuracy-Score\"><a href=\"#Accuracy-Score\" class=\"headerlink\" title=\"Accuracy Score\"></a>Accuracy Score</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">knn.score(X_test, y_test)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\"></span><br><span class=\"line\">accuracy_score(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>0.3157894736842105\n</code></pre><h4 id=\"Classification-Report\"><a href=\"#Classification-Report\" class=\"headerlink\" title=\"Classification Report\"></a>Classification Report</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> classification_report</span><br><span class=\"line\"></span><br><span class=\"line\">classification_report(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>&#39;              precision    recall  f1-score   support\\n\\n           0       0.00      0.00      0.00         8\\n           1       0.00      0.00      0.00        11\\n           2       0.71      0.63      0.67        19\\n\\n   micro avg       0.32      0.32      0.32        38\\n   macro avg       0.24      0.21      0.22        38\\nweighted avg       0.35      0.32      0.33        38\\n&#39;\n</code></pre><h4 id=\"Confusion-Matrix\"><a href=\"#Confusion-Matrix\" class=\"headerlink\" title=\"Confusion Matrix\"></a>Confusion Matrix</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> confusion_matrix</span><br><span class=\"line\"></span><br><span class=\"line\">confusion_matrix(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>array([[ 0,  8,  0],\n       [ 6,  0,  5],\n       [ 7,  0, 12]])\n</code></pre><h3 id=\"回归\"><a href=\"#回归\" class=\"headerlink\" title=\"回归\"></a>回归</h3><h4 id=\"Mean-Absolute-Error\"><a href=\"#Mean-Absolute-Error\" class=\"headerlink\" title=\"Mean Absolute Error\"></a>Mean Absolute Error</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_absolute_error</span><br><span class=\"line\"></span><br><span class=\"line\">mean_absolute_error(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>0.868421052631579\n</code></pre><h4 id=\"Mean-Squared-Error\"><a href=\"#Mean-Squared-Error\" class=\"headerlink\" title=\"Mean Squared Error\"></a>Mean Squared Error</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_squared_error</span><br><span class=\"line\"></span><br><span class=\"line\">mean_squared_error(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>1.236842105263158\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#### R² Score</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> r2_score</span><br><span class=\"line\"></span><br><span class=\"line\">r2_score(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>-0.9734806629834258\n</code></pre><h3 id=\"聚类\"><a href=\"#聚类\" class=\"headerlink\" title=\"聚类\"></a>聚类</h3><h4 id=\"Adjusted-Rand-Index\"><a href=\"#Adjusted-Rand-Index\" class=\"headerlink\" title=\"Adjusted Rand Index\"></a>Adjusted Rand Index</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> adjusted_rand_score</span><br><span class=\"line\"></span><br><span class=\"line\">adjusted_rand_score(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>0.3273680853325774\n</code></pre><h4 id=\"V-measure\"><a href=\"#V-measure\" class=\"headerlink\" title=\"V-measure\"></a>V-measure</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> v_measure_score</span><br><span class=\"line\"></span><br><span class=\"line\">v_measure_score(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>0.5040766075368869\n</code></pre><h3 id=\"Cross-Validation\"><a href=\"#Cross-Validation\" class=\"headerlink\" title=\"Cross-Validation\"></a>Cross-Validation</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_score</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(cross_val_score(knn, X_train, y_train, cv=<span class=\"number\">4</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(cross_val_score(lr, X, y, cv=<span class=\"number\">2</span>))</span><br></pre></td></tr></table></figure>\n<pre><code>[0.82758621 0.82758621 0.82142857 0.88461538]\n[-4.31567384 -1.89773191]\n</code></pre><h2 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a>调试</h2><h3 id=\"Grid-Search\"><a href=\"#Grid-Search\" class=\"headerlink\" title=\"Grid Search\"></a>Grid Search</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> GridSearchCV</span><br><span class=\"line\"></span><br><span class=\"line\">params = &#123;<span class=\"string\">&quot;n_neighbors&quot;</span>: np.arange(<span class=\"number\">1</span>,<span class=\"number\">3</span>), <span class=\"string\">&quot;metric&quot;</span>: [<span class=\"string\">&quot;euclidean&quot;</span>, <span class=\"string\">&quot;cityblock&quot;</span>]&#125;</span><br><span class=\"line\">grid = GridSearchCV(estimator=knn,</span><br><span class=\"line\"> param_grid=params)</span><br><span class=\"line\">grid.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>((grid.best_score_))</span><br><span class=\"line\"><span class=\"built_in\">print</span>((grid.best_estimator_.n_neighbors))</span><br></pre></td></tr></table></figure>\n<pre><code>0.8303571428571429\n2\n</code></pre><h3 id=\"Randomized-Parameter-Optimization\"><a href=\"#Randomized-Parameter-Optimization\" class=\"headerlink\" title=\"Randomized Parameter Optimization\"></a>Randomized Parameter Optimization</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> RandomizedSearchCV</span><br><span class=\"line\">params = &#123;<span class=\"string\">&quot;n_neighbors&quot;</span>: <span class=\"built_in\">list</span>(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">5</span>)), <span class=\"string\">&quot;weights&quot;</span>: [<span class=\"string\">&quot;uniform&quot;</span>, <span class=\"string\">&quot;distance&quot;</span>]&#125;</span><br><span class=\"line\">rsearch = RandomizedSearchCV(estimator=knn,</span><br><span class=\"line\"> param_distributions=params,</span><br><span class=\"line\"> cv=<span class=\"number\">4</span>,</span><br><span class=\"line\"> n_iter=<span class=\"number\">8</span>,</span><br><span class=\"line\"> random_state=<span class=\"number\">5</span>)</span><br><span class=\"line\">rsearch.fit(X_train, y_train)</span><br><span class=\"line\"><span class=\"built_in\">print</span>((rsearch.best_score_))</span><br></pre></td></tr></table></figure>\n<pre><code>0.8214285714285714\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.datacamp.com/community/blog/scikit-learn-cheat-sheet\" >Scikit-Learn Cheat Sheet: Python Machine Learning<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简单范例\"><a href=\"#简单范例\" class=\"headerlink\" title=\"简单范例\"></a>简单范例</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> warnings</span><br><span class=\"line\">warnings.filterwarnings(<span class=\"string\">&#x27;ignore&#x27;</span>)  </span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> neighbors, datasets, preprocessing</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\"></span><br><span class=\"line\">iris = datasets.load_iris()</span><br><span class=\"line\">X, y = iris.data[:, :<span class=\"number\">2</span>], iris.target</span><br><span class=\"line\"></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=<span class=\"number\">33</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">scaler = preprocessing.StandardScaler().fit(X_train)</span><br><span class=\"line\">X_train = scaler.transform(X_train)</span><br><span class=\"line\">X_test = scaler.transform(X_test)</span><br><span class=\"line\"></span><br><span class=\"line\">knn = neighbors.KNeighborsClassifier(n_neighbors=<span class=\"number\">5</span>)</span><br><span class=\"line\">knn.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">y_pred = knn.predict(X_test)</span><br><span class=\"line\"></span><br><span class=\"line\">accuracy_score(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>0.631578947368421\n</code></pre><h2 id=\"数据分割\"><a href=\"#数据分割\" class=\"headerlink\" title=\"数据分割\"></a>数据分割</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=<span class=\"number\">33</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据处理\"><a href=\"#数据处理\" class=\"headerlink\" title=\"数据处理\"></a>数据处理</h2><h3 id=\"Standardization\"><a href=\"#Standardization\" class=\"headerlink\" title=\"Standardization\"></a>Standardization</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\"></span><br><span class=\"line\">scaler = StandardScaler().fit(X_train)</span><br><span class=\"line\">scaler.transform(X_train)</span><br></pre></td></tr></table></figure>\n<pre><code>array([[-0.91090798, -1.59775374],\n       [-1.0271058 ,  0.08448757],\n       [ 0.59966379, -1.59775374],\n       [ 0.01867465, -0.96691325],\n       [ 0.48346596, -0.33607276],\n       [-1.25950146,  0.29476773],\n       [-1.37569929,  0.71532806],\n       [-0.79471015, -1.17719341],\n       [-1.14330363,  0.71532806],\n       [ 2.45882905,  1.55644871],\n       [-0.79471015,  0.71532806],\n       [-0.79471015,  1.34616854],\n       [-0.21372101, -0.33607276],\n       [ 0.83205945, -0.1257926 ],\n       [-0.44611666,  1.76672887],\n       [ 1.41304859,  0.29476773],\n       [ 0.01867465, -0.54635292],\n       [ 2.22643339, -0.96691325],\n       [-0.32991883, -1.17719341],\n       [ 0.13487248,  0.29476773],\n       [-1.0271058 ,  1.13588838],\n       [-1.49189712, -1.59775374],\n       [ 0.59966379, -0.54635292],\n       [-1.60809495, -0.33607276],\n       [-0.91090798,  1.13588838],\n       [ 1.64544425, -0.1257926 ],\n       [ 0.25107031,  0.71532806],\n       [ 0.48346596, -1.8080339 ],\n       [ 1.8778399 , -0.54635292],\n       [ 1.18065293, -0.1257926 ],\n       [ 0.71586162, -0.54635292],\n       [-0.09752318, -1.17719341],\n       [-0.91090798,  0.92560822],\n       [-0.79471015,  1.55644871],\n       [ 1.18065293, -0.54635292],\n       [-0.67851232, -0.75663309],\n       [-0.79471015,  1.55644871],\n       [-0.21372101, -1.17719341],\n       [ 0.36726814, -0.1257926 ],\n       [ 0.94825728, -0.33607276],\n       [ 0.71586162, -0.54635292],\n       [-1.72429277, -0.1257926 ],\n       [ 1.64544425,  1.13588838],\n       [-0.79471015,  0.92560822],\n       [ 0.59966379, -1.17719341],\n       [-1.60809495,  0.29476773],\n       [ 2.11023556, -0.1257926 ],\n       [ 0.71586162,  0.29476773],\n       [-0.79471015,  1.55644871],\n       [ 0.83205945,  0.29476773],\n       [ 0.59966379, -0.75663309],\n       [-0.91090798,  0.92560822],\n       [-0.67851232,  0.71532806],\n       [ 0.71586162, -0.75663309],\n       [ 0.01867465,  1.97700903],\n       [-0.09752318,  2.81812969],\n       [-1.37569929,  0.29476773],\n       [ 1.29685076,  0.08448757],\n       [ 0.59966379, -0.33607276],\n       [-0.32991883,  0.92560822],\n       [-0.09752318, -0.96691325],\n       [-0.91090798,  0.50504789],\n       [ 0.25107031, -1.8080339 ],\n       [-1.0271058 , -0.1257926 ],\n       [-0.91090798, -2.22859423],\n       [ 0.94825728, -0.1257926 ],\n       [-0.09752318, -0.54635292],\n       [-0.32991883, -0.96691325],\n       [-0.32991883, -1.59775374],\n       [-1.14330363,  0.08448757],\n       [ 0.25107031, -0.33607276],\n       [-0.91090798, -0.1257926 ],\n       [ 1.29685076,  0.08448757],\n       [ 1.06445511, -1.17719341],\n       [-0.56231449,  1.34616854],\n       [-0.67851232,  2.1872892 ],\n       [-0.91090798,  0.71532806],\n       [-1.37569929,  1.13588838],\n       [ 2.22643339,  1.55644871],\n       [ 1.76164208, -0.33607276],\n       [-1.37569929,  0.08448757],\n       [-0.32991883, -1.38747358],\n       [ 0.01867465, -0.75663309],\n       [ 1.06445511,  0.50504789],\n       [ 0.01867465, -0.75663309],\n       [-0.44611666,  1.34616854],\n       [-0.91090798,  0.71532806],\n       [ 0.25107031, -0.75663309],\n       [-0.09752318, -0.54635292],\n       [ 0.36726814, -0.54635292],\n       [-0.79471015,  0.50504789],\n       [-0.21372101, -0.1257926 ],\n       [-0.44611666, -0.1257926 ],\n       [-0.44611666,  1.76672887],\n       [ 1.06445511,  0.50504789],\n       [-1.0271058 , -1.17719341],\n       [ 0.48346596,  0.71532806],\n       [-0.32991883, -1.38747358],\n       [ 2.22643339, -0.54635292],\n       [-0.44611666,  0.71532806],\n       [ 1.06445511, -0.1257926 ],\n       [-0.32991883,  2.39756936],\n       [-0.91090798,  0.29476773],\n       [-1.14330363, -0.1257926 ],\n       [ 0.01867465, -0.75663309],\n       [ 0.13487248, -0.1257926 ],\n       [ 1.52924642, -0.1257926 ],\n       [-1.0271058 , -1.38747358],\n       [ 0.59966379, -1.17719341],\n       [-0.21372101, -0.1257926 ],\n       [ 2.22643339, -0.1257926 ],\n       [-0.44611666,  0.71532806]])\n</code></pre><h3 id=\"Normalization\"><a href=\"#Normalization\" class=\"headerlink\" title=\"Normalization\"></a>Normalization</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> Normalizer</span><br><span class=\"line\"></span><br><span class=\"line\">scaler = Normalizer().fit(X_train)</span><br><span class=\"line\">scaler.transform(X_train)</span><br></pre></td></tr></table></figure>\n<pre><code>array([[0.90849045, 0.41790561],\n       [0.84507884, 0.53464171],\n       [0.93935732, 0.34293997],\n       [0.91250932, 0.4090559 ],\n       [0.90580954, 0.42368511],\n       [0.82659925, 0.56279098],\n       [0.80417614, 0.59439106],\n       [0.89792072, 0.44015722],\n       [0.81602448, 0.57801734],\n       [0.90116674, 0.43347261],\n       [0.83205029, 0.5547002 ],\n       [0.80942185, 0.58722762],\n       [0.88799441, 0.45985425],\n       [0.90795938, 0.41905818],\n       [0.81067923, 0.58549055],\n       [0.90947448, 0.41575976],\n       [0.90055164, 0.43474907],\n       [0.94744567, 0.31991672],\n       [0.91036648, 0.41380294],\n       [0.87903186, 0.47676304],\n       [0.80588181, 0.59207643],\n       [0.89043468, 0.45511106],\n       [0.91381155, 0.40613847],\n       [0.8349582 , 0.55031336],\n       [0.81153434, 0.58430473],\n       [0.92307692, 0.38461538],\n       [0.87002219, 0.49301257],\n       [0.94242775, 0.33440985],\n       [0.93528626, 0.3538921 ],\n       [0.9149178 , 0.40364021],\n       [0.91615733, 0.40081883],\n       [0.91578821, 0.4016615 ],\n       [0.81923192, 0.57346234],\n       [0.80188283, 0.59748132],\n       [0.9246781 , 0.38074981],\n       [0.88749608, 0.46081527],\n       [0.80188283, 0.59748132],\n       [0.91313788, 0.40765084],\n       [0.89734997, 0.44131966],\n       [0.91551945, 0.4022737 ],\n       [0.91615733, 0.40081883],\n       [0.82012695, 0.5721816 ],\n       [0.89442719, 0.4472136 ],\n       [0.82451335, 0.5658425 ],\n       [0.92949071, 0.36884552],\n       [0.80873608, 0.5881717 ],\n       [0.93015522, 0.36716653],\n       [0.89442719, 0.4472136 ],\n       [0.80188283, 0.59748132],\n       [0.89717068, 0.44168403],\n       [0.91914503, 0.3939193 ],\n       [0.81923192, 0.57346234],\n       [0.83696961, 0.54724936],\n       [0.92136416, 0.38870051],\n       [0.82321279, 0.56773296],\n       [0.79159032, 0.61105218],\n       [0.8209052 , 0.57106449],\n       [0.9121687 , 0.40981492],\n       [0.90838094, 0.41814361],\n       [0.84366149, 0.53687549],\n       [0.90981905, 0.41500518],\n       [0.83460941, 0.55084221],\n       [0.93887632, 0.34425465],\n       [0.8528513 , 0.52215386],\n       [0.92847669, 0.37139068],\n       [0.91036648, 0.41380294],\n       [0.89755433, 0.44090388],\n       [0.90407227, 0.42737962],\n       [0.92257988, 0.38580613],\n       [0.84003938, 0.54252543],\n       [0.90034895, 0.43516866],\n       [0.85749293, 0.51449576],\n       [0.9121687 , 0.40981492],\n       [0.93690259, 0.34959052],\n       [0.81995808, 0.57242357],\n       [0.78526917, 0.61915453],\n       [0.8269265 , 0.56231002],\n       [0.787505  , 0.61630826],\n       [0.89674427, 0.44254912],\n       [0.92935209, 0.36919466],\n       [0.82926643, 0.55885346],\n       [0.91653938, 0.39994446],\n       [0.90658206, 0.42202958],\n       [0.89708903, 0.44184982],\n       [0.90658206, 0.42202958],\n       [0.82493237, 0.56523144],\n       [0.8269265 , 0.56231002],\n       [0.91192151, 0.41036468],\n       [0.89755433, 0.44090388],\n       [0.90882955, 0.41716766],\n       [0.83957016, 0.54325128],\n       [0.88147997, 0.47222141],\n       [0.87415728, 0.48564293],\n       [0.81067923, 0.58549055],\n       [0.89708903, 0.44184982],\n       [0.89076187, 0.45447034],\n       [0.87681241, 0.48083261],\n       [0.91653938, 0.39994446],\n       [0.93979342, 0.34174306],\n       [0.84623284, 0.53281327],\n       [0.91268458, 0.40866474],\n       [0.79476781, 0.6069136 ],\n       [0.8422714 , 0.5390537 ],\n       [0.8479983 , 0.52999894],\n       [0.90658206, 0.42202958],\n       [0.89138513, 0.45324668],\n       [0.92114622, 0.38921671],\n       [0.89806271, 0.43986745],\n       [0.92949071, 0.36884552],\n       [0.88147997, 0.47222141],\n       [0.93177739, 0.36303015],\n       [0.84623284, 0.53281327]])\n</code></pre><h3 id=\"Binarization\"><a href=\"#Binarization\" class=\"headerlink\" title=\"Binarization\"></a>Binarization</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> Binarizer</span><br><span class=\"line\"></span><br><span class=\"line\">binarizer = Binarizer(threshold=<span class=\"number\">0.0</span>).fit(X)</span><br><span class=\"line\">binarizer.transform(X)</span><br></pre></td></tr></table></figure>\n<pre><code>array([[1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.]])\n</code></pre><h3 id=\"Encoding-Categorical-Features\"><a href=\"#Encoding-Categorical-Features\" class=\"headerlink\" title=\"Encoding Categorical Features\"></a>Encoding Categorical Features</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelEncoder</span><br><span class=\"line\"></span><br><span class=\"line\">enc = LabelEncoder()</span><br><span class=\"line\">enc.fit_transform(y)</span><br></pre></td></tr></table></figure>\n<pre><code>array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])\n</code></pre><h3 id=\"Imputing-Missing-Values\"><a href=\"#Imputing-Missing-Values\" class=\"headerlink\" title=\"Imputing Missing Values\"></a>Imputing Missing Values</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> Imputer</span><br><span class=\"line\"></span><br><span class=\"line\">imp = Imputer(missing_values=<span class=\"number\">0</span>, strategy=<span class=\"string\">&#x27;mean&#x27;</span>, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">imp.fit_transform(X_train)</span><br></pre></td></tr></table></figure>\n<pre><code>array([[-0.91090798, -1.59775374],\n       [-1.0271058 ,  0.08448757],\n       [ 0.59966379, -1.59775374],\n       [ 0.01867465, -0.96691325],\n       [ 0.48346596, -0.33607276],\n       [-1.25950146,  0.29476773],\n       [-1.37569929,  0.71532806],\n       [-0.79471015, -1.17719341],\n       [-1.14330363,  0.71532806],\n       [ 2.45882905,  1.55644871],\n       [-0.79471015,  0.71532806],\n       [-0.79471015,  1.34616854],\n       [-0.21372101, -0.33607276],\n       [ 0.83205945, -0.1257926 ],\n       [-0.44611666,  1.76672887],\n       [ 1.41304859,  0.29476773],\n       [ 0.01867465, -0.54635292],\n       [ 2.22643339, -0.96691325],\n       [-0.32991883, -1.17719341],\n       [ 0.13487248,  0.29476773],\n       [-1.0271058 ,  1.13588838],\n       [-1.49189712, -1.59775374],\n       [ 0.59966379, -0.54635292],\n       [-1.60809495, -0.33607276],\n       [-0.91090798,  1.13588838],\n       [ 1.64544425, -0.1257926 ],\n       [ 0.25107031,  0.71532806],\n       [ 0.48346596, -1.8080339 ],\n       [ 1.8778399 , -0.54635292],\n       [ 1.18065293, -0.1257926 ],\n       [ 0.71586162, -0.54635292],\n       [-0.09752318, -1.17719341],\n       [-0.91090798,  0.92560822],\n       [-0.79471015,  1.55644871],\n       [ 1.18065293, -0.54635292],\n       [-0.67851232, -0.75663309],\n       [-0.79471015,  1.55644871],\n       [-0.21372101, -1.17719341],\n       [ 0.36726814, -0.1257926 ],\n       [ 0.94825728, -0.33607276],\n       [ 0.71586162, -0.54635292],\n       [-1.72429277, -0.1257926 ],\n       [ 1.64544425,  1.13588838],\n       [-0.79471015,  0.92560822],\n       [ 0.59966379, -1.17719341],\n       [-1.60809495,  0.29476773],\n       [ 2.11023556, -0.1257926 ],\n       [ 0.71586162,  0.29476773],\n       [-0.79471015,  1.55644871],\n       [ 0.83205945,  0.29476773],\n       [ 0.59966379, -0.75663309],\n       [-0.91090798,  0.92560822],\n       [-0.67851232,  0.71532806],\n       [ 0.71586162, -0.75663309],\n       [ 0.01867465,  1.97700903],\n       [-0.09752318,  2.81812969],\n       [-1.37569929,  0.29476773],\n       [ 1.29685076,  0.08448757],\n       [ 0.59966379, -0.33607276],\n       [-0.32991883,  0.92560822],\n       [-0.09752318, -0.96691325],\n       [-0.91090798,  0.50504789],\n       [ 0.25107031, -1.8080339 ],\n       [-1.0271058 , -0.1257926 ],\n       [-0.91090798, -2.22859423],\n       [ 0.94825728, -0.1257926 ],\n       [-0.09752318, -0.54635292],\n       [-0.32991883, -0.96691325],\n       [-0.32991883, -1.59775374],\n       [-1.14330363,  0.08448757],\n       [ 0.25107031, -0.33607276],\n       [-0.91090798, -0.1257926 ],\n       [ 1.29685076,  0.08448757],\n       [ 1.06445511, -1.17719341],\n       [-0.56231449,  1.34616854],\n       [-0.67851232,  2.1872892 ],\n       [-0.91090798,  0.71532806],\n       [-1.37569929,  1.13588838],\n       [ 2.22643339,  1.55644871],\n       [ 1.76164208, -0.33607276],\n       [-1.37569929,  0.08448757],\n       [-0.32991883, -1.38747358],\n       [ 0.01867465, -0.75663309],\n       [ 1.06445511,  0.50504789],\n       [ 0.01867465, -0.75663309],\n       [-0.44611666,  1.34616854],\n       [-0.91090798,  0.71532806],\n       [ 0.25107031, -0.75663309],\n       [-0.09752318, -0.54635292],\n       [ 0.36726814, -0.54635292],\n       [-0.79471015,  0.50504789],\n       [-0.21372101, -0.1257926 ],\n       [-0.44611666, -0.1257926 ],\n       [-0.44611666,  1.76672887],\n       [ 1.06445511,  0.50504789],\n       [-1.0271058 , -1.17719341],\n       [ 0.48346596,  0.71532806],\n       [-0.32991883, -1.38747358],\n       [ 2.22643339, -0.54635292],\n       [-0.44611666,  0.71532806],\n       [ 1.06445511, -0.1257926 ],\n       [-0.32991883,  2.39756936],\n       [-0.91090798,  0.29476773],\n       [-1.14330363, -0.1257926 ],\n       [ 0.01867465, -0.75663309],\n       [ 0.13487248, -0.1257926 ],\n       [ 1.52924642, -0.1257926 ],\n       [-1.0271058 , -1.38747358],\n       [ 0.59966379, -1.17719341],\n       [-0.21372101, -0.1257926 ],\n       [ 2.22643339, -0.1257926 ],\n       [-0.44611666,  0.71532806]])\n</code></pre><h3 id=\"Generating-Polynomial-Features\"><a href=\"#Generating-Polynomial-Features\" class=\"headerlink\" title=\"Generating Polynomial Features\"></a>Generating Polynomial Features</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> PolynomialFeatures</span><br><span class=\"line\"></span><br><span class=\"line\">poly = PolynomialFeatures(<span class=\"number\">5</span>)</span><br><span class=\"line\">poly.fit_transform(X_train) </span><br></pre></td></tr></table></figure>\n<pre><code>array([[1.00000000e+00, 5.00000000e+00, 2.30000000e+00, ...,\n        3.04175000e+02, 1.39920500e+02, 6.43634300e+01],\n       [1.00000000e+00, 4.90000000e+00, 3.10000000e+00, ...,\n        7.15281910e+02, 4.52525290e+02, 2.86291510e+02],\n       [1.00000000e+00, 6.30000000e+00, 2.30000000e+00, ...,\n        4.82908230e+02, 1.76299830e+02, 6.43634300e+01],\n       ...,\n       [1.00000000e+00, 5.60000000e+00, 3.00000000e+00, ...,\n        8.46720000e+02, 4.53600000e+02, 2.43000000e+02],\n       [1.00000000e+00, 7.70000000e+00, 3.00000000e+00, ...,\n        1.60083000e+03, 6.23700000e+02, 2.43000000e+02],\n       [1.00000000e+00, 5.40000000e+00, 3.40000000e+00, ...,\n        1.14610464e+03, 7.21621440e+02, 4.54354240e+02]])\n</code></pre><h2 id=\"模型\"><a href=\"#模型\" class=\"headerlink\" title=\"模型\"></a>模型</h2><h3 id=\"监督学习\"><a href=\"#监督学习\" class=\"headerlink\" title=\"监督学习\"></a>监督学习</h3><h4 id=\"Linear-Regression\"><a href=\"#Linear-Regression\" class=\"headerlink\" title=\"Linear Regression\"></a>Linear Regression</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LinearRegression</span><br><span class=\"line\"></span><br><span class=\"line\">lr = LinearRegression(normalize=<span class=\"literal\">True</span>)</span><br><span class=\"line\">lr.fit(X, y)</span><br><span class=\"line\">y_pred = lr.predict(X_test)</span><br><span class=\"line\">y_pred</span><br></pre></td></tr></table></figure>\n<pre><code>array([ 0.99503595,  1.60221544,  0.06895097,  1.6466104 ,  1.48027593,\n        1.18075657,  0.01486294,  0.17150435,  1.38179294,  1.68538268,\n        1.61190851, -0.02390934,  1.11697547,  1.28893263,  1.74916378,\n        1.50935514,  1.15167736,  0.24497852,  1.18075657,  1.90580519,\n        0.27968041,  0.42100606,  1.51904821,  0.26998734,  1.66192615,\n        1.4261879 ,  1.22515153,  1.35271373,  1.51904821,  1.07820319,\n        1.04912398,  1.60221544,  0.98534288,  1.31801184,  1.60221544,\n        1.66599654,  1.19607232,  0.93125485])\n</code></pre><h4 id=\"Support-Vector-Machines-SVM\"><a href=\"#Support-Vector-Machines-SVM\" class=\"headerlink\" title=\"Support Vector Machines (SVM)\"></a>Support Vector Machines (SVM)</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> SVC</span><br><span class=\"line\"></span><br><span class=\"line\">svc = SVC(kernel=<span class=\"string\">&#x27;linear&#x27;</span>)</span><br><span class=\"line\">svc.fit(X, y)</span><br><span class=\"line\">y_pred = svc.predict(X_test)</span><br><span class=\"line\">y_pred</span><br></pre></td></tr></table></figure>\n<pre><code>array([1, 2, 0, 2, 1, 2, 0, 0, 2, 2, 2, 0, 2, 1, 2, 2, 1, 0, 2, 2, 0, 0,\n       2, 0, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1])\n</code></pre><h4 id=\"Naive-Bayes\"><a href=\"#Naive-Bayes\" class=\"headerlink\" title=\"Naive Bayes\"></a>Naive Bayes</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.naive_bayes <span class=\"keyword\">import</span> GaussianNB</span><br><span class=\"line\"></span><br><span class=\"line\">gnb = GaussianNB()</span><br><span class=\"line\">gnb.fit(X, y)</span><br><span class=\"line\">y_pred = gnb.predict(X_test)</span><br><span class=\"line\">y_pred</span><br></pre></td></tr></table></figure>\n<pre><code>array([1, 2, 0, 2, 1, 2, 0, 0, 2, 2, 2, 0, 2, 1, 2, 2, 1, 0, 2, 2, 0, 0,\n       2, 0, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1])\n</code></pre><h4 id=\"KNN\"><a href=\"#KNN\" class=\"headerlink\" title=\"KNN\"></a>KNN</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> neighbors</span><br><span class=\"line\"></span><br><span class=\"line\">knn = neighbors.KNeighborsClassifier(n_neighbors=<span class=\"number\">5</span>)</span><br><span class=\"line\">knn.fit(X, y)</span><br><span class=\"line\">y_pred = knn.predict(X_test)</span><br><span class=\"line\">y_pred</span><br></pre></td></tr></table></figure>\n<pre><code>array([1, 1, 0, 2, 1, 2, 0, 0, 2, 2, 2, 0, 2, 1, 2, 2, 2, 0, 2, 2, 0, 0,\n       2, 0, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1])\n</code></pre><h3 id=\"无监督学习\"><a href=\"#无监督学习\" class=\"headerlink\" title=\"无监督学习\"></a>无监督学习</h3><h4 id=\"Principal-Component-Analysis-PCA\"><a href=\"#Principal-Component-Analysis-PCA\" class=\"headerlink\" title=\"Principal Component Analysis (PCA)\"></a>Principal Component Analysis (PCA)</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.decomposition <span class=\"keyword\">import</span> PCA</span><br><span class=\"line\"></span><br><span class=\"line\">pca = PCA(n_components=<span class=\"number\">0.95</span>)</span><br><span class=\"line\">pca.fit_transform(X_train)</span><br></pre></td></tr></table></figure>\n<pre><code>array([[-0.70718738, -0.83172028],\n       [-0.88369354, -0.0450529 ],\n       [ 0.58678167, -0.70664389],\n       [ 0.06023749, -0.45614195],\n       [ 0.42951803, -0.11904867],\n       [-1.09238696,  0.03524066],\n       [-1.21116556,  0.22469156],\n       [-0.62689382, -0.62302686],\n       [-1.0120934 ,  0.24393409],\n       [ 2.03504005,  0.94033749],\n       [-0.71348516,  0.27279787],\n       [-0.74234894,  0.57140611],\n       [-0.16769846, -0.17677623],\n       [ 0.71850501,  0.00935119],\n       [-0.46298322,  0.79934205],\n       [ 1.19694289,  0.25652966],\n       [ 0.04099497, -0.25706979],\n       [ 1.95142302, -0.273338  ],\n       [-0.22874949, -0.58454182],\n       [ 0.10204601,  0.15069579],\n       [-0.93179984,  0.45262751],\n       [-1.20486778, -0.87982658],\n       [ 0.53867537, -0.20896349],\n       [-1.36213142, -0.29223136],\n       [-0.83226376,  0.46224877],\n       [ 1.41525757,  0.07670002],\n       [ 0.18233956,  0.35938921],\n       [ 0.49686685, -0.81580123],\n       [ 1.63357226, -0.10312962],\n       [ 1.01711325,  0.03821497],\n       [ 0.63821145, -0.19934223],\n       [-0.02967733, -0.5652993 ],\n       [-0.8226425 ,  0.36271269],\n       [-0.7519702 ,  0.67094219],\n       [ 1.03635577, -0.16085719],\n       [-0.54660026, -0.41433344],\n       [-0.7519702 ,  0.67094219],\n       [-0.12921341, -0.57492056],\n       [ 0.32036069, -0.02913385],\n       [ 0.82766235, -0.08056363],\n       [ 0.63821145, -0.19934223],\n       [-1.47128876, -0.20231654],\n       [ 1.35753001,  0.6739165 ],\n       [-0.72310642,  0.37233395],\n       [ 0.56753915, -0.50757173],\n       [-1.3909952 ,  0.00637688],\n       [ 1.8134019 ,  0.11518506],\n       [ 0.59972641,  0.19880209],\n       [-0.7519702 ,  0.67094219],\n       [ 0.69926249,  0.20842335],\n       [ 0.54829663, -0.30849957],\n       [-0.8226425 ,  0.36271269],\n       [-0.61394908,  0.28241913],\n       [ 0.64783271, -0.29887831],\n       [-0.07446016,  0.93736317],\n       [-0.21248128,  1.32588624],\n       [-1.19192304,  0.0256194 ],\n       [ 1.10702807,  0.14737232],\n       [ 0.52905411, -0.10942741],\n       [-0.3249621 ,  0.41081899],\n       [-0.03929859, -0.46576321],\n       [-0.80339998,  0.16364053],\n       [ 0.29779469, -0.83504376],\n       [-0.87407228, -0.14458898],\n       [-0.67832359, -1.13032852],\n       [ 0.81804109,  0.01897245],\n       [-0.05854111, -0.26669105],\n       [-0.23837075, -0.48500574],\n       [-0.20950697, -0.78361398],\n       [-0.98322962, -0.05467416],\n       [ 0.23044587, -0.13829119],\n       [-0.7745362 , -0.13496772],\n       [ 1.10702807,  0.14737232],\n       [ 0.96568347, -0.46908669],\n       [-0.54327678,  0.59064863],\n       [-0.6812979 ,  0.97917169],\n       [-0.81302124,  0.26317661],\n       [-1.23040809,  0.42376373],\n       [ 1.83596789,  0.92109496],\n       [ 1.52441492, -0.0132148 ],\n       [-1.18230178, -0.07391668],\n       [-0.21912823, -0.6840779 ],\n       [ 0.05061623, -0.35660587],\n       [ 0.88871339,  0.32720196],\n       [ 0.05061623, -0.35660587],\n       [-0.4437407 ,  0.60026989],\n       [-0.81302124,  0.26317661],\n       [ 0.24968839, -0.33736335],\n       [-0.05854111, -0.26669105],\n       [ 0.33960321, -0.22820601],\n       [-0.7038639 ,  0.17326179],\n       [-0.17731972, -0.07724015],\n       [-0.37639188, -0.09648267],\n       [-0.46298322,  0.79934205],\n       [ 0.88871339,  0.32720196],\n       [-0.82596598, -0.64226938],\n       [ 0.38141173,  0.37863173],\n       [-0.21912823, -0.6840779 ],\n       [ 1.9321805 , -0.07426584],\n       [-0.41487692,  0.30166165],\n       [ 0.91757717,  0.02859371],\n       [-0.39231092,  1.10757155],\n       [-0.79377872,  0.06410445],\n       [-0.97360836, -0.15421024],\n       [ 0.05061623, -0.35660587],\n       [ 0.12128853, -0.04837637],\n       [ 1.31572149,  0.06707876],\n       [-0.81634472, -0.74180546],\n       [ 0.56753915, -0.50757173],\n       [-0.17731972, -0.07724015],\n       [ 1.91293798,  0.12480632],\n       [-0.41487692,  0.30166165]])\n</code></pre><h4 id=\"K-Means\"><a href=\"#K-Means\" class=\"headerlink\" title=\"K Means\"></a>K Means</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.cluster <span class=\"keyword\">import</span> KMeans</span><br><span class=\"line\"></span><br><span class=\"line\">k_means = KMeans(n_clusters=<span class=\"number\">3</span>, random_state=<span class=\"number\">0</span>)</span><br><span class=\"line\">k_means.fit(X, y)</span><br><span class=\"line\">y_pred = k_means.predict(X_test)</span><br><span class=\"line\">y_pred</span><br></pre></td></tr></table></figure>\n<pre><code>array([0, 2, 1, 2, 0, 2, 1, 1, 2, 2, 2, 1, 2, 0, 2, 2, 0, 1, 2, 2, 1, 1,\n       2, 1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 2, 2, 2, 0, 0], dtype=int32)\n</code></pre><h2 id=\"评估\"><a href=\"#评估\" class=\"headerlink\" title=\"评估\"></a>评估</h2><h3 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h3><h4 id=\"Accuracy-Score\"><a href=\"#Accuracy-Score\" class=\"headerlink\" title=\"Accuracy Score\"></a>Accuracy Score</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">knn.score(X_test, y_test)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> accuracy_score</span><br><span class=\"line\"></span><br><span class=\"line\">accuracy_score(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>0.3157894736842105\n</code></pre><h4 id=\"Classification-Report\"><a href=\"#Classification-Report\" class=\"headerlink\" title=\"Classification Report\"></a>Classification Report</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> classification_report</span><br><span class=\"line\"></span><br><span class=\"line\">classification_report(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>&#39;              precision    recall  f1-score   support\\n\\n           0       0.00      0.00      0.00         8\\n           1       0.00      0.00      0.00        11\\n           2       0.71      0.63      0.67        19\\n\\n   micro avg       0.32      0.32      0.32        38\\n   macro avg       0.24      0.21      0.22        38\\nweighted avg       0.35      0.32      0.33        38\\n&#39;\n</code></pre><h4 id=\"Confusion-Matrix\"><a href=\"#Confusion-Matrix\" class=\"headerlink\" title=\"Confusion Matrix\"></a>Confusion Matrix</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> confusion_matrix</span><br><span class=\"line\"></span><br><span class=\"line\">confusion_matrix(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>array([[ 0,  8,  0],\n       [ 6,  0,  5],\n       [ 7,  0, 12]])\n</code></pre><h3 id=\"回归\"><a href=\"#回归\" class=\"headerlink\" title=\"回归\"></a>回归</h3><h4 id=\"Mean-Absolute-Error\"><a href=\"#Mean-Absolute-Error\" class=\"headerlink\" title=\"Mean Absolute Error\"></a>Mean Absolute Error</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_absolute_error</span><br><span class=\"line\"></span><br><span class=\"line\">mean_absolute_error(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>0.868421052631579\n</code></pre><h4 id=\"Mean-Squared-Error\"><a href=\"#Mean-Squared-Error\" class=\"headerlink\" title=\"Mean Squared Error\"></a>Mean Squared Error</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> mean_squared_error</span><br><span class=\"line\"></span><br><span class=\"line\">mean_squared_error(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>1.236842105263158\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#### R² Score</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> r2_score</span><br><span class=\"line\"></span><br><span class=\"line\">r2_score(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>-0.9734806629834258\n</code></pre><h3 id=\"聚类\"><a href=\"#聚类\" class=\"headerlink\" title=\"聚类\"></a>聚类</h3><h4 id=\"Adjusted-Rand-Index\"><a href=\"#Adjusted-Rand-Index\" class=\"headerlink\" title=\"Adjusted Rand Index\"></a>Adjusted Rand Index</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> adjusted_rand_score</span><br><span class=\"line\"></span><br><span class=\"line\">adjusted_rand_score(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>0.3273680853325774\n</code></pre><h4 id=\"V-measure\"><a href=\"#V-measure\" class=\"headerlink\" title=\"V-measure\"></a>V-measure</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> v_measure_score</span><br><span class=\"line\"></span><br><span class=\"line\">v_measure_score(y_test, y_pred)</span><br></pre></td></tr></table></figure>\n<pre><code>0.5040766075368869\n</code></pre><h3 id=\"Cross-Validation\"><a href=\"#Cross-Validation\" class=\"headerlink\" title=\"Cross-Validation\"></a>Cross-Validation</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_score</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(cross_val_score(knn, X_train, y_train, cv=<span class=\"number\">4</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(cross_val_score(lr, X, y, cv=<span class=\"number\">2</span>))</span><br></pre></td></tr></table></figure>\n<pre><code>[0.82758621 0.82758621 0.82142857 0.88461538]\n[-4.31567384 -1.89773191]\n</code></pre><h2 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a>调试</h2><h3 id=\"Grid-Search\"><a href=\"#Grid-Search\" class=\"headerlink\" title=\"Grid Search\"></a>Grid Search</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> GridSearchCV</span><br><span class=\"line\"></span><br><span class=\"line\">params = &#123;<span class=\"string\">&quot;n_neighbors&quot;</span>: np.arange(<span class=\"number\">1</span>,<span class=\"number\">3</span>), <span class=\"string\">&quot;metric&quot;</span>: [<span class=\"string\">&quot;euclidean&quot;</span>, <span class=\"string\">&quot;cityblock&quot;</span>]&#125;</span><br><span class=\"line\">grid = GridSearchCV(estimator=knn,</span><br><span class=\"line\"> param_grid=params)</span><br><span class=\"line\">grid.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>((grid.best_score_))</span><br><span class=\"line\"><span class=\"built_in\">print</span>((grid.best_estimator_.n_neighbors))</span><br></pre></td></tr></table></figure>\n<pre><code>0.8303571428571429\n2\n</code></pre><h3 id=\"Randomized-Parameter-Optimization\"><a href=\"#Randomized-Parameter-Optimization\" class=\"headerlink\" title=\"Randomized Parameter Optimization\"></a>Randomized Parameter Optimization</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> RandomizedSearchCV</span><br><span class=\"line\">params = &#123;<span class=\"string\">&quot;n_neighbors&quot;</span>: <span class=\"built_in\">list</span>(<span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">5</span>)), <span class=\"string\">&quot;weights&quot;</span>: [<span class=\"string\">&quot;uniform&quot;</span>, <span class=\"string\">&quot;distance&quot;</span>]&#125;</span><br><span class=\"line\">rsearch = RandomizedSearchCV(estimator=knn,</span><br><span class=\"line\"> param_distributions=params,</span><br><span class=\"line\"> cv=<span class=\"number\">4</span>,</span><br><span class=\"line\"> n_iter=<span class=\"number\">8</span>,</span><br><span class=\"line\"> random_state=<span class=\"number\">5</span>)</span><br><span class=\"line\">rsearch.fit(X_train, y_train)</span><br><span class=\"line\"><span class=\"built_in\">print</span>((rsearch.best_score_))</span><br></pre></td></tr></table></figure>\n<pre><code>0.8214285714285714\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.datacamp.com/community/blog/scikit-learn-cheat-sheet\" >Scikit-Learn Cheat Sheet: Python Machine Learning<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"特征工程","mathjax":false,"abbrlink":17541,"date":"2019-08-03T16:00:00.000Z","_content":"\n## 数据集载入\n\n\n```python\n# -*- coding: utf-8 -*-\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\ndf = pd.read_csv(u\"2019-08-01_金融数据描述_data1.csv\",encoding = 'gbk')\n```\n\n\n```python\ndf.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 4754 entries, 0 to 4753\n    Data columns (total 90 columns):\n    Unnamed: 0                                    4754 non-null int64\n    custid                                        4754 non-null int64\n    trade_no                                      4754 non-null object\n    bank_card_no                                  4754 non-null object\n    low_volume_percent                            4752 non-null float64\n    middle_volume_percent                         4752 non-null float64\n    take_amount_in_later_12_month_highest         4754 non-null int64\n    trans_amount_increase_rate_lately             4751 non-null float64\n    trans_activity_month                          4752 non-null float64\n    trans_activity_day                            4752 non-null float64\n    transd_mcc                                    4752 non-null float64\n    trans_days_interval_filter                    4746 non-null float64\n    trans_days_interval                           4752 non-null float64\n    regional_mobility                             4752 non-null float64\n    student_feature                               1756 non-null float64\n    repayment_capability                          4754 non-null int64\n    is_high_user                                  4754 non-null int64\n    number_of_trans_from_2011                     4752 non-null float64\n    first_transaction_time                        4752 non-null float64\n    historical_trans_amount                       4754 non-null int64\n    historical_trans_day                          4752 non-null float64\n    rank_trad_1_month                             4752 non-null float64\n    trans_amount_3_month                          4754 non-null int64\n    avg_consume_less_12_valid_month               4752 non-null float64\n    abs                                           4754 non-null int64\n    top_trans_count_last_1_month                  4752 non-null float64\n    avg_price_last_12_month                       4754 non-null int64\n    avg_price_top_last_12_valid_month             4650 non-null float64\n    reg_preference_for_trad                       4752 non-null object\n    trans_top_time_last_1_month                   4746 non-null float64\n    trans_top_time_last_6_month                   4746 non-null float64\n    consume_top_time_last_1_month                 4746 non-null float64\n    consume_top_time_last_6_month                 4746 non-null float64\n    cross_consume_count_last_1_month              4328 non-null float64\n    trans_fail_top_count_enum_last_1_month        4738 non-null float64\n    trans_fail_top_count_enum_last_6_month        4738 non-null float64\n    trans_fail_top_count_enum_last_12_month       4738 non-null float64\n    consume_mini_time_last_1_month                4728 non-null float64\n    max_cumulative_consume_later_1_month          4754 non-null int64\n    max_consume_count_later_6_month               4746 non-null float64\n    railway_consume_count_last_12_month           4742 non-null float64\n    pawns_auctions_trusts_consume_last_1_month    4754 non-null int64\n    pawns_auctions_trusts_consume_last_6_month    4754 non-null int64\n    jewelry_consume_count_last_6_month            4742 non-null float64\n    status                                        4754 non-null int64\n    source                                        4754 non-null object\n    first_transaction_day                         4752 non-null float64\n    trans_day_last_12_month                       4752 non-null float64\n    id_name                                       4478 non-null object\n    apply_score                                   4450 non-null float64\n    apply_credibility                             4450 non-null float64\n    query_org_count                               4450 non-null float64\n    query_finance_count                           4450 non-null float64\n    query_cash_count                              4450 non-null float64\n    query_sum_count                               4450 non-null float64\n    latest_query_time                             4450 non-null object\n    latest_one_month_apply                        4450 non-null float64\n    latest_three_month_apply                      4450 non-null float64\n    latest_six_month_apply                        4450 non-null float64\n    loans_score                                   4457 non-null float64\n    loans_credibility_behavior                    4457 non-null float64\n    loans_count                                   4457 non-null float64\n    loans_settle_count                            4457 non-null float64\n    loans_overdue_count                           4457 non-null float64\n    loans_org_count_behavior                      4457 non-null float64\n    consfin_org_count_behavior                    4457 non-null float64\n    loans_cash_count                              4457 non-null float64\n    latest_one_month_loan                         4457 non-null float64\n    latest_three_month_loan                       4457 non-null float64\n    latest_six_month_loan                         4457 non-null float64\n    history_suc_fee                               4457 non-null float64\n    history_fail_fee                              4457 non-null float64\n    latest_one_month_suc                          4457 non-null float64\n    latest_one_month_fail                         4457 non-null float64\n    loans_long_time                               4457 non-null float64\n    loans_latest_time                             4457 non-null object\n    loans_credit_limit                            4457 non-null float64\n    loans_credibility_limit                       4457 non-null float64\n    loans_org_count_current                       4457 non-null float64\n    loans_product_count                           4457 non-null float64\n    loans_max_limit                               4457 non-null float64\n    loans_avg_limit                               4457 non-null float64\n    consfin_credit_limit                          4457 non-null float64\n    consfin_credibility                           4457 non-null float64\n    consfin_org_count_current                     4457 non-null float64\n    consfin_product_count                         4457 non-null float64\n    consfin_max_limit                             4457 non-null float64\n    consfin_avg_limit                             4457 non-null float64\n    latest_query_day                              4450 non-null float64\n    loans_latest_day                              4457 non-null float64\n    dtypes: float64(70), int64(13), object(7)\n    memory usage: 3.3+ MB\n\n\n## 特征预处理\n\n### 删除无用\n\n\n```python\ndelete = ['Unnamed: 0', 'custid', 'trade_no', 'bank_card_no','id_name','latest_query_time','source','loans_latest_time','first_transaction_time', 'student_feature']\ndf = df.drop(delete,axis=1)\n```\n\n### 处理分类型特征\n\n\n```python\nfrom sklearn.preprocessing import LabelEncoder\ndf['reg_preference_for_trad'] = LabelEncoder().fit_transform(df['reg_preference_for_trad'].astype(str))\n```\n\n### 使用众数填充\n\n\n```python\nfrom sklearn.preprocessing import Imputer\nfor i in range(df.shape[1]):\n    feature = df.iloc[:,i].values.reshape(-1,1)\n    imp_mode = Imputer(strategy='most_frequent')\n    df.iloc[:,i] = imp_mode.fit_transform(feature)\n```\n\n## 特征衍生/升维\n\n特征衍生是指用原始数据进行特征学习得到新的特征。衍生特征一般有两种原因引起的：数据自身的变化，使数据中出现很多原来没有的特征；进行特征学习时，算法根据特征之间的某种关系，产生了衍生特征，有时衍生特征更能反应数据特征之间的关系 。衍生特征也要求机器学习和深度学习算法拥有更强的学习能力，即增量学习、在线学习、迁移学习。\n\n衍生特征相对于原始特征能够更好的反映特征与数据的关系，因此对于某些数据来说这是极为重要的一个步骤。观察本数据，发现可以从衍生出以下几个特征，而如 latest_one_month_suc、latest_one_month_fail、latest_six_month_loan 都是处理好的特征：\n\n1. 查询内容占比\n\n\n```python\ndf['query_finance_percent'] = df['query_finance_count'] / df['query_sum_count']\ndf['query_cash_percent'] = df['query_cash_count'] / df['query_sum_count']\n```\n\n2. 每单平均交易量\n\n\n```python\ndf['per_avg_amount'] = df['historical_trans_amount'] / df['number_of_trans_from_2011']\n```\n\n3. 每天平均交易量\n\n\n```python\ndf['avg_amount_perday'] = df['historical_trans_amount'] / df['historical_trans_day']\n```\n\n## 特征筛选/降维\n\n特征选择( Feature Selection )也称特征子集选择( Feature Subset Selection , FSS )，或属性选择( Attribute Selection )。是指从已有的M个特征(Feature)中选择N个特征使得系统的特定指标最优化，是从原始特征中选择出一些最有效特征以降低数据集维度的过程,是提高学习算法性能的一个重要手段,也是模式识别中关键的数据预处理步骤。对于一个学习算法来说,好的学习样本是训练模型的关键。\n\n### 共线性分析\n\n共线性问题指的是输入的自变量之间存在较高的线性相关度。共线性问题会导致回归模型的稳定性和准确性大大降低，另外，过多无关的维度计算也很浪费时间。\n\n变量出现共线性的原因：\n\n- 数据样本不够，导致共线性存在偶然性，这其实反映了缺少数据对于数据建模的影响，共线性仅仅是影响的一部分\n- 多个变量都给予时间有共同或相反的演变趋势，例如春节期间的网络销售量和销售额都相对与正常时间有下降趋势。\n- 多个变量存在一定的推移关系，但总体上变量间的趋势一致，只是发生的时间点不一致，例如广告费用和销售额之间，通常是品牌广告先进行大范围的曝光和信息推送，经过一定时间传播之后，才会在销售额上做出反映。\n- 多变量之间存在线性的关系。例如y代表访客数，用x代表展示广告费用，那么二者的关系很可能是y=2*x + b\n\n如何检验共线性：\n\n- 容忍度（Tolerance）：容忍度是每个自变量作为因变量对其他自变量进行回归建模时得到的残差比例，大小用1减得到的决定系数来表示。容忍度值越小说明这个自变量与其他自变量间越可能存在共线性问题。\n- 方差膨胀因子：VIF是容忍度的倒数，值越大则共线性问题越明显，通常以10作为判断边界。当VIF<10,不存在多重共线性；当10<=VIF<100,存在较强的多重共线性；当VIF>=100, 存在严重多重共线性。\n- 特征值（Eigenvalue）：该方法实际上就是对自变量做主成分分析，如果多个维度的特征值等于0，则可能有比较严重的共线性。\n- 相关系数：如果相关系数R>0.8时就可能存在较强相关性\n\n如何处理共线性：\n\n- 增大样本量：增大样本量可以消除犹豫数据量不足而出现的偶然的共线性现象，在可行的前提下这种方法是需要优先考虑的\n- 岭回归法（Ridge Regression）：实际上是一种改良最小二乘估计法。通过放弃最小二乘法的无偏性，以损失部分信息、降低精度为代价来获得更实际和可靠性更强的回归系数。因此岭回归在存在较强共线性的回归应用中较为常用。\n- 逐步回归法（Stepwise Regression）:每次引入一个自变量进行统计检验，然后逐步引入其他变量，同时对所有变量的回归系数进行检验，如果原来引入的变量由于后面变量的引入而变得不再显著，那么久将其剔除，逐步得到最有回归方程。\n- 主成分回归（Principal Components Regression）:通过主成分分析，将原始参与建模的变量转换为少数几个主成分，么个主成分是原变量的线性组合，然后基于主成分做回归分析，这样也可以在不丢失重要数据特征的前提下避开共线性问题。\n- 人工去除：结合人工经验，对自变量进行删减，但是对操作者的业务能力、经验有很高的要求。\n\n\n```python\ncorr_matrix = df.corr()\ncorr_matrix = corr_matrix.unstack()\ncorr_matrix[(abs(corr_matrix)>0.8) & (abs(corr_matrix) != 1)]\n```\n\n\n\n\n    trans_activity_day                       historical_trans_day                       0.855777\n    historical_trans_amount                  per_avg_amount                             0.870396\n    historical_trans_day                     trans_activity_day                         0.855777\n    rank_trad_1_month                        top_trans_count_last_1_month               0.855890\n    top_trans_count_last_1_month             rank_trad_1_month                          0.855890\n    trans_top_time_last_1_month              consume_top_time_last_1_month              0.925978\n    trans_top_time_last_6_month              consume_top_time_last_6_month              0.921067\n    consume_top_time_last_1_month            trans_top_time_last_1_month                0.925978\n    consume_top_time_last_6_month            trans_top_time_last_6_month                0.921067\n    trans_fail_top_count_enum_last_6_month   trans_fail_top_count_enum_last_12_month    0.886180\n    trans_fail_top_count_enum_last_12_month  trans_fail_top_count_enum_last_6_month     0.886180\n    apply_score                              loans_score                                0.967695\n    query_org_count                          query_finance_count                        0.881597\n                                             query_cash_count                           0.850818\n                                             query_sum_count                            0.948918\n                                             latest_three_month_apply                   0.825973\n                                             latest_six_month_apply                     0.883612\n    query_finance_count                      query_org_count                            0.881597\n                                             query_sum_count                            0.858778\n                                             latest_six_month_apply                     0.817063\n    query_cash_count                         query_org_count                            0.850818\n                                             query_sum_count                            0.804468\n    query_sum_count                          query_org_count                            0.948918\n                                             query_finance_count                        0.858778\n                                             query_cash_count                           0.804468\n                                             latest_three_month_apply                   0.878368\n                                             latest_six_month_apply                     0.942820\n    latest_one_month_apply                   latest_three_month_apply                   0.873954\n                                             latest_six_month_apply                     0.810162\n    latest_three_month_apply                 query_org_count                            0.825973\n                                                                                          ...   \n    latest_six_month_loan                    loans_settle_count                         0.847959\n                                             loans_org_count_behavior                   0.840518\n                                             loans_cash_count                           0.804668\n                                             history_suc_fee                            0.805410\n                                             loans_org_count_current                    0.804668\n                                             loans_product_count                        0.808454\n    history_suc_fee                          loans_count                                0.911063\n                                             loans_settle_count                         0.930297\n                                             loans_org_count_behavior                   0.826103\n                                             latest_six_month_loan                      0.805410\n    loans_org_count_current                  loans_count                                0.892128\n                                             loans_settle_count                         0.874915\n                                             loans_org_count_behavior                   0.944990\n                                             latest_six_month_loan                      0.804668\n                                             loans_product_count                        0.993636\n    loans_product_count                      loans_count                                0.891898\n                                             loans_settle_count                         0.873971\n                                             loans_org_count_behavior                   0.939593\n                                             loans_cash_count                           0.993636\n                                             latest_six_month_loan                      0.808454\n                                             loans_org_count_current                    0.993636\n    consfin_credit_limit                     consfin_avg_limit                          0.910600\n    consfin_org_count_current                loans_org_count_behavior                   0.804413\n                                             consfin_product_count                      0.988156\n    consfin_product_count                    consfin_org_count_behavior                 0.988156\n                                             consfin_org_count_current                  0.988156\n    consfin_avg_limit                        consfin_credit_limit                       0.910600\n    per_avg_amount                           historical_trans_amount                    0.870396\n                                             avg_amount_perday                          0.850940\n    avg_amount_perday                        per_avg_amount                             0.850940\n    Length: 100, dtype: float64\n\n\n\n### 去掉方差较小的特征\n\n方差阈值（VarianceThreshold）是特征选择的一个简单方法，去掉那些方差没有达到阈值的特征。默认情况下，删除零方差的特征，例如那些只有一个值的样本。假设我们有一个有布尔特征的数据集，然后我们想去掉那些超过80%的样本都是0（或者1）的特征。布尔特征是伯努利随机变量，方差为 p(1-p)。\n\n\n```python\nX = df[:].drop(\"status\",axis=1)\ny = df[\"status\"]\n```\n\n\n```python\nfrom sklearn.feature_selection import VarianceThreshold\n\n#得到返回至少含有90%特征信息的特征\nsp = VarianceThreshold(threshold=0.8 * 0.2).fit(X, y)\n\n#可以看到哪些特征被保留\nX_result = sp.fit_transform(X, y)\n\n#输出结果\nsp.get_support()\n```\n\n\n\n\n    array([False, False,  True,  True, False, False,  True,  True,  True,\n            True,  True, False,  True,  True,  True, False,  True,  True,\n            True, False,  True, False,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True,  True,  True,\n            True, False,  True,  True,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True, False, False,\n            True,  True], dtype=bool)\n\n\n\n\n```python\nfrom sklearn.feature_selection import VarianceThreshold\n\n#得到返回至少含有90%特征信息的特征\nsp = VarianceThreshold(threshold=0.8 * 0.2).fit(X, y)\n\n#可以看到哪些特征被保留\nX_result = sp.fit_transform(X, y)\n\n#输出结果\nsp.get_support()\n```\n\n\n\n\n    array([False, False,  True,  True, False, False,  True,  True,  True,\n            True,  True, False,  True,  True,  True, False,  True,  True,\n            True, False,  True, False,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True,  True,  True,\n            True, False,  True,  True,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True, False, False,\n            True,  True], dtype=bool)\n\n\n\n### 单变量特征选择\n\n单变量的特征选择是通过基于单变量的统计测试来选择最好的特征，它可以当做是评估器的预处理步骤。\n\nScikit-learn 将特征选择的内容作为实现了 transform 方法的对象\n\n1. SelectKBest移除那些除了评分最高的 K 个特征之外的所有特征\n2. SelectPercentile移除除了用户指定的最高得分百分比之外的所有特征\n\n这些对象将得分函数作为输入，返回单变量的得分和 p 值:\n\n对于回归: f_regression , mutual_info_regression\n对于分类: chi2 , f_classif , mutual_info_classif 可自行查看官网API文档。\n\n\n```python\nfrom sklearn.feature_selection import SelectKBest, SelectPercentile, f_classif\n\n#得到返回至少含有90%特征信息的特征\nsp = SelectPercentile(f_classif, percentile= 90)\n\n#可以看到哪些特征被保留\nX_result = sp.fit_transform(X, y)\n\n#输出结果\nsp.get_support()\n\npd.DataFrame({'columns':X.columns,'filter':sp.get_support()})\n```\n\n\n\n\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>columns</th>\n      <th>filter</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>low_volume_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>middle_volume_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>take_amount_in_later_12_month_highest</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>trans_amount_increase_rate_lately</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>trans_activity_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>trans_activity_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>transd_mcc</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>trans_days_interval_filter</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>trans_days_interval</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>regional_mobility</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>repayment_capability</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>is_high_user</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>number_of_trans_from_2011</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>historical_trans_amount</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>historical_trans_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>rank_trad_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>trans_amount_3_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>avg_consume_less_12_valid_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>abs</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>top_trans_count_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>avg_price_last_12_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>avg_price_top_last_12_valid_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>reg_preference_for_trad</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>trans_top_time_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>trans_top_time_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>consume_top_time_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>consume_top_time_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>cross_consume_count_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>trans_fail_top_count_enum_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>trans_fail_top_count_enum_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>loans_overdue_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>loans_org_count_behavior</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>consfin_org_count_behavior</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>loans_cash_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>latest_one_month_loan</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>latest_three_month_loan</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>latest_six_month_loan</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>history_suc_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>history_fail_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>latest_one_month_suc</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>latest_one_month_fail</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>64</th>\n      <td>loans_long_time</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>loans_credit_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>loans_credibility_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>loans_org_count_current</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>68</th>\n      <td>loans_product_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>loans_max_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>loans_avg_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>71</th>\n      <td>consfin_credit_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>72</th>\n      <td>consfin_credibility</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>consfin_org_count_current</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>74</th>\n      <td>consfin_product_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>75</th>\n      <td>consfin_max_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>consfin_avg_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>latest_query_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>78</th>\n      <td>loans_latest_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>79</th>\n      <td>query_finance_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>80</th>\n      <td>query_cash_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>per_avg_amount</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>avg_amount_perday</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>83 rows × 2 columns</p>\n</div>\n\n\n\n### 基于 L1 的特征选取\n\n\n```python\nfrom sklearn.svm import LinearSVC\nfrom sklearn.feature_selection import SelectFromModel\n\nlsvc = LinearSVC(C=0.01, penalty=\"l1\", dual=False).fit(X, y)\nsp = SelectFromModel(lsvc, prefit=True)\nX_new = sp.transform(X)\n\n#输出结果\nsp.get_support()\n\npd.DataFrame({'columns':X.columns,'filter':sp.get_support()})\n```\n\n\n\n\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>columns</th>\n      <th>filter</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>low_volume_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>middle_volume_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>take_amount_in_later_12_month_highest</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>trans_amount_increase_rate_lately</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>trans_activity_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>trans_activity_day</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>transd_mcc</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>trans_days_interval_filter</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>trans_days_interval</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>regional_mobility</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>repayment_capability</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>is_high_user</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>number_of_trans_from_2011</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>historical_trans_amount</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>historical_trans_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>rank_trad_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>trans_amount_3_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>avg_consume_less_12_valid_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>abs</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>top_trans_count_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>avg_price_last_12_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>avg_price_top_last_12_valid_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>reg_preference_for_trad</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>trans_top_time_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>trans_top_time_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>consume_top_time_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>consume_top_time_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>cross_consume_count_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>trans_fail_top_count_enum_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>trans_fail_top_count_enum_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>loans_overdue_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>loans_org_count_behavior</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>consfin_org_count_behavior</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>loans_cash_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>latest_one_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>latest_three_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>latest_six_month_loan</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>history_suc_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>history_fail_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>latest_one_month_suc</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>latest_one_month_fail</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>64</th>\n      <td>loans_long_time</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>loans_credit_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>loans_credibility_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>loans_org_count_current</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>68</th>\n      <td>loans_product_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>loans_max_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>loans_avg_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>71</th>\n      <td>consfin_credit_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>72</th>\n      <td>consfin_credibility</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>consfin_org_count_current</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>74</th>\n      <td>consfin_product_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>75</th>\n      <td>consfin_max_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>consfin_avg_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>latest_query_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>78</th>\n      <td>loans_latest_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>79</th>\n      <td>query_finance_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>80</th>\n      <td>query_cash_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>per_avg_amount</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>avg_amount_perday</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>83 rows × 2 columns</p>\n</div>\n\n\n\n### 基于决策树的特征选取\n\n\n```python\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.feature_selection import SelectFromModel\n\nforest = DecisionTreeClassifier(criterion='entropy').fit(X, y)\nsp = SelectFromModel(forest, prefit=True)\nX_new = sp.transform(X)\n\n#输出结果\nsp.get_support()\n\npd.DataFrame({'columns':X.columns,'filter':sp.get_support()})\n```\n\n\n\n\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>columns</th>\n      <th>filter</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>low_volume_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>middle_volume_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>take_amount_in_later_12_month_highest</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>trans_amount_increase_rate_lately</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>trans_activity_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>trans_activity_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>transd_mcc</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>trans_days_interval_filter</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>trans_days_interval</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>regional_mobility</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>repayment_capability</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>is_high_user</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>number_of_trans_from_2011</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>historical_trans_amount</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>historical_trans_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>rank_trad_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>trans_amount_3_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>avg_consume_less_12_valid_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>abs</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>top_trans_count_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>avg_price_last_12_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>avg_price_top_last_12_valid_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>reg_preference_for_trad</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>trans_top_time_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>trans_top_time_last_6_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>consume_top_time_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>consume_top_time_last_6_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>cross_consume_count_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>trans_fail_top_count_enum_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>trans_fail_top_count_enum_last_6_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>loans_overdue_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>loans_org_count_behavior</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>consfin_org_count_behavior</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>loans_cash_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>latest_one_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>latest_three_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>latest_six_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>history_suc_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>history_fail_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>latest_one_month_suc</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>latest_one_month_fail</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>64</th>\n      <td>loans_long_time</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>loans_credit_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>loans_credibility_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>loans_org_count_current</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>68</th>\n      <td>loans_product_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>loans_max_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>loans_avg_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>71</th>\n      <td>consfin_credit_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>72</th>\n      <td>consfin_credibility</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>consfin_org_count_current</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>74</th>\n      <td>consfin_product_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>75</th>\n      <td>consfin_max_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>consfin_avg_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>latest_query_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>78</th>\n      <td>loans_latest_day</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>79</th>\n      <td>query_finance_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>80</th>\n      <td>query_cash_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>per_avg_amount</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>avg_amount_perday</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>83 rows × 2 columns</p>\n</div>\n\n\n\n\n```python\n#输出特征排序\nimportance = forest.feature_importances_\nimp_result = np.argsort(importance)[::-1]\n\npd.DataFrame({'columns':X.columns,'filter':sp.get_support(),'importance':imp_result}).sort_values(\"importance\",ascending=True)\n```\n\n\n\n\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>columns</th>\n      <th>filter</th>\n      <th>importance</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>63</th>\n      <td>latest_one_month_fail</td>\n      <td>True</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>trans_fail_top_count_enum_last_12_month</td>\n      <td>False</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>consume_top_time_last_1_month</td>\n      <td>False</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>trans_fail_top_count_enum_last_6_month</td>\n      <td>False</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>trans_days_interval</td>\n      <td>True</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>top_trans_count_last_1_month</td>\n      <td>False</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>abs</td>\n      <td>True</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>loans_overdue_count</td>\n      <td>False</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>avg_price_top_last_12_valid_month</td>\n      <td>False</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>consfin_org_count_behavior</td>\n      <td>False</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>regional_mobility</td>\n      <td>False</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>latest_query_day</td>\n      <td>True</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>trans_top_time_last_6_month</td>\n      <td>False</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>74</th>\n      <td>consfin_product_count</td>\n      <td>False</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>trans_fail_top_count_enum_last_1_month</td>\n      <td>True</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>37</th>\n      <td>jewelry_consume_count_last_6_month</td>\n      <td>False</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>transd_mcc</td>\n      <td>True</td>\n      <td>16</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>loans_max_limit</td>\n      <td>False</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>trans_activity_month</td>\n      <td>True</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>loans_org_count_current</td>\n      <td>False</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>max_cumulative_consume_later_1_month</td>\n      <td>True</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>75</th>\n      <td>consfin_max_limit</td>\n      <td>True</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>loans_credit_limit</td>\n      <td>False</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>query_cash_count</td>\n      <td>False</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>latest_one_month_loan</td>\n      <td>False</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>trans_day_last_12_month</td>\n      <td>True</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>max_consume_count_later_6_month</td>\n      <td>False</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>avg_amount_perday</td>\n      <td>True</td>\n      <td>27</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>low_volume_percent</td>\n      <td>False</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>latest_six_month_loan</td>\n      <td>False</td>\n      <td>29</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>loans_count</td>\n      <td>False</td>\n      <td>53</td>\n    </tr>\n    <tr>\n      <th>47</th>\n      <td>latest_three_month_apply</td>\n      <td>False</td>\n      <td>54</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>latest_three_month_loan</td>\n      <td>False</td>\n      <td>55</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>consfin_org_count_current</td>\n      <td>False</td>\n      <td>56</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>per_avg_amount</td>\n      <td>True</td>\n      <td>57</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>loans_avg_limit</td>\n      <td>False</td>\n      <td>58</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>loans_cash_count</td>\n      <td>False</td>\n      <td>59</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>historical_trans_day</td>\n      <td>True</td>\n      <td>60</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>middle_volume_percent</td>\n      <td>True</td>\n      <td>61</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>pawns_auctions_trusts_consume_last_6_month</td>\n      <td>True</td>\n      <td>62</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>trans_amount_3_month</td>\n      <td>True</td>\n      <td>63</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>trans_amount_increase_rate_lately</td>\n      <td>True</td>\n      <td>64</td>\n    </tr>\n    <tr>\n      <th>42</th>\n      <td>query_org_count</td>\n      <td>False</td>\n      <td>65</td>\n    </tr>\n    <tr>\n      <th>50</th>\n      <td>loans_credibility_behavior</td>\n      <td>False</td>\n      <td>66</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>latest_one_month_suc</td>\n      <td>False</td>\n      <td>67</td>\n    </tr>\n    <tr>\n      <th>41</th>\n      <td>apply_credibility</td>\n      <td>False</td>\n      <td>68</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>query_finance_count</td>\n      <td>False</td>\n      <td>69</td>\n    </tr>\n    <tr>\n      <th>48</th>\n      <td>latest_six_month_apply</td>\n      <td>True</td>\n      <td>70</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>railway_consume_count_last_12_month</td>\n      <td>False</td>\n      <td>71</td>\n    </tr>\n    <tr>\n      <th>45</th>\n      <td>query_sum_count</td>\n      <td>False</td>\n      <td>72</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>consfin_avg_limit</td>\n      <td>False</td>\n      <td>73</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>history_suc_fee</td>\n      <td>True</td>\n      <td>74</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>reg_preference_for_trad</td>\n      <td>False</td>\n      <td>75</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>loans_credibility_limit</td>\n      <td>False</td>\n      <td>76</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>cross_consume_count_last_1_month</td>\n      <td>False</td>\n      <td>77</td>\n    </tr>\n    <tr>\n      <th>38</th>\n      <td>first_transaction_day</td>\n      <td>False</td>\n      <td>78</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>number_of_trans_from_2011</td>\n      <td>True</td>\n      <td>79</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>historical_trans_amount</td>\n      <td>False</td>\n      <td>80</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>repayment_capability</td>\n      <td>True</td>\n      <td>81</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>trans_activity_day</td>\n      <td>True</td>\n      <td>82</td>\n    </tr>\n  </tbody>\n</table>\n<p>83 rows × 3 columns</p>\n</div>\n\n\n\n### WOE\n\n全称是“Weight of Evidence”，即证据权重。WOE是对原始自变量的一种编码形式。\n要对一个变量进行WOE编码，需要首先把这个变量进行分组处理（也叫离散化、分箱等等，说的都是一个意思）。分组后，对于第i组，WOE的计算公式如下：\n\n其中，pyi是这个组中响应客户（风险模型中，对应的是违约客户，总之，指的是模型中预测变量取值为“是”或者说1的个体）占所有样本中所有响应客户的比例，pni是这个组中未响应客户占样本中所有未响应客户的比例，#yi是这个组中响应客户的数量，#ni是这个组中未响应客户的数量，#yT是样本中所有响应客户的数量，#nT是样本中所有未响应客户的数量。\n\n从这个公式中我们可以体会到，WOE表示的实际上是“当前分组中响应客户占所有响应客户的比例”和“当前分组中没有响应的客户占所有没有响应的客户的比例”的差异。\n\n对这个公式做一个简单变换，可以得到：\n\n变换以后我们可以看出，WOE也可以这么理解，他表示的是当前这个组中响应的客户和未响应客户的比值，和所有样本中这个比值的差异。这个差异是用这两个比值的比值，再取对数来表示的。WOE越大，这种差异越大，这个分组里的样本响应的可能性就越大，WOE越小，差异越小，这个分组里的样本响应的可能性就越小。\n\n### IV\n\nIV的全称是Information Value，中文意思是信息价值，或者信息量。\n\n我们在用逻辑回归、决策树等模型方法构建分类模型时，经常需要对自变量进行筛选。比如我们有200个候选自变量，通常情况下，不会直接把200个变量直接放到模型中去进行拟合训练，而是会用一些方法，从这200个自变量中挑选一些出来，放进模型，形成入模变量列表。那么我们怎么去挑选入模变量呢？\n\n挑选入模变量过程是个比较复杂的过程，需要考虑的因素很多，比如：变量的预测能力，变量之间的相关性，变量的简单性（容易生成和使用），变量的强壮性（不容易被绕过），变量在业务上的可解释性（被挑战时可以解释的通）等等。但是，其中最主要和最直接的衡量标准是变量的预测能力。\n\n“变量的预测能力”这个说法很笼统，很主观，非量化，在筛选变量的时候我们总不能说：“我觉得这个变量预测能力很强，所以他要进入模型”吧？我们需要一些具体的量化指标来衡量每自变量的预测能力，并根据这些量化指标的大小，来确定哪些变量进入模型。IV就是这样一种指标，他可以用来衡量自变量的预测能力。类似的指标还有信息增益、基尼系数等等。\n\n从直观逻辑上大体可以这样理解“用IV去衡量变量预测能力”这件事情：我们假设在一个分类问题中，目标变量的类别有两类：Y1，Y2。对于一个待预测的个体A，要判断A属于Y1还是Y2，我们是需要一定的信息的，假设这个信息总量是I，而这些所需要的信息，就蕴含在所有的自变量C1，C2，C3，……，Cn中，那么，对于其中的一个变量Ci来说，其蕴含的信息越多，那么它对于判断A属于Y1还是Y2的贡献就越大，Ci的信息价值就越大，Ci的IV就越大，它就越应该进入到入模变量列表中。\n\nIVi无论等于负无穷还是正无穷，都是没有意义的。\n\n使用IV其实有一个缺点，就是不能自动处理变量的分组中出现响应比例为0或100%的情况。那么，遇到响应比例为0或者100%的情况，我们应该怎么做呢？建议如下：\n\n1. 如果可能，直接把这个分组做成一个规则，作为模型的前置条件或补充条件\n2. 重新对变量进行离散化或分组，使每个分组的响应比例都不为0且不为100%，尤其是当一个分组个体数很小时（比如小于100个），强烈建议这样做，因为本身把一个分组个体数弄得很小就不是太合理\n3. 如果上面两种方法都无法使用，建议人工把该分组的响应数和非响应的数量进行一定的调整。如果响应数原本为0，可以人工调整响应数为1，如果非响应数原本为0，可以人工调整非响应数为1\n\n\n```python\npd.DataFrame([[\"<0.03\",\"无预测能力\"],\n[\"0.03-0.09\",\"低\"],\n[\"0.1-0.29\",\"中\"],\n[\"0.3-0.49\",\"高\"],\n[\">=0.5\",\"极高且可疑\"],], columns = [\"IV\",\"预测能力\"])\n```\n\n\n\n\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>IV</th>\n      <th>预测能力</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>&lt;0.03</td>\n      <td>无预测能力</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.03-0.09</td>\n      <td>低</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.1-0.29</td>\n      <td>中</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.3-0.49</td>\n      <td>高</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>&gt;=0.5</td>\n      <td>极高且可疑</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\ndef CalcIV(Xvar,Yvar):\n    N_0=np.sum(Yvar==0)\n    N_1=np.sum(Yvar==1)\n    N_0_group=np.zeros(np.unique(Xvar).shape)\n    \n    N_1_group=np.zeros(np.unique(Xvar).shape)\n    for i in range(len(np.unique(Xvar))):\n        N_0_group[i] = Yvar[(Xvar==np.unique(Xvar)[i])&(Yvar==0)].count()\n        N_1_group[i] = Yvar[(Xvar==np.unique(Xvar)[i])&(Yvar==1)].count()\n    iv = np.sum((N_0_group/N_0-N_1_group/N_1)*np.log((N_0_group/N_0)/(N_1_group/N_1)))\n    if iv>=1.0:## 处理极端值\n        iv=1\n    return iv\n\ndef caliv_batch(df,Yvar):\n    ivlist=[]\n    for col in df.columns:\n        iv=CalcIV(df[col],Yvar)\n        ivlist.append(iv)\n    names=list(df.columns)\n    iv_df=pd.DataFrame({'Var':names,'Iv':ivlist},columns=['Var','Iv'])\n\n    return iv_df,ivlist\n\nim_iv, ivl = caliv_batch(X,y)\n```\n\n\n```python\nim_iv['Iv'].describe()\n```\n\n\n\n\n    count    83.000000\n    mean      0.930759\n    std       0.249840\n    min       0.005614\n    25%       1.000000\n    50%       1.000000\n    75%       1.000000\n    max       1.000000\n    Name: Iv, dtype: float64\n\n\n\n\n```python\nthreshold = 0.02\nthreshold2 = 0.6\ndata_index=[]\nfor i in range(len(ivl)):\n    if (im_iv['Iv'][i]< threshold)|(im_iv['Iv'][i] > threshold2):\n        data_index.append(im_iv['Var'][i])\ndatafinal_IV = df.drop(data_index,axis=1)\n```\n\n\n```python\ndatafinal_IV.columns\n```\n\n\n\n\n    Index(['rank_trad_1_month', 'top_trans_count_last_1_month', 'status',\n           'consfin_product_count'],\n          dtype='object')\n\n\n\n\n```python\nx_train_IV = datafinal_IV.iloc[:,:-1]\ny_train_IV = datafinal_IV.iloc[:,-1]\n```\n\n> 参考：\n\n1. [DataWhale数据挖掘实战营](https://github.com/datawhalechina/Datawhale_Learning/tree/master/doc/%E7%90%86%E8%AE%BA%E5%BA%94%E7%94%A8/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98)\n2. [python数据预处理 ：数据共线性处理](https://blog.csdn.net/tonydz0523/article/details/84404261)\n3. [特征选择 (feature_selection)](https://www.cnblogs.com/stevenlk/p/6543628.html)\n4. [评分卡模型中的IV和WOE详解](https://blog.csdn.net/shenxiaoming77/article/details/78771698)\n","source":"_posts/2019-08-04_特征工程.md","raw":"---\ntitle: 特征工程\ncategories:\n  - 统计与机器学习\n  - 其他\nmathjax: false\nabbrlink: 17541\ndate: 2019-08-04 00:00:00\n---\n\n## 数据集载入\n\n\n```python\n# -*- coding: utf-8 -*-\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\ndf = pd.read_csv(u\"2019-08-01_金融数据描述_data1.csv\",encoding = 'gbk')\n```\n\n\n```python\ndf.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 4754 entries, 0 to 4753\n    Data columns (total 90 columns):\n    Unnamed: 0                                    4754 non-null int64\n    custid                                        4754 non-null int64\n    trade_no                                      4754 non-null object\n    bank_card_no                                  4754 non-null object\n    low_volume_percent                            4752 non-null float64\n    middle_volume_percent                         4752 non-null float64\n    take_amount_in_later_12_month_highest         4754 non-null int64\n    trans_amount_increase_rate_lately             4751 non-null float64\n    trans_activity_month                          4752 non-null float64\n    trans_activity_day                            4752 non-null float64\n    transd_mcc                                    4752 non-null float64\n    trans_days_interval_filter                    4746 non-null float64\n    trans_days_interval                           4752 non-null float64\n    regional_mobility                             4752 non-null float64\n    student_feature                               1756 non-null float64\n    repayment_capability                          4754 non-null int64\n    is_high_user                                  4754 non-null int64\n    number_of_trans_from_2011                     4752 non-null float64\n    first_transaction_time                        4752 non-null float64\n    historical_trans_amount                       4754 non-null int64\n    historical_trans_day                          4752 non-null float64\n    rank_trad_1_month                             4752 non-null float64\n    trans_amount_3_month                          4754 non-null int64\n    avg_consume_less_12_valid_month               4752 non-null float64\n    abs                                           4754 non-null int64\n    top_trans_count_last_1_month                  4752 non-null float64\n    avg_price_last_12_month                       4754 non-null int64\n    avg_price_top_last_12_valid_month             4650 non-null float64\n    reg_preference_for_trad                       4752 non-null object\n    trans_top_time_last_1_month                   4746 non-null float64\n    trans_top_time_last_6_month                   4746 non-null float64\n    consume_top_time_last_1_month                 4746 non-null float64\n    consume_top_time_last_6_month                 4746 non-null float64\n    cross_consume_count_last_1_month              4328 non-null float64\n    trans_fail_top_count_enum_last_1_month        4738 non-null float64\n    trans_fail_top_count_enum_last_6_month        4738 non-null float64\n    trans_fail_top_count_enum_last_12_month       4738 non-null float64\n    consume_mini_time_last_1_month                4728 non-null float64\n    max_cumulative_consume_later_1_month          4754 non-null int64\n    max_consume_count_later_6_month               4746 non-null float64\n    railway_consume_count_last_12_month           4742 non-null float64\n    pawns_auctions_trusts_consume_last_1_month    4754 non-null int64\n    pawns_auctions_trusts_consume_last_6_month    4754 non-null int64\n    jewelry_consume_count_last_6_month            4742 non-null float64\n    status                                        4754 non-null int64\n    source                                        4754 non-null object\n    first_transaction_day                         4752 non-null float64\n    trans_day_last_12_month                       4752 non-null float64\n    id_name                                       4478 non-null object\n    apply_score                                   4450 non-null float64\n    apply_credibility                             4450 non-null float64\n    query_org_count                               4450 non-null float64\n    query_finance_count                           4450 non-null float64\n    query_cash_count                              4450 non-null float64\n    query_sum_count                               4450 non-null float64\n    latest_query_time                             4450 non-null object\n    latest_one_month_apply                        4450 non-null float64\n    latest_three_month_apply                      4450 non-null float64\n    latest_six_month_apply                        4450 non-null float64\n    loans_score                                   4457 non-null float64\n    loans_credibility_behavior                    4457 non-null float64\n    loans_count                                   4457 non-null float64\n    loans_settle_count                            4457 non-null float64\n    loans_overdue_count                           4457 non-null float64\n    loans_org_count_behavior                      4457 non-null float64\n    consfin_org_count_behavior                    4457 non-null float64\n    loans_cash_count                              4457 non-null float64\n    latest_one_month_loan                         4457 non-null float64\n    latest_three_month_loan                       4457 non-null float64\n    latest_six_month_loan                         4457 non-null float64\n    history_suc_fee                               4457 non-null float64\n    history_fail_fee                              4457 non-null float64\n    latest_one_month_suc                          4457 non-null float64\n    latest_one_month_fail                         4457 non-null float64\n    loans_long_time                               4457 non-null float64\n    loans_latest_time                             4457 non-null object\n    loans_credit_limit                            4457 non-null float64\n    loans_credibility_limit                       4457 non-null float64\n    loans_org_count_current                       4457 non-null float64\n    loans_product_count                           4457 non-null float64\n    loans_max_limit                               4457 non-null float64\n    loans_avg_limit                               4457 non-null float64\n    consfin_credit_limit                          4457 non-null float64\n    consfin_credibility                           4457 non-null float64\n    consfin_org_count_current                     4457 non-null float64\n    consfin_product_count                         4457 non-null float64\n    consfin_max_limit                             4457 non-null float64\n    consfin_avg_limit                             4457 non-null float64\n    latest_query_day                              4450 non-null float64\n    loans_latest_day                              4457 non-null float64\n    dtypes: float64(70), int64(13), object(7)\n    memory usage: 3.3+ MB\n\n\n## 特征预处理\n\n### 删除无用\n\n\n```python\ndelete = ['Unnamed: 0', 'custid', 'trade_no', 'bank_card_no','id_name','latest_query_time','source','loans_latest_time','first_transaction_time', 'student_feature']\ndf = df.drop(delete,axis=1)\n```\n\n### 处理分类型特征\n\n\n```python\nfrom sklearn.preprocessing import LabelEncoder\ndf['reg_preference_for_trad'] = LabelEncoder().fit_transform(df['reg_preference_for_trad'].astype(str))\n```\n\n### 使用众数填充\n\n\n```python\nfrom sklearn.preprocessing import Imputer\nfor i in range(df.shape[1]):\n    feature = df.iloc[:,i].values.reshape(-1,1)\n    imp_mode = Imputer(strategy='most_frequent')\n    df.iloc[:,i] = imp_mode.fit_transform(feature)\n```\n\n## 特征衍生/升维\n\n特征衍生是指用原始数据进行特征学习得到新的特征。衍生特征一般有两种原因引起的：数据自身的变化，使数据中出现很多原来没有的特征；进行特征学习时，算法根据特征之间的某种关系，产生了衍生特征，有时衍生特征更能反应数据特征之间的关系 。衍生特征也要求机器学习和深度学习算法拥有更强的学习能力，即增量学习、在线学习、迁移学习。\n\n衍生特征相对于原始特征能够更好的反映特征与数据的关系，因此对于某些数据来说这是极为重要的一个步骤。观察本数据，发现可以从衍生出以下几个特征，而如 latest_one_month_suc、latest_one_month_fail、latest_six_month_loan 都是处理好的特征：\n\n1. 查询内容占比\n\n\n```python\ndf['query_finance_percent'] = df['query_finance_count'] / df['query_sum_count']\ndf['query_cash_percent'] = df['query_cash_count'] / df['query_sum_count']\n```\n\n2. 每单平均交易量\n\n\n```python\ndf['per_avg_amount'] = df['historical_trans_amount'] / df['number_of_trans_from_2011']\n```\n\n3. 每天平均交易量\n\n\n```python\ndf['avg_amount_perday'] = df['historical_trans_amount'] / df['historical_trans_day']\n```\n\n## 特征筛选/降维\n\n特征选择( Feature Selection )也称特征子集选择( Feature Subset Selection , FSS )，或属性选择( Attribute Selection )。是指从已有的M个特征(Feature)中选择N个特征使得系统的特定指标最优化，是从原始特征中选择出一些最有效特征以降低数据集维度的过程,是提高学习算法性能的一个重要手段,也是模式识别中关键的数据预处理步骤。对于一个学习算法来说,好的学习样本是训练模型的关键。\n\n### 共线性分析\n\n共线性问题指的是输入的自变量之间存在较高的线性相关度。共线性问题会导致回归模型的稳定性和准确性大大降低，另外，过多无关的维度计算也很浪费时间。\n\n变量出现共线性的原因：\n\n- 数据样本不够，导致共线性存在偶然性，这其实反映了缺少数据对于数据建模的影响，共线性仅仅是影响的一部分\n- 多个变量都给予时间有共同或相反的演变趋势，例如春节期间的网络销售量和销售额都相对与正常时间有下降趋势。\n- 多个变量存在一定的推移关系，但总体上变量间的趋势一致，只是发生的时间点不一致，例如广告费用和销售额之间，通常是品牌广告先进行大范围的曝光和信息推送，经过一定时间传播之后，才会在销售额上做出反映。\n- 多变量之间存在线性的关系。例如y代表访客数，用x代表展示广告费用，那么二者的关系很可能是y=2*x + b\n\n如何检验共线性：\n\n- 容忍度（Tolerance）：容忍度是每个自变量作为因变量对其他自变量进行回归建模时得到的残差比例，大小用1减得到的决定系数来表示。容忍度值越小说明这个自变量与其他自变量间越可能存在共线性问题。\n- 方差膨胀因子：VIF是容忍度的倒数，值越大则共线性问题越明显，通常以10作为判断边界。当VIF<10,不存在多重共线性；当10<=VIF<100,存在较强的多重共线性；当VIF>=100, 存在严重多重共线性。\n- 特征值（Eigenvalue）：该方法实际上就是对自变量做主成分分析，如果多个维度的特征值等于0，则可能有比较严重的共线性。\n- 相关系数：如果相关系数R>0.8时就可能存在较强相关性\n\n如何处理共线性：\n\n- 增大样本量：增大样本量可以消除犹豫数据量不足而出现的偶然的共线性现象，在可行的前提下这种方法是需要优先考虑的\n- 岭回归法（Ridge Regression）：实际上是一种改良最小二乘估计法。通过放弃最小二乘法的无偏性，以损失部分信息、降低精度为代价来获得更实际和可靠性更强的回归系数。因此岭回归在存在较强共线性的回归应用中较为常用。\n- 逐步回归法（Stepwise Regression）:每次引入一个自变量进行统计检验，然后逐步引入其他变量，同时对所有变量的回归系数进行检验，如果原来引入的变量由于后面变量的引入而变得不再显著，那么久将其剔除，逐步得到最有回归方程。\n- 主成分回归（Principal Components Regression）:通过主成分分析，将原始参与建模的变量转换为少数几个主成分，么个主成分是原变量的线性组合，然后基于主成分做回归分析，这样也可以在不丢失重要数据特征的前提下避开共线性问题。\n- 人工去除：结合人工经验，对自变量进行删减，但是对操作者的业务能力、经验有很高的要求。\n\n\n```python\ncorr_matrix = df.corr()\ncorr_matrix = corr_matrix.unstack()\ncorr_matrix[(abs(corr_matrix)>0.8) & (abs(corr_matrix) != 1)]\n```\n\n\n\n\n    trans_activity_day                       historical_trans_day                       0.855777\n    historical_trans_amount                  per_avg_amount                             0.870396\n    historical_trans_day                     trans_activity_day                         0.855777\n    rank_trad_1_month                        top_trans_count_last_1_month               0.855890\n    top_trans_count_last_1_month             rank_trad_1_month                          0.855890\n    trans_top_time_last_1_month              consume_top_time_last_1_month              0.925978\n    trans_top_time_last_6_month              consume_top_time_last_6_month              0.921067\n    consume_top_time_last_1_month            trans_top_time_last_1_month                0.925978\n    consume_top_time_last_6_month            trans_top_time_last_6_month                0.921067\n    trans_fail_top_count_enum_last_6_month   trans_fail_top_count_enum_last_12_month    0.886180\n    trans_fail_top_count_enum_last_12_month  trans_fail_top_count_enum_last_6_month     0.886180\n    apply_score                              loans_score                                0.967695\n    query_org_count                          query_finance_count                        0.881597\n                                             query_cash_count                           0.850818\n                                             query_sum_count                            0.948918\n                                             latest_three_month_apply                   0.825973\n                                             latest_six_month_apply                     0.883612\n    query_finance_count                      query_org_count                            0.881597\n                                             query_sum_count                            0.858778\n                                             latest_six_month_apply                     0.817063\n    query_cash_count                         query_org_count                            0.850818\n                                             query_sum_count                            0.804468\n    query_sum_count                          query_org_count                            0.948918\n                                             query_finance_count                        0.858778\n                                             query_cash_count                           0.804468\n                                             latest_three_month_apply                   0.878368\n                                             latest_six_month_apply                     0.942820\n    latest_one_month_apply                   latest_three_month_apply                   0.873954\n                                             latest_six_month_apply                     0.810162\n    latest_three_month_apply                 query_org_count                            0.825973\n                                                                                          ...   \n    latest_six_month_loan                    loans_settle_count                         0.847959\n                                             loans_org_count_behavior                   0.840518\n                                             loans_cash_count                           0.804668\n                                             history_suc_fee                            0.805410\n                                             loans_org_count_current                    0.804668\n                                             loans_product_count                        0.808454\n    history_suc_fee                          loans_count                                0.911063\n                                             loans_settle_count                         0.930297\n                                             loans_org_count_behavior                   0.826103\n                                             latest_six_month_loan                      0.805410\n    loans_org_count_current                  loans_count                                0.892128\n                                             loans_settle_count                         0.874915\n                                             loans_org_count_behavior                   0.944990\n                                             latest_six_month_loan                      0.804668\n                                             loans_product_count                        0.993636\n    loans_product_count                      loans_count                                0.891898\n                                             loans_settle_count                         0.873971\n                                             loans_org_count_behavior                   0.939593\n                                             loans_cash_count                           0.993636\n                                             latest_six_month_loan                      0.808454\n                                             loans_org_count_current                    0.993636\n    consfin_credit_limit                     consfin_avg_limit                          0.910600\n    consfin_org_count_current                loans_org_count_behavior                   0.804413\n                                             consfin_product_count                      0.988156\n    consfin_product_count                    consfin_org_count_behavior                 0.988156\n                                             consfin_org_count_current                  0.988156\n    consfin_avg_limit                        consfin_credit_limit                       0.910600\n    per_avg_amount                           historical_trans_amount                    0.870396\n                                             avg_amount_perday                          0.850940\n    avg_amount_perday                        per_avg_amount                             0.850940\n    Length: 100, dtype: float64\n\n\n\n### 去掉方差较小的特征\n\n方差阈值（VarianceThreshold）是特征选择的一个简单方法，去掉那些方差没有达到阈值的特征。默认情况下，删除零方差的特征，例如那些只有一个值的样本。假设我们有一个有布尔特征的数据集，然后我们想去掉那些超过80%的样本都是0（或者1）的特征。布尔特征是伯努利随机变量，方差为 p(1-p)。\n\n\n```python\nX = df[:].drop(\"status\",axis=1)\ny = df[\"status\"]\n```\n\n\n```python\nfrom sklearn.feature_selection import VarianceThreshold\n\n#得到返回至少含有90%特征信息的特征\nsp = VarianceThreshold(threshold=0.8 * 0.2).fit(X, y)\n\n#可以看到哪些特征被保留\nX_result = sp.fit_transform(X, y)\n\n#输出结果\nsp.get_support()\n```\n\n\n\n\n    array([False, False,  True,  True, False, False,  True,  True,  True,\n            True,  True, False,  True,  True,  True, False,  True,  True,\n            True, False,  True, False,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True,  True,  True,\n            True, False,  True,  True,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True, False, False,\n            True,  True], dtype=bool)\n\n\n\n\n```python\nfrom sklearn.feature_selection import VarianceThreshold\n\n#得到返回至少含有90%特征信息的特征\nsp = VarianceThreshold(threshold=0.8 * 0.2).fit(X, y)\n\n#可以看到哪些特征被保留\nX_result = sp.fit_transform(X, y)\n\n#输出结果\nsp.get_support()\n```\n\n\n\n\n    array([False, False,  True,  True, False, False,  True,  True,  True,\n            True,  True, False,  True,  True,  True, False,  True,  True,\n            True, False,  True, False,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True,  True,  True,\n            True, False,  True,  True,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True,  True,  True,\n            True,  True,  True,  True,  True,  True,  True, False, False,\n            True,  True], dtype=bool)\n\n\n\n### 单变量特征选择\n\n单变量的特征选择是通过基于单变量的统计测试来选择最好的特征，它可以当做是评估器的预处理步骤。\n\nScikit-learn 将特征选择的内容作为实现了 transform 方法的对象\n\n1. SelectKBest移除那些除了评分最高的 K 个特征之外的所有特征\n2. SelectPercentile移除除了用户指定的最高得分百分比之外的所有特征\n\n这些对象将得分函数作为输入，返回单变量的得分和 p 值:\n\n对于回归: f_regression , mutual_info_regression\n对于分类: chi2 , f_classif , mutual_info_classif 可自行查看官网API文档。\n\n\n```python\nfrom sklearn.feature_selection import SelectKBest, SelectPercentile, f_classif\n\n#得到返回至少含有90%特征信息的特征\nsp = SelectPercentile(f_classif, percentile= 90)\n\n#可以看到哪些特征被保留\nX_result = sp.fit_transform(X, y)\n\n#输出结果\nsp.get_support()\n\npd.DataFrame({'columns':X.columns,'filter':sp.get_support()})\n```\n\n\n\n\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>columns</th>\n      <th>filter</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>low_volume_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>middle_volume_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>take_amount_in_later_12_month_highest</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>trans_amount_increase_rate_lately</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>trans_activity_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>trans_activity_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>transd_mcc</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>trans_days_interval_filter</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>trans_days_interval</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>regional_mobility</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>repayment_capability</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>is_high_user</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>number_of_trans_from_2011</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>historical_trans_amount</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>historical_trans_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>rank_trad_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>trans_amount_3_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>avg_consume_less_12_valid_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>abs</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>top_trans_count_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>avg_price_last_12_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>avg_price_top_last_12_valid_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>reg_preference_for_trad</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>trans_top_time_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>trans_top_time_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>consume_top_time_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>consume_top_time_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>cross_consume_count_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>trans_fail_top_count_enum_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>trans_fail_top_count_enum_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>loans_overdue_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>loans_org_count_behavior</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>consfin_org_count_behavior</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>loans_cash_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>latest_one_month_loan</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>latest_three_month_loan</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>latest_six_month_loan</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>history_suc_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>history_fail_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>latest_one_month_suc</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>latest_one_month_fail</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>64</th>\n      <td>loans_long_time</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>loans_credit_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>loans_credibility_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>loans_org_count_current</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>68</th>\n      <td>loans_product_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>loans_max_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>loans_avg_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>71</th>\n      <td>consfin_credit_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>72</th>\n      <td>consfin_credibility</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>consfin_org_count_current</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>74</th>\n      <td>consfin_product_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>75</th>\n      <td>consfin_max_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>consfin_avg_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>latest_query_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>78</th>\n      <td>loans_latest_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>79</th>\n      <td>query_finance_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>80</th>\n      <td>query_cash_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>per_avg_amount</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>avg_amount_perday</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>83 rows × 2 columns</p>\n</div>\n\n\n\n### 基于 L1 的特征选取\n\n\n```python\nfrom sklearn.svm import LinearSVC\nfrom sklearn.feature_selection import SelectFromModel\n\nlsvc = LinearSVC(C=0.01, penalty=\"l1\", dual=False).fit(X, y)\nsp = SelectFromModel(lsvc, prefit=True)\nX_new = sp.transform(X)\n\n#输出结果\nsp.get_support()\n\npd.DataFrame({'columns':X.columns,'filter':sp.get_support()})\n```\n\n\n\n\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>columns</th>\n      <th>filter</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>low_volume_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>middle_volume_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>take_amount_in_later_12_month_highest</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>trans_amount_increase_rate_lately</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>trans_activity_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>trans_activity_day</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>transd_mcc</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>trans_days_interval_filter</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>trans_days_interval</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>regional_mobility</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>repayment_capability</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>is_high_user</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>number_of_trans_from_2011</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>historical_trans_amount</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>historical_trans_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>rank_trad_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>trans_amount_3_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>avg_consume_less_12_valid_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>abs</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>top_trans_count_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>avg_price_last_12_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>avg_price_top_last_12_valid_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>reg_preference_for_trad</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>trans_top_time_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>trans_top_time_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>consume_top_time_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>consume_top_time_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>cross_consume_count_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>trans_fail_top_count_enum_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>trans_fail_top_count_enum_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>loans_overdue_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>loans_org_count_behavior</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>consfin_org_count_behavior</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>loans_cash_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>latest_one_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>latest_three_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>latest_six_month_loan</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>history_suc_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>history_fail_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>latest_one_month_suc</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>latest_one_month_fail</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>64</th>\n      <td>loans_long_time</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>loans_credit_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>loans_credibility_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>loans_org_count_current</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>68</th>\n      <td>loans_product_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>loans_max_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>loans_avg_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>71</th>\n      <td>consfin_credit_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>72</th>\n      <td>consfin_credibility</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>consfin_org_count_current</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>74</th>\n      <td>consfin_product_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>75</th>\n      <td>consfin_max_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>consfin_avg_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>latest_query_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>78</th>\n      <td>loans_latest_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>79</th>\n      <td>query_finance_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>80</th>\n      <td>query_cash_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>per_avg_amount</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>avg_amount_perday</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>83 rows × 2 columns</p>\n</div>\n\n\n\n### 基于决策树的特征选取\n\n\n```python\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.feature_selection import SelectFromModel\n\nforest = DecisionTreeClassifier(criterion='entropy').fit(X, y)\nsp = SelectFromModel(forest, prefit=True)\nX_new = sp.transform(X)\n\n#输出结果\nsp.get_support()\n\npd.DataFrame({'columns':X.columns,'filter':sp.get_support()})\n```\n\n\n\n\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>columns</th>\n      <th>filter</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>low_volume_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>middle_volume_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>take_amount_in_later_12_month_highest</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>trans_amount_increase_rate_lately</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>trans_activity_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>trans_activity_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>transd_mcc</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>trans_days_interval_filter</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>trans_days_interval</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>regional_mobility</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>repayment_capability</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>is_high_user</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>number_of_trans_from_2011</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>historical_trans_amount</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>historical_trans_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>rank_trad_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>trans_amount_3_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>avg_consume_less_12_valid_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>abs</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>top_trans_count_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>avg_price_last_12_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>avg_price_top_last_12_valid_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>reg_preference_for_trad</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>trans_top_time_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>trans_top_time_last_6_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>consume_top_time_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>consume_top_time_last_6_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>cross_consume_count_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>trans_fail_top_count_enum_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>trans_fail_top_count_enum_last_6_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>loans_overdue_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>loans_org_count_behavior</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>consfin_org_count_behavior</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>loans_cash_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>latest_one_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>latest_three_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>latest_six_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>history_suc_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>history_fail_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>latest_one_month_suc</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>latest_one_month_fail</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>64</th>\n      <td>loans_long_time</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>loans_credit_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>loans_credibility_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>loans_org_count_current</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>68</th>\n      <td>loans_product_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>loans_max_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>loans_avg_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>71</th>\n      <td>consfin_credit_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>72</th>\n      <td>consfin_credibility</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>consfin_org_count_current</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>74</th>\n      <td>consfin_product_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>75</th>\n      <td>consfin_max_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>consfin_avg_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>latest_query_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>78</th>\n      <td>loans_latest_day</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>79</th>\n      <td>query_finance_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>80</th>\n      <td>query_cash_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>per_avg_amount</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>avg_amount_perday</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>83 rows × 2 columns</p>\n</div>\n\n\n\n\n```python\n#输出特征排序\nimportance = forest.feature_importances_\nimp_result = np.argsort(importance)[::-1]\n\npd.DataFrame({'columns':X.columns,'filter':sp.get_support(),'importance':imp_result}).sort_values(\"importance\",ascending=True)\n```\n\n\n\n\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>columns</th>\n      <th>filter</th>\n      <th>importance</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>63</th>\n      <td>latest_one_month_fail</td>\n      <td>True</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>trans_fail_top_count_enum_last_12_month</td>\n      <td>False</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>consume_top_time_last_1_month</td>\n      <td>False</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>trans_fail_top_count_enum_last_6_month</td>\n      <td>False</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>trans_days_interval</td>\n      <td>True</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>top_trans_count_last_1_month</td>\n      <td>False</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>abs</td>\n      <td>True</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>loans_overdue_count</td>\n      <td>False</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>avg_price_top_last_12_valid_month</td>\n      <td>False</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>consfin_org_count_behavior</td>\n      <td>False</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>regional_mobility</td>\n      <td>False</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>latest_query_day</td>\n      <td>True</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>trans_top_time_last_6_month</td>\n      <td>False</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>74</th>\n      <td>consfin_product_count</td>\n      <td>False</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>trans_fail_top_count_enum_last_1_month</td>\n      <td>True</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>37</th>\n      <td>jewelry_consume_count_last_6_month</td>\n      <td>False</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>transd_mcc</td>\n      <td>True</td>\n      <td>16</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>loans_max_limit</td>\n      <td>False</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>trans_activity_month</td>\n      <td>True</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>loans_org_count_current</td>\n      <td>False</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>max_cumulative_consume_later_1_month</td>\n      <td>True</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>75</th>\n      <td>consfin_max_limit</td>\n      <td>True</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>loans_credit_limit</td>\n      <td>False</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>query_cash_count</td>\n      <td>False</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>latest_one_month_loan</td>\n      <td>False</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>trans_day_last_12_month</td>\n      <td>True</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>max_consume_count_later_6_month</td>\n      <td>False</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>avg_amount_perday</td>\n      <td>True</td>\n      <td>27</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>low_volume_percent</td>\n      <td>False</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>latest_six_month_loan</td>\n      <td>False</td>\n      <td>29</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>loans_count</td>\n      <td>False</td>\n      <td>53</td>\n    </tr>\n    <tr>\n      <th>47</th>\n      <td>latest_three_month_apply</td>\n      <td>False</td>\n      <td>54</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>latest_three_month_loan</td>\n      <td>False</td>\n      <td>55</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>consfin_org_count_current</td>\n      <td>False</td>\n      <td>56</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>per_avg_amount</td>\n      <td>True</td>\n      <td>57</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>loans_avg_limit</td>\n      <td>False</td>\n      <td>58</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>loans_cash_count</td>\n      <td>False</td>\n      <td>59</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>historical_trans_day</td>\n      <td>True</td>\n      <td>60</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>middle_volume_percent</td>\n      <td>True</td>\n      <td>61</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>pawns_auctions_trusts_consume_last_6_month</td>\n      <td>True</td>\n      <td>62</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>trans_amount_3_month</td>\n      <td>True</td>\n      <td>63</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>trans_amount_increase_rate_lately</td>\n      <td>True</td>\n      <td>64</td>\n    </tr>\n    <tr>\n      <th>42</th>\n      <td>query_org_count</td>\n      <td>False</td>\n      <td>65</td>\n    </tr>\n    <tr>\n      <th>50</th>\n      <td>loans_credibility_behavior</td>\n      <td>False</td>\n      <td>66</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>latest_one_month_suc</td>\n      <td>False</td>\n      <td>67</td>\n    </tr>\n    <tr>\n      <th>41</th>\n      <td>apply_credibility</td>\n      <td>False</td>\n      <td>68</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>query_finance_count</td>\n      <td>False</td>\n      <td>69</td>\n    </tr>\n    <tr>\n      <th>48</th>\n      <td>latest_six_month_apply</td>\n      <td>True</td>\n      <td>70</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>railway_consume_count_last_12_month</td>\n      <td>False</td>\n      <td>71</td>\n    </tr>\n    <tr>\n      <th>45</th>\n      <td>query_sum_count</td>\n      <td>False</td>\n      <td>72</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>consfin_avg_limit</td>\n      <td>False</td>\n      <td>73</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>history_suc_fee</td>\n      <td>True</td>\n      <td>74</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>reg_preference_for_trad</td>\n      <td>False</td>\n      <td>75</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>loans_credibility_limit</td>\n      <td>False</td>\n      <td>76</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>cross_consume_count_last_1_month</td>\n      <td>False</td>\n      <td>77</td>\n    </tr>\n    <tr>\n      <th>38</th>\n      <td>first_transaction_day</td>\n      <td>False</td>\n      <td>78</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>number_of_trans_from_2011</td>\n      <td>True</td>\n      <td>79</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>historical_trans_amount</td>\n      <td>False</td>\n      <td>80</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>repayment_capability</td>\n      <td>True</td>\n      <td>81</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>trans_activity_day</td>\n      <td>True</td>\n      <td>82</td>\n    </tr>\n  </tbody>\n</table>\n<p>83 rows × 3 columns</p>\n</div>\n\n\n\n### WOE\n\n全称是“Weight of Evidence”，即证据权重。WOE是对原始自变量的一种编码形式。\n要对一个变量进行WOE编码，需要首先把这个变量进行分组处理（也叫离散化、分箱等等，说的都是一个意思）。分组后，对于第i组，WOE的计算公式如下：\n\n其中，pyi是这个组中响应客户（风险模型中，对应的是违约客户，总之，指的是模型中预测变量取值为“是”或者说1的个体）占所有样本中所有响应客户的比例，pni是这个组中未响应客户占样本中所有未响应客户的比例，#yi是这个组中响应客户的数量，#ni是这个组中未响应客户的数量，#yT是样本中所有响应客户的数量，#nT是样本中所有未响应客户的数量。\n\n从这个公式中我们可以体会到，WOE表示的实际上是“当前分组中响应客户占所有响应客户的比例”和“当前分组中没有响应的客户占所有没有响应的客户的比例”的差异。\n\n对这个公式做一个简单变换，可以得到：\n\n变换以后我们可以看出，WOE也可以这么理解，他表示的是当前这个组中响应的客户和未响应客户的比值，和所有样本中这个比值的差异。这个差异是用这两个比值的比值，再取对数来表示的。WOE越大，这种差异越大，这个分组里的样本响应的可能性就越大，WOE越小，差异越小，这个分组里的样本响应的可能性就越小。\n\n### IV\n\nIV的全称是Information Value，中文意思是信息价值，或者信息量。\n\n我们在用逻辑回归、决策树等模型方法构建分类模型时，经常需要对自变量进行筛选。比如我们有200个候选自变量，通常情况下，不会直接把200个变量直接放到模型中去进行拟合训练，而是会用一些方法，从这200个自变量中挑选一些出来，放进模型，形成入模变量列表。那么我们怎么去挑选入模变量呢？\n\n挑选入模变量过程是个比较复杂的过程，需要考虑的因素很多，比如：变量的预测能力，变量之间的相关性，变量的简单性（容易生成和使用），变量的强壮性（不容易被绕过），变量在业务上的可解释性（被挑战时可以解释的通）等等。但是，其中最主要和最直接的衡量标准是变量的预测能力。\n\n“变量的预测能力”这个说法很笼统，很主观，非量化，在筛选变量的时候我们总不能说：“我觉得这个变量预测能力很强，所以他要进入模型”吧？我们需要一些具体的量化指标来衡量每自变量的预测能力，并根据这些量化指标的大小，来确定哪些变量进入模型。IV就是这样一种指标，他可以用来衡量自变量的预测能力。类似的指标还有信息增益、基尼系数等等。\n\n从直观逻辑上大体可以这样理解“用IV去衡量变量预测能力”这件事情：我们假设在一个分类问题中，目标变量的类别有两类：Y1，Y2。对于一个待预测的个体A，要判断A属于Y1还是Y2，我们是需要一定的信息的，假设这个信息总量是I，而这些所需要的信息，就蕴含在所有的自变量C1，C2，C3，……，Cn中，那么，对于其中的一个变量Ci来说，其蕴含的信息越多，那么它对于判断A属于Y1还是Y2的贡献就越大，Ci的信息价值就越大，Ci的IV就越大，它就越应该进入到入模变量列表中。\n\nIVi无论等于负无穷还是正无穷，都是没有意义的。\n\n使用IV其实有一个缺点，就是不能自动处理变量的分组中出现响应比例为0或100%的情况。那么，遇到响应比例为0或者100%的情况，我们应该怎么做呢？建议如下：\n\n1. 如果可能，直接把这个分组做成一个规则，作为模型的前置条件或补充条件\n2. 重新对变量进行离散化或分组，使每个分组的响应比例都不为0且不为100%，尤其是当一个分组个体数很小时（比如小于100个），强烈建议这样做，因为本身把一个分组个体数弄得很小就不是太合理\n3. 如果上面两种方法都无法使用，建议人工把该分组的响应数和非响应的数量进行一定的调整。如果响应数原本为0，可以人工调整响应数为1，如果非响应数原本为0，可以人工调整非响应数为1\n\n\n```python\npd.DataFrame([[\"<0.03\",\"无预测能力\"],\n[\"0.03-0.09\",\"低\"],\n[\"0.1-0.29\",\"中\"],\n[\"0.3-0.49\",\"高\"],\n[\">=0.5\",\"极高且可疑\"],], columns = [\"IV\",\"预测能力\"])\n```\n\n\n\n\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>IV</th>\n      <th>预测能力</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>&lt;0.03</td>\n      <td>无预测能力</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.03-0.09</td>\n      <td>低</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.1-0.29</td>\n      <td>中</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.3-0.49</td>\n      <td>高</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>&gt;=0.5</td>\n      <td>极高且可疑</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\ndef CalcIV(Xvar,Yvar):\n    N_0=np.sum(Yvar==0)\n    N_1=np.sum(Yvar==1)\n    N_0_group=np.zeros(np.unique(Xvar).shape)\n    \n    N_1_group=np.zeros(np.unique(Xvar).shape)\n    for i in range(len(np.unique(Xvar))):\n        N_0_group[i] = Yvar[(Xvar==np.unique(Xvar)[i])&(Yvar==0)].count()\n        N_1_group[i] = Yvar[(Xvar==np.unique(Xvar)[i])&(Yvar==1)].count()\n    iv = np.sum((N_0_group/N_0-N_1_group/N_1)*np.log((N_0_group/N_0)/(N_1_group/N_1)))\n    if iv>=1.0:## 处理极端值\n        iv=1\n    return iv\n\ndef caliv_batch(df,Yvar):\n    ivlist=[]\n    for col in df.columns:\n        iv=CalcIV(df[col],Yvar)\n        ivlist.append(iv)\n    names=list(df.columns)\n    iv_df=pd.DataFrame({'Var':names,'Iv':ivlist},columns=['Var','Iv'])\n\n    return iv_df,ivlist\n\nim_iv, ivl = caliv_batch(X,y)\n```\n\n\n```python\nim_iv['Iv'].describe()\n```\n\n\n\n\n    count    83.000000\n    mean      0.930759\n    std       0.249840\n    min       0.005614\n    25%       1.000000\n    50%       1.000000\n    75%       1.000000\n    max       1.000000\n    Name: Iv, dtype: float64\n\n\n\n\n```python\nthreshold = 0.02\nthreshold2 = 0.6\ndata_index=[]\nfor i in range(len(ivl)):\n    if (im_iv['Iv'][i]< threshold)|(im_iv['Iv'][i] > threshold2):\n        data_index.append(im_iv['Var'][i])\ndatafinal_IV = df.drop(data_index,axis=1)\n```\n\n\n```python\ndatafinal_IV.columns\n```\n\n\n\n\n    Index(['rank_trad_1_month', 'top_trans_count_last_1_month', 'status',\n           'consfin_product_count'],\n          dtype='object')\n\n\n\n\n```python\nx_train_IV = datafinal_IV.iloc[:,:-1]\ny_train_IV = datafinal_IV.iloc[:,-1]\n```\n\n> 参考：\n\n1. [DataWhale数据挖掘实战营](https://github.com/datawhalechina/Datawhale_Learning/tree/master/doc/%E7%90%86%E8%AE%BA%E5%BA%94%E7%94%A8/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98)\n2. [python数据预处理 ：数据共线性处理](https://blog.csdn.net/tonydz0523/article/details/84404261)\n3. [特征选择 (feature_selection)](https://www.cnblogs.com/stevenlk/p/6543628.html)\n4. [评分卡模型中的IV和WOE详解](https://blog.csdn.net/shenxiaoming77/article/details/78771698)\n","slug":"2019-08-04_特征工程","published":1,"updated":"2021-04-06T13:50:49.382Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5rt002u9ohz89y8a0f7","content":"<h2 id=\"数据集载入\"><a href=\"#数据集载入\" class=\"headerlink\" title=\"数据集载入\"></a>数据集载入</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib <span class=\"keyword\">import</span> pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"><span class=\"keyword\">import</span> warnings</span><br><span class=\"line\">warnings.filterwarnings(<span class=\"string\">&#x27;ignore&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">u&quot;2019-08-01_金融数据描述_data1.csv&quot;</span>,encoding = <span class=\"string\">&#x27;gbk&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.info()</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 4754 entries, 0 to 4753\nData columns (total 90 columns):\nUnnamed: 0                                    4754 non-null int64\ncustid                                        4754 non-null int64\ntrade_no                                      4754 non-null object\nbank_card_no                                  4754 non-null object\nlow_volume_percent                            4752 non-null float64\nmiddle_volume_percent                         4752 non-null float64\ntake_amount_in_later_12_month_highest         4754 non-null int64\ntrans_amount_increase_rate_lately             4751 non-null float64\ntrans_activity_month                          4752 non-null float64\ntrans_activity_day                            4752 non-null float64\ntransd_mcc                                    4752 non-null float64\ntrans_days_interval_filter                    4746 non-null float64\ntrans_days_interval                           4752 non-null float64\nregional_mobility                             4752 non-null float64\nstudent_feature                               1756 non-null float64\nrepayment_capability                          4754 non-null int64\nis_high_user                                  4754 non-null int64\nnumber_of_trans_from_2011                     4752 non-null float64\nfirst_transaction_time                        4752 non-null float64\nhistorical_trans_amount                       4754 non-null int64\nhistorical_trans_day                          4752 non-null float64\nrank_trad_1_month                             4752 non-null float64\ntrans_amount_3_month                          4754 non-null int64\navg_consume_less_12_valid_month               4752 non-null float64\nabs                                           4754 non-null int64\ntop_trans_count_last_1_month                  4752 non-null float64\navg_price_last_12_month                       4754 non-null int64\navg_price_top_last_12_valid_month             4650 non-null float64\nreg_preference_for_trad                       4752 non-null object\ntrans_top_time_last_1_month                   4746 non-null float64\ntrans_top_time_last_6_month                   4746 non-null float64\nconsume_top_time_last_1_month                 4746 non-null float64\nconsume_top_time_last_6_month                 4746 non-null float64\ncross_consume_count_last_1_month              4328 non-null float64\ntrans_fail_top_count_enum_last_1_month        4738 non-null float64\ntrans_fail_top_count_enum_last_6_month        4738 non-null float64\ntrans_fail_top_count_enum_last_12_month       4738 non-null float64\nconsume_mini_time_last_1_month                4728 non-null float64\nmax_cumulative_consume_later_1_month          4754 non-null int64\nmax_consume_count_later_6_month               4746 non-null float64\nrailway_consume_count_last_12_month           4742 non-null float64\npawns_auctions_trusts_consume_last_1_month    4754 non-null int64\npawns_auctions_trusts_consume_last_6_month    4754 non-null int64\njewelry_consume_count_last_6_month            4742 non-null float64\nstatus                                        4754 non-null int64\nsource                                        4754 non-null object\nfirst_transaction_day                         4752 non-null float64\ntrans_day_last_12_month                       4752 non-null float64\nid_name                                       4478 non-null object\napply_score                                   4450 non-null float64\napply_credibility                             4450 non-null float64\nquery_org_count                               4450 non-null float64\nquery_finance_count                           4450 non-null float64\nquery_cash_count                              4450 non-null float64\nquery_sum_count                               4450 non-null float64\nlatest_query_time                             4450 non-null object\nlatest_one_month_apply                        4450 non-null float64\nlatest_three_month_apply                      4450 non-null float64\nlatest_six_month_apply                        4450 non-null float64\nloans_score                                   4457 non-null float64\nloans_credibility_behavior                    4457 non-null float64\nloans_count                                   4457 non-null float64\nloans_settle_count                            4457 non-null float64\nloans_overdue_count                           4457 non-null float64\nloans_org_count_behavior                      4457 non-null float64\nconsfin_org_count_behavior                    4457 non-null float64\nloans_cash_count                              4457 non-null float64\nlatest_one_month_loan                         4457 non-null float64\nlatest_three_month_loan                       4457 non-null float64\nlatest_six_month_loan                         4457 non-null float64\nhistory_suc_fee                               4457 non-null float64\nhistory_fail_fee                              4457 non-null float64\nlatest_one_month_suc                          4457 non-null float64\nlatest_one_month_fail                         4457 non-null float64\nloans_long_time                               4457 non-null float64\nloans_latest_time                             4457 non-null object\nloans_credit_limit                            4457 non-null float64\nloans_credibility_limit                       4457 non-null float64\nloans_org_count_current                       4457 non-null float64\nloans_product_count                           4457 non-null float64\nloans_max_limit                               4457 non-null float64\nloans_avg_limit                               4457 non-null float64\nconsfin_credit_limit                          4457 non-null float64\nconsfin_credibility                           4457 non-null float64\nconsfin_org_count_current                     4457 non-null float64\nconsfin_product_count                         4457 non-null float64\nconsfin_max_limit                             4457 non-null float64\nconsfin_avg_limit                             4457 non-null float64\nlatest_query_day                              4450 non-null float64\nloans_latest_day                              4457 non-null float64\ndtypes: float64(70), int64(13), object(7)\nmemory usage: 3.3+ MB\n</code></pre><h2 id=\"特征预处理\"><a href=\"#特征预处理\" class=\"headerlink\" title=\"特征预处理\"></a>特征预处理</h2><h3 id=\"删除无用\"><a href=\"#删除无用\" class=\"headerlink\" title=\"删除无用\"></a>删除无用</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">delete = [<span class=\"string\">&#x27;Unnamed: 0&#x27;</span>, <span class=\"string\">&#x27;custid&#x27;</span>, <span class=\"string\">&#x27;trade_no&#x27;</span>, <span class=\"string\">&#x27;bank_card_no&#x27;</span>,<span class=\"string\">&#x27;id_name&#x27;</span>,<span class=\"string\">&#x27;latest_query_time&#x27;</span>,<span class=\"string\">&#x27;source&#x27;</span>,<span class=\"string\">&#x27;loans_latest_time&#x27;</span>,<span class=\"string\">&#x27;first_transaction_time&#x27;</span>, <span class=\"string\">&#x27;student_feature&#x27;</span>]</span><br><span class=\"line\">df = df.drop(delete,axis=<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"处理分类型特征\"><a href=\"#处理分类型特征\" class=\"headerlink\" title=\"处理分类型特征\"></a>处理分类型特征</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelEncoder</span><br><span class=\"line\">df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>] = LabelEncoder().fit_transform(df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>].astype(<span class=\"built_in\">str</span>))</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用众数填充\"><a href=\"#使用众数填充\" class=\"headerlink\" title=\"使用众数填充\"></a>使用众数填充</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> Imputer</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(df.shape[<span class=\"number\">1</span>]):</span><br><span class=\"line\">    feature = df.iloc[:,i].values.reshape(-<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">    imp_mode = Imputer(strategy=<span class=\"string\">&#x27;most_frequent&#x27;</span>)</span><br><span class=\"line\">    df.iloc[:,i] = imp_mode.fit_transform(feature)</span><br></pre></td></tr></table></figure>\n<h2 id=\"特征衍生-升维\"><a href=\"#特征衍生-升维\" class=\"headerlink\" title=\"特征衍生/升维\"></a>特征衍生/升维</h2><p>特征衍生是指用原始数据进行特征学习得到新的特征。衍生特征一般有两种原因引起的：数据自身的变化，使数据中出现很多原来没有的特征；进行特征学习时，算法根据特征之间的某种关系，产生了衍生特征，有时衍生特征更能反应数据特征之间的关系 。衍生特征也要求机器学习和深度学习算法拥有更强的学习能力，即增量学习、在线学习、迁移学习。</p>\n<p>衍生特征相对于原始特征能够更好的反映特征与数据的关系，因此对于某些数据来说这是极为重要的一个步骤。观察本数据，发现可以从衍生出以下几个特征，而如 latest_one_month_suc、latest_one_month_fail、latest_six_month_loan 都是处理好的特征：</p>\n<ol>\n<li>查询内容占比</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df[<span class=\"string\">&#x27;query_finance_percent&#x27;</span>] = df[<span class=\"string\">&#x27;query_finance_count&#x27;</span>] / df[<span class=\"string\">&#x27;query_sum_count&#x27;</span>]</span><br><span class=\"line\">df[<span class=\"string\">&#x27;query_cash_percent&#x27;</span>] = df[<span class=\"string\">&#x27;query_cash_count&#x27;</span>] / df[<span class=\"string\">&#x27;query_sum_count&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<ol>\n<li>每单平均交易量</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df[<span class=\"string\">&#x27;per_avg_amount&#x27;</span>] = df[<span class=\"string\">&#x27;historical_trans_amount&#x27;</span>] / df[<span class=\"string\">&#x27;number_of_trans_from_2011&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<ol>\n<li>每天平均交易量</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df[<span class=\"string\">&#x27;avg_amount_perday&#x27;</span>] = df[<span class=\"string\">&#x27;historical_trans_amount&#x27;</span>] / df[<span class=\"string\">&#x27;historical_trans_day&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<h2 id=\"特征筛选-降维\"><a href=\"#特征筛选-降维\" class=\"headerlink\" title=\"特征筛选/降维\"></a>特征筛选/降维</h2><p>特征选择( Feature Selection )也称特征子集选择( Feature Subset Selection , FSS )，或属性选择( Attribute Selection )。是指从已有的M个特征(Feature)中选择N个特征使得系统的特定指标最优化，是从原始特征中选择出一些最有效特征以降低数据集维度的过程,是提高学习算法性能的一个重要手段,也是模式识别中关键的数据预处理步骤。对于一个学习算法来说,好的学习样本是训练模型的关键。</p>\n<h3 id=\"共线性分析\"><a href=\"#共线性分析\" class=\"headerlink\" title=\"共线性分析\"></a>共线性分析</h3><p>共线性问题指的是输入的自变量之间存在较高的线性相关度。共线性问题会导致回归模型的稳定性和准确性大大降低，另外，过多无关的维度计算也很浪费时间。</p>\n<p>变量出现共线性的原因：</p>\n<ul>\n<li>数据样本不够，导致共线性存在偶然性，这其实反映了缺少数据对于数据建模的影响，共线性仅仅是影响的一部分</li>\n<li>多个变量都给予时间有共同或相反的演变趋势，例如春节期间的网络销售量和销售额都相对与正常时间有下降趋势。</li>\n<li>多个变量存在一定的推移关系，但总体上变量间的趋势一致，只是发生的时间点不一致，例如广告费用和销售额之间，通常是品牌广告先进行大范围的曝光和信息推送，经过一定时间传播之后，才会在销售额上做出反映。</li>\n<li>多变量之间存在线性的关系。例如y代表访客数，用x代表展示广告费用，那么二者的关系很可能是y=2*x + b</li>\n</ul>\n<p>如何检验共线性：</p>\n<ul>\n<li>容忍度（Tolerance）：容忍度是每个自变量作为因变量对其他自变量进行回归建模时得到的残差比例，大小用1减得到的决定系数来表示。容忍度值越小说明这个自变量与其他自变量间越可能存在共线性问题。</li>\n<li>方差膨胀因子：VIF是容忍度的倒数，值越大则共线性问题越明显，通常以10作为判断边界。当VIF<10,不存在多重共线性；当10<=VIF<100,存在较强的多重共线性；当VIF>=100, 存在严重多重共线性。</li>\n<li>特征值（Eigenvalue）：该方法实际上就是对自变量做主成分分析，如果多个维度的特征值等于0，则可能有比较严重的共线性。</li>\n<li>相关系数：如果相关系数R&gt;0.8时就可能存在较强相关性</li>\n</ul>\n<p>如何处理共线性：</p>\n<ul>\n<li>增大样本量：增大样本量可以消除犹豫数据量不足而出现的偶然的共线性现象，在可行的前提下这种方法是需要优先考虑的</li>\n<li>岭回归法（Ridge Regression）：实际上是一种改良最小二乘估计法。通过放弃最小二乘法的无偏性，以损失部分信息、降低精度为代价来获得更实际和可靠性更强的回归系数。因此岭回归在存在较强共线性的回归应用中较为常用。</li>\n<li>逐步回归法（Stepwise Regression）:每次引入一个自变量进行统计检验，然后逐步引入其他变量，同时对所有变量的回归系数进行检验，如果原来引入的变量由于后面变量的引入而变得不再显著，那么久将其剔除，逐步得到最有回归方程。</li>\n<li>主成分回归（Principal Components Regression）:通过主成分分析，将原始参与建模的变量转换为少数几个主成分，么个主成分是原变量的线性组合，然后基于主成分做回归分析，这样也可以在不丢失重要数据特征的前提下避开共线性问题。</li>\n<li>人工去除：结合人工经验，对自变量进行删减，但是对操作者的业务能力、经验有很高的要求。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">corr_matrix = df.corr()</span><br><span class=\"line\">corr_matrix = corr_matrix.unstack()</span><br><span class=\"line\">corr_matrix[(<span class=\"built_in\">abs</span>(corr_matrix)&gt;<span class=\"number\">0.8</span>) &amp; (<span class=\"built_in\">abs</span>(corr_matrix) != <span class=\"number\">1</span>)]</span><br></pre></td></tr></table></figure>\n<pre><code>trans_activity_day                       historical_trans_day                       0.855777\nhistorical_trans_amount                  per_avg_amount                             0.870396\nhistorical_trans_day                     trans_activity_day                         0.855777\nrank_trad_1_month                        top_trans_count_last_1_month               0.855890\ntop_trans_count_last_1_month             rank_trad_1_month                          0.855890\ntrans_top_time_last_1_month              consume_top_time_last_1_month              0.925978\ntrans_top_time_last_6_month              consume_top_time_last_6_month              0.921067\nconsume_top_time_last_1_month            trans_top_time_last_1_month                0.925978\nconsume_top_time_last_6_month            trans_top_time_last_6_month                0.921067\ntrans_fail_top_count_enum_last_6_month   trans_fail_top_count_enum_last_12_month    0.886180\ntrans_fail_top_count_enum_last_12_month  trans_fail_top_count_enum_last_6_month     0.886180\napply_score                              loans_score                                0.967695\nquery_org_count                          query_finance_count                        0.881597\n                                         query_cash_count                           0.850818\n                                         query_sum_count                            0.948918\n                                         latest_three_month_apply                   0.825973\n                                         latest_six_month_apply                     0.883612\nquery_finance_count                      query_org_count                            0.881597\n                                         query_sum_count                            0.858778\n                                         latest_six_month_apply                     0.817063\nquery_cash_count                         query_org_count                            0.850818\n                                         query_sum_count                            0.804468\nquery_sum_count                          query_org_count                            0.948918\n                                         query_finance_count                        0.858778\n                                         query_cash_count                           0.804468\n                                         latest_three_month_apply                   0.878368\n                                         latest_six_month_apply                     0.942820\nlatest_one_month_apply                   latest_three_month_apply                   0.873954\n                                         latest_six_month_apply                     0.810162\nlatest_three_month_apply                 query_org_count                            0.825973\n                                                                                      ...   \nlatest_six_month_loan                    loans_settle_count                         0.847959\n                                         loans_org_count_behavior                   0.840518\n                                         loans_cash_count                           0.804668\n                                         history_suc_fee                            0.805410\n                                         loans_org_count_current                    0.804668\n                                         loans_product_count                        0.808454\nhistory_suc_fee                          loans_count                                0.911063\n                                         loans_settle_count                         0.930297\n                                         loans_org_count_behavior                   0.826103\n                                         latest_six_month_loan                      0.805410\nloans_org_count_current                  loans_count                                0.892128\n                                         loans_settle_count                         0.874915\n                                         loans_org_count_behavior                   0.944990\n                                         latest_six_month_loan                      0.804668\n                                         loans_product_count                        0.993636\nloans_product_count                      loans_count                                0.891898\n                                         loans_settle_count                         0.873971\n                                         loans_org_count_behavior                   0.939593\n                                         loans_cash_count                           0.993636\n                                         latest_six_month_loan                      0.808454\n                                         loans_org_count_current                    0.993636\nconsfin_credit_limit                     consfin_avg_limit                          0.910600\nconsfin_org_count_current                loans_org_count_behavior                   0.804413\n                                         consfin_product_count                      0.988156\nconsfin_product_count                    consfin_org_count_behavior                 0.988156\n                                         consfin_org_count_current                  0.988156\nconsfin_avg_limit                        consfin_credit_limit                       0.910600\nper_avg_amount                           historical_trans_amount                    0.870396\n                                         avg_amount_perday                          0.850940\navg_amount_perday                        per_avg_amount                             0.850940\nLength: 100, dtype: float64\n</code></pre><h3 id=\"去掉方差较小的特征\"><a href=\"#去掉方差较小的特征\" class=\"headerlink\" title=\"去掉方差较小的特征\"></a>去掉方差较小的特征</h3><p>方差阈值（VarianceThreshold）是特征选择的一个简单方法，去掉那些方差没有达到阈值的特征。默认情况下，删除零方差的特征，例如那些只有一个值的样本。假设我们有一个有布尔特征的数据集，然后我们想去掉那些超过80%的样本都是0（或者1）的特征。布尔特征是伯努利随机变量，方差为 p(1-p)。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X = df[:].drop(<span class=\"string\">&quot;status&quot;</span>,axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">y = df[<span class=\"string\">&quot;status&quot;</span>]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.feature_selection <span class=\"keyword\">import</span> VarianceThreshold</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#得到返回至少含有90%特征信息的特征</span></span><br><span class=\"line\">sp = VarianceThreshold(threshold=<span class=\"number\">0.8</span> * <span class=\"number\">0.2</span>).fit(X, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#可以看到哪些特征被保留</span></span><br><span class=\"line\">X_result = sp.fit_transform(X, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#输出结果</span></span><br><span class=\"line\">sp.get_support()</span><br></pre></td></tr></table></figure>\n<pre><code>array([False, False,  True,  True, False, False,  True,  True,  True,\n        True,  True, False,  True,  True,  True, False,  True,  True,\n        True, False,  True, False,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True, False,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True, False, False,\n        True,  True], dtype=bool)\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.feature_selection <span class=\"keyword\">import</span> VarianceThreshold</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#得到返回至少含有90%特征信息的特征</span></span><br><span class=\"line\">sp = VarianceThreshold(threshold=<span class=\"number\">0.8</span> * <span class=\"number\">0.2</span>).fit(X, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#可以看到哪些特征被保留</span></span><br><span class=\"line\">X_result = sp.fit_transform(X, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#输出结果</span></span><br><span class=\"line\">sp.get_support()</span><br></pre></td></tr></table></figure>\n<pre><code>array([False, False,  True,  True, False, False,  True,  True,  True,\n        True,  True, False,  True,  True,  True, False,  True,  True,\n        True, False,  True, False,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True, False,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True, False, False,\n        True,  True], dtype=bool)\n</code></pre><h3 id=\"单变量特征选择\"><a href=\"#单变量特征选择\" class=\"headerlink\" title=\"单变量特征选择\"></a>单变量特征选择</h3><p>单变量的特征选择是通过基于单变量的统计测试来选择最好的特征，它可以当做是评估器的预处理步骤。</p>\n<p>Scikit-learn 将特征选择的内容作为实现了 transform 方法的对象</p>\n<ol>\n<li>SelectKBest移除那些除了评分最高的 K 个特征之外的所有特征</li>\n<li>SelectPercentile移除除了用户指定的最高得分百分比之外的所有特征</li>\n</ol>\n<p>这些对象将得分函数作为输入，返回单变量的得分和 p 值:</p>\n<p>对于回归: f_regression , mutual_info_regression<br>对于分类: chi2 , f_classif , mutual_info_classif 可自行查看官网API文档。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.feature_selection <span class=\"keyword\">import</span> SelectKBest, SelectPercentile, f_classif</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#得到返回至少含有90%特征信息的特征</span></span><br><span class=\"line\">sp = SelectPercentile(f_classif, percentile= <span class=\"number\">90</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#可以看到哪些特征被保留</span></span><br><span class=\"line\">X_result = sp.fit_transform(X, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#输出结果</span></span><br><span class=\"line\">sp.get_support()</span><br><span class=\"line\"></span><br><span class=\"line\">pd.DataFrame(&#123;<span class=\"string\">&#x27;columns&#x27;</span>:X.columns,<span class=\"string\">&#x27;filter&#x27;</span>:sp.get_support()&#125;)</span><br></pre></td></tr></table></figure>\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>columns</th>\n      <th>filter</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>low_volume_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>middle_volume_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>take_amount_in_later_12_month_highest</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>trans_amount_increase_rate_lately</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>trans_activity_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>trans_activity_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>transd_mcc</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>trans_days_interval_filter</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>trans_days_interval</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>regional_mobility</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>repayment_capability</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>is_high_user</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>number_of_trans_from_2011</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>historical_trans_amount</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>historical_trans_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>rank_trad_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>trans_amount_3_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>avg_consume_less_12_valid_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>abs</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>top_trans_count_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>avg_price_last_12_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>avg_price_top_last_12_valid_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>reg_preference_for_trad</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>trans_top_time_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>trans_top_time_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>consume_top_time_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>consume_top_time_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>cross_consume_count_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>trans_fail_top_count_enum_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>trans_fail_top_count_enum_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>loans_overdue_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>loans_org_count_behavior</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>consfin_org_count_behavior</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>loans_cash_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>latest_one_month_loan</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>latest_three_month_loan</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>latest_six_month_loan</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>history_suc_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>history_fail_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>latest_one_month_suc</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>latest_one_month_fail</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>64</th>\n      <td>loans_long_time</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>loans_credit_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>loans_credibility_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>loans_org_count_current</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>68</th>\n      <td>loans_product_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>loans_max_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>loans_avg_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>71</th>\n      <td>consfin_credit_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>72</th>\n      <td>consfin_credibility</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>consfin_org_count_current</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>74</th>\n      <td>consfin_product_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>75</th>\n      <td>consfin_max_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>consfin_avg_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>latest_query_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>78</th>\n      <td>loans_latest_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>79</th>\n      <td>query_finance_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>80</th>\n      <td>query_cash_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>per_avg_amount</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>avg_amount_perday</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>83 rows × 2 columns</p>\n</div>\n\n\n\n<h3 id=\"基于-L1-的特征选取\"><a href=\"#基于-L1-的特征选取\" class=\"headerlink\" title=\"基于 L1 的特征选取\"></a>基于 L1 的特征选取</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> LinearSVC</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.feature_selection <span class=\"keyword\">import</span> SelectFromModel</span><br><span class=\"line\"></span><br><span class=\"line\">lsvc = LinearSVC(C=<span class=\"number\">0.01</span>, penalty=<span class=\"string\">&quot;l1&quot;</span>, dual=<span class=\"literal\">False</span>).fit(X, y)</span><br><span class=\"line\">sp = SelectFromModel(lsvc, prefit=<span class=\"literal\">True</span>)</span><br><span class=\"line\">X_new = sp.transform(X)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#输出结果</span></span><br><span class=\"line\">sp.get_support()</span><br><span class=\"line\"></span><br><span class=\"line\">pd.DataFrame(&#123;<span class=\"string\">&#x27;columns&#x27;</span>:X.columns,<span class=\"string\">&#x27;filter&#x27;</span>:sp.get_support()&#125;)</span><br></pre></td></tr></table></figure>\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>columns</th>\n      <th>filter</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>low_volume_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>middle_volume_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>take_amount_in_later_12_month_highest</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>trans_amount_increase_rate_lately</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>trans_activity_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>trans_activity_day</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>transd_mcc</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>trans_days_interval_filter</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>trans_days_interval</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>regional_mobility</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>repayment_capability</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>is_high_user</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>number_of_trans_from_2011</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>historical_trans_amount</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>historical_trans_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>rank_trad_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>trans_amount_3_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>avg_consume_less_12_valid_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>abs</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>top_trans_count_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>avg_price_last_12_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>avg_price_top_last_12_valid_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>reg_preference_for_trad</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>trans_top_time_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>trans_top_time_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>consume_top_time_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>consume_top_time_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>cross_consume_count_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>trans_fail_top_count_enum_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>trans_fail_top_count_enum_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>loans_overdue_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>loans_org_count_behavior</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>consfin_org_count_behavior</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>loans_cash_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>latest_one_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>latest_three_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>latest_six_month_loan</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>history_suc_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>history_fail_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>latest_one_month_suc</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>latest_one_month_fail</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>64</th>\n      <td>loans_long_time</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>loans_credit_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>loans_credibility_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>loans_org_count_current</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>68</th>\n      <td>loans_product_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>loans_max_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>loans_avg_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>71</th>\n      <td>consfin_credit_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>72</th>\n      <td>consfin_credibility</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>consfin_org_count_current</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>74</th>\n      <td>consfin_product_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>75</th>\n      <td>consfin_max_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>consfin_avg_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>latest_query_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>78</th>\n      <td>loans_latest_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>79</th>\n      <td>query_finance_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>80</th>\n      <td>query_cash_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>per_avg_amount</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>avg_amount_perday</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>83 rows × 2 columns</p>\n</div>\n\n\n\n<h3 id=\"基于决策树的特征选取\"><a href=\"#基于决策树的特征选取\" class=\"headerlink\" title=\"基于决策树的特征选取\"></a>基于决策树的特征选取</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.feature_selection <span class=\"keyword\">import</span> SelectFromModel</span><br><span class=\"line\"></span><br><span class=\"line\">forest = DecisionTreeClassifier(criterion=<span class=\"string\">&#x27;entropy&#x27;</span>).fit(X, y)</span><br><span class=\"line\">sp = SelectFromModel(forest, prefit=<span class=\"literal\">True</span>)</span><br><span class=\"line\">X_new = sp.transform(X)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#输出结果</span></span><br><span class=\"line\">sp.get_support()</span><br><span class=\"line\"></span><br><span class=\"line\">pd.DataFrame(&#123;<span class=\"string\">&#x27;columns&#x27;</span>:X.columns,<span class=\"string\">&#x27;filter&#x27;</span>:sp.get_support()&#125;)</span><br></pre></td></tr></table></figure>\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>columns</th>\n      <th>filter</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>low_volume_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>middle_volume_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>take_amount_in_later_12_month_highest</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>trans_amount_increase_rate_lately</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>trans_activity_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>trans_activity_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>transd_mcc</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>trans_days_interval_filter</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>trans_days_interval</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>regional_mobility</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>repayment_capability</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>is_high_user</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>number_of_trans_from_2011</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>historical_trans_amount</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>historical_trans_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>rank_trad_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>trans_amount_3_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>avg_consume_less_12_valid_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>abs</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>top_trans_count_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>avg_price_last_12_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>avg_price_top_last_12_valid_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>reg_preference_for_trad</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>trans_top_time_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>trans_top_time_last_6_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>consume_top_time_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>consume_top_time_last_6_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>cross_consume_count_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>trans_fail_top_count_enum_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>trans_fail_top_count_enum_last_6_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>loans_overdue_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>loans_org_count_behavior</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>consfin_org_count_behavior</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>loans_cash_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>latest_one_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>latest_three_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>latest_six_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>history_suc_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>history_fail_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>latest_one_month_suc</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>latest_one_month_fail</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>64</th>\n      <td>loans_long_time</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>loans_credit_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>loans_credibility_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>loans_org_count_current</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>68</th>\n      <td>loans_product_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>loans_max_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>loans_avg_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>71</th>\n      <td>consfin_credit_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>72</th>\n      <td>consfin_credibility</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>consfin_org_count_current</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>74</th>\n      <td>consfin_product_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>75</th>\n      <td>consfin_max_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>consfin_avg_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>latest_query_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>78</th>\n      <td>loans_latest_day</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>79</th>\n      <td>query_finance_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>80</th>\n      <td>query_cash_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>per_avg_amount</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>avg_amount_perday</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>83 rows × 2 columns</p>\n</div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#输出特征排序</span></span><br><span class=\"line\">importance = forest.feature_importances_</span><br><span class=\"line\">imp_result = np.argsort(importance)[::-<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">pd.DataFrame(&#123;<span class=\"string\">&#x27;columns&#x27;</span>:X.columns,<span class=\"string\">&#x27;filter&#x27;</span>:sp.get_support(),<span class=\"string\">&#x27;importance&#x27;</span>:imp_result&#125;).sort_values(<span class=\"string\">&quot;importance&quot;</span>,ascending=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>columns</th>\n      <th>filter</th>\n      <th>importance</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>63</th>\n      <td>latest_one_month_fail</td>\n      <td>True</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>trans_fail_top_count_enum_last_12_month</td>\n      <td>False</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>consume_top_time_last_1_month</td>\n      <td>False</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>trans_fail_top_count_enum_last_6_month</td>\n      <td>False</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>trans_days_interval</td>\n      <td>True</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>top_trans_count_last_1_month</td>\n      <td>False</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>abs</td>\n      <td>True</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>loans_overdue_count</td>\n      <td>False</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>avg_price_top_last_12_valid_month</td>\n      <td>False</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>consfin_org_count_behavior</td>\n      <td>False</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>regional_mobility</td>\n      <td>False</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>latest_query_day</td>\n      <td>True</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>trans_top_time_last_6_month</td>\n      <td>False</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>74</th>\n      <td>consfin_product_count</td>\n      <td>False</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>trans_fail_top_count_enum_last_1_month</td>\n      <td>True</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>37</th>\n      <td>jewelry_consume_count_last_6_month</td>\n      <td>False</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>transd_mcc</td>\n      <td>True</td>\n      <td>16</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>loans_max_limit</td>\n      <td>False</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>trans_activity_month</td>\n      <td>True</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>loans_org_count_current</td>\n      <td>False</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>max_cumulative_consume_later_1_month</td>\n      <td>True</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>75</th>\n      <td>consfin_max_limit</td>\n      <td>True</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>loans_credit_limit</td>\n      <td>False</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>query_cash_count</td>\n      <td>False</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>latest_one_month_loan</td>\n      <td>False</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>trans_day_last_12_month</td>\n      <td>True</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>max_consume_count_later_6_month</td>\n      <td>False</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>avg_amount_perday</td>\n      <td>True</td>\n      <td>27</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>low_volume_percent</td>\n      <td>False</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>latest_six_month_loan</td>\n      <td>False</td>\n      <td>29</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>loans_count</td>\n      <td>False</td>\n      <td>53</td>\n    </tr>\n    <tr>\n      <th>47</th>\n      <td>latest_three_month_apply</td>\n      <td>False</td>\n      <td>54</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>latest_three_month_loan</td>\n      <td>False</td>\n      <td>55</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>consfin_org_count_current</td>\n      <td>False</td>\n      <td>56</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>per_avg_amount</td>\n      <td>True</td>\n      <td>57</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>loans_avg_limit</td>\n      <td>False</td>\n      <td>58</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>loans_cash_count</td>\n      <td>False</td>\n      <td>59</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>historical_trans_day</td>\n      <td>True</td>\n      <td>60</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>middle_volume_percent</td>\n      <td>True</td>\n      <td>61</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>pawns_auctions_trusts_consume_last_6_month</td>\n      <td>True</td>\n      <td>62</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>trans_amount_3_month</td>\n      <td>True</td>\n      <td>63</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>trans_amount_increase_rate_lately</td>\n      <td>True</td>\n      <td>64</td>\n    </tr>\n    <tr>\n      <th>42</th>\n      <td>query_org_count</td>\n      <td>False</td>\n      <td>65</td>\n    </tr>\n    <tr>\n      <th>50</th>\n      <td>loans_credibility_behavior</td>\n      <td>False</td>\n      <td>66</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>latest_one_month_suc</td>\n      <td>False</td>\n      <td>67</td>\n    </tr>\n    <tr>\n      <th>41</th>\n      <td>apply_credibility</td>\n      <td>False</td>\n      <td>68</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>query_finance_count</td>\n      <td>False</td>\n      <td>69</td>\n    </tr>\n    <tr>\n      <th>48</th>\n      <td>latest_six_month_apply</td>\n      <td>True</td>\n      <td>70</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>railway_consume_count_last_12_month</td>\n      <td>False</td>\n      <td>71</td>\n    </tr>\n    <tr>\n      <th>45</th>\n      <td>query_sum_count</td>\n      <td>False</td>\n      <td>72</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>consfin_avg_limit</td>\n      <td>False</td>\n      <td>73</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>history_suc_fee</td>\n      <td>True</td>\n      <td>74</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>reg_preference_for_trad</td>\n      <td>False</td>\n      <td>75</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>loans_credibility_limit</td>\n      <td>False</td>\n      <td>76</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>cross_consume_count_last_1_month</td>\n      <td>False</td>\n      <td>77</td>\n    </tr>\n    <tr>\n      <th>38</th>\n      <td>first_transaction_day</td>\n      <td>False</td>\n      <td>78</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>number_of_trans_from_2011</td>\n      <td>True</td>\n      <td>79</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>historical_trans_amount</td>\n      <td>False</td>\n      <td>80</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>repayment_capability</td>\n      <td>True</td>\n      <td>81</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>trans_activity_day</td>\n      <td>True</td>\n      <td>82</td>\n    </tr>\n  </tbody>\n</table>\n<p>83 rows × 3 columns</p>\n</div>\n\n\n\n<h3 id=\"WOE\"><a href=\"#WOE\" class=\"headerlink\" title=\"WOE\"></a>WOE</h3><p>全称是“Weight of Evidence”，即证据权重。WOE是对原始自变量的一种编码形式。<br>要对一个变量进行WOE编码，需要首先把这个变量进行分组处理（也叫离散化、分箱等等，说的都是一个意思）。分组后，对于第i组，WOE的计算公式如下：</p>\n<p>其中，pyi是这个组中响应客户（风险模型中，对应的是违约客户，总之，指的是模型中预测变量取值为“是”或者说1的个体）占所有样本中所有响应客户的比例，pni是这个组中未响应客户占样本中所有未响应客户的比例，#yi是这个组中响应客户的数量，#ni是这个组中未响应客户的数量，#yT是样本中所有响应客户的数量，#nT是样本中所有未响应客户的数量。</p>\n<p>从这个公式中我们可以体会到，WOE表示的实际上是“当前分组中响应客户占所有响应客户的比例”和“当前分组中没有响应的客户占所有没有响应的客户的比例”的差异。</p>\n<p>对这个公式做一个简单变换，可以得到：</p>\n<p>变换以后我们可以看出，WOE也可以这么理解，他表示的是当前这个组中响应的客户和未响应客户的比值，和所有样本中这个比值的差异。这个差异是用这两个比值的比值，再取对数来表示的。WOE越大，这种差异越大，这个分组里的样本响应的可能性就越大，WOE越小，差异越小，这个分组里的样本响应的可能性就越小。</p>\n<h3 id=\"IV\"><a href=\"#IV\" class=\"headerlink\" title=\"IV\"></a>IV</h3><p>IV的全称是Information Value，中文意思是信息价值，或者信息量。</p>\n<p>我们在用逻辑回归、决策树等模型方法构建分类模型时，经常需要对自变量进行筛选。比如我们有200个候选自变量，通常情况下，不会直接把200个变量直接放到模型中去进行拟合训练，而是会用一些方法，从这200个自变量中挑选一些出来，放进模型，形成入模变量列表。那么我们怎么去挑选入模变量呢？</p>\n<p>挑选入模变量过程是个比较复杂的过程，需要考虑的因素很多，比如：变量的预测能力，变量之间的相关性，变量的简单性（容易生成和使用），变量的强壮性（不容易被绕过），变量在业务上的可解释性（被挑战时可以解释的通）等等。但是，其中最主要和最直接的衡量标准是变量的预测能力。</p>\n<p>“变量的预测能力”这个说法很笼统，很主观，非量化，在筛选变量的时候我们总不能说：“我觉得这个变量预测能力很强，所以他要进入模型”吧？我们需要一些具体的量化指标来衡量每自变量的预测能力，并根据这些量化指标的大小，来确定哪些变量进入模型。IV就是这样一种指标，他可以用来衡量自变量的预测能力。类似的指标还有信息增益、基尼系数等等。</p>\n<p>从直观逻辑上大体可以这样理解“用IV去衡量变量预测能力”这件事情：我们假设在一个分类问题中，目标变量的类别有两类：Y1，Y2。对于一个待预测的个体A，要判断A属于Y1还是Y2，我们是需要一定的信息的，假设这个信息总量是I，而这些所需要的信息，就蕴含在所有的自变量C1，C2，C3，……，Cn中，那么，对于其中的一个变量Ci来说，其蕴含的信息越多，那么它对于判断A属于Y1还是Y2的贡献就越大，Ci的信息价值就越大，Ci的IV就越大，它就越应该进入到入模变量列表中。</p>\n<p>IVi无论等于负无穷还是正无穷，都是没有意义的。</p>\n<p>使用IV其实有一个缺点，就是不能自动处理变量的分组中出现响应比例为0或100%的情况。那么，遇到响应比例为0或者100%的情况，我们应该怎么做呢？建议如下：</p>\n<ol>\n<li>如果可能，直接把这个分组做成一个规则，作为模型的前置条件或补充条件</li>\n<li>重新对变量进行离散化或分组，使每个分组的响应比例都不为0且不为100%，尤其是当一个分组个体数很小时（比如小于100个），强烈建议这样做，因为本身把一个分组个体数弄得很小就不是太合理</li>\n<li>如果上面两种方法都无法使用，建议人工把该分组的响应数和非响应的数量进行一定的调整。如果响应数原本为0，可以人工调整响应数为1，如果非响应数原本为0，可以人工调整非响应数为1</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pd.DataFrame([[<span class=\"string\">&quot;&lt;0.03&quot;</span>,<span class=\"string\">&quot;无预测能力&quot;</span>],</span><br><span class=\"line\">[<span class=\"string\">&quot;0.03-0.09&quot;</span>,<span class=\"string\">&quot;低&quot;</span>],</span><br><span class=\"line\">[<span class=\"string\">&quot;0.1-0.29&quot;</span>,<span class=\"string\">&quot;中&quot;</span>],</span><br><span class=\"line\">[<span class=\"string\">&quot;0.3-0.49&quot;</span>,<span class=\"string\">&quot;高&quot;</span>],</span><br><span class=\"line\">[<span class=\"string\">&quot;&gt;=0.5&quot;</span>,<span class=\"string\">&quot;极高且可疑&quot;</span>],], columns = [<span class=\"string\">&quot;IV&quot;</span>,<span class=\"string\">&quot;预测能力&quot;</span>])</span><br></pre></td></tr></table></figure>\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>IV</th>\n      <th>预测能力</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>&lt;0.03</td>\n      <td>无预测能力</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.03-0.09</td>\n      <td>低</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.1-0.29</td>\n      <td>中</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.3-0.49</td>\n      <td>高</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>&gt;=0.5</td>\n      <td>极高且可疑</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">CalcIV</span>(<span class=\"params\">Xvar,Yvar</span>):</span></span><br><span class=\"line\">    N_0=np.<span class=\"built_in\">sum</span>(Yvar==<span class=\"number\">0</span>)</span><br><span class=\"line\">    N_1=np.<span class=\"built_in\">sum</span>(Yvar==<span class=\"number\">1</span>)</span><br><span class=\"line\">    N_0_group=np.zeros(np.unique(Xvar).shape)</span><br><span class=\"line\">    </span><br><span class=\"line\">    N_1_group=np.zeros(np.unique(Xvar).shape)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(np.unique(Xvar))):</span><br><span class=\"line\">        N_0_group[i] = Yvar[(Xvar==np.unique(Xvar)[i])&amp;(Yvar==<span class=\"number\">0</span>)].count()</span><br><span class=\"line\">        N_1_group[i] = Yvar[(Xvar==np.unique(Xvar)[i])&amp;(Yvar==<span class=\"number\">1</span>)].count()</span><br><span class=\"line\">    iv = np.<span class=\"built_in\">sum</span>((N_0_group/N_0-N_1_group/N_1)*np.log((N_0_group/N_0)/(N_1_group/N_1)))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> iv&gt;=<span class=\"number\">1.0</span>:<span class=\"comment\">## 处理极端值</span></span><br><span class=\"line\">        iv=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> iv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">caliv_batch</span>(<span class=\"params\">df,Yvar</span>):</span></span><br><span class=\"line\">    ivlist=[]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> col <span class=\"keyword\">in</span> df.columns:</span><br><span class=\"line\">        iv=CalcIV(df[col],Yvar)</span><br><span class=\"line\">        ivlist.append(iv)</span><br><span class=\"line\">    names=<span class=\"built_in\">list</span>(df.columns)</span><br><span class=\"line\">    iv_df=pd.DataFrame(&#123;<span class=\"string\">&#x27;Var&#x27;</span>:names,<span class=\"string\">&#x27;Iv&#x27;</span>:ivlist&#125;,columns=[<span class=\"string\">&#x27;Var&#x27;</span>,<span class=\"string\">&#x27;Iv&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> iv_df,ivlist</span><br><span class=\"line\"></span><br><span class=\"line\">im_iv, ivl = caliv_batch(X,y)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">im_iv[<span class=\"string\">&#x27;Iv&#x27;</span>].describe()</span><br></pre></td></tr></table></figure>\n<pre><code>count    83.000000\nmean      0.930759\nstd       0.249840\nmin       0.005614\n25%       1.000000\n50%       1.000000\n75%       1.000000\nmax       1.000000\nName: Iv, dtype: float64\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">threshold = <span class=\"number\">0.02</span></span><br><span class=\"line\">threshold2 = <span class=\"number\">0.6</span></span><br><span class=\"line\">data_index=[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(ivl)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (im_iv[<span class=\"string\">&#x27;Iv&#x27;</span>][i]&lt; threshold)|(im_iv[<span class=\"string\">&#x27;Iv&#x27;</span>][i] &gt; threshold2):</span><br><span class=\"line\">        data_index.append(im_iv[<span class=\"string\">&#x27;Var&#x27;</span>][i])</span><br><span class=\"line\">datafinal_IV = df.drop(data_index,axis=<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">datafinal_IV.columns</span><br></pre></td></tr></table></figure>\n<pre><code>Index([&#39;rank_trad_1_month&#39;, &#39;top_trans_count_last_1_month&#39;, &#39;status&#39;,\n       &#39;consfin_product_count&#39;],\n      dtype=&#39;object&#39;)\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x_train_IV = datafinal_IV.iloc[:,:-<span class=\"number\">1</span>]</span><br><span class=\"line\">y_train_IV = datafinal_IV.iloc[:,-<span class=\"number\">1</span>]</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://github.com/datawhalechina/Datawhale_Learning/tree/master/doc/%E7%90%86%E8%AE%BA%E5%BA%94%E7%94%A8/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98\" >DataWhale数据挖掘实战营<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://blog.csdn.net/tonydz0523/article/details/84404261\" >python数据预处理 ：数据共线性处理<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/stevenlk/p/6543628.html\" >特征选择 (feature_selection)<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://blog.csdn.net/shenxiaoming77/article/details/78771698\" >评分卡模型中的IV和WOE详解<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"数据集载入\"><a href=\"#数据集载入\" class=\"headerlink\" title=\"数据集载入\"></a>数据集载入</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib <span class=\"keyword\">import</span> pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"><span class=\"keyword\">import</span> warnings</span><br><span class=\"line\">warnings.filterwarnings(<span class=\"string\">&#x27;ignore&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">u&quot;2019-08-01_金融数据描述_data1.csv&quot;</span>,encoding = <span class=\"string\">&#x27;gbk&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.info()</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 4754 entries, 0 to 4753\nData columns (total 90 columns):\nUnnamed: 0                                    4754 non-null int64\ncustid                                        4754 non-null int64\ntrade_no                                      4754 non-null object\nbank_card_no                                  4754 non-null object\nlow_volume_percent                            4752 non-null float64\nmiddle_volume_percent                         4752 non-null float64\ntake_amount_in_later_12_month_highest         4754 non-null int64\ntrans_amount_increase_rate_lately             4751 non-null float64\ntrans_activity_month                          4752 non-null float64\ntrans_activity_day                            4752 non-null float64\ntransd_mcc                                    4752 non-null float64\ntrans_days_interval_filter                    4746 non-null float64\ntrans_days_interval                           4752 non-null float64\nregional_mobility                             4752 non-null float64\nstudent_feature                               1756 non-null float64\nrepayment_capability                          4754 non-null int64\nis_high_user                                  4754 non-null int64\nnumber_of_trans_from_2011                     4752 non-null float64\nfirst_transaction_time                        4752 non-null float64\nhistorical_trans_amount                       4754 non-null int64\nhistorical_trans_day                          4752 non-null float64\nrank_trad_1_month                             4752 non-null float64\ntrans_amount_3_month                          4754 non-null int64\navg_consume_less_12_valid_month               4752 non-null float64\nabs                                           4754 non-null int64\ntop_trans_count_last_1_month                  4752 non-null float64\navg_price_last_12_month                       4754 non-null int64\navg_price_top_last_12_valid_month             4650 non-null float64\nreg_preference_for_trad                       4752 non-null object\ntrans_top_time_last_1_month                   4746 non-null float64\ntrans_top_time_last_6_month                   4746 non-null float64\nconsume_top_time_last_1_month                 4746 non-null float64\nconsume_top_time_last_6_month                 4746 non-null float64\ncross_consume_count_last_1_month              4328 non-null float64\ntrans_fail_top_count_enum_last_1_month        4738 non-null float64\ntrans_fail_top_count_enum_last_6_month        4738 non-null float64\ntrans_fail_top_count_enum_last_12_month       4738 non-null float64\nconsume_mini_time_last_1_month                4728 non-null float64\nmax_cumulative_consume_later_1_month          4754 non-null int64\nmax_consume_count_later_6_month               4746 non-null float64\nrailway_consume_count_last_12_month           4742 non-null float64\npawns_auctions_trusts_consume_last_1_month    4754 non-null int64\npawns_auctions_trusts_consume_last_6_month    4754 non-null int64\njewelry_consume_count_last_6_month            4742 non-null float64\nstatus                                        4754 non-null int64\nsource                                        4754 non-null object\nfirst_transaction_day                         4752 non-null float64\ntrans_day_last_12_month                       4752 non-null float64\nid_name                                       4478 non-null object\napply_score                                   4450 non-null float64\napply_credibility                             4450 non-null float64\nquery_org_count                               4450 non-null float64\nquery_finance_count                           4450 non-null float64\nquery_cash_count                              4450 non-null float64\nquery_sum_count                               4450 non-null float64\nlatest_query_time                             4450 non-null object\nlatest_one_month_apply                        4450 non-null float64\nlatest_three_month_apply                      4450 non-null float64\nlatest_six_month_apply                        4450 non-null float64\nloans_score                                   4457 non-null float64\nloans_credibility_behavior                    4457 non-null float64\nloans_count                                   4457 non-null float64\nloans_settle_count                            4457 non-null float64\nloans_overdue_count                           4457 non-null float64\nloans_org_count_behavior                      4457 non-null float64\nconsfin_org_count_behavior                    4457 non-null float64\nloans_cash_count                              4457 non-null float64\nlatest_one_month_loan                         4457 non-null float64\nlatest_three_month_loan                       4457 non-null float64\nlatest_six_month_loan                         4457 non-null float64\nhistory_suc_fee                               4457 non-null float64\nhistory_fail_fee                              4457 non-null float64\nlatest_one_month_suc                          4457 non-null float64\nlatest_one_month_fail                         4457 non-null float64\nloans_long_time                               4457 non-null float64\nloans_latest_time                             4457 non-null object\nloans_credit_limit                            4457 non-null float64\nloans_credibility_limit                       4457 non-null float64\nloans_org_count_current                       4457 non-null float64\nloans_product_count                           4457 non-null float64\nloans_max_limit                               4457 non-null float64\nloans_avg_limit                               4457 non-null float64\nconsfin_credit_limit                          4457 non-null float64\nconsfin_credibility                           4457 non-null float64\nconsfin_org_count_current                     4457 non-null float64\nconsfin_product_count                         4457 non-null float64\nconsfin_max_limit                             4457 non-null float64\nconsfin_avg_limit                             4457 non-null float64\nlatest_query_day                              4450 non-null float64\nloans_latest_day                              4457 non-null float64\ndtypes: float64(70), int64(13), object(7)\nmemory usage: 3.3+ MB\n</code></pre><h2 id=\"特征预处理\"><a href=\"#特征预处理\" class=\"headerlink\" title=\"特征预处理\"></a>特征预处理</h2><h3 id=\"删除无用\"><a href=\"#删除无用\" class=\"headerlink\" title=\"删除无用\"></a>删除无用</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">delete = [<span class=\"string\">&#x27;Unnamed: 0&#x27;</span>, <span class=\"string\">&#x27;custid&#x27;</span>, <span class=\"string\">&#x27;trade_no&#x27;</span>, <span class=\"string\">&#x27;bank_card_no&#x27;</span>,<span class=\"string\">&#x27;id_name&#x27;</span>,<span class=\"string\">&#x27;latest_query_time&#x27;</span>,<span class=\"string\">&#x27;source&#x27;</span>,<span class=\"string\">&#x27;loans_latest_time&#x27;</span>,<span class=\"string\">&#x27;first_transaction_time&#x27;</span>, <span class=\"string\">&#x27;student_feature&#x27;</span>]</span><br><span class=\"line\">df = df.drop(delete,axis=<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"处理分类型特征\"><a href=\"#处理分类型特征\" class=\"headerlink\" title=\"处理分类型特征\"></a>处理分类型特征</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> LabelEncoder</span><br><span class=\"line\">df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>] = LabelEncoder().fit_transform(df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>].astype(<span class=\"built_in\">str</span>))</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用众数填充\"><a href=\"#使用众数填充\" class=\"headerlink\" title=\"使用众数填充\"></a>使用众数填充</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> Imputer</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(df.shape[<span class=\"number\">1</span>]):</span><br><span class=\"line\">    feature = df.iloc[:,i].values.reshape(-<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">    imp_mode = Imputer(strategy=<span class=\"string\">&#x27;most_frequent&#x27;</span>)</span><br><span class=\"line\">    df.iloc[:,i] = imp_mode.fit_transform(feature)</span><br></pre></td></tr></table></figure>\n<h2 id=\"特征衍生-升维\"><a href=\"#特征衍生-升维\" class=\"headerlink\" title=\"特征衍生/升维\"></a>特征衍生/升维</h2><p>特征衍生是指用原始数据进行特征学习得到新的特征。衍生特征一般有两种原因引起的：数据自身的变化，使数据中出现很多原来没有的特征；进行特征学习时，算法根据特征之间的某种关系，产生了衍生特征，有时衍生特征更能反应数据特征之间的关系 。衍生特征也要求机器学习和深度学习算法拥有更强的学习能力，即增量学习、在线学习、迁移学习。</p>\n<p>衍生特征相对于原始特征能够更好的反映特征与数据的关系，因此对于某些数据来说这是极为重要的一个步骤。观察本数据，发现可以从衍生出以下几个特征，而如 latest_one_month_suc、latest_one_month_fail、latest_six_month_loan 都是处理好的特征：</p>\n<ol>\n<li>查询内容占比</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df[<span class=\"string\">&#x27;query_finance_percent&#x27;</span>] = df[<span class=\"string\">&#x27;query_finance_count&#x27;</span>] / df[<span class=\"string\">&#x27;query_sum_count&#x27;</span>]</span><br><span class=\"line\">df[<span class=\"string\">&#x27;query_cash_percent&#x27;</span>] = df[<span class=\"string\">&#x27;query_cash_count&#x27;</span>] / df[<span class=\"string\">&#x27;query_sum_count&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<ol>\n<li>每单平均交易量</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df[<span class=\"string\">&#x27;per_avg_amount&#x27;</span>] = df[<span class=\"string\">&#x27;historical_trans_amount&#x27;</span>] / df[<span class=\"string\">&#x27;number_of_trans_from_2011&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<ol>\n<li>每天平均交易量</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df[<span class=\"string\">&#x27;avg_amount_perday&#x27;</span>] = df[<span class=\"string\">&#x27;historical_trans_amount&#x27;</span>] / df[<span class=\"string\">&#x27;historical_trans_day&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<h2 id=\"特征筛选-降维\"><a href=\"#特征筛选-降维\" class=\"headerlink\" title=\"特征筛选/降维\"></a>特征筛选/降维</h2><p>特征选择( Feature Selection )也称特征子集选择( Feature Subset Selection , FSS )，或属性选择( Attribute Selection )。是指从已有的M个特征(Feature)中选择N个特征使得系统的特定指标最优化，是从原始特征中选择出一些最有效特征以降低数据集维度的过程,是提高学习算法性能的一个重要手段,也是模式识别中关键的数据预处理步骤。对于一个学习算法来说,好的学习样本是训练模型的关键。</p>\n<h3 id=\"共线性分析\"><a href=\"#共线性分析\" class=\"headerlink\" title=\"共线性分析\"></a>共线性分析</h3><p>共线性问题指的是输入的自变量之间存在较高的线性相关度。共线性问题会导致回归模型的稳定性和准确性大大降低，另外，过多无关的维度计算也很浪费时间。</p>\n<p>变量出现共线性的原因：</p>\n<ul>\n<li>数据样本不够，导致共线性存在偶然性，这其实反映了缺少数据对于数据建模的影响，共线性仅仅是影响的一部分</li>\n<li>多个变量都给予时间有共同或相反的演变趋势，例如春节期间的网络销售量和销售额都相对与正常时间有下降趋势。</li>\n<li>多个变量存在一定的推移关系，但总体上变量间的趋势一致，只是发生的时间点不一致，例如广告费用和销售额之间，通常是品牌广告先进行大范围的曝光和信息推送，经过一定时间传播之后，才会在销售额上做出反映。</li>\n<li>多变量之间存在线性的关系。例如y代表访客数，用x代表展示广告费用，那么二者的关系很可能是y=2*x + b</li>\n</ul>\n<p>如何检验共线性：</p>\n<ul>\n<li>容忍度（Tolerance）：容忍度是每个自变量作为因变量对其他自变量进行回归建模时得到的残差比例，大小用1减得到的决定系数来表示。容忍度值越小说明这个自变量与其他自变量间越可能存在共线性问题。</li>\n<li>方差膨胀因子：VIF是容忍度的倒数，值越大则共线性问题越明显，通常以10作为判断边界。当VIF<10,不存在多重共线性；当10<=VIF<100,存在较强的多重共线性；当VIF>=100, 存在严重多重共线性。</li>\n<li>特征值（Eigenvalue）：该方法实际上就是对自变量做主成分分析，如果多个维度的特征值等于0，则可能有比较严重的共线性。</li>\n<li>相关系数：如果相关系数R&gt;0.8时就可能存在较强相关性</li>\n</ul>\n<p>如何处理共线性：</p>\n<ul>\n<li>增大样本量：增大样本量可以消除犹豫数据量不足而出现的偶然的共线性现象，在可行的前提下这种方法是需要优先考虑的</li>\n<li>岭回归法（Ridge Regression）：实际上是一种改良最小二乘估计法。通过放弃最小二乘法的无偏性，以损失部分信息、降低精度为代价来获得更实际和可靠性更强的回归系数。因此岭回归在存在较强共线性的回归应用中较为常用。</li>\n<li>逐步回归法（Stepwise Regression）:每次引入一个自变量进行统计检验，然后逐步引入其他变量，同时对所有变量的回归系数进行检验，如果原来引入的变量由于后面变量的引入而变得不再显著，那么久将其剔除，逐步得到最有回归方程。</li>\n<li>主成分回归（Principal Components Regression）:通过主成分分析，将原始参与建模的变量转换为少数几个主成分，么个主成分是原变量的线性组合，然后基于主成分做回归分析，这样也可以在不丢失重要数据特征的前提下避开共线性问题。</li>\n<li>人工去除：结合人工经验，对自变量进行删减，但是对操作者的业务能力、经验有很高的要求。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">corr_matrix = df.corr()</span><br><span class=\"line\">corr_matrix = corr_matrix.unstack()</span><br><span class=\"line\">corr_matrix[(<span class=\"built_in\">abs</span>(corr_matrix)&gt;<span class=\"number\">0.8</span>) &amp; (<span class=\"built_in\">abs</span>(corr_matrix) != <span class=\"number\">1</span>)]</span><br></pre></td></tr></table></figure>\n<pre><code>trans_activity_day                       historical_trans_day                       0.855777\nhistorical_trans_amount                  per_avg_amount                             0.870396\nhistorical_trans_day                     trans_activity_day                         0.855777\nrank_trad_1_month                        top_trans_count_last_1_month               0.855890\ntop_trans_count_last_1_month             rank_trad_1_month                          0.855890\ntrans_top_time_last_1_month              consume_top_time_last_1_month              0.925978\ntrans_top_time_last_6_month              consume_top_time_last_6_month              0.921067\nconsume_top_time_last_1_month            trans_top_time_last_1_month                0.925978\nconsume_top_time_last_6_month            trans_top_time_last_6_month                0.921067\ntrans_fail_top_count_enum_last_6_month   trans_fail_top_count_enum_last_12_month    0.886180\ntrans_fail_top_count_enum_last_12_month  trans_fail_top_count_enum_last_6_month     0.886180\napply_score                              loans_score                                0.967695\nquery_org_count                          query_finance_count                        0.881597\n                                         query_cash_count                           0.850818\n                                         query_sum_count                            0.948918\n                                         latest_three_month_apply                   0.825973\n                                         latest_six_month_apply                     0.883612\nquery_finance_count                      query_org_count                            0.881597\n                                         query_sum_count                            0.858778\n                                         latest_six_month_apply                     0.817063\nquery_cash_count                         query_org_count                            0.850818\n                                         query_sum_count                            0.804468\nquery_sum_count                          query_org_count                            0.948918\n                                         query_finance_count                        0.858778\n                                         query_cash_count                           0.804468\n                                         latest_three_month_apply                   0.878368\n                                         latest_six_month_apply                     0.942820\nlatest_one_month_apply                   latest_three_month_apply                   0.873954\n                                         latest_six_month_apply                     0.810162\nlatest_three_month_apply                 query_org_count                            0.825973\n                                                                                      ...   \nlatest_six_month_loan                    loans_settle_count                         0.847959\n                                         loans_org_count_behavior                   0.840518\n                                         loans_cash_count                           0.804668\n                                         history_suc_fee                            0.805410\n                                         loans_org_count_current                    0.804668\n                                         loans_product_count                        0.808454\nhistory_suc_fee                          loans_count                                0.911063\n                                         loans_settle_count                         0.930297\n                                         loans_org_count_behavior                   0.826103\n                                         latest_six_month_loan                      0.805410\nloans_org_count_current                  loans_count                                0.892128\n                                         loans_settle_count                         0.874915\n                                         loans_org_count_behavior                   0.944990\n                                         latest_six_month_loan                      0.804668\n                                         loans_product_count                        0.993636\nloans_product_count                      loans_count                                0.891898\n                                         loans_settle_count                         0.873971\n                                         loans_org_count_behavior                   0.939593\n                                         loans_cash_count                           0.993636\n                                         latest_six_month_loan                      0.808454\n                                         loans_org_count_current                    0.993636\nconsfin_credit_limit                     consfin_avg_limit                          0.910600\nconsfin_org_count_current                loans_org_count_behavior                   0.804413\n                                         consfin_product_count                      0.988156\nconsfin_product_count                    consfin_org_count_behavior                 0.988156\n                                         consfin_org_count_current                  0.988156\nconsfin_avg_limit                        consfin_credit_limit                       0.910600\nper_avg_amount                           historical_trans_amount                    0.870396\n                                         avg_amount_perday                          0.850940\navg_amount_perday                        per_avg_amount                             0.850940\nLength: 100, dtype: float64\n</code></pre><h3 id=\"去掉方差较小的特征\"><a href=\"#去掉方差较小的特征\" class=\"headerlink\" title=\"去掉方差较小的特征\"></a>去掉方差较小的特征</h3><p>方差阈值（VarianceThreshold）是特征选择的一个简单方法，去掉那些方差没有达到阈值的特征。默认情况下，删除零方差的特征，例如那些只有一个值的样本。假设我们有一个有布尔特征的数据集，然后我们想去掉那些超过80%的样本都是0（或者1）的特征。布尔特征是伯努利随机变量，方差为 p(1-p)。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X = df[:].drop(<span class=\"string\">&quot;status&quot;</span>,axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">y = df[<span class=\"string\">&quot;status&quot;</span>]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.feature_selection <span class=\"keyword\">import</span> VarianceThreshold</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#得到返回至少含有90%特征信息的特征</span></span><br><span class=\"line\">sp = VarianceThreshold(threshold=<span class=\"number\">0.8</span> * <span class=\"number\">0.2</span>).fit(X, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#可以看到哪些特征被保留</span></span><br><span class=\"line\">X_result = sp.fit_transform(X, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#输出结果</span></span><br><span class=\"line\">sp.get_support()</span><br></pre></td></tr></table></figure>\n<pre><code>array([False, False,  True,  True, False, False,  True,  True,  True,\n        True,  True, False,  True,  True,  True, False,  True,  True,\n        True, False,  True, False,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True, False,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True, False, False,\n        True,  True], dtype=bool)\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.feature_selection <span class=\"keyword\">import</span> VarianceThreshold</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#得到返回至少含有90%特征信息的特征</span></span><br><span class=\"line\">sp = VarianceThreshold(threshold=<span class=\"number\">0.8</span> * <span class=\"number\">0.2</span>).fit(X, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#可以看到哪些特征被保留</span></span><br><span class=\"line\">X_result = sp.fit_transform(X, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#输出结果</span></span><br><span class=\"line\">sp.get_support()</span><br></pre></td></tr></table></figure>\n<pre><code>array([False, False,  True,  True, False, False,  True,  True,  True,\n        True,  True, False,  True,  True,  True, False,  True,  True,\n        True, False,  True, False,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True, False,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True, False, False,\n        True,  True], dtype=bool)\n</code></pre><h3 id=\"单变量特征选择\"><a href=\"#单变量特征选择\" class=\"headerlink\" title=\"单变量特征选择\"></a>单变量特征选择</h3><p>单变量的特征选择是通过基于单变量的统计测试来选择最好的特征，它可以当做是评估器的预处理步骤。</p>\n<p>Scikit-learn 将特征选择的内容作为实现了 transform 方法的对象</p>\n<ol>\n<li>SelectKBest移除那些除了评分最高的 K 个特征之外的所有特征</li>\n<li>SelectPercentile移除除了用户指定的最高得分百分比之外的所有特征</li>\n</ol>\n<p>这些对象将得分函数作为输入，返回单变量的得分和 p 值:</p>\n<p>对于回归: f_regression , mutual_info_regression<br>对于分类: chi2 , f_classif , mutual_info_classif 可自行查看官网API文档。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.feature_selection <span class=\"keyword\">import</span> SelectKBest, SelectPercentile, f_classif</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#得到返回至少含有90%特征信息的特征</span></span><br><span class=\"line\">sp = SelectPercentile(f_classif, percentile= <span class=\"number\">90</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#可以看到哪些特征被保留</span></span><br><span class=\"line\">X_result = sp.fit_transform(X, y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#输出结果</span></span><br><span class=\"line\">sp.get_support()</span><br><span class=\"line\"></span><br><span class=\"line\">pd.DataFrame(&#123;<span class=\"string\">&#x27;columns&#x27;</span>:X.columns,<span class=\"string\">&#x27;filter&#x27;</span>:sp.get_support()&#125;)</span><br></pre></td></tr></table></figure>\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>columns</th>\n      <th>filter</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>low_volume_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>middle_volume_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>take_amount_in_later_12_month_highest</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>trans_amount_increase_rate_lately</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>trans_activity_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>trans_activity_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>transd_mcc</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>trans_days_interval_filter</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>trans_days_interval</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>regional_mobility</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>repayment_capability</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>is_high_user</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>number_of_trans_from_2011</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>historical_trans_amount</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>historical_trans_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>rank_trad_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>trans_amount_3_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>avg_consume_less_12_valid_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>abs</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>top_trans_count_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>avg_price_last_12_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>avg_price_top_last_12_valid_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>reg_preference_for_trad</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>trans_top_time_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>trans_top_time_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>consume_top_time_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>consume_top_time_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>cross_consume_count_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>trans_fail_top_count_enum_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>trans_fail_top_count_enum_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>loans_overdue_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>loans_org_count_behavior</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>consfin_org_count_behavior</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>loans_cash_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>latest_one_month_loan</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>latest_three_month_loan</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>latest_six_month_loan</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>history_suc_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>history_fail_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>latest_one_month_suc</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>latest_one_month_fail</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>64</th>\n      <td>loans_long_time</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>loans_credit_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>loans_credibility_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>loans_org_count_current</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>68</th>\n      <td>loans_product_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>loans_max_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>loans_avg_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>71</th>\n      <td>consfin_credit_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>72</th>\n      <td>consfin_credibility</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>consfin_org_count_current</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>74</th>\n      <td>consfin_product_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>75</th>\n      <td>consfin_max_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>consfin_avg_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>latest_query_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>78</th>\n      <td>loans_latest_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>79</th>\n      <td>query_finance_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>80</th>\n      <td>query_cash_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>per_avg_amount</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>avg_amount_perday</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>83 rows × 2 columns</p>\n</div>\n\n\n\n<h3 id=\"基于-L1-的特征选取\"><a href=\"#基于-L1-的特征选取\" class=\"headerlink\" title=\"基于 L1 的特征选取\"></a>基于 L1 的特征选取</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> LinearSVC</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.feature_selection <span class=\"keyword\">import</span> SelectFromModel</span><br><span class=\"line\"></span><br><span class=\"line\">lsvc = LinearSVC(C=<span class=\"number\">0.01</span>, penalty=<span class=\"string\">&quot;l1&quot;</span>, dual=<span class=\"literal\">False</span>).fit(X, y)</span><br><span class=\"line\">sp = SelectFromModel(lsvc, prefit=<span class=\"literal\">True</span>)</span><br><span class=\"line\">X_new = sp.transform(X)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#输出结果</span></span><br><span class=\"line\">sp.get_support()</span><br><span class=\"line\"></span><br><span class=\"line\">pd.DataFrame(&#123;<span class=\"string\">&#x27;columns&#x27;</span>:X.columns,<span class=\"string\">&#x27;filter&#x27;</span>:sp.get_support()&#125;)</span><br></pre></td></tr></table></figure>\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>columns</th>\n      <th>filter</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>low_volume_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>middle_volume_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>take_amount_in_later_12_month_highest</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>trans_amount_increase_rate_lately</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>trans_activity_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>trans_activity_day</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>transd_mcc</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>trans_days_interval_filter</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>trans_days_interval</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>regional_mobility</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>repayment_capability</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>is_high_user</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>number_of_trans_from_2011</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>historical_trans_amount</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>historical_trans_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>rank_trad_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>trans_amount_3_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>avg_consume_less_12_valid_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>abs</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>top_trans_count_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>avg_price_last_12_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>avg_price_top_last_12_valid_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>reg_preference_for_trad</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>trans_top_time_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>trans_top_time_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>consume_top_time_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>consume_top_time_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>cross_consume_count_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>trans_fail_top_count_enum_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>trans_fail_top_count_enum_last_6_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>loans_overdue_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>loans_org_count_behavior</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>consfin_org_count_behavior</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>loans_cash_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>latest_one_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>latest_three_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>latest_six_month_loan</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>history_suc_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>history_fail_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>latest_one_month_suc</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>latest_one_month_fail</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>64</th>\n      <td>loans_long_time</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>loans_credit_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>loans_credibility_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>loans_org_count_current</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>68</th>\n      <td>loans_product_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>loans_max_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>loans_avg_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>71</th>\n      <td>consfin_credit_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>72</th>\n      <td>consfin_credibility</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>consfin_org_count_current</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>74</th>\n      <td>consfin_product_count</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>75</th>\n      <td>consfin_max_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>consfin_avg_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>latest_query_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>78</th>\n      <td>loans_latest_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>79</th>\n      <td>query_finance_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>80</th>\n      <td>query_cash_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>per_avg_amount</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>avg_amount_perday</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>83 rows × 2 columns</p>\n</div>\n\n\n\n<h3 id=\"基于决策树的特征选取\"><a href=\"#基于决策树的特征选取\" class=\"headerlink\" title=\"基于决策树的特征选取\"></a>基于决策树的特征选取</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.feature_selection <span class=\"keyword\">import</span> SelectFromModel</span><br><span class=\"line\"></span><br><span class=\"line\">forest = DecisionTreeClassifier(criterion=<span class=\"string\">&#x27;entropy&#x27;</span>).fit(X, y)</span><br><span class=\"line\">sp = SelectFromModel(forest, prefit=<span class=\"literal\">True</span>)</span><br><span class=\"line\">X_new = sp.transform(X)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#输出结果</span></span><br><span class=\"line\">sp.get_support()</span><br><span class=\"line\"></span><br><span class=\"line\">pd.DataFrame(&#123;<span class=\"string\">&#x27;columns&#x27;</span>:X.columns,<span class=\"string\">&#x27;filter&#x27;</span>:sp.get_support()&#125;)</span><br></pre></td></tr></table></figure>\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>columns</th>\n      <th>filter</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>low_volume_percent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>middle_volume_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>take_amount_in_later_12_month_highest</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>trans_amount_increase_rate_lately</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>trans_activity_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>trans_activity_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>transd_mcc</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>trans_days_interval_filter</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>trans_days_interval</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>regional_mobility</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>repayment_capability</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>is_high_user</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>number_of_trans_from_2011</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>historical_trans_amount</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>historical_trans_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>rank_trad_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>trans_amount_3_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>avg_consume_less_12_valid_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>abs</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>top_trans_count_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>avg_price_last_12_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>avg_price_top_last_12_valid_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>reg_preference_for_trad</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>trans_top_time_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>trans_top_time_last_6_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>consume_top_time_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>consume_top_time_last_6_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>cross_consume_count_last_1_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>trans_fail_top_count_enum_last_1_month</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>trans_fail_top_count_enum_last_6_month</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>loans_overdue_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>loans_org_count_behavior</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>consfin_org_count_behavior</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>loans_cash_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>latest_one_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>latest_three_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>latest_six_month_loan</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>history_suc_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>history_fail_fee</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>latest_one_month_suc</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>latest_one_month_fail</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>64</th>\n      <td>loans_long_time</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>loans_credit_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>loans_credibility_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>loans_org_count_current</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>68</th>\n      <td>loans_product_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>loans_max_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>loans_avg_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>71</th>\n      <td>consfin_credit_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>72</th>\n      <td>consfin_credibility</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>consfin_org_count_current</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>74</th>\n      <td>consfin_product_count</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>75</th>\n      <td>consfin_max_limit</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>consfin_avg_limit</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>latest_query_day</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>78</th>\n      <td>loans_latest_day</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>79</th>\n      <td>query_finance_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>80</th>\n      <td>query_cash_percent</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>per_avg_amount</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>avg_amount_perday</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>83 rows × 2 columns</p>\n</div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#输出特征排序</span></span><br><span class=\"line\">importance = forest.feature_importances_</span><br><span class=\"line\">imp_result = np.argsort(importance)[::-<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">pd.DataFrame(&#123;<span class=\"string\">&#x27;columns&#x27;</span>:X.columns,<span class=\"string\">&#x27;filter&#x27;</span>:sp.get_support(),<span class=\"string\">&#x27;importance&#x27;</span>:imp_result&#125;).sort_values(<span class=\"string\">&quot;importance&quot;</span>,ascending=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>columns</th>\n      <th>filter</th>\n      <th>importance</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>63</th>\n      <td>latest_one_month_fail</td>\n      <td>True</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>trans_fail_top_count_enum_last_12_month</td>\n      <td>False</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>consume_top_time_last_1_month</td>\n      <td>False</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>trans_fail_top_count_enum_last_6_month</td>\n      <td>False</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>trans_days_interval</td>\n      <td>True</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>top_trans_count_last_1_month</td>\n      <td>False</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>abs</td>\n      <td>True</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>loans_overdue_count</td>\n      <td>False</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>avg_price_top_last_12_valid_month</td>\n      <td>False</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>consfin_org_count_behavior</td>\n      <td>False</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>regional_mobility</td>\n      <td>False</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>latest_query_day</td>\n      <td>True</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>trans_top_time_last_6_month</td>\n      <td>False</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>74</th>\n      <td>consfin_product_count</td>\n      <td>False</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>trans_fail_top_count_enum_last_1_month</td>\n      <td>True</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>37</th>\n      <td>jewelry_consume_count_last_6_month</td>\n      <td>False</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>transd_mcc</td>\n      <td>True</td>\n      <td>16</td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>loans_max_limit</td>\n      <td>False</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>trans_activity_month</td>\n      <td>True</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>67</th>\n      <td>loans_org_count_current</td>\n      <td>False</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>max_cumulative_consume_later_1_month</td>\n      <td>True</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>75</th>\n      <td>consfin_max_limit</td>\n      <td>True</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>loans_credit_limit</td>\n      <td>False</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>query_cash_count</td>\n      <td>False</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>57</th>\n      <td>latest_one_month_loan</td>\n      <td>False</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>trans_day_last_12_month</td>\n      <td>True</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>max_consume_count_later_6_month</td>\n      <td>False</td>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>avg_amount_perday</td>\n      <td>True</td>\n      <td>27</td>\n    </tr>\n    <tr>\n      <th>0</th>\n      <td>low_volume_percent</td>\n      <td>False</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>59</th>\n      <td>latest_six_month_loan</td>\n      <td>False</td>\n      <td>29</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>loans_count</td>\n      <td>False</td>\n      <td>53</td>\n    </tr>\n    <tr>\n      <th>47</th>\n      <td>latest_three_month_apply</td>\n      <td>False</td>\n      <td>54</td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>latest_three_month_loan</td>\n      <td>False</td>\n      <td>55</td>\n    </tr>\n    <tr>\n      <th>73</th>\n      <td>consfin_org_count_current</td>\n      <td>False</td>\n      <td>56</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>per_avg_amount</td>\n      <td>True</td>\n      <td>57</td>\n    </tr>\n    <tr>\n      <th>70</th>\n      <td>loans_avg_limit</td>\n      <td>False</td>\n      <td>58</td>\n    </tr>\n    <tr>\n      <th>56</th>\n      <td>loans_cash_count</td>\n      <td>False</td>\n      <td>59</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>historical_trans_day</td>\n      <td>True</td>\n      <td>60</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>middle_volume_percent</td>\n      <td>True</td>\n      <td>61</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>pawns_auctions_trusts_consume_last_6_month</td>\n      <td>True</td>\n      <td>62</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>trans_amount_3_month</td>\n      <td>True</td>\n      <td>63</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>trans_amount_increase_rate_lately</td>\n      <td>True</td>\n      <td>64</td>\n    </tr>\n    <tr>\n      <th>42</th>\n      <td>query_org_count</td>\n      <td>False</td>\n      <td>65</td>\n    </tr>\n    <tr>\n      <th>50</th>\n      <td>loans_credibility_behavior</td>\n      <td>False</td>\n      <td>66</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>latest_one_month_suc</td>\n      <td>False</td>\n      <td>67</td>\n    </tr>\n    <tr>\n      <th>41</th>\n      <td>apply_credibility</td>\n      <td>False</td>\n      <td>68</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>query_finance_count</td>\n      <td>False</td>\n      <td>69</td>\n    </tr>\n    <tr>\n      <th>48</th>\n      <td>latest_six_month_apply</td>\n      <td>True</td>\n      <td>70</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>railway_consume_count_last_12_month</td>\n      <td>False</td>\n      <td>71</td>\n    </tr>\n    <tr>\n      <th>45</th>\n      <td>query_sum_count</td>\n      <td>False</td>\n      <td>72</td>\n    </tr>\n    <tr>\n      <th>76</th>\n      <td>consfin_avg_limit</td>\n      <td>False</td>\n      <td>73</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>history_suc_fee</td>\n      <td>True</td>\n      <td>74</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>reg_preference_for_trad</td>\n      <td>False</td>\n      <td>75</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>loans_credibility_limit</td>\n      <td>False</td>\n      <td>76</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>cross_consume_count_last_1_month</td>\n      <td>False</td>\n      <td>77</td>\n    </tr>\n    <tr>\n      <th>38</th>\n      <td>first_transaction_day</td>\n      <td>False</td>\n      <td>78</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>number_of_trans_from_2011</td>\n      <td>True</td>\n      <td>79</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>historical_trans_amount</td>\n      <td>False</td>\n      <td>80</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>repayment_capability</td>\n      <td>True</td>\n      <td>81</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>trans_activity_day</td>\n      <td>True</td>\n      <td>82</td>\n    </tr>\n  </tbody>\n</table>\n<p>83 rows × 3 columns</p>\n</div>\n\n\n\n<h3 id=\"WOE\"><a href=\"#WOE\" class=\"headerlink\" title=\"WOE\"></a>WOE</h3><p>全称是“Weight of Evidence”，即证据权重。WOE是对原始自变量的一种编码形式。<br>要对一个变量进行WOE编码，需要首先把这个变量进行分组处理（也叫离散化、分箱等等，说的都是一个意思）。分组后，对于第i组，WOE的计算公式如下：</p>\n<p>其中，pyi是这个组中响应客户（风险模型中，对应的是违约客户，总之，指的是模型中预测变量取值为“是”或者说1的个体）占所有样本中所有响应客户的比例，pni是这个组中未响应客户占样本中所有未响应客户的比例，#yi是这个组中响应客户的数量，#ni是这个组中未响应客户的数量，#yT是样本中所有响应客户的数量，#nT是样本中所有未响应客户的数量。</p>\n<p>从这个公式中我们可以体会到，WOE表示的实际上是“当前分组中响应客户占所有响应客户的比例”和“当前分组中没有响应的客户占所有没有响应的客户的比例”的差异。</p>\n<p>对这个公式做一个简单变换，可以得到：</p>\n<p>变换以后我们可以看出，WOE也可以这么理解，他表示的是当前这个组中响应的客户和未响应客户的比值，和所有样本中这个比值的差异。这个差异是用这两个比值的比值，再取对数来表示的。WOE越大，这种差异越大，这个分组里的样本响应的可能性就越大，WOE越小，差异越小，这个分组里的样本响应的可能性就越小。</p>\n<h3 id=\"IV\"><a href=\"#IV\" class=\"headerlink\" title=\"IV\"></a>IV</h3><p>IV的全称是Information Value，中文意思是信息价值，或者信息量。</p>\n<p>我们在用逻辑回归、决策树等模型方法构建分类模型时，经常需要对自变量进行筛选。比如我们有200个候选自变量，通常情况下，不会直接把200个变量直接放到模型中去进行拟合训练，而是会用一些方法，从这200个自变量中挑选一些出来，放进模型，形成入模变量列表。那么我们怎么去挑选入模变量呢？</p>\n<p>挑选入模变量过程是个比较复杂的过程，需要考虑的因素很多，比如：变量的预测能力，变量之间的相关性，变量的简单性（容易生成和使用），变量的强壮性（不容易被绕过），变量在业务上的可解释性（被挑战时可以解释的通）等等。但是，其中最主要和最直接的衡量标准是变量的预测能力。</p>\n<p>“变量的预测能力”这个说法很笼统，很主观，非量化，在筛选变量的时候我们总不能说：“我觉得这个变量预测能力很强，所以他要进入模型”吧？我们需要一些具体的量化指标来衡量每自变量的预测能力，并根据这些量化指标的大小，来确定哪些变量进入模型。IV就是这样一种指标，他可以用来衡量自变量的预测能力。类似的指标还有信息增益、基尼系数等等。</p>\n<p>从直观逻辑上大体可以这样理解“用IV去衡量变量预测能力”这件事情：我们假设在一个分类问题中，目标变量的类别有两类：Y1，Y2。对于一个待预测的个体A，要判断A属于Y1还是Y2，我们是需要一定的信息的，假设这个信息总量是I，而这些所需要的信息，就蕴含在所有的自变量C1，C2，C3，……，Cn中，那么，对于其中的一个变量Ci来说，其蕴含的信息越多，那么它对于判断A属于Y1还是Y2的贡献就越大，Ci的信息价值就越大，Ci的IV就越大，它就越应该进入到入模变量列表中。</p>\n<p>IVi无论等于负无穷还是正无穷，都是没有意义的。</p>\n<p>使用IV其实有一个缺点，就是不能自动处理变量的分组中出现响应比例为0或100%的情况。那么，遇到响应比例为0或者100%的情况，我们应该怎么做呢？建议如下：</p>\n<ol>\n<li>如果可能，直接把这个分组做成一个规则，作为模型的前置条件或补充条件</li>\n<li>重新对变量进行离散化或分组，使每个分组的响应比例都不为0且不为100%，尤其是当一个分组个体数很小时（比如小于100个），强烈建议这样做，因为本身把一个分组个体数弄得很小就不是太合理</li>\n<li>如果上面两种方法都无法使用，建议人工把该分组的响应数和非响应的数量进行一定的调整。如果响应数原本为0，可以人工调整响应数为1，如果非响应数原本为0，可以人工调整非响应数为1</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pd.DataFrame([[<span class=\"string\">&quot;&lt;0.03&quot;</span>,<span class=\"string\">&quot;无预测能力&quot;</span>],</span><br><span class=\"line\">[<span class=\"string\">&quot;0.03-0.09&quot;</span>,<span class=\"string\">&quot;低&quot;</span>],</span><br><span class=\"line\">[<span class=\"string\">&quot;0.1-0.29&quot;</span>,<span class=\"string\">&quot;中&quot;</span>],</span><br><span class=\"line\">[<span class=\"string\">&quot;0.3-0.49&quot;</span>,<span class=\"string\">&quot;高&quot;</span>],</span><br><span class=\"line\">[<span class=\"string\">&quot;&gt;=0.5&quot;</span>,<span class=\"string\">&quot;极高且可疑&quot;</span>],], columns = [<span class=\"string\">&quot;IV&quot;</span>,<span class=\"string\">&quot;预测能力&quot;</span>])</span><br></pre></td></tr></table></figure>\n<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>IV</th>\n      <th>预测能力</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>&lt;0.03</td>\n      <td>无预测能力</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.03-0.09</td>\n      <td>低</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.1-0.29</td>\n      <td>中</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.3-0.49</td>\n      <td>高</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>&gt;=0.5</td>\n      <td>极高且可疑</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">CalcIV</span>(<span class=\"params\">Xvar,Yvar</span>):</span></span><br><span class=\"line\">    N_0=np.<span class=\"built_in\">sum</span>(Yvar==<span class=\"number\">0</span>)</span><br><span class=\"line\">    N_1=np.<span class=\"built_in\">sum</span>(Yvar==<span class=\"number\">1</span>)</span><br><span class=\"line\">    N_0_group=np.zeros(np.unique(Xvar).shape)</span><br><span class=\"line\">    </span><br><span class=\"line\">    N_1_group=np.zeros(np.unique(Xvar).shape)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(np.unique(Xvar))):</span><br><span class=\"line\">        N_0_group[i] = Yvar[(Xvar==np.unique(Xvar)[i])&amp;(Yvar==<span class=\"number\">0</span>)].count()</span><br><span class=\"line\">        N_1_group[i] = Yvar[(Xvar==np.unique(Xvar)[i])&amp;(Yvar==<span class=\"number\">1</span>)].count()</span><br><span class=\"line\">    iv = np.<span class=\"built_in\">sum</span>((N_0_group/N_0-N_1_group/N_1)*np.log((N_0_group/N_0)/(N_1_group/N_1)))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> iv&gt;=<span class=\"number\">1.0</span>:<span class=\"comment\">## 处理极端值</span></span><br><span class=\"line\">        iv=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> iv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">caliv_batch</span>(<span class=\"params\">df,Yvar</span>):</span></span><br><span class=\"line\">    ivlist=[]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> col <span class=\"keyword\">in</span> df.columns:</span><br><span class=\"line\">        iv=CalcIV(df[col],Yvar)</span><br><span class=\"line\">        ivlist.append(iv)</span><br><span class=\"line\">    names=<span class=\"built_in\">list</span>(df.columns)</span><br><span class=\"line\">    iv_df=pd.DataFrame(&#123;<span class=\"string\">&#x27;Var&#x27;</span>:names,<span class=\"string\">&#x27;Iv&#x27;</span>:ivlist&#125;,columns=[<span class=\"string\">&#x27;Var&#x27;</span>,<span class=\"string\">&#x27;Iv&#x27;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> iv_df,ivlist</span><br><span class=\"line\"></span><br><span class=\"line\">im_iv, ivl = caliv_batch(X,y)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">im_iv[<span class=\"string\">&#x27;Iv&#x27;</span>].describe()</span><br></pre></td></tr></table></figure>\n<pre><code>count    83.000000\nmean      0.930759\nstd       0.249840\nmin       0.005614\n25%       1.000000\n50%       1.000000\n75%       1.000000\nmax       1.000000\nName: Iv, dtype: float64\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">threshold = <span class=\"number\">0.02</span></span><br><span class=\"line\">threshold2 = <span class=\"number\">0.6</span></span><br><span class=\"line\">data_index=[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(ivl)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (im_iv[<span class=\"string\">&#x27;Iv&#x27;</span>][i]&lt; threshold)|(im_iv[<span class=\"string\">&#x27;Iv&#x27;</span>][i] &gt; threshold2):</span><br><span class=\"line\">        data_index.append(im_iv[<span class=\"string\">&#x27;Var&#x27;</span>][i])</span><br><span class=\"line\">datafinal_IV = df.drop(data_index,axis=<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">datafinal_IV.columns</span><br></pre></td></tr></table></figure>\n<pre><code>Index([&#39;rank_trad_1_month&#39;, &#39;top_trans_count_last_1_month&#39;, &#39;status&#39;,\n       &#39;consfin_product_count&#39;],\n      dtype=&#39;object&#39;)\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x_train_IV = datafinal_IV.iloc[:,:-<span class=\"number\">1</span>]</span><br><span class=\"line\">y_train_IV = datafinal_IV.iloc[:,-<span class=\"number\">1</span>]</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://github.com/datawhalechina/Datawhale_Learning/tree/master/doc/%E7%90%86%E8%AE%BA%E5%BA%94%E7%94%A8/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98\" >DataWhale数据挖掘实战营<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://blog.csdn.net/tonydz0523/article/details/84404261\" >python数据预处理 ：数据共线性处理<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.cnblogs.com/stevenlk/p/6543628.html\" >特征选择 (feature_selection)<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://blog.csdn.net/shenxiaoming77/article/details/78771698\" >评分卡模型中的IV和WOE详解<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"泰坦尼克之灾","mathjax":false,"abbrlink":12954,"date":"2019-08-14T16:00:00.000Z","_content":"\n## 数据集载入\n\n\n```python\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\ndf = pd.read_csv(\"2019-08-15_泰坦尼克之灾_train.csv\")\ndf.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Braund, Mr. Owen Harris</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>C85</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Heikkinen, Miss. Laina</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>C123</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Allen, Mr. William Henry</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\ndf.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 891 entries, 0 to 890\n    Data columns (total 12 columns):\n    PassengerId    891 non-null int64\n    Survived       891 non-null int64\n    Pclass         891 non-null int64\n    Name           891 non-null object\n    Sex            891 non-null object\n    Age            714 non-null float64\n    SibSp          891 non-null int64\n    Parch          891 non-null int64\n    Ticket         891 non-null object\n    Fare           891 non-null float64\n    Cabin          204 non-null object\n    Embarked       889 non-null object\n    dtypes: float64(2), int64(5), object(5)\n    memory usage: 83.6+ KB\n\n\n\n```python\ntypedic = {}  # 类型字典\nfor name in df.columns:\n    typedic[str(\n        df[name].dtype)] = typedic.get(str(df[name].dtype), []) + [name]\n\nfor key, value in typedic.items():\n    print(\"{}格式共有{}个: {}\".format(key, len(value), value))\n    print(\"\")\n```\n\n    int64格式共有5个: ['PassengerId', 'Survived', 'Pclass', 'SibSp', 'Parch']\n    \n    object格式共有5个: ['Name', 'Sex', 'Ticket', 'Cabin', 'Embarked']\n    \n    float64格式共有2个: ['Age', 'Fare']\n    \n\n\n至此可以看到数据不全的有：['Age','Cabin']\n\n需要调整类型或删除无用资讯的包含：['Name', 'Sex', 'Ticket', 'Cabin', 'Embarked']\n\n\n```python\ndf.Survived.value_counts()\n```\n\n\n\n\n    0    549\n    1    342\n    Name: Survived, dtype: int64\n\n\n\n## 数据探索\n\n### 察看空值分布\n\n可以看到总共有三个特征有空值，分别是 Cabin 、 Age 与 Embarked\n\n\n```python\nfig, ax = plt.subplots(figsize=(9, 5))\nsns.heatmap(df.isnull(), cbar=False, cmap=\"YlGnBu_r\")\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_1.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_1.png)\n\n\n```python\ntotal = df.isnull().sum().sort_values(ascending=False)\npercent = round(df.isnull().sum().sort_values(ascending=False) / len(df) * 100,\n                2)\ntemp = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\ntemp\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Total</th>\n      <th>Percent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Cabin</th>\n      <td>687</td>\n      <td>77.10</td>\n    </tr>\n    <tr>\n      <th>Age</th>\n      <td>177</td>\n      <td>19.87</td>\n    </tr>\n    <tr>\n      <th>Embarked</th>\n      <td>2</td>\n      <td>0.22</td>\n    </tr>\n    <tr>\n      <th>Fare</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Ticket</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Parch</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>SibSp</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Sex</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Name</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Pclass</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Survived</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>PassengerId</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\nax = sns.barplot(data=df.isnull())\nplt.xticks(rotation=90)\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_2.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_2.png)\n\n### Column : Survival\n\n存活的有 61.6%，占多数，样本比例为 1.6\n\n\n```python\nf, ax = plt.subplots(1, 2, figsize=(13, 5))\ndf['Survived'].value_counts().plot.pie(\n    explode=[0, 0.05], autopct='%1.1f%%', ax=ax[0], shadow=True)\nax[0].set_title('Survived')\nax[0].set_ylabel('')\nsns.countplot('Survived', data=df, ax=ax[1])\nax[1].set_title('Survived')\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_3.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_3.png)\n\n### Feature: Sex\n\n女性存活率大于7成，男性约两成\n\n\n```python\nf, ax = plt.subplots(1, 2, figsize=(18, 5))\ndf[['Sex', 'Survived']].groupby(['Sex']).mean().plot.bar(ax=ax[0])\nax[0].set_title('Fraction of Survival with respect to Sex')\nsns.countplot('Sex', hue='Survived', data=df, ax=ax[1])\nax[1].set_title('Survived vs Dead counts with respect to Sex')\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_4.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_4.png)\n\n### Feature: Pclass\n\n大多数乘客在第三舱等，存活率依序从1舱等递减至3舱等\n\n\n```python\nf, ax = plt.subplots(1, 3, figsize=(18, 5))\ndf['Pclass'].value_counts().plot.bar(\n    color=['#BC8F8F', '#F4A460', '#DAA520'], ax=ax[0])\nax[0].set_title('Number Of Passengers with respect to Pclass')\nax[0].set_ylabel('Count')\nsns.countplot('Pclass', hue='Survived', data=df, ax=ax[1])\nax[1].set_title('Survived vs Dead counts with respect to Pclass')\nsns.barplot(x=\"Pclass\", y=\"Survived\", data=df, ax=ax[2])\nax[2].set_title('Survival by Pclass')\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_5.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_5.png)\n\n### Feature: Age\n\n年龄分布上以年轻人、小孩居多，最高有80岁老人\n\n\n```python\nf, ax = plt.subplots(1, 1, figsize=(25, 6))\nsns.barplot(df['Age'], df['Survived'], ci=None, ax=ax)\nax.set_title('Survived vs Dead counts with respect to Pclass')\nplt.xticks(rotation=90)\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_6.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_6.png)\n\n\n```python\nf, ax = plt.subplots(1, 2, figsize=(18, 6))\n\nax[0].set_title('Age Box Plot')\nax[0].set_ylabel('Age Years')\n\nsns.boxplot(y='Age', data=df, ax=ax[0])\n\nsns.boxplot(x='Survived', y='Age', data=df, ax=ax[1])\nax[1].set_title('Age Box Plot')\nax[1].set_ylabel('Age Years')\n\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_7.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_7.png)\n\n\n```python\nf, ax = plt.subplots(1, 2, figsize=(18, 8))\nsns.violinplot(\n    \"Pclass\", \"Age\", hue=\"Survived\", data=df, split=True, ax=ax[0])\nax[0].set_title('Pclass and Age vs Survived')\nax[0].set_yticks(range(0, 110, 10))\nsns.violinplot(\n    \"Sex\", \"Age\", hue=\"Survived\", data=df, split=True, ax=ax[1])\nax[1].set_title('Sex and Age vs Survived')\nax[1].set_yticks(range(0, 110, 10))\n\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_8.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_8.png)\n\n### Feature: Embarked\n\n大多数乘客是从S登船口，存活率以c最高\n\n\n```python\nf, ax = plt.subplots(1, 3, figsize=(12, 5))\nsns.countplot('Embarked', data=df, ax=ax[0])\nax[0].set_title('No. Of Passengers Boarded')\nsns.countplot('Embarked', hue='Survived', data=df, ax=ax[1])\nax[1].set_title('Embarked vs Survived')\nsns.barplot('Embarked', 'Survived', data=df, ax=ax[2])\nax[2].set_title('Embarked vs Survived')\n\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_9.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_9.png)\n\n\n```python\nf, ax = plt.subplots(1, 2, figsize=(12, 5))\nsns.countplot('Embarked', hue='Sex', data=df, ax=ax[0])\nax[0].set_title('Male-Female Split for Embarked')\nsns.countplot('Embarked', hue='Pclass', data=df, ax=ax[1])\nax[1].set_title('Embarked vs Pclass')\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\n\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_10.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_10.png)\n\n### Features: SibSip & Parch\n\n\n```python\nf, ax = plt.subplots(2, 2, figsize=(15, 10))\nsns.countplot('SibSp', hue='Survived', data=df, ax=ax[0, 0])\nax[0, 0].set_title('SibSp vs Survived')\nsns.barplot('SibSp', 'Survived', data=df, ax=ax[0, 1])\nax[0, 1].set_title('SibSp vs Survived')\n\nsns.countplot('Parch', hue='Survived', data=df, ax=ax[1, 0])\nax[1, 0].set_title('Parch vs Survived')\nsns.barplot('Parch', 'Survived', data=df, ax=ax[1, 1])\nax[1, 1].set_title('Parch vs Survived')\n\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\n\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_11.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_11.png)\n\n### Feature: Fare\n\n\n```python\nf, ax = plt.subplots(1, 1, figsize=(20, 5))\nsns.distplot(df.Fare, ax=ax)\nax.set_title('Distribution of Fares')\n\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_12.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_12.png)\n\n## 特征预处理\n\n\n```python\ndf_tuned = df.copy(deep=True)\ndf_tuned.sample(5)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>390</th>\n      <td>391</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Carter, Mr. William Ernest</td>\n      <td>male</td>\n      <td>36.0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>113760</td>\n      <td>120.0000</td>\n      <td>B96 B98</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>281</th>\n      <td>282</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Olsson, Mr. Nils Johan Goransson</td>\n      <td>male</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>347464</td>\n      <td>7.8542</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>691</th>\n      <td>692</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Karun, Miss. Manca</td>\n      <td>female</td>\n      <td>4.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>349256</td>\n      <td>13.4167</td>\n      <td>NaN</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>866</th>\n      <td>867</td>\n      <td>1</td>\n      <td>2</td>\n      <td>Duran y More, Miss. Asuncion</td>\n      <td>female</td>\n      <td>27.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>SC/PARIS 2149</td>\n      <td>13.8583</td>\n      <td>NaN</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>726</th>\n      <td>727</td>\n      <td>1</td>\n      <td>2</td>\n      <td>Renouf, Mrs. Peter Henry (Lillian Jefferys)</td>\n      <td>female</td>\n      <td>30.0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>31027</td>\n      <td>21.0000</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n### 删除无用特征\n\n#### PassengerId\n\n\n```python\ndf_tuned = df_tuned.drop(['PassengerId'], axis=1)\n```\n\n### 填充空值\n\n#### Age\n\n\n```python\nprint(\"原缺失值：{a}\".format(a=df_tuned['Age'].isnull().sum()))\n\n# 采用众数填充\ndf_tuned['Age'].fillna(df_tuned['Age'].mode()[0], inplace=True)\n\nprint(\"后缺失值：{a}\".format(a=df_tuned['Age'].isnull().sum()))\n```\n\n    原缺失值：177\n    后缺失值：0\n\n\n#### Cabin\n\n\n```python\nprint(\"原缺失值：{a}\".format(a=df_tuned['Cabin'].isnull().sum()))\n\n# 采用是否有值填充\ndf_tuned['Cabin'][df_tuned['Cabin'].isnull()] = 0\ndf_tuned['Cabin'][df_tuned['Cabin'].notnull()] = 1\ndf_tuned['Cabin'] = df_tuned['Cabin'].astype(int)\n\nprint(\"后缺失值：{a}\".format(a=df_tuned['Cabin'].isnull().sum()))\n```\n\n    原缺失值：687\n    后缺失值：0\n\n\n#### Embarked\n\n\n```python\nprint(\"原缺失值：{a}\".format(a=df_tuned['Embarked'].isnull().sum()))\n\n# 采用众数填充\ndf_tuned['Embarked'].fillna(df_tuned['Embarked'].mode()[0], inplace=True)\n\nprint(\"后缺失值：{a}\".format(a=df_tuned['Embarked'].isnull().sum()))\n```\n\n    原缺失值：2\n    后缺失值：0\n\n\n### 特征分箱\n\n#### Name：取出称号\n\n\n```python\ndf_tuned['Title'] = df_tuned['Name'].str.extract(',\\s(.*?)\\.')\n```\n\n\n```python\ntitle_Dict = {}\ntitle_Dict.update(dict.fromkeys(['Capt', 'Col', 'Major', 'Dr', 'Rev'], 'Officer'))\ntitle_Dict.update(dict.fromkeys(['Jonkheer', 'Don', 'Sir', 'the Countess', 'Dona', 'Lady'], 'Royalty'))\ntitle_Dict.update(dict.fromkeys(['Mme', 'Ms', 'Mrs'], 'Mrs'))\ntitle_Dict.update(dict.fromkeys(['Mlle', 'Miss'], 'Miss'))\ntitle_Dict.update(dict.fromkeys(['Mr'], 'Mr'))\ntitle_Dict.update(dict.fromkeys(['Master'], 'Master'))\n\ntitle_Dict\n```\n\n\n\n\n    {'Capt': 'Officer',\n     'Col': 'Officer',\n     'Major': 'Officer',\n     'Dr': 'Officer',\n     'Rev': 'Officer',\n     'Jonkheer': 'Royalty',\n     'Don': 'Royalty',\n     'Sir': 'Royalty',\n     'the Countess': 'Royalty',\n     'Dona': 'Royalty',\n     'Lady': 'Royalty',\n     'Mme': 'Mrs',\n     'Ms': 'Mrs',\n     'Mrs': 'Mrs',\n     'Mlle': 'Miss',\n     'Miss': 'Miss',\n     'Mr': 'Mr',\n     'Master': 'Master'}\n\n\n\n\n```python\ndf_tuned['Title'] = df_tuned['Title'].map(title_Dict)\ndf_tuned = df_tuned.drop(['Name'], axis=1)\ndf_tuned.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n      <th>Title</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n#### Fare\n\n\n```python\ndef fare_category(fare):\n    if fare <= 4:\n        return 0\n    elif fare <= 10:\n        return 1\n    elif fare <= 30:\n        return 2\n    elif fare <= 45:\n        return 3\n    else:\n        return 4\n\ndf_tuned['Fare'] = df_tuned['Fare'].map(fare_category)\n```\n\n#### Family_size\n\n\n```python\ndf_tuned['Family_Size'] = df_tuned['Parch'] + df_tuned['SibSp'] + 1\n\ndef family_size_category(ppl):\n    if ppl <= 2:\n        return 0\n    elif ppl <= 4:\n        return 1\n    elif ppl <= 6:\n        return 2\n    else:\n        return 3\n\ndf_tuned['Family_Size'] = df_tuned['Family_Size'].map(family_size_category)\n```\n\n#### Ticket\n\n\n```python\ndf_tuned['Ticket'] = df_tuned['Ticket'].str.extract('(^\\d+|\\s\\d+)')\ndf_tuned['Ticket'].fillna(0,inplace=True)\ndf_tuned['Ticket'] = df_tuned['Ticket'].astype(float)\n```\n\n### 处理分类特征\n\n\n```python\ndf_tuned\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n      <th>Title</th>\n      <th>Family_Size</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>21171.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>17599.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3101282.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>330877.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>0</td>\n      <td>1</td>\n      <td>male</td>\n      <td>54.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17463.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>2.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>349909.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Master</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>27.0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>347742.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>14.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>237736.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>4.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>9549.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>58.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>113783.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>20.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2151.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>39.0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>347082.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>14.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>350406.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>55.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>248706.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>2.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>382652.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Master</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>1</td>\n      <td>2</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>244373.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>31.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>345763.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2649.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>239865.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>1</td>\n      <td>2</td>\n      <td>male</td>\n      <td>34.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>248698.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>15.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>330923.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>1</td>\n      <td>1</td>\n      <td>male</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>113788.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>8.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>349909.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>347077.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2631.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>0</td>\n      <td>1</td>\n      <td>male</td>\n      <td>19.0</td>\n      <td>3</td>\n      <td>2</td>\n      <td>19950.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>330959.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349216.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>861</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>21.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>28134.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>862</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>48.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17466.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>863</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>8</td>\n      <td>2</td>\n      <td>2343.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>864</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>233866.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>865</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>42.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>236852.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>866</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>27.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2149.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>867</th>\n      <td>0</td>\n      <td>1</td>\n      <td>male</td>\n      <td>31.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17590.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>868</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>345777.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>869</th>\n      <td>1</td>\n      <td>3</td>\n      <td>male</td>\n      <td>4.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>347742.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Master</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>870</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349248.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>871</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>47.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>11751.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>872</th>\n      <td>0</td>\n      <td>1</td>\n      <td>male</td>\n      <td>33.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>695.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>873</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>47.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>345765.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>874</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>28.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>3381.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>875</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>15.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2667.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>876</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>20.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7534.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>877</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>19.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349212.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>878</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349217.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>879</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>56.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>11767.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>880</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>25.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>230433.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>881</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>33.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349257.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>882</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>22.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7552.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>883</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>34068.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>884</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>25.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>392076.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>885</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>39.0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>382652.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Mrs</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>886</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>27.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>211536.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Officer</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>887</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>19.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>112053.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>888</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>6607.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>889</th>\n      <td>1</td>\n      <td>1</td>\n      <td>male</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>111369.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>890</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>32.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>370376.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>891 rows × 12 columns</p>\n</div>\n\n\n\n#### Embarked, Sex, Pclass, Title, Fare_Category, Family_Size,\n\n\n```python\ndummies_Pclass = pd.get_dummies(df_tuned['Pclass'], prefix='Pclass')\ndummies_Sex = pd.get_dummies(df_tuned['Sex'], prefix='Sex')\ndummies_Fare = pd.get_dummies(df_tuned['Fare'], prefix='Pclass')\ndummies_Embarked = pd.get_dummies(df_tuned['Embarked'], prefix='Embarked')\ndummies_Title = pd.get_dummies(df_tuned['Title'], prefix='Pclass')\ndummies_Family_Size = pd.get_dummies(df_tuned['Family_Size'], prefix='Pclass')\n\ndf_tuned = pd.concat(\n    [df_tuned, dummies_Embarked, dummies_Sex, dummies_Pclass, dummies_Title, dummies_Fare, dummies_Family_Size],\n    axis=1)\ndf_tuned.drop(['Pclass', 'Sex', 'Fare', 'Embarked', 'Title', 'Family_Size'],\n              axis=1,\n              inplace=True)\n```\n\n\n```python\n# 最后检查\ndf_tuned.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 891 entries, 0 to 890\n    Data columns (total 29 columns):\n    Survived          891 non-null int64\n    Age               891 non-null float64\n    SibSp             891 non-null int64\n    Parch             891 non-null int64\n    Ticket            891 non-null float64\n    Cabin             891 non-null int64\n    Embarked_C        891 non-null uint8\n    Embarked_Q        891 non-null uint8\n    Embarked_S        891 non-null uint8\n    Sex_female        891 non-null uint8\n    Sex_male          891 non-null uint8\n    Pclass_1          891 non-null uint8\n    Pclass_2          891 non-null uint8\n    Pclass_3          891 non-null uint8\n    Pclass_Master     891 non-null uint8\n    Pclass_Miss       891 non-null uint8\n    Pclass_Mr         891 non-null uint8\n    Pclass_Mrs        891 non-null uint8\n    Pclass_Officer    891 non-null uint8\n    Pclass_Royalty    891 non-null uint8\n    Pclass_0          891 non-null uint8\n    Pclass_1          891 non-null uint8\n    Pclass_2          891 non-null uint8\n    Pclass_3          891 non-null uint8\n    Pclass_4          891 non-null uint8\n    Pclass_0          891 non-null uint8\n    Pclass_1          891 non-null uint8\n    Pclass_2          891 non-null uint8\n    Pclass_3          891 non-null uint8\n    dtypes: float64(2), int64(4), uint8(23)\n    memory usage: 61.9 KB\n\n\n### 数据标准化\n\n\n```python\nfrom sklearn.preprocessing import StandardScaler\nss = StandardScaler()\ndata = ss.fit_transform(df_tuned['Ticket'].values.reshape(-1, 1))\ndf_tuned['Ticket'] = pd.DataFrame(data)\n```\n\n### 数据划分\n\n\n```python\nfrom sklearn.model_selection import train_test_split\n\nX = df_tuned[:].drop(\"Survived\", axis=1)\ny = df_tuned[\"Survived\"]\n\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.2, shuffle=False)\n```\n\n## 数据建模\n\n### 六大模型\n\n\n```python\nfrom sklearn import ensemble\nfrom sklearn.metrics import *\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score\n\nnames = [\"LR\", \"SVC\", 'DT', \"RF\", \"KNN\", \"GBDT\", \"Voting\"]\nmodels = [LR, svc, DT, RF, KNN, GBDT, voting]\nevaluates = ['accuracy', 'precision', 'recall', 'f1', 'roc_auc']\n\nLR = LogisticRegression(C=1.0, penalty='l1', tol=1e-6)\nLR = LR.fit(X_train, y_train)\n\nsvc = SVC(kernel='linear', probability=True)\nsvc = svc.fit(X_train, y_train)\n\nDT = DecisionTreeClassifier(\n    max_features='sqrt', max_depth=35, criterion='entropy', random_state=42)\nDT = DT.fit(X_train, y_train)\n\nRF = RandomForestClassifier(\n    n_estimators=750,\n    criterion='gini',\n    max_features='sqrt',\n    max_depth=3,\n    min_samples_split=4,\n    min_samples_leaf=2,\n    n_jobs=50,\n    random_state=42,\n    verbose=1)\nRF = RF.fit(X_train, y_train)\n\nKNN = KNeighborsClassifier()\nKNN = KNN.fit(X_train, y_train)\n\nGBDT = GradientBoostingClassifier(\n    n_estimators=900,\n    learning_rate=0.0008,\n    loss='exponential',\n    min_samples_split=3,\n    min_samples_leaf=2,\n    max_features='sqrt',\n    max_depth=3,\n    random_state=42,\n    verbose=1)\nGBDT = GBDT.fit(X_train, y_train)\n\nvoting = ensemble.VotingClassifier(\n    estimators=[('LR', LR), ('SVC', svc), ('DT', DT), ('RF', RF), ('KNN', KNN),\n                ('GBDT', GBDT)],\n    voting='soft',\n    weights=[i.score(X_test, y_test) for i in models[0:6]],\n    n_jobs=50)\nvoting = voting.fit(X_train, y_train)\n```\n\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.3s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.5s finished\n\n\n          Iter       Train Loss   Remaining Time \n             1           0.9754            1.41s\n             2           0.9751            1.32s\n             3           0.9748            1.24s\n             4           0.9745            1.20s\n             5           0.9742            1.18s\n             6           0.9739            1.13s\n             7           0.9738            1.08s\n             8           0.9735            1.05s\n             9           0.9733            1.02s\n            10           0.9730            1.00s\n            20           0.9703            0.77s\n            30           0.9680            0.68s\n            40           0.9655            0.63s\n            50           0.9628            0.62s\n            60           0.9602            0.59s\n            70           0.9576            0.57s\n            80           0.9549            0.55s\n            90           0.9522            0.53s\n           100           0.9498            0.52s\n           200           0.9259            0.43s\n           300           0.9040            0.37s\n           400           0.8842            0.31s\n           500           0.8660            0.26s\n           600           0.8493            0.20s\n           700           0.8340            0.13s\n           800           0.8204            0.06s\n           900           0.8078            0.00s\n\n\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n\n\n\n```python\ndf_list = []\nfor name,model in zip(names,models):\n    y_train_pred = model.predict(X_train)\n    y_test_pred = model.predict(X_test)\n    \n    #accuracy\n    train_accuracy = model.score(X_train,y_train)\n    test_accuracy = model.score(X_test,y_test)\n    \n    #precision   \n    train_precision = precision_score(y_train,y_train_pred)\n    test_precision = precision_score(y_test,y_test_pred)   \n    \n    #recall\n    train_recall = recall_score(y_train,y_train_pred)\n    test_recall = recall_score(y_test,y_test_pred)   \n    \n    #f1\n    train_f1 = f1_score(y_train,y_train_pred)\n    test_f1 = f1_score(y_test,y_test_pred)   \n    \n    #auc\n    y_train_pred = model.predict_proba(X_train)[:,1]\n    y_test_pred = model.predict_proba(X_test)[:,1]\n    \n    train_auc = roc_auc_score(y_train,y_train_pred)\n    test_auc = roc_auc_score(y_test,y_test_pred)\n    \n    df = pd.DataFrame(np.array([train_accuracy,train_precision,train_recall,train_f1,train_auc,test_accuracy,test_precision,test_recall,test_f1,test_auc]).reshape(2,-1),\n                  index = ['train','test'],\n                  columns = ['Accuracy','Precision','Recall','F1-Score','AUC-Score'])\n    df_list.append(df)\n\npd.concat(df_list,axis=0,keys=names)\n```\n\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>Accuracy</th>\n      <th>Precision</th>\n      <th>Recall</th>\n      <th>F1-Score</th>\n      <th>AUC-Score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">LR</th>\n      <th>train</th>\n      <td>0.817416</td>\n      <td>0.791339</td>\n      <td>0.723022</td>\n      <td>0.755639</td>\n      <td>0.873811</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.860335</td>\n      <td>0.819672</td>\n      <td>0.781250</td>\n      <td>0.800000</td>\n      <td>0.912772</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">SVC</th>\n      <th>train</th>\n      <td>0.820225</td>\n      <td>0.804878</td>\n      <td>0.712230</td>\n      <td>0.755725</td>\n      <td>0.860508</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.854749</td>\n      <td>0.816667</td>\n      <td>0.765625</td>\n      <td>0.790323</td>\n      <td>0.899321</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">DT</th>\n      <th>train</th>\n      <td>0.998596</td>\n      <td>1.000000</td>\n      <td>0.996403</td>\n      <td>0.998198</td>\n      <td>0.999992</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.754190</td>\n      <td>0.642857</td>\n      <td>0.703125</td>\n      <td>0.671642</td>\n      <td>0.748981</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">RF</th>\n      <th>train</th>\n      <td>0.817416</td>\n      <td>0.803279</td>\n      <td>0.705036</td>\n      <td>0.750958</td>\n      <td>0.872949</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.843575</td>\n      <td>0.810345</td>\n      <td>0.734375</td>\n      <td>0.770492</td>\n      <td>0.895856</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">KNN</th>\n      <th>train</th>\n      <td>0.841292</td>\n      <td>0.839506</td>\n      <td>0.733813</td>\n      <td>0.783109</td>\n      <td>0.918315</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.821229</td>\n      <td>0.758065</td>\n      <td>0.734375</td>\n      <td>0.746032</td>\n      <td>0.852921</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">GBDT</th>\n      <th>train</th>\n      <td>0.818820</td>\n      <td>0.898396</td>\n      <td>0.604317</td>\n      <td>0.722581</td>\n      <td>0.881597</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.843575</td>\n      <td>0.909091</td>\n      <td>0.625000</td>\n      <td>0.740741</td>\n      <td>0.904823</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Voting</th>\n      <th>train</th>\n      <td>0.856742</td>\n      <td>0.872881</td>\n      <td>0.741007</td>\n      <td>0.801556</td>\n      <td>0.971074</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.860335</td>\n      <td>0.830508</td>\n      <td>0.765625</td>\n      <td>0.796748</td>\n      <td>0.898505</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n### 数据预测\n\n\n```python\ndf_test = pd.read_csv(\"2019-08-15_泰坦尼克之灾_test.csv\")\ndf_tuned_test = df_test.copy(deep=True)\n\ndf_tuned_test = df_tuned_test.drop(['PassengerId'], axis=1)\ndf_tuned_test['Age'].fillna(df_tuned_test['Age'].mode()[0], inplace=True)\ndf_tuned_test['Cabin'][df_tuned_test['Cabin'].isnull()] = 0\ndf_tuned_test['Cabin'][df_tuned_test['Cabin'].notnull()] = 1\ndf_tuned_test['Cabin'] = df_tuned_test['Cabin'].astype(int)\ndf_tuned_test['Embarked'].fillna(\n    df_tuned_test['Embarked'].mode()[0], inplace=True)\ndf_tuned_test['Title'] = df_tuned_test['Name'].str.extract(',\\s(.*?)\\.')\ndf_tuned_test['Title'] = df_tuned_test['Title'].map(title_Dict)\ndf_tuned_test = df_tuned_test.drop(['Name'], axis=1)\ndf_tuned_test['Fare'] = df_tuned_test['Fare'].map(fare_category)\ndf_tuned_test[\n    'Family_Size'] = df_tuned_test['Parch'] + df_tuned_test['SibSp'] + 1\n\ndf_tuned_test['Family_Size'] = df_tuned_test['Family_Size'].map(\n    family_size_category)\n\ndf_tuned_test['Ticket'] = df_tuned_test['Ticket'].str.extract('(^\\d+|\\s\\d+)')\ndf_tuned_test['Ticket'].fillna(0, inplace=True)\ndf_tuned_test['Ticket'] = df_tuned_test['Ticket'].astype(float)\n\ndummies_Pclass = pd.get_dummies(df_tuned_test['Pclass'], prefix='Pclass')\ndummies_Sex = pd.get_dummies(df_tuned_test['Sex'], prefix='Sex')\ndummies_Fare = pd.get_dummies(df_tuned_test['Fare'], prefix='Pclass')\ndummies_Embarked = pd.get_dummies(df_tuned_test['Embarked'], prefix='Embarked')\ndummies_Title = pd.get_dummies(df_tuned_test['Title'], prefix='Pclass')\ndummies_Family_Size = pd.get_dummies(\n    df_tuned_test['Family_Size'], prefix='Pclass')\n\ndf_tuned_test = pd.concat([\n    df_tuned_test, dummies_Embarked, dummies_Sex, dummies_Pclass,\n    dummies_Title, dummies_Fare, dummies_Family_Size\n],\n                          axis=1)\ndf_tuned_test.drop(\n    ['Pclass', 'Sex', 'Fare', 'Embarked', 'Title', 'Family_Size'],\n    axis=1,\n    inplace=True)\n\ndata = ss.fit_transform(df_tuned_test['Ticket'].values.reshape(-1, 1))\ndf_tuned_test['Ticket'] = pd.DataFrame(data)\n```\n\n\n```python\npredictions = voting.predict(df_tuned_test)\nresult = pd.DataFrame({\n    'PassengerId': df_test['PassengerId'].as_matrix(),\n    'Survived': predictions.astype(np.int32)\n})\nresult.to_csv(\"2019-08-15_泰坦尼克之灾_predictions.csv\", index=False)\n```\n\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n\n\n> 参考：\n\n1. [集成学习voting Classifier在sklearn中的实现](https://blog.csdn.net/m0_37725003/article/details/81095555)\n2. [Kaggle泰坦尼克号生存模型——250个特征量的融合模型，排名8%](https://zhuanlan.zhihu.com/p/30538352)\n3. [Basic Feature Visualizations](https://kaggle.com/vikumsw/basic-feature-visualizations)\n","source":"_posts/2019-08-15_泰坦尼克之灾.md","raw":"---\ntitle: 泰坦尼克之灾\ncategories:\n  - 项目\n  - 数据科学\nmathjax: false\nabbrlink: 12954\ndate: 2019-08-15 00:00:00\n---\n\n## 数据集载入\n\n\n```python\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\ndf = pd.read_csv(\"2019-08-15_泰坦尼克之灾_train.csv\")\ndf.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Braund, Mr. Owen Harris</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>C85</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Heikkinen, Miss. Laina</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>C123</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Allen, Mr. William Henry</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\ndf.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 891 entries, 0 to 890\n    Data columns (total 12 columns):\n    PassengerId    891 non-null int64\n    Survived       891 non-null int64\n    Pclass         891 non-null int64\n    Name           891 non-null object\n    Sex            891 non-null object\n    Age            714 non-null float64\n    SibSp          891 non-null int64\n    Parch          891 non-null int64\n    Ticket         891 non-null object\n    Fare           891 non-null float64\n    Cabin          204 non-null object\n    Embarked       889 non-null object\n    dtypes: float64(2), int64(5), object(5)\n    memory usage: 83.6+ KB\n\n\n\n```python\ntypedic = {}  # 类型字典\nfor name in df.columns:\n    typedic[str(\n        df[name].dtype)] = typedic.get(str(df[name].dtype), []) + [name]\n\nfor key, value in typedic.items():\n    print(\"{}格式共有{}个: {}\".format(key, len(value), value))\n    print(\"\")\n```\n\n    int64格式共有5个: ['PassengerId', 'Survived', 'Pclass', 'SibSp', 'Parch']\n    \n    object格式共有5个: ['Name', 'Sex', 'Ticket', 'Cabin', 'Embarked']\n    \n    float64格式共有2个: ['Age', 'Fare']\n    \n\n\n至此可以看到数据不全的有：['Age','Cabin']\n\n需要调整类型或删除无用资讯的包含：['Name', 'Sex', 'Ticket', 'Cabin', 'Embarked']\n\n\n```python\ndf.Survived.value_counts()\n```\n\n\n\n\n    0    549\n    1    342\n    Name: Survived, dtype: int64\n\n\n\n## 数据探索\n\n### 察看空值分布\n\n可以看到总共有三个特征有空值，分别是 Cabin 、 Age 与 Embarked\n\n\n```python\nfig, ax = plt.subplots(figsize=(9, 5))\nsns.heatmap(df.isnull(), cbar=False, cmap=\"YlGnBu_r\")\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_1.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_1.png)\n\n\n```python\ntotal = df.isnull().sum().sort_values(ascending=False)\npercent = round(df.isnull().sum().sort_values(ascending=False) / len(df) * 100,\n                2)\ntemp = pd.concat([total, percent], axis=1, keys=['Total', 'Percent'])\ntemp\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Total</th>\n      <th>Percent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Cabin</th>\n      <td>687</td>\n      <td>77.10</td>\n    </tr>\n    <tr>\n      <th>Age</th>\n      <td>177</td>\n      <td>19.87</td>\n    </tr>\n    <tr>\n      <th>Embarked</th>\n      <td>2</td>\n      <td>0.22</td>\n    </tr>\n    <tr>\n      <th>Fare</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Ticket</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Parch</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>SibSp</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Sex</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Name</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Pclass</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Survived</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>PassengerId</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\nax = sns.barplot(data=df.isnull())\nplt.xticks(rotation=90)\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_2.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_2.png)\n\n### Column : Survival\n\n存活的有 61.6%，占多数，样本比例为 1.6\n\n\n```python\nf, ax = plt.subplots(1, 2, figsize=(13, 5))\ndf['Survived'].value_counts().plot.pie(\n    explode=[0, 0.05], autopct='%1.1f%%', ax=ax[0], shadow=True)\nax[0].set_title('Survived')\nax[0].set_ylabel('')\nsns.countplot('Survived', data=df, ax=ax[1])\nax[1].set_title('Survived')\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_3.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_3.png)\n\n### Feature: Sex\n\n女性存活率大于7成，男性约两成\n\n\n```python\nf, ax = plt.subplots(1, 2, figsize=(18, 5))\ndf[['Sex', 'Survived']].groupby(['Sex']).mean().plot.bar(ax=ax[0])\nax[0].set_title('Fraction of Survival with respect to Sex')\nsns.countplot('Sex', hue='Survived', data=df, ax=ax[1])\nax[1].set_title('Survived vs Dead counts with respect to Sex')\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_4.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_4.png)\n\n### Feature: Pclass\n\n大多数乘客在第三舱等，存活率依序从1舱等递减至3舱等\n\n\n```python\nf, ax = plt.subplots(1, 3, figsize=(18, 5))\ndf['Pclass'].value_counts().plot.bar(\n    color=['#BC8F8F', '#F4A460', '#DAA520'], ax=ax[0])\nax[0].set_title('Number Of Passengers with respect to Pclass')\nax[0].set_ylabel('Count')\nsns.countplot('Pclass', hue='Survived', data=df, ax=ax[1])\nax[1].set_title('Survived vs Dead counts with respect to Pclass')\nsns.barplot(x=\"Pclass\", y=\"Survived\", data=df, ax=ax[2])\nax[2].set_title('Survival by Pclass')\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_5.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_5.png)\n\n### Feature: Age\n\n年龄分布上以年轻人、小孩居多，最高有80岁老人\n\n\n```python\nf, ax = plt.subplots(1, 1, figsize=(25, 6))\nsns.barplot(df['Age'], df['Survived'], ci=None, ax=ax)\nax.set_title('Survived vs Dead counts with respect to Pclass')\nplt.xticks(rotation=90)\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_6.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_6.png)\n\n\n```python\nf, ax = plt.subplots(1, 2, figsize=(18, 6))\n\nax[0].set_title('Age Box Plot')\nax[0].set_ylabel('Age Years')\n\nsns.boxplot(y='Age', data=df, ax=ax[0])\n\nsns.boxplot(x='Survived', y='Age', data=df, ax=ax[1])\nax[1].set_title('Age Box Plot')\nax[1].set_ylabel('Age Years')\n\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_7.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_7.png)\n\n\n```python\nf, ax = plt.subplots(1, 2, figsize=(18, 8))\nsns.violinplot(\n    \"Pclass\", \"Age\", hue=\"Survived\", data=df, split=True, ax=ax[0])\nax[0].set_title('Pclass and Age vs Survived')\nax[0].set_yticks(range(0, 110, 10))\nsns.violinplot(\n    \"Sex\", \"Age\", hue=\"Survived\", data=df, split=True, ax=ax[1])\nax[1].set_title('Sex and Age vs Survived')\nax[1].set_yticks(range(0, 110, 10))\n\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_8.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_8.png)\n\n### Feature: Embarked\n\n大多数乘客是从S登船口，存活率以c最高\n\n\n```python\nf, ax = plt.subplots(1, 3, figsize=(12, 5))\nsns.countplot('Embarked', data=df, ax=ax[0])\nax[0].set_title('No. Of Passengers Boarded')\nsns.countplot('Embarked', hue='Survived', data=df, ax=ax[1])\nax[1].set_title('Embarked vs Survived')\nsns.barplot('Embarked', 'Survived', data=df, ax=ax[2])\nax[2].set_title('Embarked vs Survived')\n\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_9.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_9.png)\n\n\n```python\nf, ax = plt.subplots(1, 2, figsize=(12, 5))\nsns.countplot('Embarked', hue='Sex', data=df, ax=ax[0])\nax[0].set_title('Male-Female Split for Embarked')\nsns.countplot('Embarked', hue='Pclass', data=df, ax=ax[1])\nax[1].set_title('Embarked vs Pclass')\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\n\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_10.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_10.png)\n\n### Features: SibSip & Parch\n\n\n```python\nf, ax = plt.subplots(2, 2, figsize=(15, 10))\nsns.countplot('SibSp', hue='Survived', data=df, ax=ax[0, 0])\nax[0, 0].set_title('SibSp vs Survived')\nsns.barplot('SibSp', 'Survived', data=df, ax=ax[0, 1])\nax[0, 1].set_title('SibSp vs Survived')\n\nsns.countplot('Parch', hue='Survived', data=df, ax=ax[1, 0])\nax[1, 0].set_title('Parch vs Survived')\nsns.barplot('Parch', 'Survived', data=df, ax=ax[1, 1])\nax[1, 1].set_title('Parch vs Survived')\n\nplt.subplots_adjust(wspace=0.2, hspace=0.5)\n\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_11.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_11.png)\n\n### Feature: Fare\n\n\n```python\nf, ax = plt.subplots(1, 1, figsize=(20, 5))\nsns.distplot(df.Fare, ax=ax)\nax.set_title('Distribution of Fares')\n\nplt.savefig(\"../img/2019-08-15_泰坦尼克之灾_12.png\")\nplt.close()\n```\n\n![](/img/2019-08-15_泰坦尼克之灾_12.png)\n\n## 特征预处理\n\n\n```python\ndf_tuned = df.copy(deep=True)\ndf_tuned.sample(5)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>390</th>\n      <td>391</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Carter, Mr. William Ernest</td>\n      <td>male</td>\n      <td>36.0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>113760</td>\n      <td>120.0000</td>\n      <td>B96 B98</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>281</th>\n      <td>282</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Olsson, Mr. Nils Johan Goransson</td>\n      <td>male</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>347464</td>\n      <td>7.8542</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>691</th>\n      <td>692</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Karun, Miss. Manca</td>\n      <td>female</td>\n      <td>4.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>349256</td>\n      <td>13.4167</td>\n      <td>NaN</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>866</th>\n      <td>867</td>\n      <td>1</td>\n      <td>2</td>\n      <td>Duran y More, Miss. Asuncion</td>\n      <td>female</td>\n      <td>27.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>SC/PARIS 2149</td>\n      <td>13.8583</td>\n      <td>NaN</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>726</th>\n      <td>727</td>\n      <td>1</td>\n      <td>2</td>\n      <td>Renouf, Mrs. Peter Henry (Lillian Jefferys)</td>\n      <td>female</td>\n      <td>30.0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>31027</td>\n      <td>21.0000</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n### 删除无用特征\n\n#### PassengerId\n\n\n```python\ndf_tuned = df_tuned.drop(['PassengerId'], axis=1)\n```\n\n### 填充空值\n\n#### Age\n\n\n```python\nprint(\"原缺失值：{a}\".format(a=df_tuned['Age'].isnull().sum()))\n\n# 采用众数填充\ndf_tuned['Age'].fillna(df_tuned['Age'].mode()[0], inplace=True)\n\nprint(\"后缺失值：{a}\".format(a=df_tuned['Age'].isnull().sum()))\n```\n\n    原缺失值：177\n    后缺失值：0\n\n\n#### Cabin\n\n\n```python\nprint(\"原缺失值：{a}\".format(a=df_tuned['Cabin'].isnull().sum()))\n\n# 采用是否有值填充\ndf_tuned['Cabin'][df_tuned['Cabin'].isnull()] = 0\ndf_tuned['Cabin'][df_tuned['Cabin'].notnull()] = 1\ndf_tuned['Cabin'] = df_tuned['Cabin'].astype(int)\n\nprint(\"后缺失值：{a}\".format(a=df_tuned['Cabin'].isnull().sum()))\n```\n\n    原缺失值：687\n    后缺失值：0\n\n\n#### Embarked\n\n\n```python\nprint(\"原缺失值：{a}\".format(a=df_tuned['Embarked'].isnull().sum()))\n\n# 采用众数填充\ndf_tuned['Embarked'].fillna(df_tuned['Embarked'].mode()[0], inplace=True)\n\nprint(\"后缺失值：{a}\".format(a=df_tuned['Embarked'].isnull().sum()))\n```\n\n    原缺失值：2\n    后缺失值：0\n\n\n### 特征分箱\n\n#### Name：取出称号\n\n\n```python\ndf_tuned['Title'] = df_tuned['Name'].str.extract(',\\s(.*?)\\.')\n```\n\n\n```python\ntitle_Dict = {}\ntitle_Dict.update(dict.fromkeys(['Capt', 'Col', 'Major', 'Dr', 'Rev'], 'Officer'))\ntitle_Dict.update(dict.fromkeys(['Jonkheer', 'Don', 'Sir', 'the Countess', 'Dona', 'Lady'], 'Royalty'))\ntitle_Dict.update(dict.fromkeys(['Mme', 'Ms', 'Mrs'], 'Mrs'))\ntitle_Dict.update(dict.fromkeys(['Mlle', 'Miss'], 'Miss'))\ntitle_Dict.update(dict.fromkeys(['Mr'], 'Mr'))\ntitle_Dict.update(dict.fromkeys(['Master'], 'Master'))\n\ntitle_Dict\n```\n\n\n\n\n    {'Capt': 'Officer',\n     'Col': 'Officer',\n     'Major': 'Officer',\n     'Dr': 'Officer',\n     'Rev': 'Officer',\n     'Jonkheer': 'Royalty',\n     'Don': 'Royalty',\n     'Sir': 'Royalty',\n     'the Countess': 'Royalty',\n     'Dona': 'Royalty',\n     'Lady': 'Royalty',\n     'Mme': 'Mrs',\n     'Ms': 'Mrs',\n     'Mrs': 'Mrs',\n     'Mlle': 'Miss',\n     'Miss': 'Miss',\n     'Mr': 'Mr',\n     'Master': 'Master'}\n\n\n\n\n```python\ndf_tuned['Title'] = df_tuned['Title'].map(title_Dict)\ndf_tuned = df_tuned.drop(['Name'], axis=1)\ndf_tuned.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n      <th>Title</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n#### Fare\n\n\n```python\ndef fare_category(fare):\n    if fare <= 4:\n        return 0\n    elif fare <= 10:\n        return 1\n    elif fare <= 30:\n        return 2\n    elif fare <= 45:\n        return 3\n    else:\n        return 4\n\ndf_tuned['Fare'] = df_tuned['Fare'].map(fare_category)\n```\n\n#### Family_size\n\n\n```python\ndf_tuned['Family_Size'] = df_tuned['Parch'] + df_tuned['SibSp'] + 1\n\ndef family_size_category(ppl):\n    if ppl <= 2:\n        return 0\n    elif ppl <= 4:\n        return 1\n    elif ppl <= 6:\n        return 2\n    else:\n        return 3\n\ndf_tuned['Family_Size'] = df_tuned['Family_Size'].map(family_size_category)\n```\n\n#### Ticket\n\n\n```python\ndf_tuned['Ticket'] = df_tuned['Ticket'].str.extract('(^\\d+|\\s\\d+)')\ndf_tuned['Ticket'].fillna(0,inplace=True)\ndf_tuned['Ticket'] = df_tuned['Ticket'].astype(float)\n```\n\n### 处理分类特征\n\n\n```python\ndf_tuned\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n      <th>Title</th>\n      <th>Family_Size</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>21171.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>17599.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3101282.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>330877.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>0</td>\n      <td>1</td>\n      <td>male</td>\n      <td>54.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17463.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>2.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>349909.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Master</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>27.0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>347742.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>14.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>237736.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>4.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>9549.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>58.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>113783.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>20.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2151.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>39.0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>347082.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>14.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>350406.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>55.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>248706.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>2.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>382652.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Master</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>1</td>\n      <td>2</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>244373.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>31.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>345763.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2649.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>239865.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>1</td>\n      <td>2</td>\n      <td>male</td>\n      <td>34.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>248698.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>15.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>330923.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>1</td>\n      <td>1</td>\n      <td>male</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>113788.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>8.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>349909.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>347077.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2631.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>0</td>\n      <td>1</td>\n      <td>male</td>\n      <td>19.0</td>\n      <td>3</td>\n      <td>2</td>\n      <td>19950.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>330959.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349216.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>861</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>21.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>28134.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>862</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>48.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17466.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>863</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>8</td>\n      <td>2</td>\n      <td>2343.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>864</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>233866.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>865</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>42.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>236852.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>866</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>27.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2149.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>867</th>\n      <td>0</td>\n      <td>1</td>\n      <td>male</td>\n      <td>31.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17590.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>868</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>345777.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>869</th>\n      <td>1</td>\n      <td>3</td>\n      <td>male</td>\n      <td>4.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>347742.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Master</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>870</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349248.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>871</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>47.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>11751.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>872</th>\n      <td>0</td>\n      <td>1</td>\n      <td>male</td>\n      <td>33.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>695.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>873</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>47.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>345765.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>874</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>28.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>3381.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>875</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>15.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2667.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>876</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>20.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7534.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>877</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>19.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349212.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>878</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349217.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>879</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>56.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>11767.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>880</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>25.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>230433.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>881</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>33.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349257.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>882</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>22.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7552.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>883</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>34068.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>884</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>25.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>392076.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>885</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>39.0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>382652.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Mrs</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>886</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>27.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>211536.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Officer</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>887</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>19.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>112053.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>888</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>6607.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>889</th>\n      <td>1</td>\n      <td>1</td>\n      <td>male</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>111369.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>890</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>32.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>370376.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>891 rows × 12 columns</p>\n</div>\n\n\n\n#### Embarked, Sex, Pclass, Title, Fare_Category, Family_Size,\n\n\n```python\ndummies_Pclass = pd.get_dummies(df_tuned['Pclass'], prefix='Pclass')\ndummies_Sex = pd.get_dummies(df_tuned['Sex'], prefix='Sex')\ndummies_Fare = pd.get_dummies(df_tuned['Fare'], prefix='Pclass')\ndummies_Embarked = pd.get_dummies(df_tuned['Embarked'], prefix='Embarked')\ndummies_Title = pd.get_dummies(df_tuned['Title'], prefix='Pclass')\ndummies_Family_Size = pd.get_dummies(df_tuned['Family_Size'], prefix='Pclass')\n\ndf_tuned = pd.concat(\n    [df_tuned, dummies_Embarked, dummies_Sex, dummies_Pclass, dummies_Title, dummies_Fare, dummies_Family_Size],\n    axis=1)\ndf_tuned.drop(['Pclass', 'Sex', 'Fare', 'Embarked', 'Title', 'Family_Size'],\n              axis=1,\n              inplace=True)\n```\n\n\n```python\n# 最后检查\ndf_tuned.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 891 entries, 0 to 890\n    Data columns (total 29 columns):\n    Survived          891 non-null int64\n    Age               891 non-null float64\n    SibSp             891 non-null int64\n    Parch             891 non-null int64\n    Ticket            891 non-null float64\n    Cabin             891 non-null int64\n    Embarked_C        891 non-null uint8\n    Embarked_Q        891 non-null uint8\n    Embarked_S        891 non-null uint8\n    Sex_female        891 non-null uint8\n    Sex_male          891 non-null uint8\n    Pclass_1          891 non-null uint8\n    Pclass_2          891 non-null uint8\n    Pclass_3          891 non-null uint8\n    Pclass_Master     891 non-null uint8\n    Pclass_Miss       891 non-null uint8\n    Pclass_Mr         891 non-null uint8\n    Pclass_Mrs        891 non-null uint8\n    Pclass_Officer    891 non-null uint8\n    Pclass_Royalty    891 non-null uint8\n    Pclass_0          891 non-null uint8\n    Pclass_1          891 non-null uint8\n    Pclass_2          891 non-null uint8\n    Pclass_3          891 non-null uint8\n    Pclass_4          891 non-null uint8\n    Pclass_0          891 non-null uint8\n    Pclass_1          891 non-null uint8\n    Pclass_2          891 non-null uint8\n    Pclass_3          891 non-null uint8\n    dtypes: float64(2), int64(4), uint8(23)\n    memory usage: 61.9 KB\n\n\n### 数据标准化\n\n\n```python\nfrom sklearn.preprocessing import StandardScaler\nss = StandardScaler()\ndata = ss.fit_transform(df_tuned['Ticket'].values.reshape(-1, 1))\ndf_tuned['Ticket'] = pd.DataFrame(data)\n```\n\n### 数据划分\n\n\n```python\nfrom sklearn.model_selection import train_test_split\n\nX = df_tuned[:].drop(\"Survived\", axis=1)\ny = df_tuned[\"Survived\"]\n\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.2, shuffle=False)\n```\n\n## 数据建模\n\n### 六大模型\n\n\n```python\nfrom sklearn import ensemble\nfrom sklearn.metrics import *\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.model_selection import cross_val_score\n\nnames = [\"LR\", \"SVC\", 'DT', \"RF\", \"KNN\", \"GBDT\", \"Voting\"]\nmodels = [LR, svc, DT, RF, KNN, GBDT, voting]\nevaluates = ['accuracy', 'precision', 'recall', 'f1', 'roc_auc']\n\nLR = LogisticRegression(C=1.0, penalty='l1', tol=1e-6)\nLR = LR.fit(X_train, y_train)\n\nsvc = SVC(kernel='linear', probability=True)\nsvc = svc.fit(X_train, y_train)\n\nDT = DecisionTreeClassifier(\n    max_features='sqrt', max_depth=35, criterion='entropy', random_state=42)\nDT = DT.fit(X_train, y_train)\n\nRF = RandomForestClassifier(\n    n_estimators=750,\n    criterion='gini',\n    max_features='sqrt',\n    max_depth=3,\n    min_samples_split=4,\n    min_samples_leaf=2,\n    n_jobs=50,\n    random_state=42,\n    verbose=1)\nRF = RF.fit(X_train, y_train)\n\nKNN = KNeighborsClassifier()\nKNN = KNN.fit(X_train, y_train)\n\nGBDT = GradientBoostingClassifier(\n    n_estimators=900,\n    learning_rate=0.0008,\n    loss='exponential',\n    min_samples_split=3,\n    min_samples_leaf=2,\n    max_features='sqrt',\n    max_depth=3,\n    random_state=42,\n    verbose=1)\nGBDT = GBDT.fit(X_train, y_train)\n\nvoting = ensemble.VotingClassifier(\n    estimators=[('LR', LR), ('SVC', svc), ('DT', DT), ('RF', RF), ('KNN', KNN),\n                ('GBDT', GBDT)],\n    voting='soft',\n    weights=[i.score(X_test, y_test) for i in models[0:6]],\n    n_jobs=50)\nvoting = voting.fit(X_train, y_train)\n```\n\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.3s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.5s finished\n\n\n          Iter       Train Loss   Remaining Time \n             1           0.9754            1.41s\n             2           0.9751            1.32s\n             3           0.9748            1.24s\n             4           0.9745            1.20s\n             5           0.9742            1.18s\n             6           0.9739            1.13s\n             7           0.9738            1.08s\n             8           0.9735            1.05s\n             9           0.9733            1.02s\n            10           0.9730            1.00s\n            20           0.9703            0.77s\n            30           0.9680            0.68s\n            40           0.9655            0.63s\n            50           0.9628            0.62s\n            60           0.9602            0.59s\n            70           0.9576            0.57s\n            80           0.9549            0.55s\n            90           0.9522            0.53s\n           100           0.9498            0.52s\n           200           0.9259            0.43s\n           300           0.9040            0.37s\n           400           0.8842            0.31s\n           500           0.8660            0.26s\n           600           0.8493            0.20s\n           700           0.8340            0.13s\n           800           0.8204            0.06s\n           900           0.8078            0.00s\n\n\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n\n\n\n```python\ndf_list = []\nfor name,model in zip(names,models):\n    y_train_pred = model.predict(X_train)\n    y_test_pred = model.predict(X_test)\n    \n    #accuracy\n    train_accuracy = model.score(X_train,y_train)\n    test_accuracy = model.score(X_test,y_test)\n    \n    #precision   \n    train_precision = precision_score(y_train,y_train_pred)\n    test_precision = precision_score(y_test,y_test_pred)   \n    \n    #recall\n    train_recall = recall_score(y_train,y_train_pred)\n    test_recall = recall_score(y_test,y_test_pred)   \n    \n    #f1\n    train_f1 = f1_score(y_train,y_train_pred)\n    test_f1 = f1_score(y_test,y_test_pred)   \n    \n    #auc\n    y_train_pred = model.predict_proba(X_train)[:,1]\n    y_test_pred = model.predict_proba(X_test)[:,1]\n    \n    train_auc = roc_auc_score(y_train,y_train_pred)\n    test_auc = roc_auc_score(y_test,y_test_pred)\n    \n    df = pd.DataFrame(np.array([train_accuracy,train_precision,train_recall,train_f1,train_auc,test_accuracy,test_precision,test_recall,test_f1,test_auc]).reshape(2,-1),\n                  index = ['train','test'],\n                  columns = ['Accuracy','Precision','Recall','F1-Score','AUC-Score'])\n    df_list.append(df)\n\npd.concat(df_list,axis=0,keys=names)\n```\n\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.0s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>Accuracy</th>\n      <th>Precision</th>\n      <th>Recall</th>\n      <th>F1-Score</th>\n      <th>AUC-Score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">LR</th>\n      <th>train</th>\n      <td>0.817416</td>\n      <td>0.791339</td>\n      <td>0.723022</td>\n      <td>0.755639</td>\n      <td>0.873811</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.860335</td>\n      <td>0.819672</td>\n      <td>0.781250</td>\n      <td>0.800000</td>\n      <td>0.912772</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">SVC</th>\n      <th>train</th>\n      <td>0.820225</td>\n      <td>0.804878</td>\n      <td>0.712230</td>\n      <td>0.755725</td>\n      <td>0.860508</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.854749</td>\n      <td>0.816667</td>\n      <td>0.765625</td>\n      <td>0.790323</td>\n      <td>0.899321</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">DT</th>\n      <th>train</th>\n      <td>0.998596</td>\n      <td>1.000000</td>\n      <td>0.996403</td>\n      <td>0.998198</td>\n      <td>0.999992</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.754190</td>\n      <td>0.642857</td>\n      <td>0.703125</td>\n      <td>0.671642</td>\n      <td>0.748981</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">RF</th>\n      <th>train</th>\n      <td>0.817416</td>\n      <td>0.803279</td>\n      <td>0.705036</td>\n      <td>0.750958</td>\n      <td>0.872949</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.843575</td>\n      <td>0.810345</td>\n      <td>0.734375</td>\n      <td>0.770492</td>\n      <td>0.895856</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">KNN</th>\n      <th>train</th>\n      <td>0.841292</td>\n      <td>0.839506</td>\n      <td>0.733813</td>\n      <td>0.783109</td>\n      <td>0.918315</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.821229</td>\n      <td>0.758065</td>\n      <td>0.734375</td>\n      <td>0.746032</td>\n      <td>0.852921</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">GBDT</th>\n      <th>train</th>\n      <td>0.818820</td>\n      <td>0.898396</td>\n      <td>0.604317</td>\n      <td>0.722581</td>\n      <td>0.881597</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.843575</td>\n      <td>0.909091</td>\n      <td>0.625000</td>\n      <td>0.740741</td>\n      <td>0.904823</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Voting</th>\n      <th>train</th>\n      <td>0.856742</td>\n      <td>0.872881</td>\n      <td>0.741007</td>\n      <td>0.801556</td>\n      <td>0.971074</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.860335</td>\n      <td>0.830508</td>\n      <td>0.765625</td>\n      <td>0.796748</td>\n      <td>0.898505</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n### 数据预测\n\n\n```python\ndf_test = pd.read_csv(\"2019-08-15_泰坦尼克之灾_test.csv\")\ndf_tuned_test = df_test.copy(deep=True)\n\ndf_tuned_test = df_tuned_test.drop(['PassengerId'], axis=1)\ndf_tuned_test['Age'].fillna(df_tuned_test['Age'].mode()[0], inplace=True)\ndf_tuned_test['Cabin'][df_tuned_test['Cabin'].isnull()] = 0\ndf_tuned_test['Cabin'][df_tuned_test['Cabin'].notnull()] = 1\ndf_tuned_test['Cabin'] = df_tuned_test['Cabin'].astype(int)\ndf_tuned_test['Embarked'].fillna(\n    df_tuned_test['Embarked'].mode()[0], inplace=True)\ndf_tuned_test['Title'] = df_tuned_test['Name'].str.extract(',\\s(.*?)\\.')\ndf_tuned_test['Title'] = df_tuned_test['Title'].map(title_Dict)\ndf_tuned_test = df_tuned_test.drop(['Name'], axis=1)\ndf_tuned_test['Fare'] = df_tuned_test['Fare'].map(fare_category)\ndf_tuned_test[\n    'Family_Size'] = df_tuned_test['Parch'] + df_tuned_test['SibSp'] + 1\n\ndf_tuned_test['Family_Size'] = df_tuned_test['Family_Size'].map(\n    family_size_category)\n\ndf_tuned_test['Ticket'] = df_tuned_test['Ticket'].str.extract('(^\\d+|\\s\\d+)')\ndf_tuned_test['Ticket'].fillna(0, inplace=True)\ndf_tuned_test['Ticket'] = df_tuned_test['Ticket'].astype(float)\n\ndummies_Pclass = pd.get_dummies(df_tuned_test['Pclass'], prefix='Pclass')\ndummies_Sex = pd.get_dummies(df_tuned_test['Sex'], prefix='Sex')\ndummies_Fare = pd.get_dummies(df_tuned_test['Fare'], prefix='Pclass')\ndummies_Embarked = pd.get_dummies(df_tuned_test['Embarked'], prefix='Embarked')\ndummies_Title = pd.get_dummies(df_tuned_test['Title'], prefix='Pclass')\ndummies_Family_Size = pd.get_dummies(\n    df_tuned_test['Family_Size'], prefix='Pclass')\n\ndf_tuned_test = pd.concat([\n    df_tuned_test, dummies_Embarked, dummies_Sex, dummies_Pclass,\n    dummies_Title, dummies_Fare, dummies_Family_Size\n],\n                          axis=1)\ndf_tuned_test.drop(\n    ['Pclass', 'Sex', 'Fare', 'Embarked', 'Title', 'Family_Size'],\n    axis=1,\n    inplace=True)\n\ndata = ss.fit_transform(df_tuned_test['Ticket'].values.reshape(-1, 1))\ndf_tuned_test['Ticket'] = pd.DataFrame(data)\n```\n\n\n```python\npredictions = voting.predict(df_tuned_test)\nresult = pd.DataFrame({\n    'PassengerId': df_test['PassengerId'].as_matrix(),\n    'Survived': predictions.astype(np.int32)\n})\nresult.to_csv(\"2019-08-15_泰坦尼克之灾_predictions.csv\", index=False)\n```\n\n    [Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n    [Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n    [Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n\n\n> 参考：\n\n1. [集成学习voting Classifier在sklearn中的实现](https://blog.csdn.net/m0_37725003/article/details/81095555)\n2. [Kaggle泰坦尼克号生存模型——250个特征量的融合模型，排名8%](https://zhuanlan.zhihu.com/p/30538352)\n3. [Basic Feature Visualizations](https://kaggle.com/vikumsw/basic-feature-visualizations)\n","slug":"2019-08-15_泰坦尼克之灾","published":1,"updated":"2021-04-01T17:36:48.145Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5ru002v9ohz4uvzecqv","content":"<h2 id=\"数据集载入\"><a href=\"#数据集载入\" class=\"headerlink\" title=\"数据集载入\"></a>数据集载入</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib <span class=\"keyword\">import</span> pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">%matplotlib inline</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"><span class=\"keyword\">import</span> warnings</span><br><span class=\"line\">warnings.filterwarnings(<span class=\"string\">&#x27;ignore&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">&quot;2019-08-15_泰坦尼克之灾_train.csv&quot;</span>)</span><br><span class=\"line\">df.head()</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Braund, Mr. Owen Harris</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>C85</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Heikkinen, Miss. Laina</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>C123</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Allen, Mr. William Henry</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.info()</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 891 entries, 0 to 890\nData columns (total 12 columns):\nPassengerId    891 non-null int64\nSurvived       891 non-null int64\nPclass         891 non-null int64\nName           891 non-null object\nSex            891 non-null object\nAge            714 non-null float64\nSibSp          891 non-null int64\nParch          891 non-null int64\nTicket         891 non-null object\nFare           891 non-null float64\nCabin          204 non-null object\nEmbarked       889 non-null object\ndtypes: float64(2), int64(5), object(5)\nmemory usage: 83.6+ KB\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedic = &#123;&#125;  <span class=\"comment\"># 类型字典</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> df.columns:</span><br><span class=\"line\">    typedic[<span class=\"built_in\">str</span>(</span><br><span class=\"line\">        df[name].dtype)] = typedic.get(<span class=\"built_in\">str</span>(df[name].dtype), []) + [name]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> key, value <span class=\"keyword\">in</span> typedic.items():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&#123;&#125;格式共有&#123;&#125;个: &#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(key, <span class=\"built_in\">len</span>(value), value))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>int64格式共有5个: [&#39;PassengerId&#39;, &#39;Survived&#39;, &#39;Pclass&#39;, &#39;SibSp&#39;, &#39;Parch&#39;]\n\nobject格式共有5个: [&#39;Name&#39;, &#39;Sex&#39;, &#39;Ticket&#39;, &#39;Cabin&#39;, &#39;Embarked&#39;]\n\nfloat64格式共有2个: [&#39;Age&#39;, &#39;Fare&#39;]\n</code></pre><p>至此可以看到数据不全的有：[‘Age’,’Cabin’]</p>\n<p>需要调整类型或删除无用资讯的包含：[‘Name’, ‘Sex’, ‘Ticket’, ‘Cabin’, ‘Embarked’]</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.Survived.value_counts()</span><br></pre></td></tr></table></figure>\n<pre><code>0    549\n1    342\nName: Survived, dtype: int64\n</code></pre><h2 id=\"数据探索\"><a href=\"#数据探索\" class=\"headerlink\" title=\"数据探索\"></a>数据探索</h2><h3 id=\"察看空值分布\"><a href=\"#察看空值分布\" class=\"headerlink\" title=\"察看空值分布\"></a>察看空值分布</h3><p>可以看到总共有三个特征有空值，分别是 Cabin 、 Age 与 Embarked</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fig, ax = plt.subplots(figsize=(<span class=\"number\">9</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">sns.heatmap(df.isnull(), cbar=<span class=\"literal\">False</span>, cmap=<span class=\"string\">&quot;YlGnBu_r&quot;</span>)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_1.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_1.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">total = df.isnull().<span class=\"built_in\">sum</span>().sort_values(ascending=<span class=\"literal\">False</span>)</span><br><span class=\"line\">percent = <span class=\"built_in\">round</span>(df.isnull().<span class=\"built_in\">sum</span>().sort_values(ascending=<span class=\"literal\">False</span>) / <span class=\"built_in\">len</span>(df) * <span class=\"number\">100</span>,</span><br><span class=\"line\">                <span class=\"number\">2</span>)</span><br><span class=\"line\">temp = pd.concat([total, percent], axis=<span class=\"number\">1</span>, keys=[<span class=\"string\">&#x27;Total&#x27;</span>, <span class=\"string\">&#x27;Percent&#x27;</span>])</span><br><span class=\"line\">temp</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Total</th>\n      <th>Percent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Cabin</th>\n      <td>687</td>\n      <td>77.10</td>\n    </tr>\n    <tr>\n      <th>Age</th>\n      <td>177</td>\n      <td>19.87</td>\n    </tr>\n    <tr>\n      <th>Embarked</th>\n      <td>2</td>\n      <td>0.22</td>\n    </tr>\n    <tr>\n      <th>Fare</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Ticket</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Parch</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>SibSp</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Sex</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Name</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Pclass</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Survived</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>PassengerId</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ax = sns.barplot(data=df.isnull())</span><br><span class=\"line\">plt.xticks(rotation=<span class=\"number\">90</span>)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_2.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_2.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"Column-Survival\"><a href=\"#Column-Survival\" class=\"headerlink\" title=\"Column : Survival\"></a>Column : Survival</h3><p>存活的有 61.6%，占多数，样本比例为 1.6</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">2</span>, figsize=(<span class=\"number\">13</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">df[<span class=\"string\">&#x27;Survived&#x27;</span>].value_counts().plot.pie(</span><br><span class=\"line\">    explode=[<span class=\"number\">0</span>, <span class=\"number\">0.05</span>], autopct=<span class=\"string\">&#x27;%1.1f%%&#x27;</span>, ax=ax[<span class=\"number\">0</span>], shadow=<span class=\"literal\">True</span>)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;Survived&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_ylabel(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Survived&#x27;</span>)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_3.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_3.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"Feature-Sex\"><a href=\"#Feature-Sex\" class=\"headerlink\" title=\"Feature: Sex\"></a>Feature: Sex</h3><p>女性存活率大于7成，男性约两成</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">2</span>, figsize=(<span class=\"number\">18</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">df[[<span class=\"string\">&#x27;Sex&#x27;</span>, <span class=\"string\">&#x27;Survived&#x27;</span>]].groupby([<span class=\"string\">&#x27;Sex&#x27;</span>]).mean().plot.bar(ax=ax[<span class=\"number\">0</span>])</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;Fraction of Survival with respect to Sex&#x27;</span>)</span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;Sex&#x27;</span>, hue=<span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Survived vs Dead counts with respect to Sex&#x27;</span>)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_4.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_4.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"Feature-Pclass\"><a href=\"#Feature-Pclass\" class=\"headerlink\" title=\"Feature: Pclass\"></a>Feature: Pclass</h3><p>大多数乘客在第三舱等，存活率依序从1舱等递减至3舱等</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">3</span>, figsize=(<span class=\"number\">18</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">df[<span class=\"string\">&#x27;Pclass&#x27;</span>].value_counts().plot.bar(</span><br><span class=\"line\">    color=[<span class=\"string\">&#x27;#BC8F8F&#x27;</span>, <span class=\"string\">&#x27;#F4A460&#x27;</span>, <span class=\"string\">&#x27;#DAA520&#x27;</span>], ax=ax[<span class=\"number\">0</span>])</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;Number Of Passengers with respect to Pclass&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_ylabel(<span class=\"string\">&#x27;Count&#x27;</span>)</span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;Pclass&#x27;</span>, hue=<span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Survived vs Dead counts with respect to Pclass&#x27;</span>)</span><br><span class=\"line\">sns.barplot(x=<span class=\"string\">&quot;Pclass&quot;</span>, y=<span class=\"string\">&quot;Survived&quot;</span>, data=df, ax=ax[<span class=\"number\">2</span>])</span><br><span class=\"line\">ax[<span class=\"number\">2</span>].set_title(<span class=\"string\">&#x27;Survival by Pclass&#x27;</span>)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_5.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_5.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"Feature-Age\"><a href=\"#Feature-Age\" class=\"headerlink\" title=\"Feature: Age\"></a>Feature: Age</h3><p>年龄分布上以年轻人、小孩居多，最高有80岁老人</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">1</span>, figsize=(<span class=\"number\">25</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">sns.barplot(df[<span class=\"string\">&#x27;Age&#x27;</span>], df[<span class=\"string\">&#x27;Survived&#x27;</span>], ci=<span class=\"literal\">None</span>, ax=ax)</span><br><span class=\"line\">ax.set_title(<span class=\"string\">&#x27;Survived vs Dead counts with respect to Pclass&#x27;</span>)</span><br><span class=\"line\">plt.xticks(rotation=<span class=\"number\">90</span>)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_6.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_6.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">2</span>, figsize=(<span class=\"number\">18</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;Age Box Plot&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_ylabel(<span class=\"string\">&#x27;Age Years&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">sns.boxplot(y=<span class=\"string\">&#x27;Age&#x27;</span>, data=df, ax=ax[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">sns.boxplot(x=<span class=\"string\">&#x27;Survived&#x27;</span>, y=<span class=\"string\">&#x27;Age&#x27;</span>, data=df, ax=ax[<span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Age Box Plot&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_ylabel(<span class=\"string\">&#x27;Age Years&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_7.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_7.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">2</span>, figsize=(<span class=\"number\">18</span>, <span class=\"number\">8</span>))</span><br><span class=\"line\">sns.violinplot(</span><br><span class=\"line\">    <span class=\"string\">&quot;Pclass&quot;</span>, <span class=\"string\">&quot;Age&quot;</span>, hue=<span class=\"string\">&quot;Survived&quot;</span>, data=df, split=<span class=\"literal\">True</span>, ax=ax[<span class=\"number\">0</span>])</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;Pclass and Age vs Survived&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_yticks(<span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">110</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\">sns.violinplot(</span><br><span class=\"line\">    <span class=\"string\">&quot;Sex&quot;</span>, <span class=\"string\">&quot;Age&quot;</span>, hue=<span class=\"string\">&quot;Survived&quot;</span>, data=df, split=<span class=\"literal\">True</span>, ax=ax[<span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Sex and Age vs Survived&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_yticks(<span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">110</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_8.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_8.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"Feature-Embarked\"><a href=\"#Feature-Embarked\" class=\"headerlink\" title=\"Feature: Embarked\"></a>Feature: Embarked</h3><p>大多数乘客是从S登船口，存活率以c最高</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">3</span>, figsize=(<span class=\"number\">12</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;Embarked&#x27;</span>, data=df, ax=ax[<span class=\"number\">0</span>])</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;No. Of Passengers Boarded&#x27;</span>)</span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;Embarked&#x27;</span>, hue=<span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Embarked vs Survived&#x27;</span>)</span><br><span class=\"line\">sns.barplot(<span class=\"string\">&#x27;Embarked&#x27;</span>, <span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">2</span>])</span><br><span class=\"line\">ax[<span class=\"number\">2</span>].set_title(<span class=\"string\">&#x27;Embarked vs Survived&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_9.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_9.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">2</span>, figsize=(<span class=\"number\">12</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;Embarked&#x27;</span>, hue=<span class=\"string\">&#x27;Sex&#x27;</span>, data=df, ax=ax[<span class=\"number\">0</span>])</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;Male-Female Split for Embarked&#x27;</span>)</span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;Embarked&#x27;</span>, hue=<span class=\"string\">&#x27;Pclass&#x27;</span>, data=df, ax=ax[<span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Embarked vs Pclass&#x27;</span>)</span><br><span class=\"line\">plt.subplots_adjust(wspace=<span class=\"number\">0.2</span>, hspace=<span class=\"number\">0.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_10.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_10.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"Features-SibSip-amp-Parch\"><a href=\"#Features-SibSip-amp-Parch\" class=\"headerlink\" title=\"Features: SibSip &amp; Parch\"></a>Features: SibSip &amp; Parch</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">2</span>, <span class=\"number\">2</span>, figsize=(<span class=\"number\">15</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;SibSp&#x27;</span>, hue=<span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">0</span>, <span class=\"number\">0</span>])</span><br><span class=\"line\">ax[<span class=\"number\">0</span>, <span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;SibSp vs Survived&#x27;</span>)</span><br><span class=\"line\">sns.barplot(<span class=\"string\">&#x27;SibSp&#x27;</span>, <span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">0</span>, <span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">0</span>, <span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;SibSp vs Survived&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;Parch&#x27;</span>, hue=<span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">1</span>, <span class=\"number\">0</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>, <span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;Parch vs Survived&#x27;</span>)</span><br><span class=\"line\">sns.barplot(<span class=\"string\">&#x27;Parch&#x27;</span>, <span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">1</span>, <span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>, <span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Parch vs Survived&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.subplots_adjust(wspace=<span class=\"number\">0.2</span>, hspace=<span class=\"number\">0.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_11.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_11.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"Feature-Fare\"><a href=\"#Feature-Fare\" class=\"headerlink\" title=\"Feature: Fare\"></a>Feature: Fare</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">1</span>, figsize=(<span class=\"number\">20</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">sns.distplot(df.Fare, ax=ax)</span><br><span class=\"line\">ax.set_title(<span class=\"string\">&#x27;Distribution of Fares&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_12.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_12.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"特征预处理\"><a href=\"#特征预处理\" class=\"headerlink\" title=\"特征预处理\"></a>特征预处理</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_tuned = df.copy(deep=<span class=\"literal\">True</span>)</span><br><span class=\"line\">df_tuned.sample(<span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>390</th>\n      <td>391</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Carter, Mr. William Ernest</td>\n      <td>male</td>\n      <td>36.0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>113760</td>\n      <td>120.0000</td>\n      <td>B96 B98</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>281</th>\n      <td>282</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Olsson, Mr. Nils Johan Goransson</td>\n      <td>male</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>347464</td>\n      <td>7.8542</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>691</th>\n      <td>692</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Karun, Miss. Manca</td>\n      <td>female</td>\n      <td>4.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>349256</td>\n      <td>13.4167</td>\n      <td>NaN</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>866</th>\n      <td>867</td>\n      <td>1</td>\n      <td>2</td>\n      <td>Duran y More, Miss. Asuncion</td>\n      <td>female</td>\n      <td>27.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>SC/PARIS 2149</td>\n      <td>13.8583</td>\n      <td>NaN</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>726</th>\n      <td>727</td>\n      <td>1</td>\n      <td>2</td>\n      <td>Renouf, Mrs. Peter Henry (Lillian Jefferys)</td>\n      <td>female</td>\n      <td>30.0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>31027</td>\n      <td>21.0000</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<h3 id=\"删除无用特征\"><a href=\"#删除无用特征\" class=\"headerlink\" title=\"删除无用特征\"></a>删除无用特征</h3><h4 id=\"PassengerId\"><a href=\"#PassengerId\" class=\"headerlink\" title=\"PassengerId\"></a>PassengerId</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_tuned = df_tuned.drop([<span class=\"string\">&#x27;PassengerId&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"填充空值\"><a href=\"#填充空值\" class=\"headerlink\" title=\"填充空值\"></a>填充空值</h3><h4 id=\"Age\"><a href=\"#Age\" class=\"headerlink\" title=\"Age\"></a>Age</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;原缺失值：&#123;a&#125;&quot;</span>.<span class=\"built_in\">format</span>(a=df_tuned[<span class=\"string\">&#x27;Age&#x27;</span>].isnull().<span class=\"built_in\">sum</span>()))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 采用众数填充</span></span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Age&#x27;</span>].fillna(df_tuned[<span class=\"string\">&#x27;Age&#x27;</span>].mode()[<span class=\"number\">0</span>], inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;后缺失值：&#123;a&#125;&quot;</span>.<span class=\"built_in\">format</span>(a=df_tuned[<span class=\"string\">&#x27;Age&#x27;</span>].isnull().<span class=\"built_in\">sum</span>()))</span><br></pre></td></tr></table></figure>\n<pre><code>原缺失值：177\n后缺失值：0\n</code></pre><h4 id=\"Cabin\"><a href=\"#Cabin\" class=\"headerlink\" title=\"Cabin\"></a>Cabin</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;原缺失值：&#123;a&#125;&quot;</span>.<span class=\"built_in\">format</span>(a=df_tuned[<span class=\"string\">&#x27;Cabin&#x27;</span>].isnull().<span class=\"built_in\">sum</span>()))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 采用是否有值填充</span></span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Cabin&#x27;</span>][df_tuned[<span class=\"string\">&#x27;Cabin&#x27;</span>].isnull()] = <span class=\"number\">0</span></span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Cabin&#x27;</span>][df_tuned[<span class=\"string\">&#x27;Cabin&#x27;</span>].notnull()] = <span class=\"number\">1</span></span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Cabin&#x27;</span>] = df_tuned[<span class=\"string\">&#x27;Cabin&#x27;</span>].astype(<span class=\"built_in\">int</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;后缺失值：&#123;a&#125;&quot;</span>.<span class=\"built_in\">format</span>(a=df_tuned[<span class=\"string\">&#x27;Cabin&#x27;</span>].isnull().<span class=\"built_in\">sum</span>()))</span><br></pre></td></tr></table></figure>\n<pre><code>原缺失值：687\n后缺失值：0\n</code></pre><h4 id=\"Embarked\"><a href=\"#Embarked\" class=\"headerlink\" title=\"Embarked\"></a>Embarked</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;原缺失值：&#123;a&#125;&quot;</span>.<span class=\"built_in\">format</span>(a=df_tuned[<span class=\"string\">&#x27;Embarked&#x27;</span>].isnull().<span class=\"built_in\">sum</span>()))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 采用众数填充</span></span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Embarked&#x27;</span>].fillna(df_tuned[<span class=\"string\">&#x27;Embarked&#x27;</span>].mode()[<span class=\"number\">0</span>], inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;后缺失值：&#123;a&#125;&quot;</span>.<span class=\"built_in\">format</span>(a=df_tuned[<span class=\"string\">&#x27;Embarked&#x27;</span>].isnull().<span class=\"built_in\">sum</span>()))</span><br></pre></td></tr></table></figure>\n<pre><code>原缺失值：2\n后缺失值：0\n</code></pre><h3 id=\"特征分箱\"><a href=\"#特征分箱\" class=\"headerlink\" title=\"特征分箱\"></a>特征分箱</h3><h4 id=\"Name：取出称号\"><a href=\"#Name：取出称号\" class=\"headerlink\" title=\"Name：取出称号\"></a>Name：取出称号</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Title&#x27;</span>] = df_tuned[<span class=\"string\">&#x27;Name&#x27;</span>].<span class=\"built_in\">str</span>.extract(<span class=\"string\">&#x27;,\\s(.*?)\\.&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title_Dict = &#123;&#125;</span><br><span class=\"line\">title_Dict.update(<span class=\"built_in\">dict</span>.fromkeys([<span class=\"string\">&#x27;Capt&#x27;</span>, <span class=\"string\">&#x27;Col&#x27;</span>, <span class=\"string\">&#x27;Major&#x27;</span>, <span class=\"string\">&#x27;Dr&#x27;</span>, <span class=\"string\">&#x27;Rev&#x27;</span>], <span class=\"string\">&#x27;Officer&#x27;</span>))</span><br><span class=\"line\">title_Dict.update(<span class=\"built_in\">dict</span>.fromkeys([<span class=\"string\">&#x27;Jonkheer&#x27;</span>, <span class=\"string\">&#x27;Don&#x27;</span>, <span class=\"string\">&#x27;Sir&#x27;</span>, <span class=\"string\">&#x27;the Countess&#x27;</span>, <span class=\"string\">&#x27;Dona&#x27;</span>, <span class=\"string\">&#x27;Lady&#x27;</span>], <span class=\"string\">&#x27;Royalty&#x27;</span>))</span><br><span class=\"line\">title_Dict.update(<span class=\"built_in\">dict</span>.fromkeys([<span class=\"string\">&#x27;Mme&#x27;</span>, <span class=\"string\">&#x27;Ms&#x27;</span>, <span class=\"string\">&#x27;Mrs&#x27;</span>], <span class=\"string\">&#x27;Mrs&#x27;</span>))</span><br><span class=\"line\">title_Dict.update(<span class=\"built_in\">dict</span>.fromkeys([<span class=\"string\">&#x27;Mlle&#x27;</span>, <span class=\"string\">&#x27;Miss&#x27;</span>], <span class=\"string\">&#x27;Miss&#x27;</span>))</span><br><span class=\"line\">title_Dict.update(<span class=\"built_in\">dict</span>.fromkeys([<span class=\"string\">&#x27;Mr&#x27;</span>], <span class=\"string\">&#x27;Mr&#x27;</span>))</span><br><span class=\"line\">title_Dict.update(<span class=\"built_in\">dict</span>.fromkeys([<span class=\"string\">&#x27;Master&#x27;</span>], <span class=\"string\">&#x27;Master&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">title_Dict</span><br></pre></td></tr></table></figure>\n<pre><code>&#123;&#39;Capt&#39;: &#39;Officer&#39;,\n &#39;Col&#39;: &#39;Officer&#39;,\n &#39;Major&#39;: &#39;Officer&#39;,\n &#39;Dr&#39;: &#39;Officer&#39;,\n &#39;Rev&#39;: &#39;Officer&#39;,\n &#39;Jonkheer&#39;: &#39;Royalty&#39;,\n &#39;Don&#39;: &#39;Royalty&#39;,\n &#39;Sir&#39;: &#39;Royalty&#39;,\n &#39;the Countess&#39;: &#39;Royalty&#39;,\n &#39;Dona&#39;: &#39;Royalty&#39;,\n &#39;Lady&#39;: &#39;Royalty&#39;,\n &#39;Mme&#39;: &#39;Mrs&#39;,\n &#39;Ms&#39;: &#39;Mrs&#39;,\n &#39;Mrs&#39;: &#39;Mrs&#39;,\n &#39;Mlle&#39;: &#39;Miss&#39;,\n &#39;Miss&#39;: &#39;Miss&#39;,\n &#39;Mr&#39;: &#39;Mr&#39;,\n &#39;Master&#39;: &#39;Master&#39;&#125;\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Title&#x27;</span>] = df_tuned[<span class=\"string\">&#x27;Title&#x27;</span>].<span class=\"built_in\">map</span>(title_Dict)</span><br><span class=\"line\">df_tuned = df_tuned.drop([<span class=\"string\">&#x27;Name&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">df_tuned.head()</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n      <th>Title</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<h4 id=\"Fare\"><a href=\"#Fare\" class=\"headerlink\" title=\"Fare\"></a>Fare</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fare_category</span>(<span class=\"params\">fare</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> fare &lt;= <span class=\"number\">4</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> fare &lt;= <span class=\"number\">10</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> fare &lt;= <span class=\"number\">30</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> fare &lt;= <span class=\"number\">45</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">3</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">4</span></span><br><span class=\"line\"></span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Fare&#x27;</span>] = df_tuned[<span class=\"string\">&#x27;Fare&#x27;</span>].<span class=\"built_in\">map</span>(fare_category)</span><br></pre></td></tr></table></figure>\n<h4 id=\"Family-size\"><a href=\"#Family-size\" class=\"headerlink\" title=\"Family_size\"></a>Family_size</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Family_Size&#x27;</span>] = df_tuned[<span class=\"string\">&#x27;Parch&#x27;</span>] + df_tuned[<span class=\"string\">&#x27;SibSp&#x27;</span>] + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">family_size_category</span>(<span class=\"params\">ppl</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ppl &lt;= <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> ppl &lt;= <span class=\"number\">4</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> ppl &lt;= <span class=\"number\">6</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Family_Size&#x27;</span>] = df_tuned[<span class=\"string\">&#x27;Family_Size&#x27;</span>].<span class=\"built_in\">map</span>(family_size_category)</span><br></pre></td></tr></table></figure>\n<h4 id=\"Ticket\"><a href=\"#Ticket\" class=\"headerlink\" title=\"Ticket\"></a>Ticket</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Ticket&#x27;</span>] = df_tuned[<span class=\"string\">&#x27;Ticket&#x27;</span>].<span class=\"built_in\">str</span>.extract(<span class=\"string\">&#x27;(^\\d+|\\s\\d+)&#x27;</span>)</span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Ticket&#x27;</span>].fillna(<span class=\"number\">0</span>,inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Ticket&#x27;</span>] = df_tuned[<span class=\"string\">&#x27;Ticket&#x27;</span>].astype(<span class=\"built_in\">float</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"处理分类特征\"><a href=\"#处理分类特征\" class=\"headerlink\" title=\"处理分类特征\"></a>处理分类特征</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_tuned</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n      <th>Title</th>\n      <th>Family_Size</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>21171.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>17599.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3101282.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>330877.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>0</td>\n      <td>1</td>\n      <td>male</td>\n      <td>54.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17463.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>2.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>349909.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Master</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>27.0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>347742.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>14.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>237736.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>4.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>9549.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>58.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>113783.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>20.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2151.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>39.0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>347082.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>14.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>350406.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>55.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>248706.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>2.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>382652.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Master</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>1</td>\n      <td>2</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>244373.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>31.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>345763.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2649.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>239865.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>1</td>\n      <td>2</td>\n      <td>male</td>\n      <td>34.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>248698.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>15.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>330923.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>1</td>\n      <td>1</td>\n      <td>male</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>113788.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>8.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>349909.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>347077.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2631.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>0</td>\n      <td>1</td>\n      <td>male</td>\n      <td>19.0</td>\n      <td>3</td>\n      <td>2</td>\n      <td>19950.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>330959.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349216.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>861</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>21.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>28134.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>862</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>48.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17466.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>863</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>8</td>\n      <td>2</td>\n      <td>2343.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>864</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>233866.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>865</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>42.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>236852.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>866</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>27.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2149.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>867</th>\n      <td>0</td>\n      <td>1</td>\n      <td>male</td>\n      <td>31.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17590.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>868</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>345777.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>869</th>\n      <td>1</td>\n      <td>3</td>\n      <td>male</td>\n      <td>4.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>347742.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Master</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>870</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349248.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>871</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>47.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>11751.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>872</th>\n      <td>0</td>\n      <td>1</td>\n      <td>male</td>\n      <td>33.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>695.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>873</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>47.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>345765.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>874</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>28.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>3381.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>875</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>15.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2667.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>876</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>20.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7534.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>877</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>19.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349212.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>878</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349217.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>879</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>56.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>11767.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>880</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>25.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>230433.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>881</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>33.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349257.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>882</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>22.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7552.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>883</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>34068.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>884</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>25.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>392076.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>885</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>39.0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>382652.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Mrs</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>886</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>27.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>211536.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Officer</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>887</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>19.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>112053.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>888</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>6607.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>889</th>\n      <td>1</td>\n      <td>1</td>\n      <td>male</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>111369.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>890</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>32.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>370376.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>891 rows × 12 columns</p>\n</div>\n\n\n\n<h4 id=\"Embarked-Sex-Pclass-Title-Fare-Category-Family-Size\"><a href=\"#Embarked-Sex-Pclass-Title-Fare-Category-Family-Size\" class=\"headerlink\" title=\"Embarked, Sex, Pclass, Title, Fare_Category, Family_Size,\"></a>Embarked, Sex, Pclass, Title, Fare_Category, Family_Size,</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dummies_Pclass = pd.get_dummies(df_tuned[<span class=\"string\">&#x27;Pclass&#x27;</span>], prefix=<span class=\"string\">&#x27;Pclass&#x27;</span>)</span><br><span class=\"line\">dummies_Sex = pd.get_dummies(df_tuned[<span class=\"string\">&#x27;Sex&#x27;</span>], prefix=<span class=\"string\">&#x27;Sex&#x27;</span>)</span><br><span class=\"line\">dummies_Fare = pd.get_dummies(df_tuned[<span class=\"string\">&#x27;Fare&#x27;</span>], prefix=<span class=\"string\">&#x27;Pclass&#x27;</span>)</span><br><span class=\"line\">dummies_Embarked = pd.get_dummies(df_tuned[<span class=\"string\">&#x27;Embarked&#x27;</span>], prefix=<span class=\"string\">&#x27;Embarked&#x27;</span>)</span><br><span class=\"line\">dummies_Title = pd.get_dummies(df_tuned[<span class=\"string\">&#x27;Title&#x27;</span>], prefix=<span class=\"string\">&#x27;Pclass&#x27;</span>)</span><br><span class=\"line\">dummies_Family_Size = pd.get_dummies(df_tuned[<span class=\"string\">&#x27;Family_Size&#x27;</span>], prefix=<span class=\"string\">&#x27;Pclass&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df_tuned = pd.concat(</span><br><span class=\"line\">    [df_tuned, dummies_Embarked, dummies_Sex, dummies_Pclass, dummies_Title, dummies_Fare, dummies_Family_Size],</span><br><span class=\"line\">    axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">df_tuned.drop([<span class=\"string\">&#x27;Pclass&#x27;</span>, <span class=\"string\">&#x27;Sex&#x27;</span>, <span class=\"string\">&#x27;Fare&#x27;</span>, <span class=\"string\">&#x27;Embarked&#x27;</span>, <span class=\"string\">&#x27;Title&#x27;</span>, <span class=\"string\">&#x27;Family_Size&#x27;</span>],</span><br><span class=\"line\">              axis=<span class=\"number\">1</span>,</span><br><span class=\"line\">              inplace=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 最后检查</span></span><br><span class=\"line\">df_tuned.info()</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 891 entries, 0 to 890\nData columns (total 29 columns):\nSurvived          891 non-null int64\nAge               891 non-null float64\nSibSp             891 non-null int64\nParch             891 non-null int64\nTicket            891 non-null float64\nCabin             891 non-null int64\nEmbarked_C        891 non-null uint8\nEmbarked_Q        891 non-null uint8\nEmbarked_S        891 non-null uint8\nSex_female        891 non-null uint8\nSex_male          891 non-null uint8\nPclass_1          891 non-null uint8\nPclass_2          891 non-null uint8\nPclass_3          891 non-null uint8\nPclass_Master     891 non-null uint8\nPclass_Miss       891 non-null uint8\nPclass_Mr         891 non-null uint8\nPclass_Mrs        891 non-null uint8\nPclass_Officer    891 non-null uint8\nPclass_Royalty    891 non-null uint8\nPclass_0          891 non-null uint8\nPclass_1          891 non-null uint8\nPclass_2          891 non-null uint8\nPclass_3          891 non-null uint8\nPclass_4          891 non-null uint8\nPclass_0          891 non-null uint8\nPclass_1          891 non-null uint8\nPclass_2          891 non-null uint8\nPclass_3          891 non-null uint8\ndtypes: float64(2), int64(4), uint8(23)\nmemory usage: 61.9 KB\n</code></pre><h3 id=\"数据标准化\"><a href=\"#数据标准化\" class=\"headerlink\" title=\"数据标准化\"></a>数据标准化</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\">ss = StandardScaler()</span><br><span class=\"line\">data = ss.fit_transform(df_tuned[<span class=\"string\">&#x27;Ticket&#x27;</span>].values.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>))</span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Ticket&#x27;</span>] = pd.DataFrame(data)</span><br></pre></td></tr></table></figure>\n<h3 id=\"数据划分\"><a href=\"#数据划分\" class=\"headerlink\" title=\"数据划分\"></a>数据划分</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\">X = df_tuned[:].drop(<span class=\"string\">&quot;Survived&quot;</span>, axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">y = df_tuned[<span class=\"string\">&quot;Survived&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(</span><br><span class=\"line\">    X, y, test_size=<span class=\"number\">0.2</span>, shuffle=<span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据建模\"><a href=\"#数据建模\" class=\"headerlink\" title=\"数据建模\"></a>数据建模</h2><h3 id=\"六大模型\"><a href=\"#六大模型\" class=\"headerlink\" title=\"六大模型\"></a>六大模型</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> ensemble</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> SVC</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier, GradientBoostingClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_score</span><br><span class=\"line\"></span><br><span class=\"line\">names = [<span class=\"string\">&quot;LR&quot;</span>, <span class=\"string\">&quot;SVC&quot;</span>, <span class=\"string\">&#x27;DT&#x27;</span>, <span class=\"string\">&quot;RF&quot;</span>, <span class=\"string\">&quot;KNN&quot;</span>, <span class=\"string\">&quot;GBDT&quot;</span>, <span class=\"string\">&quot;Voting&quot;</span>]</span><br><span class=\"line\">models = [LR, svc, DT, RF, KNN, GBDT, voting]</span><br><span class=\"line\">evaluates = [<span class=\"string\">&#x27;accuracy&#x27;</span>, <span class=\"string\">&#x27;precision&#x27;</span>, <span class=\"string\">&#x27;recall&#x27;</span>, <span class=\"string\">&#x27;f1&#x27;</span>, <span class=\"string\">&#x27;roc_auc&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">LR = LogisticRegression(C=<span class=\"number\">1.0</span>, penalty=<span class=\"string\">&#x27;l1&#x27;</span>, tol=<span class=\"number\">1e-6</span>)</span><br><span class=\"line\">LR = LR.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">svc = SVC(kernel=<span class=\"string\">&#x27;linear&#x27;</span>, probability=<span class=\"literal\">True</span>)</span><br><span class=\"line\">svc = svc.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">DT = DecisionTreeClassifier(</span><br><span class=\"line\">    max_features=<span class=\"string\">&#x27;sqrt&#x27;</span>, max_depth=<span class=\"number\">35</span>, criterion=<span class=\"string\">&#x27;entropy&#x27;</span>, random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\">DT = DT.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">RF = RandomForestClassifier(</span><br><span class=\"line\">    n_estimators=<span class=\"number\">750</span>,</span><br><span class=\"line\">    criterion=<span class=\"string\">&#x27;gini&#x27;</span>,</span><br><span class=\"line\">    max_features=<span class=\"string\">&#x27;sqrt&#x27;</span>,</span><br><span class=\"line\">    max_depth=<span class=\"number\">3</span>,</span><br><span class=\"line\">    min_samples_split=<span class=\"number\">4</span>,</span><br><span class=\"line\">    min_samples_leaf=<span class=\"number\">2</span>,</span><br><span class=\"line\">    n_jobs=<span class=\"number\">50</span>,</span><br><span class=\"line\">    random_state=<span class=\"number\">42</span>,</span><br><span class=\"line\">    verbose=<span class=\"number\">1</span>)</span><br><span class=\"line\">RF = RF.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">KNN = KNeighborsClassifier()</span><br><span class=\"line\">KNN = KNN.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">GBDT = GradientBoostingClassifier(</span><br><span class=\"line\">    n_estimators=<span class=\"number\">900</span>,</span><br><span class=\"line\">    learning_rate=<span class=\"number\">0.0008</span>,</span><br><span class=\"line\">    loss=<span class=\"string\">&#x27;exponential&#x27;</span>,</span><br><span class=\"line\">    min_samples_split=<span class=\"number\">3</span>,</span><br><span class=\"line\">    min_samples_leaf=<span class=\"number\">2</span>,</span><br><span class=\"line\">    max_features=<span class=\"string\">&#x27;sqrt&#x27;</span>,</span><br><span class=\"line\">    max_depth=<span class=\"number\">3</span>,</span><br><span class=\"line\">    random_state=<span class=\"number\">42</span>,</span><br><span class=\"line\">    verbose=<span class=\"number\">1</span>)</span><br><span class=\"line\">GBDT = GBDT.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">voting = ensemble.VotingClassifier(</span><br><span class=\"line\">    estimators=[(<span class=\"string\">&#x27;LR&#x27;</span>, LR), (<span class=\"string\">&#x27;SVC&#x27;</span>, svc), (<span class=\"string\">&#x27;DT&#x27;</span>, DT), (<span class=\"string\">&#x27;RF&#x27;</span>, RF), (<span class=\"string\">&#x27;KNN&#x27;</span>, KNN),</span><br><span class=\"line\">                (<span class=\"string\">&#x27;GBDT&#x27;</span>, GBDT)],</span><br><span class=\"line\">    voting=<span class=\"string\">&#x27;soft&#x27;</span>,</span><br><span class=\"line\">    weights=[i.score(X_test, y_test) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> models[<span class=\"number\">0</span>:<span class=\"number\">6</span>]],</span><br><span class=\"line\">    n_jobs=<span class=\"number\">50</span>)</span><br><span class=\"line\">voting = voting.fit(X_train, y_train)</span><br></pre></td></tr></table></figure>\n<pre><code>[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.3s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.5s finished\n\n\n      Iter       Train Loss   Remaining Time \n         1           0.9754            1.41s\n         2           0.9751            1.32s\n         3           0.9748            1.24s\n         4           0.9745            1.20s\n         5           0.9742            1.18s\n         6           0.9739            1.13s\n         7           0.9738            1.08s\n         8           0.9735            1.05s\n         9           0.9733            1.02s\n        10           0.9730            1.00s\n        20           0.9703            0.77s\n        30           0.9680            0.68s\n        40           0.9655            0.63s\n        50           0.9628            0.62s\n        60           0.9602            0.59s\n        70           0.9576            0.57s\n        80           0.9549            0.55s\n        90           0.9522            0.53s\n       100           0.9498            0.52s\n       200           0.9259            0.43s\n       300           0.9040            0.37s\n       400           0.8842            0.31s\n       500           0.8660            0.26s\n       600           0.8493            0.20s\n       700           0.8340            0.13s\n       800           0.8204            0.06s\n       900           0.8078            0.00s\n\n\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_list = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> name,model <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(names,models):</span><br><span class=\"line\">    y_train_pred = model.predict(X_train)</span><br><span class=\"line\">    y_test_pred = model.predict(X_test)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#accuracy</span></span><br><span class=\"line\">    train_accuracy = model.score(X_train,y_train)</span><br><span class=\"line\">    test_accuracy = model.score(X_test,y_test)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#precision   </span></span><br><span class=\"line\">    train_precision = precision_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_precision = precision_score(y_test,y_test_pred)   </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#recall</span></span><br><span class=\"line\">    train_recall = recall_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_recall = recall_score(y_test,y_test_pred)   </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#f1</span></span><br><span class=\"line\">    train_f1 = f1_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_f1 = f1_score(y_test,y_test_pred)   </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#auc</span></span><br><span class=\"line\">    y_train_pred = model.predict_proba(X_train)[:,<span class=\"number\">1</span>]</span><br><span class=\"line\">    y_test_pred = model.predict_proba(X_test)[:,<span class=\"number\">1</span>]</span><br><span class=\"line\">    </span><br><span class=\"line\">    train_auc = roc_auc_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_auc = roc_auc_score(y_test,y_test_pred)</span><br><span class=\"line\">    </span><br><span class=\"line\">    df = pd.DataFrame(np.array([train_accuracy,train_precision,train_recall,train_f1,train_auc,test_accuracy,test_precision,test_recall,test_f1,test_auc]).reshape(<span class=\"number\">2</span>,-<span class=\"number\">1</span>),</span><br><span class=\"line\">                  index = [<span class=\"string\">&#x27;train&#x27;</span>,<span class=\"string\">&#x27;test&#x27;</span>],</span><br><span class=\"line\">                  columns = [<span class=\"string\">&#x27;Accuracy&#x27;</span>,<span class=\"string\">&#x27;Precision&#x27;</span>,<span class=\"string\">&#x27;Recall&#x27;</span>,<span class=\"string\">&#x27;F1-Score&#x27;</span>,<span class=\"string\">&#x27;AUC-Score&#x27;</span>])</span><br><span class=\"line\">    df_list.append(df)</span><br><span class=\"line\"></span><br><span class=\"line\">pd.concat(df_list,axis=<span class=\"number\">0</span>,keys=names)</span><br></pre></td></tr></table></figure>\n<pre><code>[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n</code></pre><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>Accuracy</th>\n      <th>Precision</th>\n      <th>Recall</th>\n      <th>F1-Score</th>\n      <th>AUC-Score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">LR</th>\n      <th>train</th>\n      <td>0.817416</td>\n      <td>0.791339</td>\n      <td>0.723022</td>\n      <td>0.755639</td>\n      <td>0.873811</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.860335</td>\n      <td>0.819672</td>\n      <td>0.781250</td>\n      <td>0.800000</td>\n      <td>0.912772</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">SVC</th>\n      <th>train</th>\n      <td>0.820225</td>\n      <td>0.804878</td>\n      <td>0.712230</td>\n      <td>0.755725</td>\n      <td>0.860508</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.854749</td>\n      <td>0.816667</td>\n      <td>0.765625</td>\n      <td>0.790323</td>\n      <td>0.899321</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">DT</th>\n      <th>train</th>\n      <td>0.998596</td>\n      <td>1.000000</td>\n      <td>0.996403</td>\n      <td>0.998198</td>\n      <td>0.999992</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.754190</td>\n      <td>0.642857</td>\n      <td>0.703125</td>\n      <td>0.671642</td>\n      <td>0.748981</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">RF</th>\n      <th>train</th>\n      <td>0.817416</td>\n      <td>0.803279</td>\n      <td>0.705036</td>\n      <td>0.750958</td>\n      <td>0.872949</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.843575</td>\n      <td>0.810345</td>\n      <td>0.734375</td>\n      <td>0.770492</td>\n      <td>0.895856</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">KNN</th>\n      <th>train</th>\n      <td>0.841292</td>\n      <td>0.839506</td>\n      <td>0.733813</td>\n      <td>0.783109</td>\n      <td>0.918315</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.821229</td>\n      <td>0.758065</td>\n      <td>0.734375</td>\n      <td>0.746032</td>\n      <td>0.852921</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">GBDT</th>\n      <th>train</th>\n      <td>0.818820</td>\n      <td>0.898396</td>\n      <td>0.604317</td>\n      <td>0.722581</td>\n      <td>0.881597</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.843575</td>\n      <td>0.909091</td>\n      <td>0.625000</td>\n      <td>0.740741</td>\n      <td>0.904823</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Voting</th>\n      <th>train</th>\n      <td>0.856742</td>\n      <td>0.872881</td>\n      <td>0.741007</td>\n      <td>0.801556</td>\n      <td>0.971074</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.860335</td>\n      <td>0.830508</td>\n      <td>0.765625</td>\n      <td>0.796748</td>\n      <td>0.898505</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<h3 id=\"数据预测\"><a href=\"#数据预测\" class=\"headerlink\" title=\"数据预测\"></a>数据预测</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_test = pd.read_csv(<span class=\"string\">&quot;2019-08-15_泰坦尼克之灾_test.csv&quot;</span>)</span><br><span class=\"line\">df_tuned_test = df_test.copy(deep=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df_tuned_test = df_tuned_test.drop([<span class=\"string\">&#x27;PassengerId&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Age&#x27;</span>].fillna(df_tuned_test[<span class=\"string\">&#x27;Age&#x27;</span>].mode()[<span class=\"number\">0</span>], inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Cabin&#x27;</span>][df_tuned_test[<span class=\"string\">&#x27;Cabin&#x27;</span>].isnull()] = <span class=\"number\">0</span></span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Cabin&#x27;</span>][df_tuned_test[<span class=\"string\">&#x27;Cabin&#x27;</span>].notnull()] = <span class=\"number\">1</span></span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Cabin&#x27;</span>] = df_tuned_test[<span class=\"string\">&#x27;Cabin&#x27;</span>].astype(<span class=\"built_in\">int</span>)</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Embarked&#x27;</span>].fillna(</span><br><span class=\"line\">    df_tuned_test[<span class=\"string\">&#x27;Embarked&#x27;</span>].mode()[<span class=\"number\">0</span>], inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Title&#x27;</span>] = df_tuned_test[<span class=\"string\">&#x27;Name&#x27;</span>].<span class=\"built_in\">str</span>.extract(<span class=\"string\">&#x27;,\\s(.*?)\\.&#x27;</span>)</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Title&#x27;</span>] = df_tuned_test[<span class=\"string\">&#x27;Title&#x27;</span>].<span class=\"built_in\">map</span>(title_Dict)</span><br><span class=\"line\">df_tuned_test = df_tuned_test.drop([<span class=\"string\">&#x27;Name&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Fare&#x27;</span>] = df_tuned_test[<span class=\"string\">&#x27;Fare&#x27;</span>].<span class=\"built_in\">map</span>(fare_category)</span><br><span class=\"line\">df_tuned_test[</span><br><span class=\"line\">    <span class=\"string\">&#x27;Family_Size&#x27;</span>] = df_tuned_test[<span class=\"string\">&#x27;Parch&#x27;</span>] + df_tuned_test[<span class=\"string\">&#x27;SibSp&#x27;</span>] + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Family_Size&#x27;</span>] = df_tuned_test[<span class=\"string\">&#x27;Family_Size&#x27;</span>].<span class=\"built_in\">map</span>(</span><br><span class=\"line\">    family_size_category)</span><br><span class=\"line\"></span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Ticket&#x27;</span>] = df_tuned_test[<span class=\"string\">&#x27;Ticket&#x27;</span>].<span class=\"built_in\">str</span>.extract(<span class=\"string\">&#x27;(^\\d+|\\s\\d+)&#x27;</span>)</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Ticket&#x27;</span>].fillna(<span class=\"number\">0</span>, inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Ticket&#x27;</span>] = df_tuned_test[<span class=\"string\">&#x27;Ticket&#x27;</span>].astype(<span class=\"built_in\">float</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">dummies_Pclass = pd.get_dummies(df_tuned_test[<span class=\"string\">&#x27;Pclass&#x27;</span>], prefix=<span class=\"string\">&#x27;Pclass&#x27;</span>)</span><br><span class=\"line\">dummies_Sex = pd.get_dummies(df_tuned_test[<span class=\"string\">&#x27;Sex&#x27;</span>], prefix=<span class=\"string\">&#x27;Sex&#x27;</span>)</span><br><span class=\"line\">dummies_Fare = pd.get_dummies(df_tuned_test[<span class=\"string\">&#x27;Fare&#x27;</span>], prefix=<span class=\"string\">&#x27;Pclass&#x27;</span>)</span><br><span class=\"line\">dummies_Embarked = pd.get_dummies(df_tuned_test[<span class=\"string\">&#x27;Embarked&#x27;</span>], prefix=<span class=\"string\">&#x27;Embarked&#x27;</span>)</span><br><span class=\"line\">dummies_Title = pd.get_dummies(df_tuned_test[<span class=\"string\">&#x27;Title&#x27;</span>], prefix=<span class=\"string\">&#x27;Pclass&#x27;</span>)</span><br><span class=\"line\">dummies_Family_Size = pd.get_dummies(</span><br><span class=\"line\">    df_tuned_test[<span class=\"string\">&#x27;Family_Size&#x27;</span>], prefix=<span class=\"string\">&#x27;Pclass&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df_tuned_test = pd.concat([</span><br><span class=\"line\">    df_tuned_test, dummies_Embarked, dummies_Sex, dummies_Pclass,</span><br><span class=\"line\">    dummies_Title, dummies_Fare, dummies_Family_Size</span><br><span class=\"line\">],</span><br><span class=\"line\">                          axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">df_tuned_test.drop(</span><br><span class=\"line\">    [<span class=\"string\">&#x27;Pclass&#x27;</span>, <span class=\"string\">&#x27;Sex&#x27;</span>, <span class=\"string\">&#x27;Fare&#x27;</span>, <span class=\"string\">&#x27;Embarked&#x27;</span>, <span class=\"string\">&#x27;Title&#x27;</span>, <span class=\"string\">&#x27;Family_Size&#x27;</span>],</span><br><span class=\"line\">    axis=<span class=\"number\">1</span>,</span><br><span class=\"line\">    inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">data = ss.fit_transform(df_tuned_test[<span class=\"string\">&#x27;Ticket&#x27;</span>].values.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>))</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Ticket&#x27;</span>] = pd.DataFrame(data)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">predictions = voting.predict(df_tuned_test)</span><br><span class=\"line\">result = pd.DataFrame(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;PassengerId&#x27;</span>: df_test[<span class=\"string\">&#x27;PassengerId&#x27;</span>].as_matrix(),</span><br><span class=\"line\">    <span class=\"string\">&#x27;Survived&#x27;</span>: predictions.astype(np.int32)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">result.to_csv(<span class=\"string\">&quot;2019-08-15_泰坦尼克之灾_predictions.csv&quot;</span>, index=<span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://blog.csdn.net/m0_37725003/article/details/81095555\" >集成学习voting Classifier在sklearn中的实现<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://zhuanlan.zhihu.com/p/30538352\" >Kaggle泰坦尼克号生存模型——250个特征量的融合模型，排名8%<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://kaggle.com/vikumsw/basic-feature-visualizations\" >Basic Feature Visualizations<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"数据集载入\"><a href=\"#数据集载入\" class=\"headerlink\" title=\"数据集载入\"></a>数据集载入</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib <span class=\"keyword\">import</span> pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\">%matplotlib inline</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"><span class=\"keyword\">import</span> warnings</span><br><span class=\"line\">warnings.filterwarnings(<span class=\"string\">&#x27;ignore&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">&quot;2019-08-15_泰坦尼克之灾_train.csv&quot;</span>)</span><br><span class=\"line\">df.head()</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Braund, Mr. Owen Harris</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>C85</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Heikkinen, Miss. Laina</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>C123</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Allen, Mr. William Henry</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.info()</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 891 entries, 0 to 890\nData columns (total 12 columns):\nPassengerId    891 non-null int64\nSurvived       891 non-null int64\nPclass         891 non-null int64\nName           891 non-null object\nSex            891 non-null object\nAge            714 non-null float64\nSibSp          891 non-null int64\nParch          891 non-null int64\nTicket         891 non-null object\nFare           891 non-null float64\nCabin          204 non-null object\nEmbarked       889 non-null object\ndtypes: float64(2), int64(5), object(5)\nmemory usage: 83.6+ KB\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedic = &#123;&#125;  <span class=\"comment\"># 类型字典</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> df.columns:</span><br><span class=\"line\">    typedic[<span class=\"built_in\">str</span>(</span><br><span class=\"line\">        df[name].dtype)] = typedic.get(<span class=\"built_in\">str</span>(df[name].dtype), []) + [name]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> key, value <span class=\"keyword\">in</span> typedic.items():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&#123;&#125;格式共有&#123;&#125;个: &#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(key, <span class=\"built_in\">len</span>(value), value))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>int64格式共有5个: [&#39;PassengerId&#39;, &#39;Survived&#39;, &#39;Pclass&#39;, &#39;SibSp&#39;, &#39;Parch&#39;]\n\nobject格式共有5个: [&#39;Name&#39;, &#39;Sex&#39;, &#39;Ticket&#39;, &#39;Cabin&#39;, &#39;Embarked&#39;]\n\nfloat64格式共有2个: [&#39;Age&#39;, &#39;Fare&#39;]\n</code></pre><p>至此可以看到数据不全的有：[‘Age’,’Cabin’]</p>\n<p>需要调整类型或删除无用资讯的包含：[‘Name’, ‘Sex’, ‘Ticket’, ‘Cabin’, ‘Embarked’]</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.Survived.value_counts()</span><br></pre></td></tr></table></figure>\n<pre><code>0    549\n1    342\nName: Survived, dtype: int64\n</code></pre><h2 id=\"数据探索\"><a href=\"#数据探索\" class=\"headerlink\" title=\"数据探索\"></a>数据探索</h2><h3 id=\"察看空值分布\"><a href=\"#察看空值分布\" class=\"headerlink\" title=\"察看空值分布\"></a>察看空值分布</h3><p>可以看到总共有三个特征有空值，分别是 Cabin 、 Age 与 Embarked</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fig, ax = plt.subplots(figsize=(<span class=\"number\">9</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">sns.heatmap(df.isnull(), cbar=<span class=\"literal\">False</span>, cmap=<span class=\"string\">&quot;YlGnBu_r&quot;</span>)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_1.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_1.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">total = df.isnull().<span class=\"built_in\">sum</span>().sort_values(ascending=<span class=\"literal\">False</span>)</span><br><span class=\"line\">percent = <span class=\"built_in\">round</span>(df.isnull().<span class=\"built_in\">sum</span>().sort_values(ascending=<span class=\"literal\">False</span>) / <span class=\"built_in\">len</span>(df) * <span class=\"number\">100</span>,</span><br><span class=\"line\">                <span class=\"number\">2</span>)</span><br><span class=\"line\">temp = pd.concat([total, percent], axis=<span class=\"number\">1</span>, keys=[<span class=\"string\">&#x27;Total&#x27;</span>, <span class=\"string\">&#x27;Percent&#x27;</span>])</span><br><span class=\"line\">temp</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Total</th>\n      <th>Percent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Cabin</th>\n      <td>687</td>\n      <td>77.10</td>\n    </tr>\n    <tr>\n      <th>Age</th>\n      <td>177</td>\n      <td>19.87</td>\n    </tr>\n    <tr>\n      <th>Embarked</th>\n      <td>2</td>\n      <td>0.22</td>\n    </tr>\n    <tr>\n      <th>Fare</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Ticket</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Parch</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>SibSp</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Sex</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Name</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Pclass</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Survived</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>PassengerId</th>\n      <td>0</td>\n      <td>0.00</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ax = sns.barplot(data=df.isnull())</span><br><span class=\"line\">plt.xticks(rotation=<span class=\"number\">90</span>)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_2.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_2.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"Column-Survival\"><a href=\"#Column-Survival\" class=\"headerlink\" title=\"Column : Survival\"></a>Column : Survival</h3><p>存活的有 61.6%，占多数，样本比例为 1.6</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">2</span>, figsize=(<span class=\"number\">13</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">df[<span class=\"string\">&#x27;Survived&#x27;</span>].value_counts().plot.pie(</span><br><span class=\"line\">    explode=[<span class=\"number\">0</span>, <span class=\"number\">0.05</span>], autopct=<span class=\"string\">&#x27;%1.1f%%&#x27;</span>, ax=ax[<span class=\"number\">0</span>], shadow=<span class=\"literal\">True</span>)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;Survived&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_ylabel(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Survived&#x27;</span>)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_3.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_3.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"Feature-Sex\"><a href=\"#Feature-Sex\" class=\"headerlink\" title=\"Feature: Sex\"></a>Feature: Sex</h3><p>女性存活率大于7成，男性约两成</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">2</span>, figsize=(<span class=\"number\">18</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">df[[<span class=\"string\">&#x27;Sex&#x27;</span>, <span class=\"string\">&#x27;Survived&#x27;</span>]].groupby([<span class=\"string\">&#x27;Sex&#x27;</span>]).mean().plot.bar(ax=ax[<span class=\"number\">0</span>])</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;Fraction of Survival with respect to Sex&#x27;</span>)</span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;Sex&#x27;</span>, hue=<span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Survived vs Dead counts with respect to Sex&#x27;</span>)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_4.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_4.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"Feature-Pclass\"><a href=\"#Feature-Pclass\" class=\"headerlink\" title=\"Feature: Pclass\"></a>Feature: Pclass</h3><p>大多数乘客在第三舱等，存活率依序从1舱等递减至3舱等</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">3</span>, figsize=(<span class=\"number\">18</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">df[<span class=\"string\">&#x27;Pclass&#x27;</span>].value_counts().plot.bar(</span><br><span class=\"line\">    color=[<span class=\"string\">&#x27;#BC8F8F&#x27;</span>, <span class=\"string\">&#x27;#F4A460&#x27;</span>, <span class=\"string\">&#x27;#DAA520&#x27;</span>], ax=ax[<span class=\"number\">0</span>])</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;Number Of Passengers with respect to Pclass&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_ylabel(<span class=\"string\">&#x27;Count&#x27;</span>)</span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;Pclass&#x27;</span>, hue=<span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Survived vs Dead counts with respect to Pclass&#x27;</span>)</span><br><span class=\"line\">sns.barplot(x=<span class=\"string\">&quot;Pclass&quot;</span>, y=<span class=\"string\">&quot;Survived&quot;</span>, data=df, ax=ax[<span class=\"number\">2</span>])</span><br><span class=\"line\">ax[<span class=\"number\">2</span>].set_title(<span class=\"string\">&#x27;Survival by Pclass&#x27;</span>)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_5.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_5.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"Feature-Age\"><a href=\"#Feature-Age\" class=\"headerlink\" title=\"Feature: Age\"></a>Feature: Age</h3><p>年龄分布上以年轻人、小孩居多，最高有80岁老人</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">1</span>, figsize=(<span class=\"number\">25</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\">sns.barplot(df[<span class=\"string\">&#x27;Age&#x27;</span>], df[<span class=\"string\">&#x27;Survived&#x27;</span>], ci=<span class=\"literal\">None</span>, ax=ax)</span><br><span class=\"line\">ax.set_title(<span class=\"string\">&#x27;Survived vs Dead counts with respect to Pclass&#x27;</span>)</span><br><span class=\"line\">plt.xticks(rotation=<span class=\"number\">90</span>)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_6.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_6.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">2</span>, figsize=(<span class=\"number\">18</span>, <span class=\"number\">6</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;Age Box Plot&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_ylabel(<span class=\"string\">&#x27;Age Years&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">sns.boxplot(y=<span class=\"string\">&#x27;Age&#x27;</span>, data=df, ax=ax[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">sns.boxplot(x=<span class=\"string\">&#x27;Survived&#x27;</span>, y=<span class=\"string\">&#x27;Age&#x27;</span>, data=df, ax=ax[<span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Age Box Plot&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_ylabel(<span class=\"string\">&#x27;Age Years&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_7.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_7.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">2</span>, figsize=(<span class=\"number\">18</span>, <span class=\"number\">8</span>))</span><br><span class=\"line\">sns.violinplot(</span><br><span class=\"line\">    <span class=\"string\">&quot;Pclass&quot;</span>, <span class=\"string\">&quot;Age&quot;</span>, hue=<span class=\"string\">&quot;Survived&quot;</span>, data=df, split=<span class=\"literal\">True</span>, ax=ax[<span class=\"number\">0</span>])</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;Pclass and Age vs Survived&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_yticks(<span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">110</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\">sns.violinplot(</span><br><span class=\"line\">    <span class=\"string\">&quot;Sex&quot;</span>, <span class=\"string\">&quot;Age&quot;</span>, hue=<span class=\"string\">&quot;Survived&quot;</span>, data=df, split=<span class=\"literal\">True</span>, ax=ax[<span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Sex and Age vs Survived&#x27;</span>)</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_yticks(<span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">110</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_8.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_8.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"Feature-Embarked\"><a href=\"#Feature-Embarked\" class=\"headerlink\" title=\"Feature: Embarked\"></a>Feature: Embarked</h3><p>大多数乘客是从S登船口，存活率以c最高</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">3</span>, figsize=(<span class=\"number\">12</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;Embarked&#x27;</span>, data=df, ax=ax[<span class=\"number\">0</span>])</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;No. Of Passengers Boarded&#x27;</span>)</span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;Embarked&#x27;</span>, hue=<span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Embarked vs Survived&#x27;</span>)</span><br><span class=\"line\">sns.barplot(<span class=\"string\">&#x27;Embarked&#x27;</span>, <span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">2</span>])</span><br><span class=\"line\">ax[<span class=\"number\">2</span>].set_title(<span class=\"string\">&#x27;Embarked vs Survived&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_9.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_9.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">2</span>, figsize=(<span class=\"number\">12</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;Embarked&#x27;</span>, hue=<span class=\"string\">&#x27;Sex&#x27;</span>, data=df, ax=ax[<span class=\"number\">0</span>])</span><br><span class=\"line\">ax[<span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;Male-Female Split for Embarked&#x27;</span>)</span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;Embarked&#x27;</span>, hue=<span class=\"string\">&#x27;Pclass&#x27;</span>, data=df, ax=ax[<span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Embarked vs Pclass&#x27;</span>)</span><br><span class=\"line\">plt.subplots_adjust(wspace=<span class=\"number\">0.2</span>, hspace=<span class=\"number\">0.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_10.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_10.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"Features-SibSip-amp-Parch\"><a href=\"#Features-SibSip-amp-Parch\" class=\"headerlink\" title=\"Features: SibSip &amp; Parch\"></a>Features: SibSip &amp; Parch</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">2</span>, <span class=\"number\">2</span>, figsize=(<span class=\"number\">15</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;SibSp&#x27;</span>, hue=<span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">0</span>, <span class=\"number\">0</span>])</span><br><span class=\"line\">ax[<span class=\"number\">0</span>, <span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;SibSp vs Survived&#x27;</span>)</span><br><span class=\"line\">sns.barplot(<span class=\"string\">&#x27;SibSp&#x27;</span>, <span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">0</span>, <span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">0</span>, <span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;SibSp vs Survived&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">sns.countplot(<span class=\"string\">&#x27;Parch&#x27;</span>, hue=<span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">1</span>, <span class=\"number\">0</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>, <span class=\"number\">0</span>].set_title(<span class=\"string\">&#x27;Parch vs Survived&#x27;</span>)</span><br><span class=\"line\">sns.barplot(<span class=\"string\">&#x27;Parch&#x27;</span>, <span class=\"string\">&#x27;Survived&#x27;</span>, data=df, ax=ax[<span class=\"number\">1</span>, <span class=\"number\">1</span>])</span><br><span class=\"line\">ax[<span class=\"number\">1</span>, <span class=\"number\">1</span>].set_title(<span class=\"string\">&#x27;Parch vs Survived&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.subplots_adjust(wspace=<span class=\"number\">0.2</span>, hspace=<span class=\"number\">0.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_11.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_11.png\"\n                      alt=\"\"\n                ></p>\n<h3 id=\"Feature-Fare\"><a href=\"#Feature-Fare\" class=\"headerlink\" title=\"Feature: Fare\"></a>Feature: Fare</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">1</span>, <span class=\"number\">1</span>, figsize=(<span class=\"number\">20</span>, <span class=\"number\">5</span>))</span><br><span class=\"line\">sns.distplot(df.Fare, ax=ax)</span><br><span class=\"line\">ax.set_title(<span class=\"string\">&#x27;Distribution of Fares&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-15_泰坦尼克之灾_12.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-15_泰坦尼克之灾_12.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"特征预处理\"><a href=\"#特征预处理\" class=\"headerlink\" title=\"特征预处理\"></a>特征预处理</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_tuned = df.copy(deep=<span class=\"literal\">True</span>)</span><br><span class=\"line\">df_tuned.sample(<span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Name</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>390</th>\n      <td>391</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Carter, Mr. William Ernest</td>\n      <td>male</td>\n      <td>36.0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>113760</td>\n      <td>120.0000</td>\n      <td>B96 B98</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>281</th>\n      <td>282</td>\n      <td>0</td>\n      <td>3</td>\n      <td>Olsson, Mr. Nils Johan Goransson</td>\n      <td>male</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>347464</td>\n      <td>7.8542</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n    <tr>\n      <th>691</th>\n      <td>692</td>\n      <td>1</td>\n      <td>3</td>\n      <td>Karun, Miss. Manca</td>\n      <td>female</td>\n      <td>4.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>349256</td>\n      <td>13.4167</td>\n      <td>NaN</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>866</th>\n      <td>867</td>\n      <td>1</td>\n      <td>2</td>\n      <td>Duran y More, Miss. Asuncion</td>\n      <td>female</td>\n      <td>27.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>SC/PARIS 2149</td>\n      <td>13.8583</td>\n      <td>NaN</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>726</th>\n      <td>727</td>\n      <td>1</td>\n      <td>2</td>\n      <td>Renouf, Mrs. Peter Henry (Lillian Jefferys)</td>\n      <td>female</td>\n      <td>30.0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>31027</td>\n      <td>21.0000</td>\n      <td>NaN</td>\n      <td>S</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<h3 id=\"删除无用特征\"><a href=\"#删除无用特征\" class=\"headerlink\" title=\"删除无用特征\"></a>删除无用特征</h3><h4 id=\"PassengerId\"><a href=\"#PassengerId\" class=\"headerlink\" title=\"PassengerId\"></a>PassengerId</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_tuned = df_tuned.drop([<span class=\"string\">&#x27;PassengerId&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"填充空值\"><a href=\"#填充空值\" class=\"headerlink\" title=\"填充空值\"></a>填充空值</h3><h4 id=\"Age\"><a href=\"#Age\" class=\"headerlink\" title=\"Age\"></a>Age</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;原缺失值：&#123;a&#125;&quot;</span>.<span class=\"built_in\">format</span>(a=df_tuned[<span class=\"string\">&#x27;Age&#x27;</span>].isnull().<span class=\"built_in\">sum</span>()))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 采用众数填充</span></span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Age&#x27;</span>].fillna(df_tuned[<span class=\"string\">&#x27;Age&#x27;</span>].mode()[<span class=\"number\">0</span>], inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;后缺失值：&#123;a&#125;&quot;</span>.<span class=\"built_in\">format</span>(a=df_tuned[<span class=\"string\">&#x27;Age&#x27;</span>].isnull().<span class=\"built_in\">sum</span>()))</span><br></pre></td></tr></table></figure>\n<pre><code>原缺失值：177\n后缺失值：0\n</code></pre><h4 id=\"Cabin\"><a href=\"#Cabin\" class=\"headerlink\" title=\"Cabin\"></a>Cabin</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;原缺失值：&#123;a&#125;&quot;</span>.<span class=\"built_in\">format</span>(a=df_tuned[<span class=\"string\">&#x27;Cabin&#x27;</span>].isnull().<span class=\"built_in\">sum</span>()))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 采用是否有值填充</span></span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Cabin&#x27;</span>][df_tuned[<span class=\"string\">&#x27;Cabin&#x27;</span>].isnull()] = <span class=\"number\">0</span></span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Cabin&#x27;</span>][df_tuned[<span class=\"string\">&#x27;Cabin&#x27;</span>].notnull()] = <span class=\"number\">1</span></span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Cabin&#x27;</span>] = df_tuned[<span class=\"string\">&#x27;Cabin&#x27;</span>].astype(<span class=\"built_in\">int</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;后缺失值：&#123;a&#125;&quot;</span>.<span class=\"built_in\">format</span>(a=df_tuned[<span class=\"string\">&#x27;Cabin&#x27;</span>].isnull().<span class=\"built_in\">sum</span>()))</span><br></pre></td></tr></table></figure>\n<pre><code>原缺失值：687\n后缺失值：0\n</code></pre><h4 id=\"Embarked\"><a href=\"#Embarked\" class=\"headerlink\" title=\"Embarked\"></a>Embarked</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;原缺失值：&#123;a&#125;&quot;</span>.<span class=\"built_in\">format</span>(a=df_tuned[<span class=\"string\">&#x27;Embarked&#x27;</span>].isnull().<span class=\"built_in\">sum</span>()))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 采用众数填充</span></span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Embarked&#x27;</span>].fillna(df_tuned[<span class=\"string\">&#x27;Embarked&#x27;</span>].mode()[<span class=\"number\">0</span>], inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;后缺失值：&#123;a&#125;&quot;</span>.<span class=\"built_in\">format</span>(a=df_tuned[<span class=\"string\">&#x27;Embarked&#x27;</span>].isnull().<span class=\"built_in\">sum</span>()))</span><br></pre></td></tr></table></figure>\n<pre><code>原缺失值：2\n后缺失值：0\n</code></pre><h3 id=\"特征分箱\"><a href=\"#特征分箱\" class=\"headerlink\" title=\"特征分箱\"></a>特征分箱</h3><h4 id=\"Name：取出称号\"><a href=\"#Name：取出称号\" class=\"headerlink\" title=\"Name：取出称号\"></a>Name：取出称号</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Title&#x27;</span>] = df_tuned[<span class=\"string\">&#x27;Name&#x27;</span>].<span class=\"built_in\">str</span>.extract(<span class=\"string\">&#x27;,\\s(.*?)\\.&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title_Dict = &#123;&#125;</span><br><span class=\"line\">title_Dict.update(<span class=\"built_in\">dict</span>.fromkeys([<span class=\"string\">&#x27;Capt&#x27;</span>, <span class=\"string\">&#x27;Col&#x27;</span>, <span class=\"string\">&#x27;Major&#x27;</span>, <span class=\"string\">&#x27;Dr&#x27;</span>, <span class=\"string\">&#x27;Rev&#x27;</span>], <span class=\"string\">&#x27;Officer&#x27;</span>))</span><br><span class=\"line\">title_Dict.update(<span class=\"built_in\">dict</span>.fromkeys([<span class=\"string\">&#x27;Jonkheer&#x27;</span>, <span class=\"string\">&#x27;Don&#x27;</span>, <span class=\"string\">&#x27;Sir&#x27;</span>, <span class=\"string\">&#x27;the Countess&#x27;</span>, <span class=\"string\">&#x27;Dona&#x27;</span>, <span class=\"string\">&#x27;Lady&#x27;</span>], <span class=\"string\">&#x27;Royalty&#x27;</span>))</span><br><span class=\"line\">title_Dict.update(<span class=\"built_in\">dict</span>.fromkeys([<span class=\"string\">&#x27;Mme&#x27;</span>, <span class=\"string\">&#x27;Ms&#x27;</span>, <span class=\"string\">&#x27;Mrs&#x27;</span>], <span class=\"string\">&#x27;Mrs&#x27;</span>))</span><br><span class=\"line\">title_Dict.update(<span class=\"built_in\">dict</span>.fromkeys([<span class=\"string\">&#x27;Mlle&#x27;</span>, <span class=\"string\">&#x27;Miss&#x27;</span>], <span class=\"string\">&#x27;Miss&#x27;</span>))</span><br><span class=\"line\">title_Dict.update(<span class=\"built_in\">dict</span>.fromkeys([<span class=\"string\">&#x27;Mr&#x27;</span>], <span class=\"string\">&#x27;Mr&#x27;</span>))</span><br><span class=\"line\">title_Dict.update(<span class=\"built_in\">dict</span>.fromkeys([<span class=\"string\">&#x27;Master&#x27;</span>], <span class=\"string\">&#x27;Master&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">title_Dict</span><br></pre></td></tr></table></figure>\n<pre><code>&#123;&#39;Capt&#39;: &#39;Officer&#39;,\n &#39;Col&#39;: &#39;Officer&#39;,\n &#39;Major&#39;: &#39;Officer&#39;,\n &#39;Dr&#39;: &#39;Officer&#39;,\n &#39;Rev&#39;: &#39;Officer&#39;,\n &#39;Jonkheer&#39;: &#39;Royalty&#39;,\n &#39;Don&#39;: &#39;Royalty&#39;,\n &#39;Sir&#39;: &#39;Royalty&#39;,\n &#39;the Countess&#39;: &#39;Royalty&#39;,\n &#39;Dona&#39;: &#39;Royalty&#39;,\n &#39;Lady&#39;: &#39;Royalty&#39;,\n &#39;Mme&#39;: &#39;Mrs&#39;,\n &#39;Ms&#39;: &#39;Mrs&#39;,\n &#39;Mrs&#39;: &#39;Mrs&#39;,\n &#39;Mlle&#39;: &#39;Miss&#39;,\n &#39;Miss&#39;: &#39;Miss&#39;,\n &#39;Mr&#39;: &#39;Mr&#39;,\n &#39;Master&#39;: &#39;Master&#39;&#125;\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Title&#x27;</span>] = df_tuned[<span class=\"string\">&#x27;Title&#x27;</span>].<span class=\"built_in\">map</span>(title_Dict)</span><br><span class=\"line\">df_tuned = df_tuned.drop([<span class=\"string\">&#x27;Name&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">df_tuned.head()</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n      <th>Title</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A/5 21171</td>\n      <td>7.2500</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>PC 17599</td>\n      <td>71.2833</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>STON/O2. 3101282</td>\n      <td>7.9250</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803</td>\n      <td>53.1000</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450</td>\n      <td>8.0500</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<h4 id=\"Fare\"><a href=\"#Fare\" class=\"headerlink\" title=\"Fare\"></a>Fare</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fare_category</span>(<span class=\"params\">fare</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> fare &lt;= <span class=\"number\">4</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> fare &lt;= <span class=\"number\">10</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> fare &lt;= <span class=\"number\">30</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> fare &lt;= <span class=\"number\">45</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">3</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">4</span></span><br><span class=\"line\"></span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Fare&#x27;</span>] = df_tuned[<span class=\"string\">&#x27;Fare&#x27;</span>].<span class=\"built_in\">map</span>(fare_category)</span><br></pre></td></tr></table></figure>\n<h4 id=\"Family-size\"><a href=\"#Family-size\" class=\"headerlink\" title=\"Family_size\"></a>Family_size</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Family_Size&#x27;</span>] = df_tuned[<span class=\"string\">&#x27;Parch&#x27;</span>] + df_tuned[<span class=\"string\">&#x27;SibSp&#x27;</span>] + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">family_size_category</span>(<span class=\"params\">ppl</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ppl &lt;= <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> ppl &lt;= <span class=\"number\">4</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> ppl &lt;= <span class=\"number\">6</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Family_Size&#x27;</span>] = df_tuned[<span class=\"string\">&#x27;Family_Size&#x27;</span>].<span class=\"built_in\">map</span>(family_size_category)</span><br></pre></td></tr></table></figure>\n<h4 id=\"Ticket\"><a href=\"#Ticket\" class=\"headerlink\" title=\"Ticket\"></a>Ticket</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Ticket&#x27;</span>] = df_tuned[<span class=\"string\">&#x27;Ticket&#x27;</span>].<span class=\"built_in\">str</span>.extract(<span class=\"string\">&#x27;(^\\d+|\\s\\d+)&#x27;</span>)</span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Ticket&#x27;</span>].fillna(<span class=\"number\">0</span>,inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Ticket&#x27;</span>] = df_tuned[<span class=\"string\">&#x27;Ticket&#x27;</span>].astype(<span class=\"built_in\">float</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"处理分类特征\"><a href=\"#处理分类特征\" class=\"headerlink\" title=\"处理分类特征\"></a>处理分类特征</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_tuned</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Survived</th>\n      <th>Pclass</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>SibSp</th>\n      <th>Parch</th>\n      <th>Ticket</th>\n      <th>Fare</th>\n      <th>Cabin</th>\n      <th>Embarked</th>\n      <th>Title</th>\n      <th>Family_Size</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>22.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>21171.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>17599.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3101282.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>35.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>113803.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>373450.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>330877.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>0</td>\n      <td>1</td>\n      <td>male</td>\n      <td>54.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17463.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>2.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>349909.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Master</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>27.0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>347742.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>14.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>237736.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>4.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>9549.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>58.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>113783.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>20.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2151.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>39.0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>347082.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>14.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>350406.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>55.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>248706.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>2.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>382652.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Master</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>1</td>\n      <td>2</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>244373.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>31.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>345763.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2649.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>239865.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>1</td>\n      <td>2</td>\n      <td>male</td>\n      <td>34.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>248698.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>15.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>330923.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>1</td>\n      <td>1</td>\n      <td>male</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>113788.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>8.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>349909.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>38.0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>347077.0</td>\n      <td>3</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2631.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>0</td>\n      <td>1</td>\n      <td>male</td>\n      <td>19.0</td>\n      <td>3</td>\n      <td>2</td>\n      <td>19950.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>330959.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349216.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>861</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>21.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>28134.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>862</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>48.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17466.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>863</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>8</td>\n      <td>2</td>\n      <td>2343.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>864</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>233866.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>865</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>42.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>236852.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>866</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>27.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2149.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>867</th>\n      <td>0</td>\n      <td>1</td>\n      <td>male</td>\n      <td>31.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>17590.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>868</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>345777.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>869</th>\n      <td>1</td>\n      <td>3</td>\n      <td>male</td>\n      <td>4.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>347742.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Master</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>870</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349248.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>871</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>47.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>11751.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>872</th>\n      <td>0</td>\n      <td>1</td>\n      <td>male</td>\n      <td>33.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>695.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>873</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>47.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>345765.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>874</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>28.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>3381.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>875</th>\n      <td>1</td>\n      <td>3</td>\n      <td>female</td>\n      <td>15.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2667.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>876</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>20.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7534.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>877</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>19.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349212.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>878</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349217.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>879</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>56.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>11767.0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>880</th>\n      <td>1</td>\n      <td>2</td>\n      <td>female</td>\n      <td>25.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>230433.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mrs</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>881</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>33.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>349257.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>882</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>22.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>7552.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>883</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>34068.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>884</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>25.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>392076.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>885</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>39.0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>382652.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Mrs</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>886</th>\n      <td>0</td>\n      <td>2</td>\n      <td>male</td>\n      <td>27.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>211536.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Officer</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>887</th>\n      <td>1</td>\n      <td>1</td>\n      <td>female</td>\n      <td>19.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>112053.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>888</th>\n      <td>0</td>\n      <td>3</td>\n      <td>female</td>\n      <td>24.0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>6607.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>S</td>\n      <td>Miss</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>889</th>\n      <td>1</td>\n      <td>1</td>\n      <td>male</td>\n      <td>26.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>111369.0</td>\n      <td>2</td>\n      <td>1</td>\n      <td>C</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>890</th>\n      <td>0</td>\n      <td>3</td>\n      <td>male</td>\n      <td>32.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>370376.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Q</td>\n      <td>Mr</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>891 rows × 12 columns</p>\n</div>\n\n\n\n<h4 id=\"Embarked-Sex-Pclass-Title-Fare-Category-Family-Size\"><a href=\"#Embarked-Sex-Pclass-Title-Fare-Category-Family-Size\" class=\"headerlink\" title=\"Embarked, Sex, Pclass, Title, Fare_Category, Family_Size,\"></a>Embarked, Sex, Pclass, Title, Fare_Category, Family_Size,</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dummies_Pclass = pd.get_dummies(df_tuned[<span class=\"string\">&#x27;Pclass&#x27;</span>], prefix=<span class=\"string\">&#x27;Pclass&#x27;</span>)</span><br><span class=\"line\">dummies_Sex = pd.get_dummies(df_tuned[<span class=\"string\">&#x27;Sex&#x27;</span>], prefix=<span class=\"string\">&#x27;Sex&#x27;</span>)</span><br><span class=\"line\">dummies_Fare = pd.get_dummies(df_tuned[<span class=\"string\">&#x27;Fare&#x27;</span>], prefix=<span class=\"string\">&#x27;Pclass&#x27;</span>)</span><br><span class=\"line\">dummies_Embarked = pd.get_dummies(df_tuned[<span class=\"string\">&#x27;Embarked&#x27;</span>], prefix=<span class=\"string\">&#x27;Embarked&#x27;</span>)</span><br><span class=\"line\">dummies_Title = pd.get_dummies(df_tuned[<span class=\"string\">&#x27;Title&#x27;</span>], prefix=<span class=\"string\">&#x27;Pclass&#x27;</span>)</span><br><span class=\"line\">dummies_Family_Size = pd.get_dummies(df_tuned[<span class=\"string\">&#x27;Family_Size&#x27;</span>], prefix=<span class=\"string\">&#x27;Pclass&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df_tuned = pd.concat(</span><br><span class=\"line\">    [df_tuned, dummies_Embarked, dummies_Sex, dummies_Pclass, dummies_Title, dummies_Fare, dummies_Family_Size],</span><br><span class=\"line\">    axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">df_tuned.drop([<span class=\"string\">&#x27;Pclass&#x27;</span>, <span class=\"string\">&#x27;Sex&#x27;</span>, <span class=\"string\">&#x27;Fare&#x27;</span>, <span class=\"string\">&#x27;Embarked&#x27;</span>, <span class=\"string\">&#x27;Title&#x27;</span>, <span class=\"string\">&#x27;Family_Size&#x27;</span>],</span><br><span class=\"line\">              axis=<span class=\"number\">1</span>,</span><br><span class=\"line\">              inplace=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 最后检查</span></span><br><span class=\"line\">df_tuned.info()</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 891 entries, 0 to 890\nData columns (total 29 columns):\nSurvived          891 non-null int64\nAge               891 non-null float64\nSibSp             891 non-null int64\nParch             891 non-null int64\nTicket            891 non-null float64\nCabin             891 non-null int64\nEmbarked_C        891 non-null uint8\nEmbarked_Q        891 non-null uint8\nEmbarked_S        891 non-null uint8\nSex_female        891 non-null uint8\nSex_male          891 non-null uint8\nPclass_1          891 non-null uint8\nPclass_2          891 non-null uint8\nPclass_3          891 non-null uint8\nPclass_Master     891 non-null uint8\nPclass_Miss       891 non-null uint8\nPclass_Mr         891 non-null uint8\nPclass_Mrs        891 non-null uint8\nPclass_Officer    891 non-null uint8\nPclass_Royalty    891 non-null uint8\nPclass_0          891 non-null uint8\nPclass_1          891 non-null uint8\nPclass_2          891 non-null uint8\nPclass_3          891 non-null uint8\nPclass_4          891 non-null uint8\nPclass_0          891 non-null uint8\nPclass_1          891 non-null uint8\nPclass_2          891 non-null uint8\nPclass_3          891 non-null uint8\ndtypes: float64(2), int64(4), uint8(23)\nmemory usage: 61.9 KB\n</code></pre><h3 id=\"数据标准化\"><a href=\"#数据标准化\" class=\"headerlink\" title=\"数据标准化\"></a>数据标准化</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.preprocessing <span class=\"keyword\">import</span> StandardScaler</span><br><span class=\"line\">ss = StandardScaler()</span><br><span class=\"line\">data = ss.fit_transform(df_tuned[<span class=\"string\">&#x27;Ticket&#x27;</span>].values.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>))</span><br><span class=\"line\">df_tuned[<span class=\"string\">&#x27;Ticket&#x27;</span>] = pd.DataFrame(data)</span><br></pre></td></tr></table></figure>\n<h3 id=\"数据划分\"><a href=\"#数据划分\" class=\"headerlink\" title=\"数据划分\"></a>数据划分</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> train_test_split</span><br><span class=\"line\"></span><br><span class=\"line\">X = df_tuned[:].drop(<span class=\"string\">&quot;Survived&quot;</span>, axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">y = df_tuned[<span class=\"string\">&quot;Survived&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">X_train, X_test, y_train, y_test = train_test_split(</span><br><span class=\"line\">    X, y, test_size=<span class=\"number\">0.2</span>, shuffle=<span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据建模\"><a href=\"#数据建模\" class=\"headerlink\" title=\"数据建模\"></a>数据建模</h2><h3 id=\"六大模型\"><a href=\"#六大模型\" class=\"headerlink\" title=\"六大模型\"></a>六大模型</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sklearn <span class=\"keyword\">import</span> ensemble</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.metrics <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.linear_model <span class=\"keyword\">import</span> LogisticRegression</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.svm <span class=\"keyword\">import</span> SVC</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.tree <span class=\"keyword\">import</span> DecisionTreeClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.ensemble <span class=\"keyword\">import</span> RandomForestClassifier, GradientBoostingClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.neighbors <span class=\"keyword\">import</span> KNeighborsClassifier</span><br><span class=\"line\"><span class=\"keyword\">from</span> sklearn.model_selection <span class=\"keyword\">import</span> cross_val_score</span><br><span class=\"line\"></span><br><span class=\"line\">names = [<span class=\"string\">&quot;LR&quot;</span>, <span class=\"string\">&quot;SVC&quot;</span>, <span class=\"string\">&#x27;DT&#x27;</span>, <span class=\"string\">&quot;RF&quot;</span>, <span class=\"string\">&quot;KNN&quot;</span>, <span class=\"string\">&quot;GBDT&quot;</span>, <span class=\"string\">&quot;Voting&quot;</span>]</span><br><span class=\"line\">models = [LR, svc, DT, RF, KNN, GBDT, voting]</span><br><span class=\"line\">evaluates = [<span class=\"string\">&#x27;accuracy&#x27;</span>, <span class=\"string\">&#x27;precision&#x27;</span>, <span class=\"string\">&#x27;recall&#x27;</span>, <span class=\"string\">&#x27;f1&#x27;</span>, <span class=\"string\">&#x27;roc_auc&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">LR = LogisticRegression(C=<span class=\"number\">1.0</span>, penalty=<span class=\"string\">&#x27;l1&#x27;</span>, tol=<span class=\"number\">1e-6</span>)</span><br><span class=\"line\">LR = LR.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">svc = SVC(kernel=<span class=\"string\">&#x27;linear&#x27;</span>, probability=<span class=\"literal\">True</span>)</span><br><span class=\"line\">svc = svc.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">DT = DecisionTreeClassifier(</span><br><span class=\"line\">    max_features=<span class=\"string\">&#x27;sqrt&#x27;</span>, max_depth=<span class=\"number\">35</span>, criterion=<span class=\"string\">&#x27;entropy&#x27;</span>, random_state=<span class=\"number\">42</span>)</span><br><span class=\"line\">DT = DT.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">RF = RandomForestClassifier(</span><br><span class=\"line\">    n_estimators=<span class=\"number\">750</span>,</span><br><span class=\"line\">    criterion=<span class=\"string\">&#x27;gini&#x27;</span>,</span><br><span class=\"line\">    max_features=<span class=\"string\">&#x27;sqrt&#x27;</span>,</span><br><span class=\"line\">    max_depth=<span class=\"number\">3</span>,</span><br><span class=\"line\">    min_samples_split=<span class=\"number\">4</span>,</span><br><span class=\"line\">    min_samples_leaf=<span class=\"number\">2</span>,</span><br><span class=\"line\">    n_jobs=<span class=\"number\">50</span>,</span><br><span class=\"line\">    random_state=<span class=\"number\">42</span>,</span><br><span class=\"line\">    verbose=<span class=\"number\">1</span>)</span><br><span class=\"line\">RF = RF.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">KNN = KNeighborsClassifier()</span><br><span class=\"line\">KNN = KNN.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">GBDT = GradientBoostingClassifier(</span><br><span class=\"line\">    n_estimators=<span class=\"number\">900</span>,</span><br><span class=\"line\">    learning_rate=<span class=\"number\">0.0008</span>,</span><br><span class=\"line\">    loss=<span class=\"string\">&#x27;exponential&#x27;</span>,</span><br><span class=\"line\">    min_samples_split=<span class=\"number\">3</span>,</span><br><span class=\"line\">    min_samples_leaf=<span class=\"number\">2</span>,</span><br><span class=\"line\">    max_features=<span class=\"string\">&#x27;sqrt&#x27;</span>,</span><br><span class=\"line\">    max_depth=<span class=\"number\">3</span>,</span><br><span class=\"line\">    random_state=<span class=\"number\">42</span>,</span><br><span class=\"line\">    verbose=<span class=\"number\">1</span>)</span><br><span class=\"line\">GBDT = GBDT.fit(X_train, y_train)</span><br><span class=\"line\"></span><br><span class=\"line\">voting = ensemble.VotingClassifier(</span><br><span class=\"line\">    estimators=[(<span class=\"string\">&#x27;LR&#x27;</span>, LR), (<span class=\"string\">&#x27;SVC&#x27;</span>, svc), (<span class=\"string\">&#x27;DT&#x27;</span>, DT), (<span class=\"string\">&#x27;RF&#x27;</span>, RF), (<span class=\"string\">&#x27;KNN&#x27;</span>, KNN),</span><br><span class=\"line\">                (<span class=\"string\">&#x27;GBDT&#x27;</span>, GBDT)],</span><br><span class=\"line\">    voting=<span class=\"string\">&#x27;soft&#x27;</span>,</span><br><span class=\"line\">    weights=[i.score(X_test, y_test) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> models[<span class=\"number\">0</span>:<span class=\"number\">6</span>]],</span><br><span class=\"line\">    n_jobs=<span class=\"number\">50</span>)</span><br><span class=\"line\">voting = voting.fit(X_train, y_train)</span><br></pre></td></tr></table></figure>\n<pre><code>[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.3s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.5s finished\n\n\n      Iter       Train Loss   Remaining Time \n         1           0.9754            1.41s\n         2           0.9751            1.32s\n         3           0.9748            1.24s\n         4           0.9745            1.20s\n         5           0.9742            1.18s\n         6           0.9739            1.13s\n         7           0.9738            1.08s\n         8           0.9735            1.05s\n         9           0.9733            1.02s\n        10           0.9730            1.00s\n        20           0.9703            0.77s\n        30           0.9680            0.68s\n        40           0.9655            0.63s\n        50           0.9628            0.62s\n        60           0.9602            0.59s\n        70           0.9576            0.57s\n        80           0.9549            0.55s\n        90           0.9522            0.53s\n       100           0.9498            0.52s\n       200           0.9259            0.43s\n       300           0.9040            0.37s\n       400           0.8842            0.31s\n       500           0.8660            0.26s\n       600           0.8493            0.20s\n       700           0.8340            0.13s\n       800           0.8204            0.06s\n       900           0.8078            0.00s\n\n\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_list = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> name,model <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(names,models):</span><br><span class=\"line\">    y_train_pred = model.predict(X_train)</span><br><span class=\"line\">    y_test_pred = model.predict(X_test)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#accuracy</span></span><br><span class=\"line\">    train_accuracy = model.score(X_train,y_train)</span><br><span class=\"line\">    test_accuracy = model.score(X_test,y_test)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#precision   </span></span><br><span class=\"line\">    train_precision = precision_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_precision = precision_score(y_test,y_test_pred)   </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#recall</span></span><br><span class=\"line\">    train_recall = recall_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_recall = recall_score(y_test,y_test_pred)   </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#f1</span></span><br><span class=\"line\">    train_f1 = f1_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_f1 = f1_score(y_test,y_test_pred)   </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#auc</span></span><br><span class=\"line\">    y_train_pred = model.predict_proba(X_train)[:,<span class=\"number\">1</span>]</span><br><span class=\"line\">    y_test_pred = model.predict_proba(X_test)[:,<span class=\"number\">1</span>]</span><br><span class=\"line\">    </span><br><span class=\"line\">    train_auc = roc_auc_score(y_train,y_train_pred)</span><br><span class=\"line\">    test_auc = roc_auc_score(y_test,y_test_pred)</span><br><span class=\"line\">    </span><br><span class=\"line\">    df = pd.DataFrame(np.array([train_accuracy,train_precision,train_recall,train_f1,train_auc,test_accuracy,test_precision,test_recall,test_f1,test_auc]).reshape(<span class=\"number\">2</span>,-<span class=\"number\">1</span>),</span><br><span class=\"line\">                  index = [<span class=\"string\">&#x27;train&#x27;</span>,<span class=\"string\">&#x27;test&#x27;</span>],</span><br><span class=\"line\">                  columns = [<span class=\"string\">&#x27;Accuracy&#x27;</span>,<span class=\"string\">&#x27;Precision&#x27;</span>,<span class=\"string\">&#x27;Recall&#x27;</span>,<span class=\"string\">&#x27;F1-Score&#x27;</span>,<span class=\"string\">&#x27;AUC-Score&#x27;</span>])</span><br><span class=\"line\">    df_list.append(df)</span><br><span class=\"line\"></span><br><span class=\"line\">pd.concat(df_list,axis=<span class=\"number\">0</span>,keys=names)</span><br></pre></td></tr></table></figure>\n<pre><code>[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.0s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.1s finished\n</code></pre><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>Accuracy</th>\n      <th>Precision</th>\n      <th>Recall</th>\n      <th>F1-Score</th>\n      <th>AUC-Score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">LR</th>\n      <th>train</th>\n      <td>0.817416</td>\n      <td>0.791339</td>\n      <td>0.723022</td>\n      <td>0.755639</td>\n      <td>0.873811</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.860335</td>\n      <td>0.819672</td>\n      <td>0.781250</td>\n      <td>0.800000</td>\n      <td>0.912772</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">SVC</th>\n      <th>train</th>\n      <td>0.820225</td>\n      <td>0.804878</td>\n      <td>0.712230</td>\n      <td>0.755725</td>\n      <td>0.860508</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.854749</td>\n      <td>0.816667</td>\n      <td>0.765625</td>\n      <td>0.790323</td>\n      <td>0.899321</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">DT</th>\n      <th>train</th>\n      <td>0.998596</td>\n      <td>1.000000</td>\n      <td>0.996403</td>\n      <td>0.998198</td>\n      <td>0.999992</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.754190</td>\n      <td>0.642857</td>\n      <td>0.703125</td>\n      <td>0.671642</td>\n      <td>0.748981</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">RF</th>\n      <th>train</th>\n      <td>0.817416</td>\n      <td>0.803279</td>\n      <td>0.705036</td>\n      <td>0.750958</td>\n      <td>0.872949</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.843575</td>\n      <td>0.810345</td>\n      <td>0.734375</td>\n      <td>0.770492</td>\n      <td>0.895856</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">KNN</th>\n      <th>train</th>\n      <td>0.841292</td>\n      <td>0.839506</td>\n      <td>0.733813</td>\n      <td>0.783109</td>\n      <td>0.918315</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.821229</td>\n      <td>0.758065</td>\n      <td>0.734375</td>\n      <td>0.746032</td>\n      <td>0.852921</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">GBDT</th>\n      <th>train</th>\n      <td>0.818820</td>\n      <td>0.898396</td>\n      <td>0.604317</td>\n      <td>0.722581</td>\n      <td>0.881597</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.843575</td>\n      <td>0.909091</td>\n      <td>0.625000</td>\n      <td>0.740741</td>\n      <td>0.904823</td>\n    </tr>\n    <tr>\n      <th rowspan=\"2\" valign=\"top\">Voting</th>\n      <th>train</th>\n      <td>0.856742</td>\n      <td>0.872881</td>\n      <td>0.741007</td>\n      <td>0.801556</td>\n      <td>0.971074</td>\n    </tr>\n    <tr>\n      <th>test</th>\n      <td>0.860335</td>\n      <td>0.830508</td>\n      <td>0.765625</td>\n      <td>0.796748</td>\n      <td>0.898505</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<h3 id=\"数据预测\"><a href=\"#数据预测\" class=\"headerlink\" title=\"数据预测\"></a>数据预测</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df_test = pd.read_csv(<span class=\"string\">&quot;2019-08-15_泰坦尼克之灾_test.csv&quot;</span>)</span><br><span class=\"line\">df_tuned_test = df_test.copy(deep=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df_tuned_test = df_tuned_test.drop([<span class=\"string\">&#x27;PassengerId&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Age&#x27;</span>].fillna(df_tuned_test[<span class=\"string\">&#x27;Age&#x27;</span>].mode()[<span class=\"number\">0</span>], inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Cabin&#x27;</span>][df_tuned_test[<span class=\"string\">&#x27;Cabin&#x27;</span>].isnull()] = <span class=\"number\">0</span></span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Cabin&#x27;</span>][df_tuned_test[<span class=\"string\">&#x27;Cabin&#x27;</span>].notnull()] = <span class=\"number\">1</span></span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Cabin&#x27;</span>] = df_tuned_test[<span class=\"string\">&#x27;Cabin&#x27;</span>].astype(<span class=\"built_in\">int</span>)</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Embarked&#x27;</span>].fillna(</span><br><span class=\"line\">    df_tuned_test[<span class=\"string\">&#x27;Embarked&#x27;</span>].mode()[<span class=\"number\">0</span>], inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Title&#x27;</span>] = df_tuned_test[<span class=\"string\">&#x27;Name&#x27;</span>].<span class=\"built_in\">str</span>.extract(<span class=\"string\">&#x27;,\\s(.*?)\\.&#x27;</span>)</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Title&#x27;</span>] = df_tuned_test[<span class=\"string\">&#x27;Title&#x27;</span>].<span class=\"built_in\">map</span>(title_Dict)</span><br><span class=\"line\">df_tuned_test = df_tuned_test.drop([<span class=\"string\">&#x27;Name&#x27;</span>], axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Fare&#x27;</span>] = df_tuned_test[<span class=\"string\">&#x27;Fare&#x27;</span>].<span class=\"built_in\">map</span>(fare_category)</span><br><span class=\"line\">df_tuned_test[</span><br><span class=\"line\">    <span class=\"string\">&#x27;Family_Size&#x27;</span>] = df_tuned_test[<span class=\"string\">&#x27;Parch&#x27;</span>] + df_tuned_test[<span class=\"string\">&#x27;SibSp&#x27;</span>] + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Family_Size&#x27;</span>] = df_tuned_test[<span class=\"string\">&#x27;Family_Size&#x27;</span>].<span class=\"built_in\">map</span>(</span><br><span class=\"line\">    family_size_category)</span><br><span class=\"line\"></span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Ticket&#x27;</span>] = df_tuned_test[<span class=\"string\">&#x27;Ticket&#x27;</span>].<span class=\"built_in\">str</span>.extract(<span class=\"string\">&#x27;(^\\d+|\\s\\d+)&#x27;</span>)</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Ticket&#x27;</span>].fillna(<span class=\"number\">0</span>, inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Ticket&#x27;</span>] = df_tuned_test[<span class=\"string\">&#x27;Ticket&#x27;</span>].astype(<span class=\"built_in\">float</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">dummies_Pclass = pd.get_dummies(df_tuned_test[<span class=\"string\">&#x27;Pclass&#x27;</span>], prefix=<span class=\"string\">&#x27;Pclass&#x27;</span>)</span><br><span class=\"line\">dummies_Sex = pd.get_dummies(df_tuned_test[<span class=\"string\">&#x27;Sex&#x27;</span>], prefix=<span class=\"string\">&#x27;Sex&#x27;</span>)</span><br><span class=\"line\">dummies_Fare = pd.get_dummies(df_tuned_test[<span class=\"string\">&#x27;Fare&#x27;</span>], prefix=<span class=\"string\">&#x27;Pclass&#x27;</span>)</span><br><span class=\"line\">dummies_Embarked = pd.get_dummies(df_tuned_test[<span class=\"string\">&#x27;Embarked&#x27;</span>], prefix=<span class=\"string\">&#x27;Embarked&#x27;</span>)</span><br><span class=\"line\">dummies_Title = pd.get_dummies(df_tuned_test[<span class=\"string\">&#x27;Title&#x27;</span>], prefix=<span class=\"string\">&#x27;Pclass&#x27;</span>)</span><br><span class=\"line\">dummies_Family_Size = pd.get_dummies(</span><br><span class=\"line\">    df_tuned_test[<span class=\"string\">&#x27;Family_Size&#x27;</span>], prefix=<span class=\"string\">&#x27;Pclass&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df_tuned_test = pd.concat([</span><br><span class=\"line\">    df_tuned_test, dummies_Embarked, dummies_Sex, dummies_Pclass,</span><br><span class=\"line\">    dummies_Title, dummies_Fare, dummies_Family_Size</span><br><span class=\"line\">],</span><br><span class=\"line\">                          axis=<span class=\"number\">1</span>)</span><br><span class=\"line\">df_tuned_test.drop(</span><br><span class=\"line\">    [<span class=\"string\">&#x27;Pclass&#x27;</span>, <span class=\"string\">&#x27;Sex&#x27;</span>, <span class=\"string\">&#x27;Fare&#x27;</span>, <span class=\"string\">&#x27;Embarked&#x27;</span>, <span class=\"string\">&#x27;Title&#x27;</span>, <span class=\"string\">&#x27;Family_Size&#x27;</span>],</span><br><span class=\"line\">    axis=<span class=\"number\">1</span>,</span><br><span class=\"line\">    inplace=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">data = ss.fit_transform(df_tuned_test[<span class=\"string\">&#x27;Ticket&#x27;</span>].values.reshape(-<span class=\"number\">1</span>, <span class=\"number\">1</span>))</span><br><span class=\"line\">df_tuned_test[<span class=\"string\">&#x27;Ticket&#x27;</span>] = pd.DataFrame(data)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">predictions = voting.predict(df_tuned_test)</span><br><span class=\"line\">result = pd.DataFrame(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;PassengerId&#x27;</span>: df_test[<span class=\"string\">&#x27;PassengerId&#x27;</span>].as_matrix(),</span><br><span class=\"line\">    <span class=\"string\">&#x27;Survived&#x27;</span>: predictions.astype(np.int32)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">result.to_csv(<span class=\"string\">&quot;2019-08-15_泰坦尼克之灾_predictions.csv&quot;</span>, index=<span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>[Parallel(n_jobs=50)]: Using backend ThreadingBackend with 50 concurrent workers.\n[Parallel(n_jobs=50)]: Done 100 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 350 tasks      | elapsed:    0.1s\n[Parallel(n_jobs=50)]: Done 750 out of 750 | elapsed:    0.2s finished\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://blog.csdn.net/m0_37725003/article/details/81095555\" >集成学习voting Classifier在sklearn中的实现<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://zhuanlan.zhihu.com/p/30538352\" >Kaggle泰坦尼克号生存模型——250个特征量的融合模型，排名8%<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://kaggle.com/vikumsw/basic-feature-visualizations\" >Basic Feature Visualizations<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"数据理解与清洗","mathjax":false,"abbrlink":17314,"date":"2019-07-31T16:00:00.000Z","_content":"\n## 数据集载入\n\n\n```python\n# -*- coding: utf-8 -*-\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\ndf = pd.read_csv(u\"2019-08-01_金融数据描述_data1.csv\",encoding = 'gbk')\n```\n\n\n```python\ndf.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>custid</th>\n      <th>trade_no</th>\n      <th>bank_card_no</th>\n      <th>low_volume_percent</th>\n      <th>middle_volume_percent</th>\n      <th>take_amount_in_later_12_month_highest</th>\n      <th>trans_amount_increase_rate_lately</th>\n      <th>trans_activity_month</th>\n      <th>trans_activity_day</th>\n      <th>...</th>\n      <th>loans_max_limit</th>\n      <th>loans_avg_limit</th>\n      <th>consfin_credit_limit</th>\n      <th>consfin_credibility</th>\n      <th>consfin_org_count_current</th>\n      <th>consfin_product_count</th>\n      <th>consfin_max_limit</th>\n      <th>consfin_avg_limit</th>\n      <th>latest_query_day</th>\n      <th>loans_latest_day</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5</td>\n      <td>2791858</td>\n      <td>20180507115231274000000023057383</td>\n      <td>卡号1</td>\n      <td>0.01</td>\n      <td>0.99</td>\n      <td>0</td>\n      <td>0.90</td>\n      <td>0.55</td>\n      <td>0.313</td>\n      <td>...</td>\n      <td>2900.0</td>\n      <td>1688.0</td>\n      <td>1200.0</td>\n      <td>75.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>12.0</td>\n      <td>18.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10</td>\n      <td>534047</td>\n      <td>20180507121002192000000023073000</td>\n      <td>卡号1</td>\n      <td>0.02</td>\n      <td>0.94</td>\n      <td>2000</td>\n      <td>1.28</td>\n      <td>1.00</td>\n      <td>0.458</td>\n      <td>...</td>\n      <td>3500.0</td>\n      <td>1758.0</td>\n      <td>15100.0</td>\n      <td>80.0</td>\n      <td>5.0</td>\n      <td>6.0</td>\n      <td>22800.0</td>\n      <td>9360.0</td>\n      <td>4.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>12</td>\n      <td>2849787</td>\n      <td>20180507125159718000000023114911</td>\n      <td>卡号1</td>\n      <td>0.04</td>\n      <td>0.96</td>\n      <td>0</td>\n      <td>1.00</td>\n      <td>1.00</td>\n      <td>0.114</td>\n      <td>...</td>\n      <td>1600.0</td>\n      <td>1250.0</td>\n      <td>4200.0</td>\n      <td>87.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>4200.0</td>\n      <td>4200.0</td>\n      <td>2.0</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>13</td>\n      <td>1809708</td>\n      <td>20180507121358683000000388283484</td>\n      <td>卡号1</td>\n      <td>0.00</td>\n      <td>0.96</td>\n      <td>2000</td>\n      <td>0.13</td>\n      <td>0.57</td>\n      <td>0.777</td>\n      <td>...</td>\n      <td>3200.0</td>\n      <td>1541.0</td>\n      <td>16300.0</td>\n      <td>80.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>30000.0</td>\n      <td>12180.0</td>\n      <td>2.0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>14</td>\n      <td>2499829</td>\n      <td>20180507115448545000000388205844</td>\n      <td>卡号1</td>\n      <td>0.01</td>\n      <td>0.99</td>\n      <td>0</td>\n      <td>0.46</td>\n      <td>1.00</td>\n      <td>0.175</td>\n      <td>...</td>\n      <td>2300.0</td>\n      <td>1630.0</td>\n      <td>8300.0</td>\n      <td>79.0</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>8400.0</td>\n      <td>8250.0</td>\n      <td>22.0</td>\n      <td>120.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 90 columns</p>\n</div>\n\n\n\n\n```python\ndf.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 4754 entries, 0 to 4753\n    Data columns (total 90 columns):\n    Unnamed: 0                                    4754 non-null int64\n    custid                                        4754 non-null int64\n    trade_no                                      4754 non-null object\n    bank_card_no                                  4754 non-null object\n    low_volume_percent                            4752 non-null float64\n    middle_volume_percent                         4752 non-null float64\n    take_amount_in_later_12_month_highest         4754 non-null int64\n    trans_amount_increase_rate_lately             4751 non-null float64\n    trans_activity_month                          4752 non-null float64\n    trans_activity_day                            4752 non-null float64\n    transd_mcc                                    4752 non-null float64\n    trans_days_interval_filter                    4746 non-null float64\n    trans_days_interval                           4752 non-null float64\n    regional_mobility                             4752 non-null float64\n    student_feature                               1756 non-null float64\n    repayment_capability                          4754 non-null int64\n    is_high_user                                  4754 non-null int64\n    number_of_trans_from_2011                     4752 non-null float64\n    first_transaction_time                        4752 non-null float64\n    historical_trans_amount                       4754 non-null int64\n    historical_trans_day                          4752 non-null float64\n    rank_trad_1_month                             4752 non-null float64\n    trans_amount_3_month                          4754 non-null int64\n    avg_consume_less_12_valid_month               4752 non-null float64\n    abs                                           4754 non-null int64\n    top_trans_count_last_1_month                  4752 non-null float64\n    avg_price_last_12_month                       4754 non-null int64\n    avg_price_top_last_12_valid_month             4650 non-null float64\n    reg_preference_for_trad                       4752 non-null object\n    trans_top_time_last_1_month                   4746 non-null float64\n    trans_top_time_last_6_month                   4746 non-null float64\n    consume_top_time_last_1_month                 4746 non-null float64\n    consume_top_time_last_6_month                 4746 non-null float64\n    cross_consume_count_last_1_month              4328 non-null float64\n    trans_fail_top_count_enum_last_1_month        4738 non-null float64\n    trans_fail_top_count_enum_last_6_month        4738 non-null float64\n    trans_fail_top_count_enum_last_12_month       4738 non-null float64\n    consume_mini_time_last_1_month                4728 non-null float64\n    max_cumulative_consume_later_1_month          4754 non-null int64\n    max_consume_count_later_6_month               4746 non-null float64\n    railway_consume_count_last_12_month           4742 non-null float64\n    pawns_auctions_trusts_consume_last_1_month    4754 non-null int64\n    pawns_auctions_trusts_consume_last_6_month    4754 non-null int64\n    jewelry_consume_count_last_6_month            4742 non-null float64\n    status                                        4754 non-null int64\n    source                                        4754 non-null object\n    first_transaction_day                         4752 non-null float64\n    trans_day_last_12_month                       4752 non-null float64\n    id_name                                       4478 non-null object\n    apply_score                                   4450 non-null float64\n    apply_credibility                             4450 non-null float64\n    query_org_count                               4450 non-null float64\n    query_finance_count                           4450 non-null float64\n    query_cash_count                              4450 non-null float64\n    query_sum_count                               4450 non-null float64\n    latest_query_time                             4450 non-null object\n    latest_one_month_apply                        4450 non-null float64\n    latest_three_month_apply                      4450 non-null float64\n    latest_six_month_apply                        4450 non-null float64\n    loans_score                                   4457 non-null float64\n    loans_credibility_behavior                    4457 non-null float64\n    loans_count                                   4457 non-null float64\n    loans_settle_count                            4457 non-null float64\n    loans_overdue_count                           4457 non-null float64\n    loans_org_count_behavior                      4457 non-null float64\n    consfin_org_count_behavior                    4457 non-null float64\n    loans_cash_count                              4457 non-null float64\n    latest_one_month_loan                         4457 non-null float64\n    latest_three_month_loan                       4457 non-null float64\n    latest_six_month_loan                         4457 non-null float64\n    history_suc_fee                               4457 non-null float64\n    history_fail_fee                              4457 non-null float64\n    latest_one_month_suc                          4457 non-null float64\n    latest_one_month_fail                         4457 non-null float64\n    loans_long_time                               4457 non-null float64\n    loans_latest_time                             4457 non-null object\n    loans_credit_limit                            4457 non-null float64\n    loans_credibility_limit                       4457 non-null float64\n    loans_org_count_current                       4457 non-null float64\n    loans_product_count                           4457 non-null float64\n    loans_max_limit                               4457 non-null float64\n    loans_avg_limit                               4457 non-null float64\n    consfin_credit_limit                          4457 non-null float64\n    consfin_credibility                           4457 non-null float64\n    consfin_org_count_current                     4457 non-null float64\n    consfin_product_count                         4457 non-null float64\n    consfin_max_limit                             4457 non-null float64\n    consfin_avg_limit                             4457 non-null float64\n    latest_query_day                              4450 non-null float64\n    loans_latest_day                              4457 non-null float64\n    dtypes: float64(70), int64(13), object(7)\n    memory usage: 3.3+ MB\n\n\n\n```python\ntypedic = {} # 类型字典\nfor name in df.columns:\n    typedic[str(df[name].dtype)] = typedic.get(str(df[name].dtype),[])+[name]\n\nfor key,value in typedic.items():\n    print(\"{}格式共有{}个: {}\".format(key,len(value),value))\n    print(\"\")\n```\n\n    int64格式共有13个: ['Unnamed: 0', 'custid', 'take_amount_in_later_12_month_highest', 'repayment_capability', 'is_high_user', 'historical_trans_amount', 'trans_amount_3_month', 'abs', 'avg_price_last_12_month', 'max_cumulative_consume_later_1_month', 'pawns_auctions_trusts_consume_last_1_month', 'pawns_auctions_trusts_consume_last_6_month', 'status']\n    \n    object格式共有7个: ['trade_no', 'bank_card_no', 'reg_preference_for_trad', 'source', 'id_name', 'latest_query_time', 'loans_latest_time']\n    \n    float64格式共有70个: ['low_volume_percent', 'middle_volume_percent', 'trans_amount_increase_rate_lately', 'trans_activity_month', 'trans_activity_day', 'transd_mcc', 'trans_days_interval_filter', 'trans_days_interval', 'regional_mobility', 'student_feature', 'number_of_trans_from_2011', 'first_transaction_time', 'historical_trans_day', 'rank_trad_1_month', 'avg_consume_less_12_valid_month', 'top_trans_count_last_1_month', 'avg_price_top_last_12_valid_month', 'trans_top_time_last_1_month', 'trans_top_time_last_6_month', 'consume_top_time_last_1_month', 'consume_top_time_last_6_month', 'cross_consume_count_last_1_month', 'trans_fail_top_count_enum_last_1_month', 'trans_fail_top_count_enum_last_6_month', 'trans_fail_top_count_enum_last_12_month', 'consume_mini_time_last_1_month', 'max_consume_count_later_6_month', 'railway_consume_count_last_12_month', 'jewelry_consume_count_last_6_month', 'first_transaction_day', 'trans_day_last_12_month', 'apply_score', 'apply_credibility', 'query_org_count', 'query_finance_count', 'query_cash_count', 'query_sum_count', 'latest_one_month_apply', 'latest_three_month_apply', 'latest_six_month_apply', 'loans_score', 'loans_credibility_behavior', 'loans_count', 'loans_settle_count', 'loans_overdue_count', 'loans_org_count_behavior', 'consfin_org_count_behavior', 'loans_cash_count', 'latest_one_month_loan', 'latest_three_month_loan', 'latest_six_month_loan', 'history_suc_fee', 'history_fail_fee', 'latest_one_month_suc', 'latest_one_month_fail', 'loans_long_time', 'loans_credit_limit', 'loans_credibility_limit', 'loans_org_count_current', 'loans_product_count', 'loans_max_limit', 'loans_avg_limit', 'consfin_credit_limit', 'consfin_credibility', 'consfin_org_count_current', 'consfin_product_count', 'consfin_max_limit', 'consfin_avg_limit', 'latest_query_day', 'loans_latest_day']\n    \n\n\n\n```python\ndf.columns\n```\n\n\n\n\n    Index(['Unnamed: 0', 'custid', 'trade_no', 'bank_card_no',\n           'low_volume_percent', 'middle_volume_percent',\n           'take_amount_in_later_12_month_highest',\n           'trans_amount_increase_rate_lately', 'trans_activity_month',\n           'trans_activity_day', 'transd_mcc', 'trans_days_interval_filter',\n           'trans_days_interval', 'regional_mobility', 'student_feature',\n           'repayment_capability', 'is_high_user', 'number_of_trans_from_2011',\n           'first_transaction_time', 'historical_trans_amount',\n           'historical_trans_day', 'rank_trad_1_month', 'trans_amount_3_month',\n           'avg_consume_less_12_valid_month', 'abs',\n           'top_trans_count_last_1_month', 'avg_price_last_12_month',\n           'avg_price_top_last_12_valid_month', 'reg_preference_for_trad',\n           'trans_top_time_last_1_month', 'trans_top_time_last_6_month',\n           'consume_top_time_last_1_month', 'consume_top_time_last_6_month',\n           'cross_consume_count_last_1_month',\n           'trans_fail_top_count_enum_last_1_month',\n           'trans_fail_top_count_enum_last_6_month',\n           'trans_fail_top_count_enum_last_12_month',\n           'consume_mini_time_last_1_month',\n           'max_cumulative_consume_later_1_month',\n           'max_consume_count_later_6_month',\n           'railway_consume_count_last_12_month',\n           'pawns_auctions_trusts_consume_last_1_month',\n           'pawns_auctions_trusts_consume_last_6_month',\n           'jewelry_consume_count_last_6_month', 'status', 'source',\n           'first_transaction_day', 'trans_day_last_12_month', 'id_name',\n           'apply_score', 'apply_credibility', 'query_org_count',\n           'query_finance_count', 'query_cash_count', 'query_sum_count',\n           'latest_query_time', 'latest_one_month_apply',\n           'latest_three_month_apply', 'latest_six_month_apply', 'loans_score',\n           'loans_credibility_behavior', 'loans_count', 'loans_settle_count',\n           'loans_overdue_count', 'loans_org_count_behavior',\n           'consfin_org_count_behavior', 'loans_cash_count',\n           'latest_one_month_loan', 'latest_three_month_loan',\n           'latest_six_month_loan', 'history_suc_fee', 'history_fail_fee',\n           'latest_one_month_suc', 'latest_one_month_fail', 'loans_long_time',\n           'loans_latest_time', 'loans_credit_limit', 'loans_credibility_limit',\n           'loans_org_count_current', 'loans_product_count', 'loans_max_limit',\n           'loans_avg_limit', 'consfin_credit_limit', 'consfin_credibility',\n           'consfin_org_count_current', 'consfin_product_count',\n           'consfin_max_limit', 'consfin_avg_limit', 'latest_query_day',\n           'loans_latest_day'],\n          dtype='object')\n\n\n\n## 可视化各特征\n\n\n```python\nname_list_1 = [\n       'low_volume_percent', 'middle_volume_percent',\n       'take_amount_in_later_12_month_highest',\n       'trans_amount_increase_rate_lately', 'trans_activity_month',\n       'trans_activity_day', 'transd_mcc', 'trans_days_interval_filter',\n       'trans_days_interval', 'regional_mobility', 'student_feature',\n       'repayment_capability', 'is_high_user', 'number_of_trans_from_2011',\n       'first_transaction_time'\n       ]\nname_list_2 = [\n       'historical_trans_amount',\n       'historical_trans_day', 'rank_trad_1_month', 'trans_amount_3_month',\n       'avg_consume_less_12_valid_month', 'abs',\n       'top_trans_count_last_1_month', 'avg_price_last_12_month',\n       'avg_price_top_last_12_valid_month', 'reg_preference_for_trad',\n       'trans_top_time_last_1_month', 'trans_top_time_last_6_month',\n       'consume_top_time_last_1_month', 'consume_top_time_last_6_month',\n       'cross_consume_count_last_1_month',\n       ]\nname_list_3 = [\n       'trans_fail_top_count_enum_last_1_month',\n       'trans_fail_top_count_enum_last_6_month',\n       'trans_fail_top_count_enum_last_12_month',\n       'consume_mini_time_last_1_month',\n       'max_cumulative_consume_later_1_month',\n       'max_consume_count_later_6_month',\n       'railway_consume_count_last_12_month',\n       'pawns_auctions_trusts_consume_last_1_month',\n       'pawns_auctions_trusts_consume_last_6_month',\n       'jewelry_consume_count_last_6_month', \n       'first_transaction_day', 'trans_day_last_12_month', 'apply_score',\n       'apply_credibility', 'query_org_count',\n       ]\nname_list_4 = [\n      'query_finance_count', 'query_cash_count', 'query_sum_count',\n       'latest_query_time', 'latest_one_month_apply',\n       'latest_three_month_apply', 'latest_six_month_apply', 'loans_score',\n       'loans_credibility_behavior', 'loans_count', 'loans_settle_count',\n       'loans_overdue_count', 'loans_org_count_behavior',\n       'consfin_org_count_behavior', 'loans_cash_count',\n       ]\nname_list_5 = [\n      'latest_one_month_loan', 'latest_three_month_loan',\n       'latest_six_month_loan', 'history_suc_fee', 'history_fail_fee',\n       'latest_one_month_suc', 'latest_one_month_fail', 'loans_long_time',\n       'loans_latest_time', 'loans_credit_limit', 'loans_credibility_limit',\n       'loans_org_count_current', 'loans_product_count', 'loans_max_limit',\n       'loans_avg_limit',\n       ]\nname_list_6 = [\n      'consfin_credit_limit', 'consfin_credibility',\n       'consfin_org_count_current', 'consfin_product_count',\n       'consfin_max_limit', 'consfin_avg_limit', 'latest_query_day',\n       'loans_latest_day'\n       ]\n```\n\n\n```python\nf, ax = plt.subplots(5, 3, figsize=(20, 20))\n\nfor i,name in enumerate(name_list_1):     \n    sns.countplot(data=df, x=name, hue='status',  ax=ax[i // 3][i % 3])\n    \nplt.savefig(\"../img/2019-08-01_金融数据描述_1.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_1.png)\n\n\n```python\nf, ax = plt.subplots(5, 3, figsize=(20, 20))\n\nfor i,name in enumerate(name_list_2):     \n    sns.countplot(data=df, x=name, hue='status',  ax=ax[i // 3][i % 3])\n    \nplt.savefig(\"../img/2019-08-01_金融数据描述_2.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_2.png)\n\n\n```python\nf, ax = plt.subplots(5, 3, figsize=(20, 20))\n\nfor i,name in enumerate(name_list_3):     \n    sns.countplot(data=df, x=name, hue='status',  ax=ax[i // 3][i % 3])\n    \nplt.savefig(\"../img/2019-08-01_金融数据描述_3.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_3.png)\n\n\n```python\nf, ax = plt.subplots(5, 3, figsize=(20, 20))\n\nfor i,name in enumerate(name_list_4):     \n    sns.countplot(data=df, x=name, hue='status',  ax=ax[i // 3][i % 3])\n\nplt.savefig(\"../img/2019-08-01_金融数据描述_4.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_4.png)\n\n\n```python\nf, ax = plt.subplots(5, 3, figsize=(20, 20))\n\nfor i,name in enumerate(name_list_5):     \n    sns.countplot(data=df, x=name, hue='status',  ax=ax[i // 3][i % 3])\n\nplt.savefig(\"../img/2019-08-01_金融数据描述_5.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_5.png)\n\n\n```python\nf, ax = plt.subplots(3, 3, figsize=(20, 20))\n\nfor i,name in enumerate(name_list_6):     \n    sns.countplot(data=df, x=name, hue='status',  ax=ax[i // 3][i % 3])\n\nplt.savefig(\"../img/2019-08-01_金融数据描述_6.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_6.png)\n\n从以上分布图可以看出，连续型数据的特征基本上符合正态分布，指数分布或者泊松分布等，但在['rank_trad_1_month','trans_top_time_last_1_month','trans_top_time_last_6_month','consume_top_time_last_1_month','consume_top_time_last_6_month','loans_credit_limit','loans_credibility_limit','loans_max_limit','consfin_credibility']这几个特征上出现数据于最左最右位置会出现骤升。从业务层面考虑，暂时未得出满意结论，待确认特征取数逻辑后再分析。\n  还有，'avg_price_last_12_month','consfin_credit_limit'这两个特征虽然是连续型特征，但由图上看，出现标签分段，考虑继续探索，查看是否存在分段。\n\n  另外几个离散型特征，如'reg_preference_for_trad','regional_mobility'等，在标签status上区别明显，感觉是对模型有用的特征。\n\n\n```python\nsns.boxplot(y = 'consfin_credit_limit',x = 'status',data = df)\n\nplt.savefig(\"../img/2019-08-01_金融数据描述_7.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_7.png)\n\n\n```python\nsns.boxplot(y = 'avg_price_last_12_month',x = 'status',data = df)\n\nplt.savefig(\"../img/2019-08-01_金融数据描述_8.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_8.png)\n\n\n```python\nsns.boxplot(y = 'rank_trad_1_month',x = 'status',data = df)\n\nplt.savefig(\"../img/2019-08-01_金融数据描述_9.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_9.png)\n\n## 数据预处理\n\n### 为什么需要处理缺失值？\n\n不同缺失值的处理方式在一定程度上影响了特征提取、建模和模型训练缺失值太多，可以尝试着直接删除，如果不删除，处理不好，可能会引来噪声缺失值较少，少于某一缺失率时，直接删除又会带来信息的损失，此时可以采取适当的填充方式。\n\n### 缺失率大于多少时应当抛弃该特征？\n\n一般为70%,但是还要分析该特征与训练目标的重要程度\n\n### 缺失值填充有哪些方法？\n\n#### 插值填充\n- 特殊值\n- 均值、加权均值（缺点：降低数据的方差，即随机性）\n- 中位数\n- 众数（多用在类别变数）\n- ...\n\n#### 插补法\n- 随机插补法：从总体中随机抽取某个样本代替缺失样本\n- 多重插补法：通过变量之间的关系对缺失数据进行预测，利用蒙特卡洛方法生成多个完整的数据集，在对这些数据集进行分析，最后对分析结果进行汇总处理\n- 热平台插补：指在非缺失数据集中找到一个与缺失值所在样本相似的样本（匹配样本），利用其中的观测值对缺失值进行插补\n- 拉格朗日差值法\n- 牛顿插值法\n\n> 列的维度上，如果是连续性，就使用平均值插补，如果是离散性，就使用众数来插补; 行的维度上，引入预测模型，可考虑辅助回归，通过变量间的关系来预测缺失数据    \n\n\n#### 丢弃\n如果行和列的缺失达到一定的比例，建议放弃整行或整列数据\n\n#### 模型法\n更多时候我们会基于已有的其他字段，将缺失字段作为目标变量进行预测，从而得到最为可能的补全值。如果带有缺失值的列是数值变量，采用回归模型补全；如果是分类变量，则采用分类模型补全\n\n#### 专家补全\n对于少量且具有重要意义的数据记录，专家补足也是非常重要的一种途径\n\n#### 不处理\n- 当缺失值对模型的影响不大时，直接在包含空值的数据上进行数据挖掘\n- 很多模型对于缺失值有容忍度或灵活的处理方法，因此在预处理阶段可以不做处理\n- 树模型对于缺失值的敏感度较低，大部分时候可以在数据有缺失时使用\n- 涉及到距离度量(distance measurement)时，如计算两个点之间的距离，缺失数据就变得比较重要。因为涉及到“距离”这个概念，那么缺失值处理不当就会导致效果很差，如K近邻算法(KNN)和支持向量机(SVM)\n- 线性模型的代价函数(loss function)往往涉及到距离(distance)的计算，计算预测值和真实值之间的差别，这容易导致对缺失值敏感\n- 神经网络的鲁棒性强，对于缺失数据不是非常敏感，但一般没有那么多数据可供使用。\n- 贝叶斯模型对于缺失数据也比较稳定，数据量很小的时候首推贝叶斯模型。\n\n### 时间序列\n\n依情况处理，主要看单独时间字段或时间字段与某些字段的组合属性对目标分析的作用程度，再采取相应方式来进行特征提取比如：可以将时间字段与其他字段属性进行组合，分析每天、每周、每月或特点星期几等情况下特征数据频率信息，总的来说还是得看分析得目标\n\n通常看到的情况是，除了考虑时间序列这个单独的特征外，往往是将时间序列和具有时间属性的特征联合起来分析，查看组合特征的对所需要分析的内容的影响\n\n### 异常值和离群值\n\n大多数的参数统计数值如均值、标准差、相关系数等，以及基于这些参数的统计分析均对离群值高度敏感。因此离群值的存在会对数据分析造成极大影响\n\n#### 判断\n- 用分位数搞定，看跟平均值的偏差超过几倍标准差\n- LOF算法\n- describe的时候加一个箱型图\n\n#### 处理\n- 对数转换\n- 缩尾\n- 截尾\n- 插值\n\n### 无用特征删除\n\n将所有object格式的改为数值格式，其中有部分无用特征则可直接删除\n\n由上可看出需处理包含：['trade_no', 'bank_card_no', 'reg_preference_for_trad', 'source', 'id_name', 'latest_query_time', 'loans_latest_time']\n\n\n```python\ndf['source'].value_counts(dropna = False)\n```\n\n\n\n\n    xs    4754\n    Name: source, dtype: int64\n\n\n\n\n```python\nto_drop = ['trade_no', 'bank_card_no', 'student_feature','cross_consume_count_last_1_month', 'id_name', 'source']\ndf = df.drop(to_drop, axis=1)\n```\n\n### 缺失填充\n\n\n```python\ndf['reg_preference_for_trad'].value_counts(dropna = False)\n```\n\n\n\n\n    一线城市    3403\n    三线城市    1064\n    境外       150\n    二线城市     131\n    其他城市       4\n    NaN        2\n    Name: reg_preference_for_trad, dtype: int64\n\n\n\n\n```python\ndf['reg_preference_for_trad'].fillna('其他城市',inplace = True)\ndf['reg_preference_for_trad'].value_counts(dropna = False)\n```\n\n\n\n\n    一线城市    3403\n    三线城市    1064\n    境外       150\n    二线城市     131\n    其他城市       6\n    Name: reg_preference_for_trad, dtype: int64\n\n\n\n\n```python\ndf.isnull().sum().sort_values(ascending = False)\n```\n\n\n\n\n    latest_three_month_apply                      304\n    query_finance_count                           304\n    latest_six_month_apply                        304\n    latest_query_time                             304\n    query_sum_count                               304\n    query_cash_count                              304\n    latest_one_month_apply                        304\n    query_org_count                               304\n    apply_credibility                             304\n    apply_score                                   304\n    latest_query_day                              304\n    latest_three_month_loan                       297\n    loans_score                                   297\n    loans_credibility_behavior                    297\n    loans_count                                   297\n    loans_settle_count                            297\n    loans_overdue_count                           297\n    loans_org_count_behavior                      297\n    consfin_org_count_behavior                    297\n    loans_cash_count                              297\n    latest_one_month_loan                         297\n    loans_latest_day                              297\n    latest_six_month_loan                         297\n    loans_product_count                           297\n    history_suc_fee                               297\n    consfin_avg_limit                             297\n    consfin_product_count                         297\n    consfin_org_count_current                     297\n    consfin_credibility                           297\n    consfin_credit_limit                          297\n                                                 ... \n    trans_amount_increase_rate_lately               3\n    trans_days_interval                             2\n    regional_mobility                               2\n    number_of_trans_from_2011                       2\n    middle_volume_percent                           2\n    transd_mcc                                      2\n    trans_activity_day                              2\n    trans_activity_month                            2\n    low_volume_percent                              2\n    historical_trans_day                            2\n    first_transaction_time                          2\n    first_transaction_day                           2\n    rank_trad_1_month                               2\n    avg_consume_less_12_valid_month                 2\n    trans_day_last_12_month                         2\n    top_trans_count_last_1_month                    2\n    max_cumulative_consume_later_1_month            0\n    custid                                          0\n    status                                          0\n    take_amount_in_later_12_month_highest           0\n    pawns_auctions_trusts_consume_last_6_month      0\n    pawns_auctions_trusts_consume_last_1_month      0\n    reg_preference_for_trad                         0\n    historical_trans_amount                         0\n    avg_price_last_12_month                         0\n    abs                                             0\n    repayment_capability                            0\n    is_high_user                                    0\n    trans_amount_3_month                            0\n    Unnamed: 0                                      0\n    Length: 84, dtype: int64\n\n\n\n## 特征间探索\n\n\n```python\ncorr = df[:].corr()\nplt.figure(figsize=(15, 10))\nsb.heatmap(corr)\nplt.savefig(\"../img/2019-08-01_金融数据描述_10.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_10.png)\n\n\n```python\ncorr\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>custid</th>\n      <th>low_volume_percent</th>\n      <th>middle_volume_percent</th>\n      <th>take_amount_in_later_12_month_highest</th>\n      <th>trans_amount_increase_rate_lately</th>\n      <th>trans_activity_month</th>\n      <th>trans_activity_day</th>\n      <th>transd_mcc</th>\n      <th>trans_days_interval_filter</th>\n      <th>...</th>\n      <th>loans_max_limit</th>\n      <th>loans_avg_limit</th>\n      <th>consfin_credit_limit</th>\n      <th>consfin_credibility</th>\n      <th>consfin_org_count_current</th>\n      <th>consfin_product_count</th>\n      <th>consfin_max_limit</th>\n      <th>consfin_avg_limit</th>\n      <th>latest_query_day</th>\n      <th>loans_latest_day</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Unnamed: 0</th>\n      <td>1.000000</td>\n      <td>-0.007628</td>\n      <td>0.002861</td>\n      <td>-0.022844</td>\n      <td>-0.019728</td>\n      <td>0.014076</td>\n      <td>-0.021715</td>\n      <td>-0.001027</td>\n      <td>-0.006975</td>\n      <td>-0.021338</td>\n      <td>...</td>\n      <td>0.012189</td>\n      <td>-0.004457</td>\n      <td>0.005967</td>\n      <td>0.007746</td>\n      <td>0.012062</td>\n      <td>0.009583</td>\n      <td>0.004020</td>\n      <td>0.008860</td>\n      <td>0.020774</td>\n      <td>0.026387</td>\n    </tr>\n    <tr>\n      <th>custid</th>\n      <td>-0.007628</td>\n      <td>1.000000</td>\n      <td>0.031430</td>\n      <td>0.090599</td>\n      <td>-0.030282</td>\n      <td>-0.001299</td>\n      <td>-0.118811</td>\n      <td>-0.216062</td>\n      <td>-0.147485</td>\n      <td>0.144513</td>\n      <td>...</td>\n      <td>-0.236185</td>\n      <td>-0.152017</td>\n      <td>-0.093180</td>\n      <td>-0.041979</td>\n      <td>-0.129297</td>\n      <td>-0.139197</td>\n      <td>-0.115324</td>\n      <td>-0.076767</td>\n      <td>0.099208</td>\n      <td>0.098628</td>\n    </tr>\n    <tr>\n      <th>low_volume_percent</th>\n      <td>0.002861</td>\n      <td>0.031430</td>\n      <td>1.000000</td>\n      <td>-0.151504</td>\n      <td>-0.066047</td>\n      <td>0.005331</td>\n      <td>0.023895</td>\n      <td>-0.093754</td>\n      <td>-0.095780</td>\n      <td>0.054680</td>\n      <td>...</td>\n      <td>-0.140173</td>\n      <td>-0.128145</td>\n      <td>-0.083987</td>\n      <td>-0.032534</td>\n      <td>-0.074851</td>\n      <td>-0.067226</td>\n      <td>-0.096647</td>\n      <td>-0.094627</td>\n      <td>0.069301</td>\n      <td>0.047500</td>\n    </tr>\n    <tr>\n      <th>middle_volume_percent</th>\n      <td>-0.022844</td>\n      <td>0.090599</td>\n      <td>-0.151504</td>\n      <td>1.000000</td>\n      <td>-0.135050</td>\n      <td>0.001608</td>\n      <td>-0.031743</td>\n      <td>-0.055491</td>\n      <td>-0.094736</td>\n      <td>0.010146</td>\n      <td>...</td>\n      <td>-0.145599</td>\n      <td>-0.110230</td>\n      <td>-0.153241</td>\n      <td>0.003266</td>\n      <td>-0.007761</td>\n      <td>-0.014847</td>\n      <td>-0.169575</td>\n      <td>-0.174126</td>\n      <td>-0.001628</td>\n      <td>-0.003253</td>\n    </tr>\n    <tr>\n      <th>take_amount_in_later_12_month_highest</th>\n      <td>-0.019728</td>\n      <td>-0.030282</td>\n      <td>-0.066047</td>\n      <td>-0.135050</td>\n      <td>1.000000</td>\n      <td>-0.006699</td>\n      <td>0.060997</td>\n      <td>0.112582</td>\n      <td>0.181435</td>\n      <td>-0.055318</td>\n      <td>...</td>\n      <td>0.071798</td>\n      <td>0.038880</td>\n      <td>0.039328</td>\n      <td>0.015841</td>\n      <td>0.021387</td>\n      <td>0.021337</td>\n      <td>0.054433</td>\n      <td>0.040634</td>\n      <td>-0.000570</td>\n      <td>-0.010231</td>\n    </tr>\n    <tr>\n      <th>trans_amount_increase_rate_lately</th>\n      <td>0.014076</td>\n      <td>-0.001299</td>\n      <td>0.005331</td>\n      <td>0.001608</td>\n      <td>-0.006699</td>\n      <td>1.000000</td>\n      <td>0.015389</td>\n      <td>-0.003061</td>\n      <td>-0.011644</td>\n      <td>0.013220</td>\n      <td>...</td>\n      <td>0.007119</td>\n      <td>0.000119</td>\n      <td>0.028868</td>\n      <td>0.006174</td>\n      <td>-0.019901</td>\n      <td>-0.019603</td>\n      <td>0.007123</td>\n      <td>0.040865</td>\n      <td>-0.001457</td>\n      <td>0.027221</td>\n    </tr>\n    <tr>\n      <th>trans_activity_month</th>\n      <td>-0.021715</td>\n      <td>-0.118811</td>\n      <td>0.023895</td>\n      <td>-0.031743</td>\n      <td>0.060997</td>\n      <td>0.015389</td>\n      <td>1.000000</td>\n      <td>0.063373</td>\n      <td>0.069272</td>\n      <td>-0.091630</td>\n      <td>...</td>\n      <td>0.061847</td>\n      <td>0.037275</td>\n      <td>-0.036822</td>\n      <td>-0.000400</td>\n      <td>0.003332</td>\n      <td>0.005534</td>\n      <td>-0.022388</td>\n      <td>-0.043764</td>\n      <td>-0.024161</td>\n      <td>-0.014880</td>\n    </tr>\n    <tr>\n      <th>trans_activity_day</th>\n      <td>-0.001027</td>\n      <td>-0.216062</td>\n      <td>-0.093754</td>\n      <td>-0.055491</td>\n      <td>0.112582</td>\n      <td>-0.003061</td>\n      <td>0.063373</td>\n      <td>1.000000</td>\n      <td>0.674547</td>\n      <td>-0.491304</td>\n      <td>...</td>\n      <td>0.445155</td>\n      <td>0.202242</td>\n      <td>0.096622</td>\n      <td>0.181157</td>\n      <td>0.553486</td>\n      <td>0.551140</td>\n      <td>0.224509</td>\n      <td>0.085255</td>\n      <td>-0.188965</td>\n      <td>-0.299110</td>\n    </tr>\n    <tr>\n      <th>transd_mcc</th>\n      <td>-0.006975</td>\n      <td>-0.147485</td>\n      <td>-0.095780</td>\n      <td>-0.094736</td>\n      <td>0.181435</td>\n      <td>-0.011644</td>\n      <td>0.069272</td>\n      <td>0.674547</td>\n      <td>1.000000</td>\n      <td>-0.407126</td>\n      <td>...</td>\n      <td>0.313715</td>\n      <td>0.165959</td>\n      <td>0.066250</td>\n      <td>0.131905</td>\n      <td>0.371197</td>\n      <td>0.374660</td>\n      <td>0.156951</td>\n      <td>0.057663</td>\n      <td>-0.120330</td>\n      <td>-0.211593</td>\n    </tr>\n    <tr>\n      <th>trans_days_interval_filter</th>\n      <td>-0.021338</td>\n      <td>0.144513</td>\n      <td>0.054680</td>\n      <td>0.010146</td>\n      <td>-0.055318</td>\n      <td>0.013220</td>\n      <td>-0.091630</td>\n      <td>-0.491304</td>\n      <td>-0.407126</td>\n      <td>1.000000</td>\n      <td>...</td>\n      <td>-0.222970</td>\n      <td>-0.118522</td>\n      <td>-0.055205</td>\n      <td>-0.142221</td>\n      <td>-0.287044</td>\n      <td>-0.286212</td>\n      <td>-0.111345</td>\n      <td>-0.045801</td>\n      <td>0.069560</td>\n      <td>0.163433</td>\n    </tr>\n    <tr>\n      <th>trans_days_interval</th>\n      <td>-0.006297</td>\n      <td>0.200145</td>\n      <td>0.062421</td>\n      <td>-0.000383</td>\n      <td>-0.053329</td>\n      <td>0.000521</td>\n      <td>-0.151579</td>\n      <td>-0.542118</td>\n      <td>-0.447308</td>\n      <td>0.690819</td>\n      <td>...</td>\n      <td>-0.271875</td>\n      <td>-0.163049</td>\n      <td>-0.034716</td>\n      <td>-0.102588</td>\n      <td>-0.285654</td>\n      <td>-0.286510</td>\n      <td>-0.105000</td>\n      <td>-0.024740</td>\n      <td>0.102343</td>\n      <td>0.178628</td>\n    </tr>\n    <tr>\n      <th>regional_mobility</th>\n      <td>0.011694</td>\n      <td>-0.134926</td>\n      <td>-0.042939</td>\n      <td>0.009671</td>\n      <td>0.024089</td>\n      <td>-0.026960</td>\n      <td>-0.219911</td>\n      <td>0.143697</td>\n      <td>0.114936</td>\n      <td>-0.124350</td>\n      <td>...</td>\n      <td>0.099696</td>\n      <td>0.062712</td>\n      <td>0.092796</td>\n      <td>0.054084</td>\n      <td>0.147120</td>\n      <td>0.145322</td>\n      <td>0.091150</td>\n      <td>0.079245</td>\n      <td>-0.051839</td>\n      <td>-0.107139</td>\n    </tr>\n    <tr>\n      <th>student_feature</th>\n      <td>0.014227</td>\n      <td>0.026639</td>\n      <td>-0.007327</td>\n      <td>0.018852</td>\n      <td>-0.013524</td>\n      <td>-0.002682</td>\n      <td>0.004966</td>\n      <td>0.011653</td>\n      <td>0.005921</td>\n      <td>-0.005412</td>\n      <td>...</td>\n      <td>0.021982</td>\n      <td>0.007634</td>\n      <td>0.001860</td>\n      <td>0.009800</td>\n      <td>0.020368</td>\n      <td>0.017777</td>\n      <td>0.000096</td>\n      <td>0.004799</td>\n      <td>-0.020274</td>\n      <td>-0.031571</td>\n    </tr>\n    <tr>\n      <th>repayment_capability</th>\n      <td>-0.006726</td>\n      <td>-0.026254</td>\n      <td>-0.041522</td>\n      <td>-0.178436</td>\n      <td>0.055174</td>\n      <td>-0.000572</td>\n      <td>0.024737</td>\n      <td>0.189494</td>\n      <td>0.115434</td>\n      <td>-0.048998</td>\n      <td>...</td>\n      <td>0.128100</td>\n      <td>0.066266</td>\n      <td>0.052900</td>\n      <td>0.007068</td>\n      <td>0.046341</td>\n      <td>0.046471</td>\n      <td>0.063720</td>\n      <td>0.052120</td>\n      <td>-0.020964</td>\n      <td>-0.049951</td>\n    </tr>\n    <tr>\n      <th>is_high_user</th>\n      <td>-0.002995</td>\n      <td>-0.004640</td>\n      <td>0.018546</td>\n      <td>-0.029172</td>\n      <td>0.068763</td>\n      <td>-0.002017</td>\n      <td>0.044231</td>\n      <td>-0.034766</td>\n      <td>-0.080892</td>\n      <td>0.146678</td>\n      <td>...</td>\n      <td>-0.006073</td>\n      <td>0.014809</td>\n      <td>0.001286</td>\n      <td>-0.000752</td>\n      <td>-0.020497</td>\n      <td>-0.017732</td>\n      <td>0.007764</td>\n      <td>0.013155</td>\n      <td>-0.011908</td>\n      <td>-0.015299</td>\n    </tr>\n    <tr>\n      <th>number_of_trans_from_2011</th>\n      <td>0.016355</td>\n      <td>-0.276856</td>\n      <td>-0.031668</td>\n      <td>-0.084995</td>\n      <td>0.056183</td>\n      <td>-0.013609</td>\n      <td>-0.198322</td>\n      <td>0.286353</td>\n      <td>0.262917</td>\n      <td>-0.181413</td>\n      <td>...</td>\n      <td>0.195444</td>\n      <td>0.142227</td>\n      <td>0.105527</td>\n      <td>0.066191</td>\n      <td>0.212621</td>\n      <td>0.215217</td>\n      <td>0.138342</td>\n      <td>0.088776</td>\n      <td>-0.087938</td>\n      <td>-0.140635</td>\n    </tr>\n    <tr>\n      <th>historical_trans_amount</th>\n      <td>0.002346</td>\n      <td>-0.179652</td>\n      <td>-0.117333</td>\n      <td>-0.255846</td>\n      <td>0.102959</td>\n      <td>-0.002527</td>\n      <td>0.016522</td>\n      <td>0.526801</td>\n      <td>0.392433</td>\n      <td>-0.254563</td>\n      <td>...</td>\n      <td>0.324514</td>\n      <td>0.165218</td>\n      <td>0.137554</td>\n      <td>0.073505</td>\n      <td>0.288324</td>\n      <td>0.288420</td>\n      <td>0.201670</td>\n      <td>0.138920</td>\n      <td>-0.087267</td>\n      <td>-0.156048</td>\n    </tr>\n    <tr>\n      <th>historical_trans_day</th>\n      <td>0.004245</td>\n      <td>-0.345875</td>\n      <td>-0.068345</td>\n      <td>-0.116128</td>\n      <td>0.112908</td>\n      <td>-0.006987</td>\n      <td>0.052108</td>\n      <td>0.855832</td>\n      <td>0.603820</td>\n      <td>-0.424616</td>\n      <td>...</td>\n      <td>0.430792</td>\n      <td>0.223623</td>\n      <td>0.111262</td>\n      <td>0.142560</td>\n      <td>0.472101</td>\n      <td>0.473890</td>\n      <td>0.219427</td>\n      <td>0.097498</td>\n      <td>-0.171007</td>\n      <td>-0.267034</td>\n    </tr>\n    <tr>\n      <th>rank_trad_1_month</th>\n      <td>0.011515</td>\n      <td>0.116798</td>\n      <td>0.102996</td>\n      <td>0.139914</td>\n      <td>-0.089095</td>\n      <td>0.028153</td>\n      <td>-0.017110</td>\n      <td>-0.517923</td>\n      <td>-0.481565</td>\n      <td>0.345540</td>\n      <td>...</td>\n      <td>-0.235028</td>\n      <td>-0.121879</td>\n      <td>-0.120020</td>\n      <td>-0.133787</td>\n      <td>-0.328297</td>\n      <td>-0.327323</td>\n      <td>-0.180749</td>\n      <td>-0.115613</td>\n      <td>0.139572</td>\n      <td>0.243659</td>\n    </tr>\n    <tr>\n      <th>trans_amount_3_month</th>\n      <td>-0.003329</td>\n      <td>-0.069252</td>\n      <td>-0.063526</td>\n      <td>-0.189438</td>\n      <td>0.074279</td>\n      <td>-0.003598</td>\n      <td>0.010864</td>\n      <td>0.293735</td>\n      <td>0.250140</td>\n      <td>-0.139654</td>\n      <td>...</td>\n      <td>0.186909</td>\n      <td>0.084463</td>\n      <td>0.065007</td>\n      <td>0.033856</td>\n      <td>0.151395</td>\n      <td>0.153457</td>\n      <td>0.094556</td>\n      <td>0.063275</td>\n      <td>-0.044342</td>\n      <td>-0.099134</td>\n    </tr>\n    <tr>\n      <th>avg_consume_less_12_valid_month</th>\n      <td>-0.001742</td>\n      <td>-0.087905</td>\n      <td>-0.042251</td>\n      <td>-0.154257</td>\n      <td>0.031360</td>\n      <td>0.006201</td>\n      <td>0.014532</td>\n      <td>0.081550</td>\n      <td>0.194729</td>\n      <td>-0.017535</td>\n      <td>...</td>\n      <td>0.054239</td>\n      <td>0.010832</td>\n      <td>0.024610</td>\n      <td>0.026514</td>\n      <td>0.103333</td>\n      <td>0.101638</td>\n      <td>0.044864</td>\n      <td>0.011955</td>\n      <td>-0.069481</td>\n      <td>-0.090181</td>\n    </tr>\n    <tr>\n      <th>abs</th>\n      <td>-0.004830</td>\n      <td>-0.059940</td>\n      <td>-0.059972</td>\n      <td>-0.247023</td>\n      <td>0.081978</td>\n      <td>-0.003474</td>\n      <td>0.038276</td>\n      <td>0.306292</td>\n      <td>0.160103</td>\n      <td>-0.054408</td>\n      <td>...</td>\n      <td>0.152274</td>\n      <td>0.105389</td>\n      <td>0.072716</td>\n      <td>0.009934</td>\n      <td>0.071542</td>\n      <td>0.074592</td>\n      <td>0.102727</td>\n      <td>0.090651</td>\n      <td>-0.042772</td>\n      <td>-0.065586</td>\n    </tr>\n    <tr>\n      <th>top_trans_count_last_1_month</th>\n      <td>0.021195</td>\n      <td>0.101220</td>\n      <td>0.037765</td>\n      <td>0.059410</td>\n      <td>-0.063713</td>\n      <td>0.029701</td>\n      <td>-0.026923</td>\n      <td>-0.503568</td>\n      <td>-0.475823</td>\n      <td>0.381422</td>\n      <td>...</td>\n      <td>-0.199205</td>\n      <td>-0.082819</td>\n      <td>-0.071977</td>\n      <td>-0.138804</td>\n      <td>-0.323863</td>\n      <td>-0.324179</td>\n      <td>-0.128756</td>\n      <td>-0.058697</td>\n      <td>0.140451</td>\n      <td>0.247943</td>\n    </tr>\n    <tr>\n      <th>avg_price_last_12_month</th>\n      <td>0.011454</td>\n      <td>-0.090752</td>\n      <td>-0.286213</td>\n      <td>-0.556220</td>\n      <td>0.129908</td>\n      <td>-0.004808</td>\n      <td>-0.006858</td>\n      <td>0.068127</td>\n      <td>0.067431</td>\n      <td>-0.003254</td>\n      <td>...</td>\n      <td>0.204154</td>\n      <td>0.186553</td>\n      <td>0.183277</td>\n      <td>-0.017057</td>\n      <td>0.019580</td>\n      <td>0.017570</td>\n      <td>0.179284</td>\n      <td>0.205885</td>\n      <td>-0.033386</td>\n      <td>-0.020140</td>\n    </tr>\n    <tr>\n      <th>avg_price_top_last_12_valid_month</th>\n      <td>-0.018637</td>\n      <td>0.124158</td>\n      <td>0.509637</td>\n      <td>0.369498</td>\n      <td>-0.123202</td>\n      <td>-0.030556</td>\n      <td>0.011839</td>\n      <td>-0.138470</td>\n      <td>-0.145411</td>\n      <td>0.064464</td>\n      <td>...</td>\n      <td>-0.316923</td>\n      <td>-0.285338</td>\n      <td>-0.172475</td>\n      <td>-0.002851</td>\n      <td>-0.087684</td>\n      <td>-0.080339</td>\n      <td>-0.197348</td>\n      <td>-0.195194</td>\n      <td>0.079399</td>\n      <td>0.062422</td>\n    </tr>\n    <tr>\n      <th>trans_top_time_last_1_month</th>\n      <td>-0.007772</td>\n      <td>-0.003624</td>\n      <td>-0.023020</td>\n      <td>-0.015316</td>\n      <td>0.028547</td>\n      <td>-0.021723</td>\n      <td>0.018931</td>\n      <td>0.092705</td>\n      <td>0.143620</td>\n      <td>-0.127328</td>\n      <td>...</td>\n      <td>0.039372</td>\n      <td>0.019334</td>\n      <td>0.005990</td>\n      <td>0.060674</td>\n      <td>0.059770</td>\n      <td>0.056594</td>\n      <td>0.021747</td>\n      <td>0.000811</td>\n      <td>-0.030739</td>\n      <td>-0.069952</td>\n    </tr>\n    <tr>\n      <th>trans_top_time_last_6_month</th>\n      <td>0.012229</td>\n      <td>0.063470</td>\n      <td>0.064055</td>\n      <td>0.025356</td>\n      <td>-0.079647</td>\n      <td>0.032999</td>\n      <td>-0.016856</td>\n      <td>-0.519642</td>\n      <td>-0.400228</td>\n      <td>0.541678</td>\n      <td>...</td>\n      <td>-0.227717</td>\n      <td>-0.111353</td>\n      <td>-0.055343</td>\n      <td>-0.151634</td>\n      <td>-0.336984</td>\n      <td>-0.334724</td>\n      <td>-0.106172</td>\n      <td>-0.042912</td>\n      <td>0.088539</td>\n      <td>0.199473</td>\n    </tr>\n    <tr>\n      <th>consume_top_time_last_1_month</th>\n      <td>-0.012425</td>\n      <td>-0.013828</td>\n      <td>-0.030325</td>\n      <td>-0.024816</td>\n      <td>0.022475</td>\n      <td>-0.020937</td>\n      <td>0.021517</td>\n      <td>0.126348</td>\n      <td>0.162267</td>\n      <td>-0.155562</td>\n      <td>...</td>\n      <td>0.053634</td>\n      <td>0.023311</td>\n      <td>0.018442</td>\n      <td>0.073859</td>\n      <td>0.083782</td>\n      <td>0.080835</td>\n      <td>0.038965</td>\n      <td>0.012452</td>\n      <td>-0.044495</td>\n      <td>-0.078152</td>\n    </tr>\n    <tr>\n      <th>consume_top_time_last_6_month</th>\n      <td>0.010297</td>\n      <td>0.071615</td>\n      <td>0.026853</td>\n      <td>0.033989</td>\n      <td>-0.062038</td>\n      <td>0.032106</td>\n      <td>-0.009154</td>\n      <td>-0.506739</td>\n      <td>-0.371122</td>\n      <td>0.489491</td>\n      <td>...</td>\n      <td>-0.228478</td>\n      <td>-0.109085</td>\n      <td>-0.055605</td>\n      <td>-0.128403</td>\n      <td>-0.331808</td>\n      <td>-0.329305</td>\n      <td>-0.105383</td>\n      <td>-0.042412</td>\n      <td>0.083349</td>\n      <td>0.194636</td>\n    </tr>\n    <tr>\n      <th>cross_consume_count_last_1_month</th>\n      <td>-0.019612</td>\n      <td>-0.015749</td>\n      <td>0.056716</td>\n      <td>-0.076003</td>\n      <td>0.042310</td>\n      <td>-0.004524</td>\n      <td>-0.001588</td>\n      <td>0.217779</td>\n      <td>0.236684</td>\n      <td>-0.098826</td>\n      <td>...</td>\n      <td>0.101269</td>\n      <td>0.038369</td>\n      <td>0.032169</td>\n      <td>0.024935</td>\n      <td>0.129515</td>\n      <td>0.131031</td>\n      <td>0.041163</td>\n      <td>0.025667</td>\n      <td>-0.026850</td>\n      <td>-0.081532</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>loans_score</th>\n      <td>-0.014716</td>\n      <td>-0.006276</td>\n      <td>-0.007019</td>\n      <td>-0.039519</td>\n      <td>-0.003928</td>\n      <td>0.010481</td>\n      <td>-0.020418</td>\n      <td>-0.211471</td>\n      <td>-0.141698</td>\n      <td>0.105373</td>\n      <td>...</td>\n      <td>-0.145502</td>\n      <td>-0.071344</td>\n      <td>0.076157</td>\n      <td>-0.043698</td>\n      <td>-0.242594</td>\n      <td>-0.249384</td>\n      <td>-0.004854</td>\n      <td>0.085289</td>\n      <td>0.035587</td>\n      <td>-0.019444</td>\n    </tr>\n    <tr>\n      <th>loans_credibility_behavior</th>\n      <td>-0.000191</td>\n      <td>-0.023587</td>\n      <td>0.037414</td>\n      <td>-0.031636</td>\n      <td>-0.017790</td>\n      <td>-0.003788</td>\n      <td>0.002694</td>\n      <td>-0.059242</td>\n      <td>-0.028579</td>\n      <td>0.016791</td>\n      <td>...</td>\n      <td>-0.109592</td>\n      <td>-0.059538</td>\n      <td>0.113228</td>\n      <td>0.202241</td>\n      <td>0.132995</td>\n      <td>0.141105</td>\n      <td>0.112848</td>\n      <td>0.110999</td>\n      <td>0.014235</td>\n      <td>-0.034587</td>\n    </tr>\n    <tr>\n      <th>loans_count</th>\n      <td>0.008971</td>\n      <td>-0.104423</td>\n      <td>-0.103643</td>\n      <td>0.093372</td>\n      <td>0.034853</td>\n      <td>-0.011057</td>\n      <td>0.010844</td>\n      <td>0.713700</td>\n      <td>0.433028</td>\n      <td>-0.340780</td>\n      <td>...</td>\n      <td>0.454809</td>\n      <td>0.167113</td>\n      <td>0.097746</td>\n      <td>0.189068</td>\n      <td>0.669975</td>\n      <td>0.658099</td>\n      <td>0.240708</td>\n      <td>0.067635</td>\n      <td>-0.194495</td>\n      <td>-0.388366</td>\n    </tr>\n    <tr>\n      <th>loans_settle_count</th>\n      <td>0.008509</td>\n      <td>-0.106395</td>\n      <td>-0.115451</td>\n      <td>0.084747</td>\n      <td>0.044691</td>\n      <td>-0.011398</td>\n      <td>0.006203</td>\n      <td>0.723008</td>\n      <td>0.440667</td>\n      <td>-0.346732</td>\n      <td>...</td>\n      <td>0.466131</td>\n      <td>0.175771</td>\n      <td>0.109141</td>\n      <td>0.183622</td>\n      <td>0.633814</td>\n      <td>0.618343</td>\n      <td>0.239062</td>\n      <td>0.079620</td>\n      <td>-0.198341</td>\n      <td>-0.374859</td>\n    </tr>\n    <tr>\n      <th>loans_overdue_count</th>\n      <td>-0.002123</td>\n      <td>-0.047870</td>\n      <td>0.003258</td>\n      <td>0.055341</td>\n      <td>-0.018406</td>\n      <td>-0.009483</td>\n      <td>0.026175</td>\n      <td>0.319103</td>\n      <td>0.193574</td>\n      <td>-0.145065</td>\n      <td>...</td>\n      <td>0.189896</td>\n      <td>0.071337</td>\n      <td>0.001805</td>\n      <td>0.089767</td>\n      <td>0.389047</td>\n      <td>0.396295</td>\n      <td>0.109103</td>\n      <td>-0.020359</td>\n      <td>-0.069116</td>\n      <td>-0.166293</td>\n    </tr>\n    <tr>\n      <th>loans_org_count_behavior</th>\n      <td>0.002662</td>\n      <td>-0.107997</td>\n      <td>-0.113256</td>\n      <td>0.086219</td>\n      <td>0.020780</td>\n      <td>-0.012629</td>\n      <td>0.014655</td>\n      <td>0.698811</td>\n      <td>0.451913</td>\n      <td>-0.330187</td>\n      <td>...</td>\n      <td>0.462677</td>\n      <td>0.133557</td>\n      <td>0.065915</td>\n      <td>0.231726</td>\n      <td>0.799828</td>\n      <td>0.784147</td>\n      <td>0.257087</td>\n      <td>0.038651</td>\n      <td>-0.216354</td>\n      <td>-0.402870</td>\n    </tr>\n    <tr>\n      <th>consfin_org_count_behavior</th>\n      <td>0.012062</td>\n      <td>-0.129297</td>\n      <td>-0.074851</td>\n      <td>-0.007761</td>\n      <td>0.021387</td>\n      <td>-0.019901</td>\n      <td>0.003332</td>\n      <td>0.553486</td>\n      <td>0.371197</td>\n      <td>-0.287044</td>\n      <td>...</td>\n      <td>0.357549</td>\n      <td>0.137506</td>\n      <td>0.102057</td>\n      <td>0.297390</td>\n      <td>1.000000</td>\n      <td>0.988027</td>\n      <td>0.345697</td>\n      <td>0.074170</td>\n      <td>-0.185038</td>\n      <td>-0.399885</td>\n    </tr>\n    <tr>\n      <th>loans_cash_count</th>\n      <td>-0.002987</td>\n      <td>-0.078110</td>\n      <td>-0.115566</td>\n      <td>0.123857</td>\n      <td>0.016962</td>\n      <td>-0.006482</td>\n      <td>0.018475</td>\n      <td>0.662281</td>\n      <td>0.420938</td>\n      <td>-0.298750</td>\n      <td>...</td>\n      <td>0.443326</td>\n      <td>0.108990</td>\n      <td>0.034866</td>\n      <td>0.156549</td>\n      <td>0.555002</td>\n      <td>0.539896</td>\n      <td>0.164961</td>\n      <td>0.012515</td>\n      <td>-0.197164</td>\n      <td>-0.337008</td>\n    </tr>\n    <tr>\n      <th>latest_one_month_loan</th>\n      <td>-0.001009</td>\n      <td>-0.082016</td>\n      <td>-0.034938</td>\n      <td>-0.017258</td>\n      <td>0.008845</td>\n      <td>-0.010482</td>\n      <td>0.010030</td>\n      <td>0.251331</td>\n      <td>0.152255</td>\n      <td>-0.109048</td>\n      <td>...</td>\n      <td>0.216387</td>\n      <td>0.078718</td>\n      <td>0.057899</td>\n      <td>0.087776</td>\n      <td>0.328566</td>\n      <td>0.334659</td>\n      <td>0.136317</td>\n      <td>0.039233</td>\n      <td>-0.167327</td>\n      <td>-0.564125</td>\n    </tr>\n    <tr>\n      <th>latest_three_month_loan</th>\n      <td>0.009841</td>\n      <td>-0.102432</td>\n      <td>-0.041141</td>\n      <td>-0.007416</td>\n      <td>0.009611</td>\n      <td>-0.012746</td>\n      <td>0.024060</td>\n      <td>0.277217</td>\n      <td>0.180567</td>\n      <td>-0.132316</td>\n      <td>...</td>\n      <td>0.235019</td>\n      <td>0.083134</td>\n      <td>0.055062</td>\n      <td>0.099953</td>\n      <td>0.410173</td>\n      <td>0.415173</td>\n      <td>0.158521</td>\n      <td>0.038337</td>\n      <td>-0.172112</td>\n      <td>-0.556912</td>\n    </tr>\n    <tr>\n      <th>latest_six_month_loan</th>\n      <td>0.013859</td>\n      <td>-0.084090</td>\n      <td>-0.080426</td>\n      <td>0.080167</td>\n      <td>0.034499</td>\n      <td>-0.007440</td>\n      <td>0.023376</td>\n      <td>0.618386</td>\n      <td>0.381795</td>\n      <td>-0.294128</td>\n      <td>...</td>\n      <td>0.395462</td>\n      <td>0.110447</td>\n      <td>0.067585</td>\n      <td>0.169560</td>\n      <td>0.653119</td>\n      <td>0.646769</td>\n      <td>0.214958</td>\n      <td>0.040151</td>\n      <td>-0.201667</td>\n      <td>-0.457269</td>\n    </tr>\n    <tr>\n      <th>history_suc_fee</th>\n      <td>0.005751</td>\n      <td>-0.154554</td>\n      <td>-0.068576</td>\n      <td>0.038832</td>\n      <td>0.036804</td>\n      <td>-0.013452</td>\n      <td>0.008331</td>\n      <td>0.707752</td>\n      <td>0.432147</td>\n      <td>-0.361614</td>\n      <td>...</td>\n      <td>0.439947</td>\n      <td>0.158091</td>\n      <td>0.129951</td>\n      <td>0.194162</td>\n      <td>0.682134</td>\n      <td>0.674063</td>\n      <td>0.258122</td>\n      <td>0.092018</td>\n      <td>-0.197019</td>\n      <td>-0.392292</td>\n    </tr>\n    <tr>\n      <th>history_fail_fee</th>\n      <td>0.005633</td>\n      <td>-0.039117</td>\n      <td>0.009093</td>\n      <td>0.055486</td>\n      <td>-0.019751</td>\n      <td>-0.006480</td>\n      <td>0.033715</td>\n      <td>0.269878</td>\n      <td>0.148111</td>\n      <td>-0.115664</td>\n      <td>...</td>\n      <td>0.164983</td>\n      <td>0.047106</td>\n      <td>0.008807</td>\n      <td>0.098387</td>\n      <td>0.399674</td>\n      <td>0.411005</td>\n      <td>0.130966</td>\n      <td>-0.011496</td>\n      <td>-0.060527</td>\n      <td>-0.199490</td>\n    </tr>\n    <tr>\n      <th>latest_one_month_suc</th>\n      <td>0.000168</td>\n      <td>-0.078523</td>\n      <td>-0.025131</td>\n      <td>-0.022327</td>\n      <td>0.022699</td>\n      <td>-0.009579</td>\n      <td>0.009873</td>\n      <td>0.228821</td>\n      <td>0.146654</td>\n      <td>-0.111359</td>\n      <td>...</td>\n      <td>0.194397</td>\n      <td>0.056937</td>\n      <td>0.023565</td>\n      <td>0.092642</td>\n      <td>0.349219</td>\n      <td>0.360903</td>\n      <td>0.119473</td>\n      <td>0.014118</td>\n      <td>-0.167496</td>\n      <td>-0.459412</td>\n    </tr>\n    <tr>\n      <th>latest_one_month_fail</th>\n      <td>0.013939</td>\n      <td>-0.041356</td>\n      <td>0.021126</td>\n      <td>-0.018844</td>\n      <td>-0.004671</td>\n      <td>-0.005436</td>\n      <td>0.017951</td>\n      <td>0.133230</td>\n      <td>0.080658</td>\n      <td>-0.053043</td>\n      <td>...</td>\n      <td>0.104707</td>\n      <td>0.041028</td>\n      <td>-0.000725</td>\n      <td>0.053177</td>\n      <td>0.228943</td>\n      <td>0.244784</td>\n      <td>0.078403</td>\n      <td>-0.011238</td>\n      <td>-0.051815</td>\n      <td>-0.232811</td>\n    </tr>\n    <tr>\n      <th>loans_long_time</th>\n      <td>0.000992</td>\n      <td>-0.216323</td>\n      <td>-0.074834</td>\n      <td>0.040822</td>\n      <td>0.012660</td>\n      <td>-0.002678</td>\n      <td>0.030914</td>\n      <td>0.384281</td>\n      <td>0.301560</td>\n      <td>-0.317888</td>\n      <td>...</td>\n      <td>0.368329</td>\n      <td>0.268476</td>\n      <td>0.144168</td>\n      <td>0.229963</td>\n      <td>0.345921</td>\n      <td>0.337877</td>\n      <td>0.198060</td>\n      <td>0.134422</td>\n      <td>-0.134214</td>\n      <td>-0.214274</td>\n    </tr>\n    <tr>\n      <th>loans_credit_limit</th>\n      <td>-0.006194</td>\n      <td>-0.160582</td>\n      <td>-0.138446</td>\n      <td>-0.086706</td>\n      <td>0.050185</td>\n      <td>0.013118</td>\n      <td>0.036172</td>\n      <td>0.229054</td>\n      <td>0.177929</td>\n      <td>-0.146462</td>\n      <td>...</td>\n      <td>0.745694</td>\n      <td>0.901755</td>\n      <td>0.085200</td>\n      <td>0.057358</td>\n      <td>0.151520</td>\n      <td>0.152471</td>\n      <td>0.123290</td>\n      <td>0.087213</td>\n      <td>-0.111170</td>\n      <td>-0.157736</td>\n    </tr>\n    <tr>\n      <th>loans_credibility_limit</th>\n      <td>-0.033850</td>\n      <td>-0.000850</td>\n      <td>-0.051545</td>\n      <td>0.090824</td>\n      <td>-0.025575</td>\n      <td>0.003868</td>\n      <td>-0.005513</td>\n      <td>0.161363</td>\n      <td>0.154721</td>\n      <td>-0.083218</td>\n      <td>...</td>\n      <td>0.328845</td>\n      <td>0.456704</td>\n      <td>-0.022646</td>\n      <td>-0.029875</td>\n      <td>0.115503</td>\n      <td>0.114720</td>\n      <td>0.021164</td>\n      <td>-0.036374</td>\n      <td>-0.127687</td>\n      <td>-0.138313</td>\n    </tr>\n    <tr>\n      <th>loans_org_count_current</th>\n      <td>-0.002987</td>\n      <td>-0.078110</td>\n      <td>-0.115566</td>\n      <td>0.123857</td>\n      <td>0.016962</td>\n      <td>-0.006482</td>\n      <td>0.018475</td>\n      <td>0.662281</td>\n      <td>0.420938</td>\n      <td>-0.298750</td>\n      <td>...</td>\n      <td>0.443326</td>\n      <td>0.108990</td>\n      <td>0.034866</td>\n      <td>0.156549</td>\n      <td>0.555002</td>\n      <td>0.539896</td>\n      <td>0.164961</td>\n      <td>0.012515</td>\n      <td>-0.197164</td>\n      <td>-0.337008</td>\n    </tr>\n    <tr>\n      <th>loans_product_count</th>\n      <td>-0.001941</td>\n      <td>-0.072159</td>\n      <td>-0.114296</td>\n      <td>0.122741</td>\n      <td>0.018572</td>\n      <td>-0.007575</td>\n      <td>0.019401</td>\n      <td>0.656939</td>\n      <td>0.416980</td>\n      <td>-0.295409</td>\n      <td>...</td>\n      <td>0.441316</td>\n      <td>0.108962</td>\n      <td>0.031936</td>\n      <td>0.155744</td>\n      <td>0.553607</td>\n      <td>0.539424</td>\n      <td>0.163650</td>\n      <td>0.009397</td>\n      <td>-0.199549</td>\n      <td>-0.348389</td>\n    </tr>\n    <tr>\n      <th>loans_max_limit</th>\n      <td>0.012189</td>\n      <td>-0.236185</td>\n      <td>-0.140173</td>\n      <td>-0.145599</td>\n      <td>0.071798</td>\n      <td>0.007119</td>\n      <td>0.061847</td>\n      <td>0.445155</td>\n      <td>0.313715</td>\n      <td>-0.222970</td>\n      <td>...</td>\n      <td>1.000000</td>\n      <td>0.716175</td>\n      <td>0.108760</td>\n      <td>0.101659</td>\n      <td>0.357549</td>\n      <td>0.354231</td>\n      <td>0.208389</td>\n      <td>0.109425</td>\n      <td>-0.190074</td>\n      <td>-0.282204</td>\n    </tr>\n    <tr>\n      <th>loans_avg_limit</th>\n      <td>-0.004457</td>\n      <td>-0.152017</td>\n      <td>-0.128145</td>\n      <td>-0.110230</td>\n      <td>0.038880</td>\n      <td>0.000119</td>\n      <td>0.037275</td>\n      <td>0.202242</td>\n      <td>0.165959</td>\n      <td>-0.118522</td>\n      <td>...</td>\n      <td>0.716175</td>\n      <td>1.000000</td>\n      <td>0.091117</td>\n      <td>0.031452</td>\n      <td>0.137506</td>\n      <td>0.137271</td>\n      <td>0.130307</td>\n      <td>0.098641</td>\n      <td>-0.099086</td>\n      <td>-0.144835</td>\n    </tr>\n    <tr>\n      <th>consfin_credit_limit</th>\n      <td>0.005967</td>\n      <td>-0.093180</td>\n      <td>-0.083987</td>\n      <td>-0.153241</td>\n      <td>0.039328</td>\n      <td>0.028868</td>\n      <td>-0.036822</td>\n      <td>0.096622</td>\n      <td>0.066250</td>\n      <td>-0.055205</td>\n      <td>...</td>\n      <td>0.108760</td>\n      <td>0.091117</td>\n      <td>1.000000</td>\n      <td>0.241837</td>\n      <td>0.102057</td>\n      <td>0.081338</td>\n      <td>0.788637</td>\n      <td>0.901470</td>\n      <td>-0.047756</td>\n      <td>-0.110230</td>\n    </tr>\n    <tr>\n      <th>consfin_credibility</th>\n      <td>0.007746</td>\n      <td>-0.041979</td>\n      <td>-0.032534</td>\n      <td>0.003266</td>\n      <td>0.015841</td>\n      <td>0.006174</td>\n      <td>-0.000400</td>\n      <td>0.181157</td>\n      <td>0.131905</td>\n      <td>-0.142221</td>\n      <td>...</td>\n      <td>0.101659</td>\n      <td>0.031452</td>\n      <td>0.241837</td>\n      <td>1.000000</td>\n      <td>0.297390</td>\n      <td>0.288275</td>\n      <td>0.216232</td>\n      <td>0.275861</td>\n      <td>-0.085131</td>\n      <td>-0.230984</td>\n    </tr>\n    <tr>\n      <th>consfin_org_count_current</th>\n      <td>0.012062</td>\n      <td>-0.129297</td>\n      <td>-0.074851</td>\n      <td>-0.007761</td>\n      <td>0.021387</td>\n      <td>-0.019901</td>\n      <td>0.003332</td>\n      <td>0.553486</td>\n      <td>0.371197</td>\n      <td>-0.287044</td>\n      <td>...</td>\n      <td>0.357549</td>\n      <td>0.137506</td>\n      <td>0.102057</td>\n      <td>0.297390</td>\n      <td>1.000000</td>\n      <td>0.988027</td>\n      <td>0.345697</td>\n      <td>0.074170</td>\n      <td>-0.185038</td>\n      <td>-0.399885</td>\n    </tr>\n    <tr>\n      <th>consfin_product_count</th>\n      <td>0.009583</td>\n      <td>-0.139197</td>\n      <td>-0.067226</td>\n      <td>-0.014847</td>\n      <td>0.021337</td>\n      <td>-0.019603</td>\n      <td>0.005534</td>\n      <td>0.551140</td>\n      <td>0.374660</td>\n      <td>-0.286212</td>\n      <td>...</td>\n      <td>0.354231</td>\n      <td>0.137271</td>\n      <td>0.081338</td>\n      <td>0.288275</td>\n      <td>0.988027</td>\n      <td>1.000000</td>\n      <td>0.329687</td>\n      <td>0.054292</td>\n      <td>-0.183685</td>\n      <td>-0.402011</td>\n    </tr>\n    <tr>\n      <th>consfin_max_limit</th>\n      <td>0.004020</td>\n      <td>-0.115324</td>\n      <td>-0.096647</td>\n      <td>-0.169575</td>\n      <td>0.054433</td>\n      <td>0.007123</td>\n      <td>-0.022388</td>\n      <td>0.224509</td>\n      <td>0.156951</td>\n      <td>-0.111345</td>\n      <td>...</td>\n      <td>0.208389</td>\n      <td>0.130307</td>\n      <td>0.788637</td>\n      <td>0.216232</td>\n      <td>0.345697</td>\n      <td>0.329687</td>\n      <td>1.000000</td>\n      <td>0.790580</td>\n      <td>-0.096890</td>\n      <td>-0.193945</td>\n    </tr>\n    <tr>\n      <th>consfin_avg_limit</th>\n      <td>0.008860</td>\n      <td>-0.076767</td>\n      <td>-0.094627</td>\n      <td>-0.174126</td>\n      <td>0.040634</td>\n      <td>0.040865</td>\n      <td>-0.043764</td>\n      <td>0.085255</td>\n      <td>0.057663</td>\n      <td>-0.045801</td>\n      <td>...</td>\n      <td>0.109425</td>\n      <td>0.098641</td>\n      <td>0.901470</td>\n      <td>0.275861</td>\n      <td>0.074170</td>\n      <td>0.054292</td>\n      <td>0.790580</td>\n      <td>1.000000</td>\n      <td>-0.042131</td>\n      <td>-0.088072</td>\n    </tr>\n    <tr>\n      <th>latest_query_day</th>\n      <td>0.020774</td>\n      <td>0.099208</td>\n      <td>0.069301</td>\n      <td>-0.001628</td>\n      <td>-0.000570</td>\n      <td>-0.001457</td>\n      <td>-0.024161</td>\n      <td>-0.188965</td>\n      <td>-0.120330</td>\n      <td>0.069560</td>\n      <td>...</td>\n      <td>-0.190074</td>\n      <td>-0.099086</td>\n      <td>-0.047756</td>\n      <td>-0.085131</td>\n      <td>-0.185038</td>\n      <td>-0.183685</td>\n      <td>-0.096890</td>\n      <td>-0.042131</td>\n      <td>1.000000</td>\n      <td>0.230078</td>\n    </tr>\n    <tr>\n      <th>loans_latest_day</th>\n      <td>0.026387</td>\n      <td>0.098628</td>\n      <td>0.047500</td>\n      <td>-0.003253</td>\n      <td>-0.010231</td>\n      <td>0.027221</td>\n      <td>-0.014880</td>\n      <td>-0.299110</td>\n      <td>-0.211593</td>\n      <td>0.163433</td>\n      <td>...</td>\n      <td>-0.282204</td>\n      <td>-0.144835</td>\n      <td>-0.110230</td>\n      <td>-0.230984</td>\n      <td>-0.399885</td>\n      <td>-0.402011</td>\n      <td>-0.193945</td>\n      <td>-0.088072</td>\n      <td>0.230078</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>82 rows × 82 columns</p>\n</div>\n\n\n\n> 参考：\n\n1. [DataWhale数据挖掘实战营](https://github.com/datawhalechina/Datawhale_Learning/tree/master/doc/%E7%90%86%E8%AE%BA%E5%BA%94%E7%94%A8/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98)\n2. [利用Python进行数据分析·第2版](https://www.jianshu.com/p/29ece4592178)\n3. [Stata：离群值！离群值？离群值！](https://www.jianshu.com/p/0c967a1526ef)\n4. [机器学习中如何处理不平衡数据？](https://www.jiqizhixin.com/articles/021704)\n","source":"_posts/2019-08-01_数据理解与清洗.md","raw":"---\ntitle: 数据理解与清洗\ncategories:\n  - 统计与机器学习\n  - 其他\nmathjax: false\nabbrlink: 17314\ndate: 2019-08-01 00:00:00\n---\n\n## 数据集载入\n\n\n```python\n# -*- coding: utf-8 -*-\nimport pandas as pd\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nimport warnings\nwarnings.filterwarnings('ignore')\n\ndf = pd.read_csv(u\"2019-08-01_金融数据描述_data1.csv\",encoding = 'gbk')\n```\n\n\n```python\ndf.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>custid</th>\n      <th>trade_no</th>\n      <th>bank_card_no</th>\n      <th>low_volume_percent</th>\n      <th>middle_volume_percent</th>\n      <th>take_amount_in_later_12_month_highest</th>\n      <th>trans_amount_increase_rate_lately</th>\n      <th>trans_activity_month</th>\n      <th>trans_activity_day</th>\n      <th>...</th>\n      <th>loans_max_limit</th>\n      <th>loans_avg_limit</th>\n      <th>consfin_credit_limit</th>\n      <th>consfin_credibility</th>\n      <th>consfin_org_count_current</th>\n      <th>consfin_product_count</th>\n      <th>consfin_max_limit</th>\n      <th>consfin_avg_limit</th>\n      <th>latest_query_day</th>\n      <th>loans_latest_day</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5</td>\n      <td>2791858</td>\n      <td>20180507115231274000000023057383</td>\n      <td>卡号1</td>\n      <td>0.01</td>\n      <td>0.99</td>\n      <td>0</td>\n      <td>0.90</td>\n      <td>0.55</td>\n      <td>0.313</td>\n      <td>...</td>\n      <td>2900.0</td>\n      <td>1688.0</td>\n      <td>1200.0</td>\n      <td>75.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>12.0</td>\n      <td>18.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10</td>\n      <td>534047</td>\n      <td>20180507121002192000000023073000</td>\n      <td>卡号1</td>\n      <td>0.02</td>\n      <td>0.94</td>\n      <td>2000</td>\n      <td>1.28</td>\n      <td>1.00</td>\n      <td>0.458</td>\n      <td>...</td>\n      <td>3500.0</td>\n      <td>1758.0</td>\n      <td>15100.0</td>\n      <td>80.0</td>\n      <td>5.0</td>\n      <td>6.0</td>\n      <td>22800.0</td>\n      <td>9360.0</td>\n      <td>4.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>12</td>\n      <td>2849787</td>\n      <td>20180507125159718000000023114911</td>\n      <td>卡号1</td>\n      <td>0.04</td>\n      <td>0.96</td>\n      <td>0</td>\n      <td>1.00</td>\n      <td>1.00</td>\n      <td>0.114</td>\n      <td>...</td>\n      <td>1600.0</td>\n      <td>1250.0</td>\n      <td>4200.0</td>\n      <td>87.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>4200.0</td>\n      <td>4200.0</td>\n      <td>2.0</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>13</td>\n      <td>1809708</td>\n      <td>20180507121358683000000388283484</td>\n      <td>卡号1</td>\n      <td>0.00</td>\n      <td>0.96</td>\n      <td>2000</td>\n      <td>0.13</td>\n      <td>0.57</td>\n      <td>0.777</td>\n      <td>...</td>\n      <td>3200.0</td>\n      <td>1541.0</td>\n      <td>16300.0</td>\n      <td>80.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>30000.0</td>\n      <td>12180.0</td>\n      <td>2.0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>14</td>\n      <td>2499829</td>\n      <td>20180507115448545000000388205844</td>\n      <td>卡号1</td>\n      <td>0.01</td>\n      <td>0.99</td>\n      <td>0</td>\n      <td>0.46</td>\n      <td>1.00</td>\n      <td>0.175</td>\n      <td>...</td>\n      <td>2300.0</td>\n      <td>1630.0</td>\n      <td>8300.0</td>\n      <td>79.0</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>8400.0</td>\n      <td>8250.0</td>\n      <td>22.0</td>\n      <td>120.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 90 columns</p>\n</div>\n\n\n\n\n```python\ndf.info()\n```\n\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 4754 entries, 0 to 4753\n    Data columns (total 90 columns):\n    Unnamed: 0                                    4754 non-null int64\n    custid                                        4754 non-null int64\n    trade_no                                      4754 non-null object\n    bank_card_no                                  4754 non-null object\n    low_volume_percent                            4752 non-null float64\n    middle_volume_percent                         4752 non-null float64\n    take_amount_in_later_12_month_highest         4754 non-null int64\n    trans_amount_increase_rate_lately             4751 non-null float64\n    trans_activity_month                          4752 non-null float64\n    trans_activity_day                            4752 non-null float64\n    transd_mcc                                    4752 non-null float64\n    trans_days_interval_filter                    4746 non-null float64\n    trans_days_interval                           4752 non-null float64\n    regional_mobility                             4752 non-null float64\n    student_feature                               1756 non-null float64\n    repayment_capability                          4754 non-null int64\n    is_high_user                                  4754 non-null int64\n    number_of_trans_from_2011                     4752 non-null float64\n    first_transaction_time                        4752 non-null float64\n    historical_trans_amount                       4754 non-null int64\n    historical_trans_day                          4752 non-null float64\n    rank_trad_1_month                             4752 non-null float64\n    trans_amount_3_month                          4754 non-null int64\n    avg_consume_less_12_valid_month               4752 non-null float64\n    abs                                           4754 non-null int64\n    top_trans_count_last_1_month                  4752 non-null float64\n    avg_price_last_12_month                       4754 non-null int64\n    avg_price_top_last_12_valid_month             4650 non-null float64\n    reg_preference_for_trad                       4752 non-null object\n    trans_top_time_last_1_month                   4746 non-null float64\n    trans_top_time_last_6_month                   4746 non-null float64\n    consume_top_time_last_1_month                 4746 non-null float64\n    consume_top_time_last_6_month                 4746 non-null float64\n    cross_consume_count_last_1_month              4328 non-null float64\n    trans_fail_top_count_enum_last_1_month        4738 non-null float64\n    trans_fail_top_count_enum_last_6_month        4738 non-null float64\n    trans_fail_top_count_enum_last_12_month       4738 non-null float64\n    consume_mini_time_last_1_month                4728 non-null float64\n    max_cumulative_consume_later_1_month          4754 non-null int64\n    max_consume_count_later_6_month               4746 non-null float64\n    railway_consume_count_last_12_month           4742 non-null float64\n    pawns_auctions_trusts_consume_last_1_month    4754 non-null int64\n    pawns_auctions_trusts_consume_last_6_month    4754 non-null int64\n    jewelry_consume_count_last_6_month            4742 non-null float64\n    status                                        4754 non-null int64\n    source                                        4754 non-null object\n    first_transaction_day                         4752 non-null float64\n    trans_day_last_12_month                       4752 non-null float64\n    id_name                                       4478 non-null object\n    apply_score                                   4450 non-null float64\n    apply_credibility                             4450 non-null float64\n    query_org_count                               4450 non-null float64\n    query_finance_count                           4450 non-null float64\n    query_cash_count                              4450 non-null float64\n    query_sum_count                               4450 non-null float64\n    latest_query_time                             4450 non-null object\n    latest_one_month_apply                        4450 non-null float64\n    latest_three_month_apply                      4450 non-null float64\n    latest_six_month_apply                        4450 non-null float64\n    loans_score                                   4457 non-null float64\n    loans_credibility_behavior                    4457 non-null float64\n    loans_count                                   4457 non-null float64\n    loans_settle_count                            4457 non-null float64\n    loans_overdue_count                           4457 non-null float64\n    loans_org_count_behavior                      4457 non-null float64\n    consfin_org_count_behavior                    4457 non-null float64\n    loans_cash_count                              4457 non-null float64\n    latest_one_month_loan                         4457 non-null float64\n    latest_three_month_loan                       4457 non-null float64\n    latest_six_month_loan                         4457 non-null float64\n    history_suc_fee                               4457 non-null float64\n    history_fail_fee                              4457 non-null float64\n    latest_one_month_suc                          4457 non-null float64\n    latest_one_month_fail                         4457 non-null float64\n    loans_long_time                               4457 non-null float64\n    loans_latest_time                             4457 non-null object\n    loans_credit_limit                            4457 non-null float64\n    loans_credibility_limit                       4457 non-null float64\n    loans_org_count_current                       4457 non-null float64\n    loans_product_count                           4457 non-null float64\n    loans_max_limit                               4457 non-null float64\n    loans_avg_limit                               4457 non-null float64\n    consfin_credit_limit                          4457 non-null float64\n    consfin_credibility                           4457 non-null float64\n    consfin_org_count_current                     4457 non-null float64\n    consfin_product_count                         4457 non-null float64\n    consfin_max_limit                             4457 non-null float64\n    consfin_avg_limit                             4457 non-null float64\n    latest_query_day                              4450 non-null float64\n    loans_latest_day                              4457 non-null float64\n    dtypes: float64(70), int64(13), object(7)\n    memory usage: 3.3+ MB\n\n\n\n```python\ntypedic = {} # 类型字典\nfor name in df.columns:\n    typedic[str(df[name].dtype)] = typedic.get(str(df[name].dtype),[])+[name]\n\nfor key,value in typedic.items():\n    print(\"{}格式共有{}个: {}\".format(key,len(value),value))\n    print(\"\")\n```\n\n    int64格式共有13个: ['Unnamed: 0', 'custid', 'take_amount_in_later_12_month_highest', 'repayment_capability', 'is_high_user', 'historical_trans_amount', 'trans_amount_3_month', 'abs', 'avg_price_last_12_month', 'max_cumulative_consume_later_1_month', 'pawns_auctions_trusts_consume_last_1_month', 'pawns_auctions_trusts_consume_last_6_month', 'status']\n    \n    object格式共有7个: ['trade_no', 'bank_card_no', 'reg_preference_for_trad', 'source', 'id_name', 'latest_query_time', 'loans_latest_time']\n    \n    float64格式共有70个: ['low_volume_percent', 'middle_volume_percent', 'trans_amount_increase_rate_lately', 'trans_activity_month', 'trans_activity_day', 'transd_mcc', 'trans_days_interval_filter', 'trans_days_interval', 'regional_mobility', 'student_feature', 'number_of_trans_from_2011', 'first_transaction_time', 'historical_trans_day', 'rank_trad_1_month', 'avg_consume_less_12_valid_month', 'top_trans_count_last_1_month', 'avg_price_top_last_12_valid_month', 'trans_top_time_last_1_month', 'trans_top_time_last_6_month', 'consume_top_time_last_1_month', 'consume_top_time_last_6_month', 'cross_consume_count_last_1_month', 'trans_fail_top_count_enum_last_1_month', 'trans_fail_top_count_enum_last_6_month', 'trans_fail_top_count_enum_last_12_month', 'consume_mini_time_last_1_month', 'max_consume_count_later_6_month', 'railway_consume_count_last_12_month', 'jewelry_consume_count_last_6_month', 'first_transaction_day', 'trans_day_last_12_month', 'apply_score', 'apply_credibility', 'query_org_count', 'query_finance_count', 'query_cash_count', 'query_sum_count', 'latest_one_month_apply', 'latest_three_month_apply', 'latest_six_month_apply', 'loans_score', 'loans_credibility_behavior', 'loans_count', 'loans_settle_count', 'loans_overdue_count', 'loans_org_count_behavior', 'consfin_org_count_behavior', 'loans_cash_count', 'latest_one_month_loan', 'latest_three_month_loan', 'latest_six_month_loan', 'history_suc_fee', 'history_fail_fee', 'latest_one_month_suc', 'latest_one_month_fail', 'loans_long_time', 'loans_credit_limit', 'loans_credibility_limit', 'loans_org_count_current', 'loans_product_count', 'loans_max_limit', 'loans_avg_limit', 'consfin_credit_limit', 'consfin_credibility', 'consfin_org_count_current', 'consfin_product_count', 'consfin_max_limit', 'consfin_avg_limit', 'latest_query_day', 'loans_latest_day']\n    \n\n\n\n```python\ndf.columns\n```\n\n\n\n\n    Index(['Unnamed: 0', 'custid', 'trade_no', 'bank_card_no',\n           'low_volume_percent', 'middle_volume_percent',\n           'take_amount_in_later_12_month_highest',\n           'trans_amount_increase_rate_lately', 'trans_activity_month',\n           'trans_activity_day', 'transd_mcc', 'trans_days_interval_filter',\n           'trans_days_interval', 'regional_mobility', 'student_feature',\n           'repayment_capability', 'is_high_user', 'number_of_trans_from_2011',\n           'first_transaction_time', 'historical_trans_amount',\n           'historical_trans_day', 'rank_trad_1_month', 'trans_amount_3_month',\n           'avg_consume_less_12_valid_month', 'abs',\n           'top_trans_count_last_1_month', 'avg_price_last_12_month',\n           'avg_price_top_last_12_valid_month', 'reg_preference_for_trad',\n           'trans_top_time_last_1_month', 'trans_top_time_last_6_month',\n           'consume_top_time_last_1_month', 'consume_top_time_last_6_month',\n           'cross_consume_count_last_1_month',\n           'trans_fail_top_count_enum_last_1_month',\n           'trans_fail_top_count_enum_last_6_month',\n           'trans_fail_top_count_enum_last_12_month',\n           'consume_mini_time_last_1_month',\n           'max_cumulative_consume_later_1_month',\n           'max_consume_count_later_6_month',\n           'railway_consume_count_last_12_month',\n           'pawns_auctions_trusts_consume_last_1_month',\n           'pawns_auctions_trusts_consume_last_6_month',\n           'jewelry_consume_count_last_6_month', 'status', 'source',\n           'first_transaction_day', 'trans_day_last_12_month', 'id_name',\n           'apply_score', 'apply_credibility', 'query_org_count',\n           'query_finance_count', 'query_cash_count', 'query_sum_count',\n           'latest_query_time', 'latest_one_month_apply',\n           'latest_three_month_apply', 'latest_six_month_apply', 'loans_score',\n           'loans_credibility_behavior', 'loans_count', 'loans_settle_count',\n           'loans_overdue_count', 'loans_org_count_behavior',\n           'consfin_org_count_behavior', 'loans_cash_count',\n           'latest_one_month_loan', 'latest_three_month_loan',\n           'latest_six_month_loan', 'history_suc_fee', 'history_fail_fee',\n           'latest_one_month_suc', 'latest_one_month_fail', 'loans_long_time',\n           'loans_latest_time', 'loans_credit_limit', 'loans_credibility_limit',\n           'loans_org_count_current', 'loans_product_count', 'loans_max_limit',\n           'loans_avg_limit', 'consfin_credit_limit', 'consfin_credibility',\n           'consfin_org_count_current', 'consfin_product_count',\n           'consfin_max_limit', 'consfin_avg_limit', 'latest_query_day',\n           'loans_latest_day'],\n          dtype='object')\n\n\n\n## 可视化各特征\n\n\n```python\nname_list_1 = [\n       'low_volume_percent', 'middle_volume_percent',\n       'take_amount_in_later_12_month_highest',\n       'trans_amount_increase_rate_lately', 'trans_activity_month',\n       'trans_activity_day', 'transd_mcc', 'trans_days_interval_filter',\n       'trans_days_interval', 'regional_mobility', 'student_feature',\n       'repayment_capability', 'is_high_user', 'number_of_trans_from_2011',\n       'first_transaction_time'\n       ]\nname_list_2 = [\n       'historical_trans_amount',\n       'historical_trans_day', 'rank_trad_1_month', 'trans_amount_3_month',\n       'avg_consume_less_12_valid_month', 'abs',\n       'top_trans_count_last_1_month', 'avg_price_last_12_month',\n       'avg_price_top_last_12_valid_month', 'reg_preference_for_trad',\n       'trans_top_time_last_1_month', 'trans_top_time_last_6_month',\n       'consume_top_time_last_1_month', 'consume_top_time_last_6_month',\n       'cross_consume_count_last_1_month',\n       ]\nname_list_3 = [\n       'trans_fail_top_count_enum_last_1_month',\n       'trans_fail_top_count_enum_last_6_month',\n       'trans_fail_top_count_enum_last_12_month',\n       'consume_mini_time_last_1_month',\n       'max_cumulative_consume_later_1_month',\n       'max_consume_count_later_6_month',\n       'railway_consume_count_last_12_month',\n       'pawns_auctions_trusts_consume_last_1_month',\n       'pawns_auctions_trusts_consume_last_6_month',\n       'jewelry_consume_count_last_6_month', \n       'first_transaction_day', 'trans_day_last_12_month', 'apply_score',\n       'apply_credibility', 'query_org_count',\n       ]\nname_list_4 = [\n      'query_finance_count', 'query_cash_count', 'query_sum_count',\n       'latest_query_time', 'latest_one_month_apply',\n       'latest_three_month_apply', 'latest_six_month_apply', 'loans_score',\n       'loans_credibility_behavior', 'loans_count', 'loans_settle_count',\n       'loans_overdue_count', 'loans_org_count_behavior',\n       'consfin_org_count_behavior', 'loans_cash_count',\n       ]\nname_list_5 = [\n      'latest_one_month_loan', 'latest_three_month_loan',\n       'latest_six_month_loan', 'history_suc_fee', 'history_fail_fee',\n       'latest_one_month_suc', 'latest_one_month_fail', 'loans_long_time',\n       'loans_latest_time', 'loans_credit_limit', 'loans_credibility_limit',\n       'loans_org_count_current', 'loans_product_count', 'loans_max_limit',\n       'loans_avg_limit',\n       ]\nname_list_6 = [\n      'consfin_credit_limit', 'consfin_credibility',\n       'consfin_org_count_current', 'consfin_product_count',\n       'consfin_max_limit', 'consfin_avg_limit', 'latest_query_day',\n       'loans_latest_day'\n       ]\n```\n\n\n```python\nf, ax = plt.subplots(5, 3, figsize=(20, 20))\n\nfor i,name in enumerate(name_list_1):     \n    sns.countplot(data=df, x=name, hue='status',  ax=ax[i // 3][i % 3])\n    \nplt.savefig(\"../img/2019-08-01_金融数据描述_1.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_1.png)\n\n\n```python\nf, ax = plt.subplots(5, 3, figsize=(20, 20))\n\nfor i,name in enumerate(name_list_2):     \n    sns.countplot(data=df, x=name, hue='status',  ax=ax[i // 3][i % 3])\n    \nplt.savefig(\"../img/2019-08-01_金融数据描述_2.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_2.png)\n\n\n```python\nf, ax = plt.subplots(5, 3, figsize=(20, 20))\n\nfor i,name in enumerate(name_list_3):     \n    sns.countplot(data=df, x=name, hue='status',  ax=ax[i // 3][i % 3])\n    \nplt.savefig(\"../img/2019-08-01_金融数据描述_3.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_3.png)\n\n\n```python\nf, ax = plt.subplots(5, 3, figsize=(20, 20))\n\nfor i,name in enumerate(name_list_4):     \n    sns.countplot(data=df, x=name, hue='status',  ax=ax[i // 3][i % 3])\n\nplt.savefig(\"../img/2019-08-01_金融数据描述_4.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_4.png)\n\n\n```python\nf, ax = plt.subplots(5, 3, figsize=(20, 20))\n\nfor i,name in enumerate(name_list_5):     \n    sns.countplot(data=df, x=name, hue='status',  ax=ax[i // 3][i % 3])\n\nplt.savefig(\"../img/2019-08-01_金融数据描述_5.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_5.png)\n\n\n```python\nf, ax = plt.subplots(3, 3, figsize=(20, 20))\n\nfor i,name in enumerate(name_list_6):     \n    sns.countplot(data=df, x=name, hue='status',  ax=ax[i // 3][i % 3])\n\nplt.savefig(\"../img/2019-08-01_金融数据描述_6.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_6.png)\n\n从以上分布图可以看出，连续型数据的特征基本上符合正态分布，指数分布或者泊松分布等，但在['rank_trad_1_month','trans_top_time_last_1_month','trans_top_time_last_6_month','consume_top_time_last_1_month','consume_top_time_last_6_month','loans_credit_limit','loans_credibility_limit','loans_max_limit','consfin_credibility']这几个特征上出现数据于最左最右位置会出现骤升。从业务层面考虑，暂时未得出满意结论，待确认特征取数逻辑后再分析。\n  还有，'avg_price_last_12_month','consfin_credit_limit'这两个特征虽然是连续型特征，但由图上看，出现标签分段，考虑继续探索，查看是否存在分段。\n\n  另外几个离散型特征，如'reg_preference_for_trad','regional_mobility'等，在标签status上区别明显，感觉是对模型有用的特征。\n\n\n```python\nsns.boxplot(y = 'consfin_credit_limit',x = 'status',data = df)\n\nplt.savefig(\"../img/2019-08-01_金融数据描述_7.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_7.png)\n\n\n```python\nsns.boxplot(y = 'avg_price_last_12_month',x = 'status',data = df)\n\nplt.savefig(\"../img/2019-08-01_金融数据描述_8.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_8.png)\n\n\n```python\nsns.boxplot(y = 'rank_trad_1_month',x = 'status',data = df)\n\nplt.savefig(\"../img/2019-08-01_金融数据描述_9.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_9.png)\n\n## 数据预处理\n\n### 为什么需要处理缺失值？\n\n不同缺失值的处理方式在一定程度上影响了特征提取、建模和模型训练缺失值太多，可以尝试着直接删除，如果不删除，处理不好，可能会引来噪声缺失值较少，少于某一缺失率时，直接删除又会带来信息的损失，此时可以采取适当的填充方式。\n\n### 缺失率大于多少时应当抛弃该特征？\n\n一般为70%,但是还要分析该特征与训练目标的重要程度\n\n### 缺失值填充有哪些方法？\n\n#### 插值填充\n- 特殊值\n- 均值、加权均值（缺点：降低数据的方差，即随机性）\n- 中位数\n- 众数（多用在类别变数）\n- ...\n\n#### 插补法\n- 随机插补法：从总体中随机抽取某个样本代替缺失样本\n- 多重插补法：通过变量之间的关系对缺失数据进行预测，利用蒙特卡洛方法生成多个完整的数据集，在对这些数据集进行分析，最后对分析结果进行汇总处理\n- 热平台插补：指在非缺失数据集中找到一个与缺失值所在样本相似的样本（匹配样本），利用其中的观测值对缺失值进行插补\n- 拉格朗日差值法\n- 牛顿插值法\n\n> 列的维度上，如果是连续性，就使用平均值插补，如果是离散性，就使用众数来插补; 行的维度上，引入预测模型，可考虑辅助回归，通过变量间的关系来预测缺失数据    \n\n\n#### 丢弃\n如果行和列的缺失达到一定的比例，建议放弃整行或整列数据\n\n#### 模型法\n更多时候我们会基于已有的其他字段，将缺失字段作为目标变量进行预测，从而得到最为可能的补全值。如果带有缺失值的列是数值变量，采用回归模型补全；如果是分类变量，则采用分类模型补全\n\n#### 专家补全\n对于少量且具有重要意义的数据记录，专家补足也是非常重要的一种途径\n\n#### 不处理\n- 当缺失值对模型的影响不大时，直接在包含空值的数据上进行数据挖掘\n- 很多模型对于缺失值有容忍度或灵活的处理方法，因此在预处理阶段可以不做处理\n- 树模型对于缺失值的敏感度较低，大部分时候可以在数据有缺失时使用\n- 涉及到距离度量(distance measurement)时，如计算两个点之间的距离，缺失数据就变得比较重要。因为涉及到“距离”这个概念，那么缺失值处理不当就会导致效果很差，如K近邻算法(KNN)和支持向量机(SVM)\n- 线性模型的代价函数(loss function)往往涉及到距离(distance)的计算，计算预测值和真实值之间的差别，这容易导致对缺失值敏感\n- 神经网络的鲁棒性强，对于缺失数据不是非常敏感，但一般没有那么多数据可供使用。\n- 贝叶斯模型对于缺失数据也比较稳定，数据量很小的时候首推贝叶斯模型。\n\n### 时间序列\n\n依情况处理，主要看单独时间字段或时间字段与某些字段的组合属性对目标分析的作用程度，再采取相应方式来进行特征提取比如：可以将时间字段与其他字段属性进行组合，分析每天、每周、每月或特点星期几等情况下特征数据频率信息，总的来说还是得看分析得目标\n\n通常看到的情况是，除了考虑时间序列这个单独的特征外，往往是将时间序列和具有时间属性的特征联合起来分析，查看组合特征的对所需要分析的内容的影响\n\n### 异常值和离群值\n\n大多数的参数统计数值如均值、标准差、相关系数等，以及基于这些参数的统计分析均对离群值高度敏感。因此离群值的存在会对数据分析造成极大影响\n\n#### 判断\n- 用分位数搞定，看跟平均值的偏差超过几倍标准差\n- LOF算法\n- describe的时候加一个箱型图\n\n#### 处理\n- 对数转换\n- 缩尾\n- 截尾\n- 插值\n\n### 无用特征删除\n\n将所有object格式的改为数值格式，其中有部分无用特征则可直接删除\n\n由上可看出需处理包含：['trade_no', 'bank_card_no', 'reg_preference_for_trad', 'source', 'id_name', 'latest_query_time', 'loans_latest_time']\n\n\n```python\ndf['source'].value_counts(dropna = False)\n```\n\n\n\n\n    xs    4754\n    Name: source, dtype: int64\n\n\n\n\n```python\nto_drop = ['trade_no', 'bank_card_no', 'student_feature','cross_consume_count_last_1_month', 'id_name', 'source']\ndf = df.drop(to_drop, axis=1)\n```\n\n### 缺失填充\n\n\n```python\ndf['reg_preference_for_trad'].value_counts(dropna = False)\n```\n\n\n\n\n    一线城市    3403\n    三线城市    1064\n    境外       150\n    二线城市     131\n    其他城市       4\n    NaN        2\n    Name: reg_preference_for_trad, dtype: int64\n\n\n\n\n```python\ndf['reg_preference_for_trad'].fillna('其他城市',inplace = True)\ndf['reg_preference_for_trad'].value_counts(dropna = False)\n```\n\n\n\n\n    一线城市    3403\n    三线城市    1064\n    境外       150\n    二线城市     131\n    其他城市       6\n    Name: reg_preference_for_trad, dtype: int64\n\n\n\n\n```python\ndf.isnull().sum().sort_values(ascending = False)\n```\n\n\n\n\n    latest_three_month_apply                      304\n    query_finance_count                           304\n    latest_six_month_apply                        304\n    latest_query_time                             304\n    query_sum_count                               304\n    query_cash_count                              304\n    latest_one_month_apply                        304\n    query_org_count                               304\n    apply_credibility                             304\n    apply_score                                   304\n    latest_query_day                              304\n    latest_three_month_loan                       297\n    loans_score                                   297\n    loans_credibility_behavior                    297\n    loans_count                                   297\n    loans_settle_count                            297\n    loans_overdue_count                           297\n    loans_org_count_behavior                      297\n    consfin_org_count_behavior                    297\n    loans_cash_count                              297\n    latest_one_month_loan                         297\n    loans_latest_day                              297\n    latest_six_month_loan                         297\n    loans_product_count                           297\n    history_suc_fee                               297\n    consfin_avg_limit                             297\n    consfin_product_count                         297\n    consfin_org_count_current                     297\n    consfin_credibility                           297\n    consfin_credit_limit                          297\n                                                 ... \n    trans_amount_increase_rate_lately               3\n    trans_days_interval                             2\n    regional_mobility                               2\n    number_of_trans_from_2011                       2\n    middle_volume_percent                           2\n    transd_mcc                                      2\n    trans_activity_day                              2\n    trans_activity_month                            2\n    low_volume_percent                              2\n    historical_trans_day                            2\n    first_transaction_time                          2\n    first_transaction_day                           2\n    rank_trad_1_month                               2\n    avg_consume_less_12_valid_month                 2\n    trans_day_last_12_month                         2\n    top_trans_count_last_1_month                    2\n    max_cumulative_consume_later_1_month            0\n    custid                                          0\n    status                                          0\n    take_amount_in_later_12_month_highest           0\n    pawns_auctions_trusts_consume_last_6_month      0\n    pawns_auctions_trusts_consume_last_1_month      0\n    reg_preference_for_trad                         0\n    historical_trans_amount                         0\n    avg_price_last_12_month                         0\n    abs                                             0\n    repayment_capability                            0\n    is_high_user                                    0\n    trans_amount_3_month                            0\n    Unnamed: 0                                      0\n    Length: 84, dtype: int64\n\n\n\n## 特征间探索\n\n\n```python\ncorr = df[:].corr()\nplt.figure(figsize=(15, 10))\nsb.heatmap(corr)\nplt.savefig(\"../img/2019-08-01_金融数据描述_10.png\")\nplt.close()\n```\n\n![](/img/2019-08-01_金融数据描述_10.png)\n\n\n```python\ncorr\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>custid</th>\n      <th>low_volume_percent</th>\n      <th>middle_volume_percent</th>\n      <th>take_amount_in_later_12_month_highest</th>\n      <th>trans_amount_increase_rate_lately</th>\n      <th>trans_activity_month</th>\n      <th>trans_activity_day</th>\n      <th>transd_mcc</th>\n      <th>trans_days_interval_filter</th>\n      <th>...</th>\n      <th>loans_max_limit</th>\n      <th>loans_avg_limit</th>\n      <th>consfin_credit_limit</th>\n      <th>consfin_credibility</th>\n      <th>consfin_org_count_current</th>\n      <th>consfin_product_count</th>\n      <th>consfin_max_limit</th>\n      <th>consfin_avg_limit</th>\n      <th>latest_query_day</th>\n      <th>loans_latest_day</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Unnamed: 0</th>\n      <td>1.000000</td>\n      <td>-0.007628</td>\n      <td>0.002861</td>\n      <td>-0.022844</td>\n      <td>-0.019728</td>\n      <td>0.014076</td>\n      <td>-0.021715</td>\n      <td>-0.001027</td>\n      <td>-0.006975</td>\n      <td>-0.021338</td>\n      <td>...</td>\n      <td>0.012189</td>\n      <td>-0.004457</td>\n      <td>0.005967</td>\n      <td>0.007746</td>\n      <td>0.012062</td>\n      <td>0.009583</td>\n      <td>0.004020</td>\n      <td>0.008860</td>\n      <td>0.020774</td>\n      <td>0.026387</td>\n    </tr>\n    <tr>\n      <th>custid</th>\n      <td>-0.007628</td>\n      <td>1.000000</td>\n      <td>0.031430</td>\n      <td>0.090599</td>\n      <td>-0.030282</td>\n      <td>-0.001299</td>\n      <td>-0.118811</td>\n      <td>-0.216062</td>\n      <td>-0.147485</td>\n      <td>0.144513</td>\n      <td>...</td>\n      <td>-0.236185</td>\n      <td>-0.152017</td>\n      <td>-0.093180</td>\n      <td>-0.041979</td>\n      <td>-0.129297</td>\n      <td>-0.139197</td>\n      <td>-0.115324</td>\n      <td>-0.076767</td>\n      <td>0.099208</td>\n      <td>0.098628</td>\n    </tr>\n    <tr>\n      <th>low_volume_percent</th>\n      <td>0.002861</td>\n      <td>0.031430</td>\n      <td>1.000000</td>\n      <td>-0.151504</td>\n      <td>-0.066047</td>\n      <td>0.005331</td>\n      <td>0.023895</td>\n      <td>-0.093754</td>\n      <td>-0.095780</td>\n      <td>0.054680</td>\n      <td>...</td>\n      <td>-0.140173</td>\n      <td>-0.128145</td>\n      <td>-0.083987</td>\n      <td>-0.032534</td>\n      <td>-0.074851</td>\n      <td>-0.067226</td>\n      <td>-0.096647</td>\n      <td>-0.094627</td>\n      <td>0.069301</td>\n      <td>0.047500</td>\n    </tr>\n    <tr>\n      <th>middle_volume_percent</th>\n      <td>-0.022844</td>\n      <td>0.090599</td>\n      <td>-0.151504</td>\n      <td>1.000000</td>\n      <td>-0.135050</td>\n      <td>0.001608</td>\n      <td>-0.031743</td>\n      <td>-0.055491</td>\n      <td>-0.094736</td>\n      <td>0.010146</td>\n      <td>...</td>\n      <td>-0.145599</td>\n      <td>-0.110230</td>\n      <td>-0.153241</td>\n      <td>0.003266</td>\n      <td>-0.007761</td>\n      <td>-0.014847</td>\n      <td>-0.169575</td>\n      <td>-0.174126</td>\n      <td>-0.001628</td>\n      <td>-0.003253</td>\n    </tr>\n    <tr>\n      <th>take_amount_in_later_12_month_highest</th>\n      <td>-0.019728</td>\n      <td>-0.030282</td>\n      <td>-0.066047</td>\n      <td>-0.135050</td>\n      <td>1.000000</td>\n      <td>-0.006699</td>\n      <td>0.060997</td>\n      <td>0.112582</td>\n      <td>0.181435</td>\n      <td>-0.055318</td>\n      <td>...</td>\n      <td>0.071798</td>\n      <td>0.038880</td>\n      <td>0.039328</td>\n      <td>0.015841</td>\n      <td>0.021387</td>\n      <td>0.021337</td>\n      <td>0.054433</td>\n      <td>0.040634</td>\n      <td>-0.000570</td>\n      <td>-0.010231</td>\n    </tr>\n    <tr>\n      <th>trans_amount_increase_rate_lately</th>\n      <td>0.014076</td>\n      <td>-0.001299</td>\n      <td>0.005331</td>\n      <td>0.001608</td>\n      <td>-0.006699</td>\n      <td>1.000000</td>\n      <td>0.015389</td>\n      <td>-0.003061</td>\n      <td>-0.011644</td>\n      <td>0.013220</td>\n      <td>...</td>\n      <td>0.007119</td>\n      <td>0.000119</td>\n      <td>0.028868</td>\n      <td>0.006174</td>\n      <td>-0.019901</td>\n      <td>-0.019603</td>\n      <td>0.007123</td>\n      <td>0.040865</td>\n      <td>-0.001457</td>\n      <td>0.027221</td>\n    </tr>\n    <tr>\n      <th>trans_activity_month</th>\n      <td>-0.021715</td>\n      <td>-0.118811</td>\n      <td>0.023895</td>\n      <td>-0.031743</td>\n      <td>0.060997</td>\n      <td>0.015389</td>\n      <td>1.000000</td>\n      <td>0.063373</td>\n      <td>0.069272</td>\n      <td>-0.091630</td>\n      <td>...</td>\n      <td>0.061847</td>\n      <td>0.037275</td>\n      <td>-0.036822</td>\n      <td>-0.000400</td>\n      <td>0.003332</td>\n      <td>0.005534</td>\n      <td>-0.022388</td>\n      <td>-0.043764</td>\n      <td>-0.024161</td>\n      <td>-0.014880</td>\n    </tr>\n    <tr>\n      <th>trans_activity_day</th>\n      <td>-0.001027</td>\n      <td>-0.216062</td>\n      <td>-0.093754</td>\n      <td>-0.055491</td>\n      <td>0.112582</td>\n      <td>-0.003061</td>\n      <td>0.063373</td>\n      <td>1.000000</td>\n      <td>0.674547</td>\n      <td>-0.491304</td>\n      <td>...</td>\n      <td>0.445155</td>\n      <td>0.202242</td>\n      <td>0.096622</td>\n      <td>0.181157</td>\n      <td>0.553486</td>\n      <td>0.551140</td>\n      <td>0.224509</td>\n      <td>0.085255</td>\n      <td>-0.188965</td>\n      <td>-0.299110</td>\n    </tr>\n    <tr>\n      <th>transd_mcc</th>\n      <td>-0.006975</td>\n      <td>-0.147485</td>\n      <td>-0.095780</td>\n      <td>-0.094736</td>\n      <td>0.181435</td>\n      <td>-0.011644</td>\n      <td>0.069272</td>\n      <td>0.674547</td>\n      <td>1.000000</td>\n      <td>-0.407126</td>\n      <td>...</td>\n      <td>0.313715</td>\n      <td>0.165959</td>\n      <td>0.066250</td>\n      <td>0.131905</td>\n      <td>0.371197</td>\n      <td>0.374660</td>\n      <td>0.156951</td>\n      <td>0.057663</td>\n      <td>-0.120330</td>\n      <td>-0.211593</td>\n    </tr>\n    <tr>\n      <th>trans_days_interval_filter</th>\n      <td>-0.021338</td>\n      <td>0.144513</td>\n      <td>0.054680</td>\n      <td>0.010146</td>\n      <td>-0.055318</td>\n      <td>0.013220</td>\n      <td>-0.091630</td>\n      <td>-0.491304</td>\n      <td>-0.407126</td>\n      <td>1.000000</td>\n      <td>...</td>\n      <td>-0.222970</td>\n      <td>-0.118522</td>\n      <td>-0.055205</td>\n      <td>-0.142221</td>\n      <td>-0.287044</td>\n      <td>-0.286212</td>\n      <td>-0.111345</td>\n      <td>-0.045801</td>\n      <td>0.069560</td>\n      <td>0.163433</td>\n    </tr>\n    <tr>\n      <th>trans_days_interval</th>\n      <td>-0.006297</td>\n      <td>0.200145</td>\n      <td>0.062421</td>\n      <td>-0.000383</td>\n      <td>-0.053329</td>\n      <td>0.000521</td>\n      <td>-0.151579</td>\n      <td>-0.542118</td>\n      <td>-0.447308</td>\n      <td>0.690819</td>\n      <td>...</td>\n      <td>-0.271875</td>\n      <td>-0.163049</td>\n      <td>-0.034716</td>\n      <td>-0.102588</td>\n      <td>-0.285654</td>\n      <td>-0.286510</td>\n      <td>-0.105000</td>\n      <td>-0.024740</td>\n      <td>0.102343</td>\n      <td>0.178628</td>\n    </tr>\n    <tr>\n      <th>regional_mobility</th>\n      <td>0.011694</td>\n      <td>-0.134926</td>\n      <td>-0.042939</td>\n      <td>0.009671</td>\n      <td>0.024089</td>\n      <td>-0.026960</td>\n      <td>-0.219911</td>\n      <td>0.143697</td>\n      <td>0.114936</td>\n      <td>-0.124350</td>\n      <td>...</td>\n      <td>0.099696</td>\n      <td>0.062712</td>\n      <td>0.092796</td>\n      <td>0.054084</td>\n      <td>0.147120</td>\n      <td>0.145322</td>\n      <td>0.091150</td>\n      <td>0.079245</td>\n      <td>-0.051839</td>\n      <td>-0.107139</td>\n    </tr>\n    <tr>\n      <th>student_feature</th>\n      <td>0.014227</td>\n      <td>0.026639</td>\n      <td>-0.007327</td>\n      <td>0.018852</td>\n      <td>-0.013524</td>\n      <td>-0.002682</td>\n      <td>0.004966</td>\n      <td>0.011653</td>\n      <td>0.005921</td>\n      <td>-0.005412</td>\n      <td>...</td>\n      <td>0.021982</td>\n      <td>0.007634</td>\n      <td>0.001860</td>\n      <td>0.009800</td>\n      <td>0.020368</td>\n      <td>0.017777</td>\n      <td>0.000096</td>\n      <td>0.004799</td>\n      <td>-0.020274</td>\n      <td>-0.031571</td>\n    </tr>\n    <tr>\n      <th>repayment_capability</th>\n      <td>-0.006726</td>\n      <td>-0.026254</td>\n      <td>-0.041522</td>\n      <td>-0.178436</td>\n      <td>0.055174</td>\n      <td>-0.000572</td>\n      <td>0.024737</td>\n      <td>0.189494</td>\n      <td>0.115434</td>\n      <td>-0.048998</td>\n      <td>...</td>\n      <td>0.128100</td>\n      <td>0.066266</td>\n      <td>0.052900</td>\n      <td>0.007068</td>\n      <td>0.046341</td>\n      <td>0.046471</td>\n      <td>0.063720</td>\n      <td>0.052120</td>\n      <td>-0.020964</td>\n      <td>-0.049951</td>\n    </tr>\n    <tr>\n      <th>is_high_user</th>\n      <td>-0.002995</td>\n      <td>-0.004640</td>\n      <td>0.018546</td>\n      <td>-0.029172</td>\n      <td>0.068763</td>\n      <td>-0.002017</td>\n      <td>0.044231</td>\n      <td>-0.034766</td>\n      <td>-0.080892</td>\n      <td>0.146678</td>\n      <td>...</td>\n      <td>-0.006073</td>\n      <td>0.014809</td>\n      <td>0.001286</td>\n      <td>-0.000752</td>\n      <td>-0.020497</td>\n      <td>-0.017732</td>\n      <td>0.007764</td>\n      <td>0.013155</td>\n      <td>-0.011908</td>\n      <td>-0.015299</td>\n    </tr>\n    <tr>\n      <th>number_of_trans_from_2011</th>\n      <td>0.016355</td>\n      <td>-0.276856</td>\n      <td>-0.031668</td>\n      <td>-0.084995</td>\n      <td>0.056183</td>\n      <td>-0.013609</td>\n      <td>-0.198322</td>\n      <td>0.286353</td>\n      <td>0.262917</td>\n      <td>-0.181413</td>\n      <td>...</td>\n      <td>0.195444</td>\n      <td>0.142227</td>\n      <td>0.105527</td>\n      <td>0.066191</td>\n      <td>0.212621</td>\n      <td>0.215217</td>\n      <td>0.138342</td>\n      <td>0.088776</td>\n      <td>-0.087938</td>\n      <td>-0.140635</td>\n    </tr>\n    <tr>\n      <th>historical_trans_amount</th>\n      <td>0.002346</td>\n      <td>-0.179652</td>\n      <td>-0.117333</td>\n      <td>-0.255846</td>\n      <td>0.102959</td>\n      <td>-0.002527</td>\n      <td>0.016522</td>\n      <td>0.526801</td>\n      <td>0.392433</td>\n      <td>-0.254563</td>\n      <td>...</td>\n      <td>0.324514</td>\n      <td>0.165218</td>\n      <td>0.137554</td>\n      <td>0.073505</td>\n      <td>0.288324</td>\n      <td>0.288420</td>\n      <td>0.201670</td>\n      <td>0.138920</td>\n      <td>-0.087267</td>\n      <td>-0.156048</td>\n    </tr>\n    <tr>\n      <th>historical_trans_day</th>\n      <td>0.004245</td>\n      <td>-0.345875</td>\n      <td>-0.068345</td>\n      <td>-0.116128</td>\n      <td>0.112908</td>\n      <td>-0.006987</td>\n      <td>0.052108</td>\n      <td>0.855832</td>\n      <td>0.603820</td>\n      <td>-0.424616</td>\n      <td>...</td>\n      <td>0.430792</td>\n      <td>0.223623</td>\n      <td>0.111262</td>\n      <td>0.142560</td>\n      <td>0.472101</td>\n      <td>0.473890</td>\n      <td>0.219427</td>\n      <td>0.097498</td>\n      <td>-0.171007</td>\n      <td>-0.267034</td>\n    </tr>\n    <tr>\n      <th>rank_trad_1_month</th>\n      <td>0.011515</td>\n      <td>0.116798</td>\n      <td>0.102996</td>\n      <td>0.139914</td>\n      <td>-0.089095</td>\n      <td>0.028153</td>\n      <td>-0.017110</td>\n      <td>-0.517923</td>\n      <td>-0.481565</td>\n      <td>0.345540</td>\n      <td>...</td>\n      <td>-0.235028</td>\n      <td>-0.121879</td>\n      <td>-0.120020</td>\n      <td>-0.133787</td>\n      <td>-0.328297</td>\n      <td>-0.327323</td>\n      <td>-0.180749</td>\n      <td>-0.115613</td>\n      <td>0.139572</td>\n      <td>0.243659</td>\n    </tr>\n    <tr>\n      <th>trans_amount_3_month</th>\n      <td>-0.003329</td>\n      <td>-0.069252</td>\n      <td>-0.063526</td>\n      <td>-0.189438</td>\n      <td>0.074279</td>\n      <td>-0.003598</td>\n      <td>0.010864</td>\n      <td>0.293735</td>\n      <td>0.250140</td>\n      <td>-0.139654</td>\n      <td>...</td>\n      <td>0.186909</td>\n      <td>0.084463</td>\n      <td>0.065007</td>\n      <td>0.033856</td>\n      <td>0.151395</td>\n      <td>0.153457</td>\n      <td>0.094556</td>\n      <td>0.063275</td>\n      <td>-0.044342</td>\n      <td>-0.099134</td>\n    </tr>\n    <tr>\n      <th>avg_consume_less_12_valid_month</th>\n      <td>-0.001742</td>\n      <td>-0.087905</td>\n      <td>-0.042251</td>\n      <td>-0.154257</td>\n      <td>0.031360</td>\n      <td>0.006201</td>\n      <td>0.014532</td>\n      <td>0.081550</td>\n      <td>0.194729</td>\n      <td>-0.017535</td>\n      <td>...</td>\n      <td>0.054239</td>\n      <td>0.010832</td>\n      <td>0.024610</td>\n      <td>0.026514</td>\n      <td>0.103333</td>\n      <td>0.101638</td>\n      <td>0.044864</td>\n      <td>0.011955</td>\n      <td>-0.069481</td>\n      <td>-0.090181</td>\n    </tr>\n    <tr>\n      <th>abs</th>\n      <td>-0.004830</td>\n      <td>-0.059940</td>\n      <td>-0.059972</td>\n      <td>-0.247023</td>\n      <td>0.081978</td>\n      <td>-0.003474</td>\n      <td>0.038276</td>\n      <td>0.306292</td>\n      <td>0.160103</td>\n      <td>-0.054408</td>\n      <td>...</td>\n      <td>0.152274</td>\n      <td>0.105389</td>\n      <td>0.072716</td>\n      <td>0.009934</td>\n      <td>0.071542</td>\n      <td>0.074592</td>\n      <td>0.102727</td>\n      <td>0.090651</td>\n      <td>-0.042772</td>\n      <td>-0.065586</td>\n    </tr>\n    <tr>\n      <th>top_trans_count_last_1_month</th>\n      <td>0.021195</td>\n      <td>0.101220</td>\n      <td>0.037765</td>\n      <td>0.059410</td>\n      <td>-0.063713</td>\n      <td>0.029701</td>\n      <td>-0.026923</td>\n      <td>-0.503568</td>\n      <td>-0.475823</td>\n      <td>0.381422</td>\n      <td>...</td>\n      <td>-0.199205</td>\n      <td>-0.082819</td>\n      <td>-0.071977</td>\n      <td>-0.138804</td>\n      <td>-0.323863</td>\n      <td>-0.324179</td>\n      <td>-0.128756</td>\n      <td>-0.058697</td>\n      <td>0.140451</td>\n      <td>0.247943</td>\n    </tr>\n    <tr>\n      <th>avg_price_last_12_month</th>\n      <td>0.011454</td>\n      <td>-0.090752</td>\n      <td>-0.286213</td>\n      <td>-0.556220</td>\n      <td>0.129908</td>\n      <td>-0.004808</td>\n      <td>-0.006858</td>\n      <td>0.068127</td>\n      <td>0.067431</td>\n      <td>-0.003254</td>\n      <td>...</td>\n      <td>0.204154</td>\n      <td>0.186553</td>\n      <td>0.183277</td>\n      <td>-0.017057</td>\n      <td>0.019580</td>\n      <td>0.017570</td>\n      <td>0.179284</td>\n      <td>0.205885</td>\n      <td>-0.033386</td>\n      <td>-0.020140</td>\n    </tr>\n    <tr>\n      <th>avg_price_top_last_12_valid_month</th>\n      <td>-0.018637</td>\n      <td>0.124158</td>\n      <td>0.509637</td>\n      <td>0.369498</td>\n      <td>-0.123202</td>\n      <td>-0.030556</td>\n      <td>0.011839</td>\n      <td>-0.138470</td>\n      <td>-0.145411</td>\n      <td>0.064464</td>\n      <td>...</td>\n      <td>-0.316923</td>\n      <td>-0.285338</td>\n      <td>-0.172475</td>\n      <td>-0.002851</td>\n      <td>-0.087684</td>\n      <td>-0.080339</td>\n      <td>-0.197348</td>\n      <td>-0.195194</td>\n      <td>0.079399</td>\n      <td>0.062422</td>\n    </tr>\n    <tr>\n      <th>trans_top_time_last_1_month</th>\n      <td>-0.007772</td>\n      <td>-0.003624</td>\n      <td>-0.023020</td>\n      <td>-0.015316</td>\n      <td>0.028547</td>\n      <td>-0.021723</td>\n      <td>0.018931</td>\n      <td>0.092705</td>\n      <td>0.143620</td>\n      <td>-0.127328</td>\n      <td>...</td>\n      <td>0.039372</td>\n      <td>0.019334</td>\n      <td>0.005990</td>\n      <td>0.060674</td>\n      <td>0.059770</td>\n      <td>0.056594</td>\n      <td>0.021747</td>\n      <td>0.000811</td>\n      <td>-0.030739</td>\n      <td>-0.069952</td>\n    </tr>\n    <tr>\n      <th>trans_top_time_last_6_month</th>\n      <td>0.012229</td>\n      <td>0.063470</td>\n      <td>0.064055</td>\n      <td>0.025356</td>\n      <td>-0.079647</td>\n      <td>0.032999</td>\n      <td>-0.016856</td>\n      <td>-0.519642</td>\n      <td>-0.400228</td>\n      <td>0.541678</td>\n      <td>...</td>\n      <td>-0.227717</td>\n      <td>-0.111353</td>\n      <td>-0.055343</td>\n      <td>-0.151634</td>\n      <td>-0.336984</td>\n      <td>-0.334724</td>\n      <td>-0.106172</td>\n      <td>-0.042912</td>\n      <td>0.088539</td>\n      <td>0.199473</td>\n    </tr>\n    <tr>\n      <th>consume_top_time_last_1_month</th>\n      <td>-0.012425</td>\n      <td>-0.013828</td>\n      <td>-0.030325</td>\n      <td>-0.024816</td>\n      <td>0.022475</td>\n      <td>-0.020937</td>\n      <td>0.021517</td>\n      <td>0.126348</td>\n      <td>0.162267</td>\n      <td>-0.155562</td>\n      <td>...</td>\n      <td>0.053634</td>\n      <td>0.023311</td>\n      <td>0.018442</td>\n      <td>0.073859</td>\n      <td>0.083782</td>\n      <td>0.080835</td>\n      <td>0.038965</td>\n      <td>0.012452</td>\n      <td>-0.044495</td>\n      <td>-0.078152</td>\n    </tr>\n    <tr>\n      <th>consume_top_time_last_6_month</th>\n      <td>0.010297</td>\n      <td>0.071615</td>\n      <td>0.026853</td>\n      <td>0.033989</td>\n      <td>-0.062038</td>\n      <td>0.032106</td>\n      <td>-0.009154</td>\n      <td>-0.506739</td>\n      <td>-0.371122</td>\n      <td>0.489491</td>\n      <td>...</td>\n      <td>-0.228478</td>\n      <td>-0.109085</td>\n      <td>-0.055605</td>\n      <td>-0.128403</td>\n      <td>-0.331808</td>\n      <td>-0.329305</td>\n      <td>-0.105383</td>\n      <td>-0.042412</td>\n      <td>0.083349</td>\n      <td>0.194636</td>\n    </tr>\n    <tr>\n      <th>cross_consume_count_last_1_month</th>\n      <td>-0.019612</td>\n      <td>-0.015749</td>\n      <td>0.056716</td>\n      <td>-0.076003</td>\n      <td>0.042310</td>\n      <td>-0.004524</td>\n      <td>-0.001588</td>\n      <td>0.217779</td>\n      <td>0.236684</td>\n      <td>-0.098826</td>\n      <td>...</td>\n      <td>0.101269</td>\n      <td>0.038369</td>\n      <td>0.032169</td>\n      <td>0.024935</td>\n      <td>0.129515</td>\n      <td>0.131031</td>\n      <td>0.041163</td>\n      <td>0.025667</td>\n      <td>-0.026850</td>\n      <td>-0.081532</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>loans_score</th>\n      <td>-0.014716</td>\n      <td>-0.006276</td>\n      <td>-0.007019</td>\n      <td>-0.039519</td>\n      <td>-0.003928</td>\n      <td>0.010481</td>\n      <td>-0.020418</td>\n      <td>-0.211471</td>\n      <td>-0.141698</td>\n      <td>0.105373</td>\n      <td>...</td>\n      <td>-0.145502</td>\n      <td>-0.071344</td>\n      <td>0.076157</td>\n      <td>-0.043698</td>\n      <td>-0.242594</td>\n      <td>-0.249384</td>\n      <td>-0.004854</td>\n      <td>0.085289</td>\n      <td>0.035587</td>\n      <td>-0.019444</td>\n    </tr>\n    <tr>\n      <th>loans_credibility_behavior</th>\n      <td>-0.000191</td>\n      <td>-0.023587</td>\n      <td>0.037414</td>\n      <td>-0.031636</td>\n      <td>-0.017790</td>\n      <td>-0.003788</td>\n      <td>0.002694</td>\n      <td>-0.059242</td>\n      <td>-0.028579</td>\n      <td>0.016791</td>\n      <td>...</td>\n      <td>-0.109592</td>\n      <td>-0.059538</td>\n      <td>0.113228</td>\n      <td>0.202241</td>\n      <td>0.132995</td>\n      <td>0.141105</td>\n      <td>0.112848</td>\n      <td>0.110999</td>\n      <td>0.014235</td>\n      <td>-0.034587</td>\n    </tr>\n    <tr>\n      <th>loans_count</th>\n      <td>0.008971</td>\n      <td>-0.104423</td>\n      <td>-0.103643</td>\n      <td>0.093372</td>\n      <td>0.034853</td>\n      <td>-0.011057</td>\n      <td>0.010844</td>\n      <td>0.713700</td>\n      <td>0.433028</td>\n      <td>-0.340780</td>\n      <td>...</td>\n      <td>0.454809</td>\n      <td>0.167113</td>\n      <td>0.097746</td>\n      <td>0.189068</td>\n      <td>0.669975</td>\n      <td>0.658099</td>\n      <td>0.240708</td>\n      <td>0.067635</td>\n      <td>-0.194495</td>\n      <td>-0.388366</td>\n    </tr>\n    <tr>\n      <th>loans_settle_count</th>\n      <td>0.008509</td>\n      <td>-0.106395</td>\n      <td>-0.115451</td>\n      <td>0.084747</td>\n      <td>0.044691</td>\n      <td>-0.011398</td>\n      <td>0.006203</td>\n      <td>0.723008</td>\n      <td>0.440667</td>\n      <td>-0.346732</td>\n      <td>...</td>\n      <td>0.466131</td>\n      <td>0.175771</td>\n      <td>0.109141</td>\n      <td>0.183622</td>\n      <td>0.633814</td>\n      <td>0.618343</td>\n      <td>0.239062</td>\n      <td>0.079620</td>\n      <td>-0.198341</td>\n      <td>-0.374859</td>\n    </tr>\n    <tr>\n      <th>loans_overdue_count</th>\n      <td>-0.002123</td>\n      <td>-0.047870</td>\n      <td>0.003258</td>\n      <td>0.055341</td>\n      <td>-0.018406</td>\n      <td>-0.009483</td>\n      <td>0.026175</td>\n      <td>0.319103</td>\n      <td>0.193574</td>\n      <td>-0.145065</td>\n      <td>...</td>\n      <td>0.189896</td>\n      <td>0.071337</td>\n      <td>0.001805</td>\n      <td>0.089767</td>\n      <td>0.389047</td>\n      <td>0.396295</td>\n      <td>0.109103</td>\n      <td>-0.020359</td>\n      <td>-0.069116</td>\n      <td>-0.166293</td>\n    </tr>\n    <tr>\n      <th>loans_org_count_behavior</th>\n      <td>0.002662</td>\n      <td>-0.107997</td>\n      <td>-0.113256</td>\n      <td>0.086219</td>\n      <td>0.020780</td>\n      <td>-0.012629</td>\n      <td>0.014655</td>\n      <td>0.698811</td>\n      <td>0.451913</td>\n      <td>-0.330187</td>\n      <td>...</td>\n      <td>0.462677</td>\n      <td>0.133557</td>\n      <td>0.065915</td>\n      <td>0.231726</td>\n      <td>0.799828</td>\n      <td>0.784147</td>\n      <td>0.257087</td>\n      <td>0.038651</td>\n      <td>-0.216354</td>\n      <td>-0.402870</td>\n    </tr>\n    <tr>\n      <th>consfin_org_count_behavior</th>\n      <td>0.012062</td>\n      <td>-0.129297</td>\n      <td>-0.074851</td>\n      <td>-0.007761</td>\n      <td>0.021387</td>\n      <td>-0.019901</td>\n      <td>0.003332</td>\n      <td>0.553486</td>\n      <td>0.371197</td>\n      <td>-0.287044</td>\n      <td>...</td>\n      <td>0.357549</td>\n      <td>0.137506</td>\n      <td>0.102057</td>\n      <td>0.297390</td>\n      <td>1.000000</td>\n      <td>0.988027</td>\n      <td>0.345697</td>\n      <td>0.074170</td>\n      <td>-0.185038</td>\n      <td>-0.399885</td>\n    </tr>\n    <tr>\n      <th>loans_cash_count</th>\n      <td>-0.002987</td>\n      <td>-0.078110</td>\n      <td>-0.115566</td>\n      <td>0.123857</td>\n      <td>0.016962</td>\n      <td>-0.006482</td>\n      <td>0.018475</td>\n      <td>0.662281</td>\n      <td>0.420938</td>\n      <td>-0.298750</td>\n      <td>...</td>\n      <td>0.443326</td>\n      <td>0.108990</td>\n      <td>0.034866</td>\n      <td>0.156549</td>\n      <td>0.555002</td>\n      <td>0.539896</td>\n      <td>0.164961</td>\n      <td>0.012515</td>\n      <td>-0.197164</td>\n      <td>-0.337008</td>\n    </tr>\n    <tr>\n      <th>latest_one_month_loan</th>\n      <td>-0.001009</td>\n      <td>-0.082016</td>\n      <td>-0.034938</td>\n      <td>-0.017258</td>\n      <td>0.008845</td>\n      <td>-0.010482</td>\n      <td>0.010030</td>\n      <td>0.251331</td>\n      <td>0.152255</td>\n      <td>-0.109048</td>\n      <td>...</td>\n      <td>0.216387</td>\n      <td>0.078718</td>\n      <td>0.057899</td>\n      <td>0.087776</td>\n      <td>0.328566</td>\n      <td>0.334659</td>\n      <td>0.136317</td>\n      <td>0.039233</td>\n      <td>-0.167327</td>\n      <td>-0.564125</td>\n    </tr>\n    <tr>\n      <th>latest_three_month_loan</th>\n      <td>0.009841</td>\n      <td>-0.102432</td>\n      <td>-0.041141</td>\n      <td>-0.007416</td>\n      <td>0.009611</td>\n      <td>-0.012746</td>\n      <td>0.024060</td>\n      <td>0.277217</td>\n      <td>0.180567</td>\n      <td>-0.132316</td>\n      <td>...</td>\n      <td>0.235019</td>\n      <td>0.083134</td>\n      <td>0.055062</td>\n      <td>0.099953</td>\n      <td>0.410173</td>\n      <td>0.415173</td>\n      <td>0.158521</td>\n      <td>0.038337</td>\n      <td>-0.172112</td>\n      <td>-0.556912</td>\n    </tr>\n    <tr>\n      <th>latest_six_month_loan</th>\n      <td>0.013859</td>\n      <td>-0.084090</td>\n      <td>-0.080426</td>\n      <td>0.080167</td>\n      <td>0.034499</td>\n      <td>-0.007440</td>\n      <td>0.023376</td>\n      <td>0.618386</td>\n      <td>0.381795</td>\n      <td>-0.294128</td>\n      <td>...</td>\n      <td>0.395462</td>\n      <td>0.110447</td>\n      <td>0.067585</td>\n      <td>0.169560</td>\n      <td>0.653119</td>\n      <td>0.646769</td>\n      <td>0.214958</td>\n      <td>0.040151</td>\n      <td>-0.201667</td>\n      <td>-0.457269</td>\n    </tr>\n    <tr>\n      <th>history_suc_fee</th>\n      <td>0.005751</td>\n      <td>-0.154554</td>\n      <td>-0.068576</td>\n      <td>0.038832</td>\n      <td>0.036804</td>\n      <td>-0.013452</td>\n      <td>0.008331</td>\n      <td>0.707752</td>\n      <td>0.432147</td>\n      <td>-0.361614</td>\n      <td>...</td>\n      <td>0.439947</td>\n      <td>0.158091</td>\n      <td>0.129951</td>\n      <td>0.194162</td>\n      <td>0.682134</td>\n      <td>0.674063</td>\n      <td>0.258122</td>\n      <td>0.092018</td>\n      <td>-0.197019</td>\n      <td>-0.392292</td>\n    </tr>\n    <tr>\n      <th>history_fail_fee</th>\n      <td>0.005633</td>\n      <td>-0.039117</td>\n      <td>0.009093</td>\n      <td>0.055486</td>\n      <td>-0.019751</td>\n      <td>-0.006480</td>\n      <td>0.033715</td>\n      <td>0.269878</td>\n      <td>0.148111</td>\n      <td>-0.115664</td>\n      <td>...</td>\n      <td>0.164983</td>\n      <td>0.047106</td>\n      <td>0.008807</td>\n      <td>0.098387</td>\n      <td>0.399674</td>\n      <td>0.411005</td>\n      <td>0.130966</td>\n      <td>-0.011496</td>\n      <td>-0.060527</td>\n      <td>-0.199490</td>\n    </tr>\n    <tr>\n      <th>latest_one_month_suc</th>\n      <td>0.000168</td>\n      <td>-0.078523</td>\n      <td>-0.025131</td>\n      <td>-0.022327</td>\n      <td>0.022699</td>\n      <td>-0.009579</td>\n      <td>0.009873</td>\n      <td>0.228821</td>\n      <td>0.146654</td>\n      <td>-0.111359</td>\n      <td>...</td>\n      <td>0.194397</td>\n      <td>0.056937</td>\n      <td>0.023565</td>\n      <td>0.092642</td>\n      <td>0.349219</td>\n      <td>0.360903</td>\n      <td>0.119473</td>\n      <td>0.014118</td>\n      <td>-0.167496</td>\n      <td>-0.459412</td>\n    </tr>\n    <tr>\n      <th>latest_one_month_fail</th>\n      <td>0.013939</td>\n      <td>-0.041356</td>\n      <td>0.021126</td>\n      <td>-0.018844</td>\n      <td>-0.004671</td>\n      <td>-0.005436</td>\n      <td>0.017951</td>\n      <td>0.133230</td>\n      <td>0.080658</td>\n      <td>-0.053043</td>\n      <td>...</td>\n      <td>0.104707</td>\n      <td>0.041028</td>\n      <td>-0.000725</td>\n      <td>0.053177</td>\n      <td>0.228943</td>\n      <td>0.244784</td>\n      <td>0.078403</td>\n      <td>-0.011238</td>\n      <td>-0.051815</td>\n      <td>-0.232811</td>\n    </tr>\n    <tr>\n      <th>loans_long_time</th>\n      <td>0.000992</td>\n      <td>-0.216323</td>\n      <td>-0.074834</td>\n      <td>0.040822</td>\n      <td>0.012660</td>\n      <td>-0.002678</td>\n      <td>0.030914</td>\n      <td>0.384281</td>\n      <td>0.301560</td>\n      <td>-0.317888</td>\n      <td>...</td>\n      <td>0.368329</td>\n      <td>0.268476</td>\n      <td>0.144168</td>\n      <td>0.229963</td>\n      <td>0.345921</td>\n      <td>0.337877</td>\n      <td>0.198060</td>\n      <td>0.134422</td>\n      <td>-0.134214</td>\n      <td>-0.214274</td>\n    </tr>\n    <tr>\n      <th>loans_credit_limit</th>\n      <td>-0.006194</td>\n      <td>-0.160582</td>\n      <td>-0.138446</td>\n      <td>-0.086706</td>\n      <td>0.050185</td>\n      <td>0.013118</td>\n      <td>0.036172</td>\n      <td>0.229054</td>\n      <td>0.177929</td>\n      <td>-0.146462</td>\n      <td>...</td>\n      <td>0.745694</td>\n      <td>0.901755</td>\n      <td>0.085200</td>\n      <td>0.057358</td>\n      <td>0.151520</td>\n      <td>0.152471</td>\n      <td>0.123290</td>\n      <td>0.087213</td>\n      <td>-0.111170</td>\n      <td>-0.157736</td>\n    </tr>\n    <tr>\n      <th>loans_credibility_limit</th>\n      <td>-0.033850</td>\n      <td>-0.000850</td>\n      <td>-0.051545</td>\n      <td>0.090824</td>\n      <td>-0.025575</td>\n      <td>0.003868</td>\n      <td>-0.005513</td>\n      <td>0.161363</td>\n      <td>0.154721</td>\n      <td>-0.083218</td>\n      <td>...</td>\n      <td>0.328845</td>\n      <td>0.456704</td>\n      <td>-0.022646</td>\n      <td>-0.029875</td>\n      <td>0.115503</td>\n      <td>0.114720</td>\n      <td>0.021164</td>\n      <td>-0.036374</td>\n      <td>-0.127687</td>\n      <td>-0.138313</td>\n    </tr>\n    <tr>\n      <th>loans_org_count_current</th>\n      <td>-0.002987</td>\n      <td>-0.078110</td>\n      <td>-0.115566</td>\n      <td>0.123857</td>\n      <td>0.016962</td>\n      <td>-0.006482</td>\n      <td>0.018475</td>\n      <td>0.662281</td>\n      <td>0.420938</td>\n      <td>-0.298750</td>\n      <td>...</td>\n      <td>0.443326</td>\n      <td>0.108990</td>\n      <td>0.034866</td>\n      <td>0.156549</td>\n      <td>0.555002</td>\n      <td>0.539896</td>\n      <td>0.164961</td>\n      <td>0.012515</td>\n      <td>-0.197164</td>\n      <td>-0.337008</td>\n    </tr>\n    <tr>\n      <th>loans_product_count</th>\n      <td>-0.001941</td>\n      <td>-0.072159</td>\n      <td>-0.114296</td>\n      <td>0.122741</td>\n      <td>0.018572</td>\n      <td>-0.007575</td>\n      <td>0.019401</td>\n      <td>0.656939</td>\n      <td>0.416980</td>\n      <td>-0.295409</td>\n      <td>...</td>\n      <td>0.441316</td>\n      <td>0.108962</td>\n      <td>0.031936</td>\n      <td>0.155744</td>\n      <td>0.553607</td>\n      <td>0.539424</td>\n      <td>0.163650</td>\n      <td>0.009397</td>\n      <td>-0.199549</td>\n      <td>-0.348389</td>\n    </tr>\n    <tr>\n      <th>loans_max_limit</th>\n      <td>0.012189</td>\n      <td>-0.236185</td>\n      <td>-0.140173</td>\n      <td>-0.145599</td>\n      <td>0.071798</td>\n      <td>0.007119</td>\n      <td>0.061847</td>\n      <td>0.445155</td>\n      <td>0.313715</td>\n      <td>-0.222970</td>\n      <td>...</td>\n      <td>1.000000</td>\n      <td>0.716175</td>\n      <td>0.108760</td>\n      <td>0.101659</td>\n      <td>0.357549</td>\n      <td>0.354231</td>\n      <td>0.208389</td>\n      <td>0.109425</td>\n      <td>-0.190074</td>\n      <td>-0.282204</td>\n    </tr>\n    <tr>\n      <th>loans_avg_limit</th>\n      <td>-0.004457</td>\n      <td>-0.152017</td>\n      <td>-0.128145</td>\n      <td>-0.110230</td>\n      <td>0.038880</td>\n      <td>0.000119</td>\n      <td>0.037275</td>\n      <td>0.202242</td>\n      <td>0.165959</td>\n      <td>-0.118522</td>\n      <td>...</td>\n      <td>0.716175</td>\n      <td>1.000000</td>\n      <td>0.091117</td>\n      <td>0.031452</td>\n      <td>0.137506</td>\n      <td>0.137271</td>\n      <td>0.130307</td>\n      <td>0.098641</td>\n      <td>-0.099086</td>\n      <td>-0.144835</td>\n    </tr>\n    <tr>\n      <th>consfin_credit_limit</th>\n      <td>0.005967</td>\n      <td>-0.093180</td>\n      <td>-0.083987</td>\n      <td>-0.153241</td>\n      <td>0.039328</td>\n      <td>0.028868</td>\n      <td>-0.036822</td>\n      <td>0.096622</td>\n      <td>0.066250</td>\n      <td>-0.055205</td>\n      <td>...</td>\n      <td>0.108760</td>\n      <td>0.091117</td>\n      <td>1.000000</td>\n      <td>0.241837</td>\n      <td>0.102057</td>\n      <td>0.081338</td>\n      <td>0.788637</td>\n      <td>0.901470</td>\n      <td>-0.047756</td>\n      <td>-0.110230</td>\n    </tr>\n    <tr>\n      <th>consfin_credibility</th>\n      <td>0.007746</td>\n      <td>-0.041979</td>\n      <td>-0.032534</td>\n      <td>0.003266</td>\n      <td>0.015841</td>\n      <td>0.006174</td>\n      <td>-0.000400</td>\n      <td>0.181157</td>\n      <td>0.131905</td>\n      <td>-0.142221</td>\n      <td>...</td>\n      <td>0.101659</td>\n      <td>0.031452</td>\n      <td>0.241837</td>\n      <td>1.000000</td>\n      <td>0.297390</td>\n      <td>0.288275</td>\n      <td>0.216232</td>\n      <td>0.275861</td>\n      <td>-0.085131</td>\n      <td>-0.230984</td>\n    </tr>\n    <tr>\n      <th>consfin_org_count_current</th>\n      <td>0.012062</td>\n      <td>-0.129297</td>\n      <td>-0.074851</td>\n      <td>-0.007761</td>\n      <td>0.021387</td>\n      <td>-0.019901</td>\n      <td>0.003332</td>\n      <td>0.553486</td>\n      <td>0.371197</td>\n      <td>-0.287044</td>\n      <td>...</td>\n      <td>0.357549</td>\n      <td>0.137506</td>\n      <td>0.102057</td>\n      <td>0.297390</td>\n      <td>1.000000</td>\n      <td>0.988027</td>\n      <td>0.345697</td>\n      <td>0.074170</td>\n      <td>-0.185038</td>\n      <td>-0.399885</td>\n    </tr>\n    <tr>\n      <th>consfin_product_count</th>\n      <td>0.009583</td>\n      <td>-0.139197</td>\n      <td>-0.067226</td>\n      <td>-0.014847</td>\n      <td>0.021337</td>\n      <td>-0.019603</td>\n      <td>0.005534</td>\n      <td>0.551140</td>\n      <td>0.374660</td>\n      <td>-0.286212</td>\n      <td>...</td>\n      <td>0.354231</td>\n      <td>0.137271</td>\n      <td>0.081338</td>\n      <td>0.288275</td>\n      <td>0.988027</td>\n      <td>1.000000</td>\n      <td>0.329687</td>\n      <td>0.054292</td>\n      <td>-0.183685</td>\n      <td>-0.402011</td>\n    </tr>\n    <tr>\n      <th>consfin_max_limit</th>\n      <td>0.004020</td>\n      <td>-0.115324</td>\n      <td>-0.096647</td>\n      <td>-0.169575</td>\n      <td>0.054433</td>\n      <td>0.007123</td>\n      <td>-0.022388</td>\n      <td>0.224509</td>\n      <td>0.156951</td>\n      <td>-0.111345</td>\n      <td>...</td>\n      <td>0.208389</td>\n      <td>0.130307</td>\n      <td>0.788637</td>\n      <td>0.216232</td>\n      <td>0.345697</td>\n      <td>0.329687</td>\n      <td>1.000000</td>\n      <td>0.790580</td>\n      <td>-0.096890</td>\n      <td>-0.193945</td>\n    </tr>\n    <tr>\n      <th>consfin_avg_limit</th>\n      <td>0.008860</td>\n      <td>-0.076767</td>\n      <td>-0.094627</td>\n      <td>-0.174126</td>\n      <td>0.040634</td>\n      <td>0.040865</td>\n      <td>-0.043764</td>\n      <td>0.085255</td>\n      <td>0.057663</td>\n      <td>-0.045801</td>\n      <td>...</td>\n      <td>0.109425</td>\n      <td>0.098641</td>\n      <td>0.901470</td>\n      <td>0.275861</td>\n      <td>0.074170</td>\n      <td>0.054292</td>\n      <td>0.790580</td>\n      <td>1.000000</td>\n      <td>-0.042131</td>\n      <td>-0.088072</td>\n    </tr>\n    <tr>\n      <th>latest_query_day</th>\n      <td>0.020774</td>\n      <td>0.099208</td>\n      <td>0.069301</td>\n      <td>-0.001628</td>\n      <td>-0.000570</td>\n      <td>-0.001457</td>\n      <td>-0.024161</td>\n      <td>-0.188965</td>\n      <td>-0.120330</td>\n      <td>0.069560</td>\n      <td>...</td>\n      <td>-0.190074</td>\n      <td>-0.099086</td>\n      <td>-0.047756</td>\n      <td>-0.085131</td>\n      <td>-0.185038</td>\n      <td>-0.183685</td>\n      <td>-0.096890</td>\n      <td>-0.042131</td>\n      <td>1.000000</td>\n      <td>0.230078</td>\n    </tr>\n    <tr>\n      <th>loans_latest_day</th>\n      <td>0.026387</td>\n      <td>0.098628</td>\n      <td>0.047500</td>\n      <td>-0.003253</td>\n      <td>-0.010231</td>\n      <td>0.027221</td>\n      <td>-0.014880</td>\n      <td>-0.299110</td>\n      <td>-0.211593</td>\n      <td>0.163433</td>\n      <td>...</td>\n      <td>-0.282204</td>\n      <td>-0.144835</td>\n      <td>-0.110230</td>\n      <td>-0.230984</td>\n      <td>-0.399885</td>\n      <td>-0.402011</td>\n      <td>-0.193945</td>\n      <td>-0.088072</td>\n      <td>0.230078</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>82 rows × 82 columns</p>\n</div>\n\n\n\n> 参考：\n\n1. [DataWhale数据挖掘实战营](https://github.com/datawhalechina/Datawhale_Learning/tree/master/doc/%E7%90%86%E8%AE%BA%E5%BA%94%E7%94%A8/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98)\n2. [利用Python进行数据分析·第2版](https://www.jianshu.com/p/29ece4592178)\n3. [Stata：离群值！离群值？离群值！](https://www.jianshu.com/p/0c967a1526ef)\n4. [机器学习中如何处理不平衡数据？](https://www.jiqizhixin.com/articles/021704)\n","slug":"2019-08-01_数据理解与清洗","published":1,"updated":"2021-04-06T13:50:44.840Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5rx00319ohz0ya99ckp","content":"<h2 id=\"数据集载入\"><a href=\"#数据集载入\" class=\"headerlink\" title=\"数据集载入\"></a>数据集载入</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib <span class=\"keyword\">import</span> pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"><span class=\"keyword\">import</span> warnings</span><br><span class=\"line\">warnings.filterwarnings(<span class=\"string\">&#x27;ignore&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">u&quot;2019-08-01_金融数据描述_data1.csv&quot;</span>,encoding = <span class=\"string\">&#x27;gbk&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.head()</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>custid</th>\n      <th>trade_no</th>\n      <th>bank_card_no</th>\n      <th>low_volume_percent</th>\n      <th>middle_volume_percent</th>\n      <th>take_amount_in_later_12_month_highest</th>\n      <th>trans_amount_increase_rate_lately</th>\n      <th>trans_activity_month</th>\n      <th>trans_activity_day</th>\n      <th>...</th>\n      <th>loans_max_limit</th>\n      <th>loans_avg_limit</th>\n      <th>consfin_credit_limit</th>\n      <th>consfin_credibility</th>\n      <th>consfin_org_count_current</th>\n      <th>consfin_product_count</th>\n      <th>consfin_max_limit</th>\n      <th>consfin_avg_limit</th>\n      <th>latest_query_day</th>\n      <th>loans_latest_day</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5</td>\n      <td>2791858</td>\n      <td>20180507115231274000000023057383</td>\n      <td>卡号1</td>\n      <td>0.01</td>\n      <td>0.99</td>\n      <td>0</td>\n      <td>0.90</td>\n      <td>0.55</td>\n      <td>0.313</td>\n      <td>...</td>\n      <td>2900.0</td>\n      <td>1688.0</td>\n      <td>1200.0</td>\n      <td>75.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>12.0</td>\n      <td>18.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10</td>\n      <td>534047</td>\n      <td>20180507121002192000000023073000</td>\n      <td>卡号1</td>\n      <td>0.02</td>\n      <td>0.94</td>\n      <td>2000</td>\n      <td>1.28</td>\n      <td>1.00</td>\n      <td>0.458</td>\n      <td>...</td>\n      <td>3500.0</td>\n      <td>1758.0</td>\n      <td>15100.0</td>\n      <td>80.0</td>\n      <td>5.0</td>\n      <td>6.0</td>\n      <td>22800.0</td>\n      <td>9360.0</td>\n      <td>4.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>12</td>\n      <td>2849787</td>\n      <td>20180507125159718000000023114911</td>\n      <td>卡号1</td>\n      <td>0.04</td>\n      <td>0.96</td>\n      <td>0</td>\n      <td>1.00</td>\n      <td>1.00</td>\n      <td>0.114</td>\n      <td>...</td>\n      <td>1600.0</td>\n      <td>1250.0</td>\n      <td>4200.0</td>\n      <td>87.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>4200.0</td>\n      <td>4200.0</td>\n      <td>2.0</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>13</td>\n      <td>1809708</td>\n      <td>20180507121358683000000388283484</td>\n      <td>卡号1</td>\n      <td>0.00</td>\n      <td>0.96</td>\n      <td>2000</td>\n      <td>0.13</td>\n      <td>0.57</td>\n      <td>0.777</td>\n      <td>...</td>\n      <td>3200.0</td>\n      <td>1541.0</td>\n      <td>16300.0</td>\n      <td>80.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>30000.0</td>\n      <td>12180.0</td>\n      <td>2.0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>14</td>\n      <td>2499829</td>\n      <td>20180507115448545000000388205844</td>\n      <td>卡号1</td>\n      <td>0.01</td>\n      <td>0.99</td>\n      <td>0</td>\n      <td>0.46</td>\n      <td>1.00</td>\n      <td>0.175</td>\n      <td>...</td>\n      <td>2300.0</td>\n      <td>1630.0</td>\n      <td>8300.0</td>\n      <td>79.0</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>8400.0</td>\n      <td>8250.0</td>\n      <td>22.0</td>\n      <td>120.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 90 columns</p>\n</div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.info()</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 4754 entries, 0 to 4753\nData columns (total 90 columns):\nUnnamed: 0                                    4754 non-null int64\ncustid                                        4754 non-null int64\ntrade_no                                      4754 non-null object\nbank_card_no                                  4754 non-null object\nlow_volume_percent                            4752 non-null float64\nmiddle_volume_percent                         4752 non-null float64\ntake_amount_in_later_12_month_highest         4754 non-null int64\ntrans_amount_increase_rate_lately             4751 non-null float64\ntrans_activity_month                          4752 non-null float64\ntrans_activity_day                            4752 non-null float64\ntransd_mcc                                    4752 non-null float64\ntrans_days_interval_filter                    4746 non-null float64\ntrans_days_interval                           4752 non-null float64\nregional_mobility                             4752 non-null float64\nstudent_feature                               1756 non-null float64\nrepayment_capability                          4754 non-null int64\nis_high_user                                  4754 non-null int64\nnumber_of_trans_from_2011                     4752 non-null float64\nfirst_transaction_time                        4752 non-null float64\nhistorical_trans_amount                       4754 non-null int64\nhistorical_trans_day                          4752 non-null float64\nrank_trad_1_month                             4752 non-null float64\ntrans_amount_3_month                          4754 non-null int64\navg_consume_less_12_valid_month               4752 non-null float64\nabs                                           4754 non-null int64\ntop_trans_count_last_1_month                  4752 non-null float64\navg_price_last_12_month                       4754 non-null int64\navg_price_top_last_12_valid_month             4650 non-null float64\nreg_preference_for_trad                       4752 non-null object\ntrans_top_time_last_1_month                   4746 non-null float64\ntrans_top_time_last_6_month                   4746 non-null float64\nconsume_top_time_last_1_month                 4746 non-null float64\nconsume_top_time_last_6_month                 4746 non-null float64\ncross_consume_count_last_1_month              4328 non-null float64\ntrans_fail_top_count_enum_last_1_month        4738 non-null float64\ntrans_fail_top_count_enum_last_6_month        4738 non-null float64\ntrans_fail_top_count_enum_last_12_month       4738 non-null float64\nconsume_mini_time_last_1_month                4728 non-null float64\nmax_cumulative_consume_later_1_month          4754 non-null int64\nmax_consume_count_later_6_month               4746 non-null float64\nrailway_consume_count_last_12_month           4742 non-null float64\npawns_auctions_trusts_consume_last_1_month    4754 non-null int64\npawns_auctions_trusts_consume_last_6_month    4754 non-null int64\njewelry_consume_count_last_6_month            4742 non-null float64\nstatus                                        4754 non-null int64\nsource                                        4754 non-null object\nfirst_transaction_day                         4752 non-null float64\ntrans_day_last_12_month                       4752 non-null float64\nid_name                                       4478 non-null object\napply_score                                   4450 non-null float64\napply_credibility                             4450 non-null float64\nquery_org_count                               4450 non-null float64\nquery_finance_count                           4450 non-null float64\nquery_cash_count                              4450 non-null float64\nquery_sum_count                               4450 non-null float64\nlatest_query_time                             4450 non-null object\nlatest_one_month_apply                        4450 non-null float64\nlatest_three_month_apply                      4450 non-null float64\nlatest_six_month_apply                        4450 non-null float64\nloans_score                                   4457 non-null float64\nloans_credibility_behavior                    4457 non-null float64\nloans_count                                   4457 non-null float64\nloans_settle_count                            4457 non-null float64\nloans_overdue_count                           4457 non-null float64\nloans_org_count_behavior                      4457 non-null float64\nconsfin_org_count_behavior                    4457 non-null float64\nloans_cash_count                              4457 non-null float64\nlatest_one_month_loan                         4457 non-null float64\nlatest_three_month_loan                       4457 non-null float64\nlatest_six_month_loan                         4457 non-null float64\nhistory_suc_fee                               4457 non-null float64\nhistory_fail_fee                              4457 non-null float64\nlatest_one_month_suc                          4457 non-null float64\nlatest_one_month_fail                         4457 non-null float64\nloans_long_time                               4457 non-null float64\nloans_latest_time                             4457 non-null object\nloans_credit_limit                            4457 non-null float64\nloans_credibility_limit                       4457 non-null float64\nloans_org_count_current                       4457 non-null float64\nloans_product_count                           4457 non-null float64\nloans_max_limit                               4457 non-null float64\nloans_avg_limit                               4457 non-null float64\nconsfin_credit_limit                          4457 non-null float64\nconsfin_credibility                           4457 non-null float64\nconsfin_org_count_current                     4457 non-null float64\nconsfin_product_count                         4457 non-null float64\nconsfin_max_limit                             4457 non-null float64\nconsfin_avg_limit                             4457 non-null float64\nlatest_query_day                              4450 non-null float64\nloans_latest_day                              4457 non-null float64\ndtypes: float64(70), int64(13), object(7)\nmemory usage: 3.3+ MB\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedic = &#123;&#125; <span class=\"comment\"># 类型字典</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> df.columns:</span><br><span class=\"line\">    typedic[<span class=\"built_in\">str</span>(df[name].dtype)] = typedic.get(<span class=\"built_in\">str</span>(df[name].dtype),[])+[name]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> key,value <span class=\"keyword\">in</span> typedic.items():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&#123;&#125;格式共有&#123;&#125;个: &#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(key,<span class=\"built_in\">len</span>(value),value))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>int64格式共有13个: [&#39;Unnamed: 0&#39;, &#39;custid&#39;, &#39;take_amount_in_later_12_month_highest&#39;, &#39;repayment_capability&#39;, &#39;is_high_user&#39;, &#39;historical_trans_amount&#39;, &#39;trans_amount_3_month&#39;, &#39;abs&#39;, &#39;avg_price_last_12_month&#39;, &#39;max_cumulative_consume_later_1_month&#39;, &#39;pawns_auctions_trusts_consume_last_1_month&#39;, &#39;pawns_auctions_trusts_consume_last_6_month&#39;, &#39;status&#39;]\n\nobject格式共有7个: [&#39;trade_no&#39;, &#39;bank_card_no&#39;, &#39;reg_preference_for_trad&#39;, &#39;source&#39;, &#39;id_name&#39;, &#39;latest_query_time&#39;, &#39;loans_latest_time&#39;]\n\nfloat64格式共有70个: [&#39;low_volume_percent&#39;, &#39;middle_volume_percent&#39;, &#39;trans_amount_increase_rate_lately&#39;, &#39;trans_activity_month&#39;, &#39;trans_activity_day&#39;, &#39;transd_mcc&#39;, &#39;trans_days_interval_filter&#39;, &#39;trans_days_interval&#39;, &#39;regional_mobility&#39;, &#39;student_feature&#39;, &#39;number_of_trans_from_2011&#39;, &#39;first_transaction_time&#39;, &#39;historical_trans_day&#39;, &#39;rank_trad_1_month&#39;, &#39;avg_consume_less_12_valid_month&#39;, &#39;top_trans_count_last_1_month&#39;, &#39;avg_price_top_last_12_valid_month&#39;, &#39;trans_top_time_last_1_month&#39;, &#39;trans_top_time_last_6_month&#39;, &#39;consume_top_time_last_1_month&#39;, &#39;consume_top_time_last_6_month&#39;, &#39;cross_consume_count_last_1_month&#39;, &#39;trans_fail_top_count_enum_last_1_month&#39;, &#39;trans_fail_top_count_enum_last_6_month&#39;, &#39;trans_fail_top_count_enum_last_12_month&#39;, &#39;consume_mini_time_last_1_month&#39;, &#39;max_consume_count_later_6_month&#39;, &#39;railway_consume_count_last_12_month&#39;, &#39;jewelry_consume_count_last_6_month&#39;, &#39;first_transaction_day&#39;, &#39;trans_day_last_12_month&#39;, &#39;apply_score&#39;, &#39;apply_credibility&#39;, &#39;query_org_count&#39;, &#39;query_finance_count&#39;, &#39;query_cash_count&#39;, &#39;query_sum_count&#39;, &#39;latest_one_month_apply&#39;, &#39;latest_three_month_apply&#39;, &#39;latest_six_month_apply&#39;, &#39;loans_score&#39;, &#39;loans_credibility_behavior&#39;, &#39;loans_count&#39;, &#39;loans_settle_count&#39;, &#39;loans_overdue_count&#39;, &#39;loans_org_count_behavior&#39;, &#39;consfin_org_count_behavior&#39;, &#39;loans_cash_count&#39;, &#39;latest_one_month_loan&#39;, &#39;latest_three_month_loan&#39;, &#39;latest_six_month_loan&#39;, &#39;history_suc_fee&#39;, &#39;history_fail_fee&#39;, &#39;latest_one_month_suc&#39;, &#39;latest_one_month_fail&#39;, &#39;loans_long_time&#39;, &#39;loans_credit_limit&#39;, &#39;loans_credibility_limit&#39;, &#39;loans_org_count_current&#39;, &#39;loans_product_count&#39;, &#39;loans_max_limit&#39;, &#39;loans_avg_limit&#39;, &#39;consfin_credit_limit&#39;, &#39;consfin_credibility&#39;, &#39;consfin_org_count_current&#39;, &#39;consfin_product_count&#39;, &#39;consfin_max_limit&#39;, &#39;consfin_avg_limit&#39;, &#39;latest_query_day&#39;, &#39;loans_latest_day&#39;]\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.columns</span><br></pre></td></tr></table></figure>\n<pre><code>Index([&#39;Unnamed: 0&#39;, &#39;custid&#39;, &#39;trade_no&#39;, &#39;bank_card_no&#39;,\n       &#39;low_volume_percent&#39;, &#39;middle_volume_percent&#39;,\n       &#39;take_amount_in_later_12_month_highest&#39;,\n       &#39;trans_amount_increase_rate_lately&#39;, &#39;trans_activity_month&#39;,\n       &#39;trans_activity_day&#39;, &#39;transd_mcc&#39;, &#39;trans_days_interval_filter&#39;,\n       &#39;trans_days_interval&#39;, &#39;regional_mobility&#39;, &#39;student_feature&#39;,\n       &#39;repayment_capability&#39;, &#39;is_high_user&#39;, &#39;number_of_trans_from_2011&#39;,\n       &#39;first_transaction_time&#39;, &#39;historical_trans_amount&#39;,\n       &#39;historical_trans_day&#39;, &#39;rank_trad_1_month&#39;, &#39;trans_amount_3_month&#39;,\n       &#39;avg_consume_less_12_valid_month&#39;, &#39;abs&#39;,\n       &#39;top_trans_count_last_1_month&#39;, &#39;avg_price_last_12_month&#39;,\n       &#39;avg_price_top_last_12_valid_month&#39;, &#39;reg_preference_for_trad&#39;,\n       &#39;trans_top_time_last_1_month&#39;, &#39;trans_top_time_last_6_month&#39;,\n       &#39;consume_top_time_last_1_month&#39;, &#39;consume_top_time_last_6_month&#39;,\n       &#39;cross_consume_count_last_1_month&#39;,\n       &#39;trans_fail_top_count_enum_last_1_month&#39;,\n       &#39;trans_fail_top_count_enum_last_6_month&#39;,\n       &#39;trans_fail_top_count_enum_last_12_month&#39;,\n       &#39;consume_mini_time_last_1_month&#39;,\n       &#39;max_cumulative_consume_later_1_month&#39;,\n       &#39;max_consume_count_later_6_month&#39;,\n       &#39;railway_consume_count_last_12_month&#39;,\n       &#39;pawns_auctions_trusts_consume_last_1_month&#39;,\n       &#39;pawns_auctions_trusts_consume_last_6_month&#39;,\n       &#39;jewelry_consume_count_last_6_month&#39;, &#39;status&#39;, &#39;source&#39;,\n       &#39;first_transaction_day&#39;, &#39;trans_day_last_12_month&#39;, &#39;id_name&#39;,\n       &#39;apply_score&#39;, &#39;apply_credibility&#39;, &#39;query_org_count&#39;,\n       &#39;query_finance_count&#39;, &#39;query_cash_count&#39;, &#39;query_sum_count&#39;,\n       &#39;latest_query_time&#39;, &#39;latest_one_month_apply&#39;,\n       &#39;latest_three_month_apply&#39;, &#39;latest_six_month_apply&#39;, &#39;loans_score&#39;,\n       &#39;loans_credibility_behavior&#39;, &#39;loans_count&#39;, &#39;loans_settle_count&#39;,\n       &#39;loans_overdue_count&#39;, &#39;loans_org_count_behavior&#39;,\n       &#39;consfin_org_count_behavior&#39;, &#39;loans_cash_count&#39;,\n       &#39;latest_one_month_loan&#39;, &#39;latest_three_month_loan&#39;,\n       &#39;latest_six_month_loan&#39;, &#39;history_suc_fee&#39;, &#39;history_fail_fee&#39;,\n       &#39;latest_one_month_suc&#39;, &#39;latest_one_month_fail&#39;, &#39;loans_long_time&#39;,\n       &#39;loans_latest_time&#39;, &#39;loans_credit_limit&#39;, &#39;loans_credibility_limit&#39;,\n       &#39;loans_org_count_current&#39;, &#39;loans_product_count&#39;, &#39;loans_max_limit&#39;,\n       &#39;loans_avg_limit&#39;, &#39;consfin_credit_limit&#39;, &#39;consfin_credibility&#39;,\n       &#39;consfin_org_count_current&#39;, &#39;consfin_product_count&#39;,\n       &#39;consfin_max_limit&#39;, &#39;consfin_avg_limit&#39;, &#39;latest_query_day&#39;,\n       &#39;loans_latest_day&#39;],\n      dtype=&#39;object&#39;)\n</code></pre><h2 id=\"可视化各特征\"><a href=\"#可视化各特征\" class=\"headerlink\" title=\"可视化各特征\"></a>可视化各特征</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name_list_1 = [</span><br><span class=\"line\">       <span class=\"string\">&#x27;low_volume_percent&#x27;</span>, <span class=\"string\">&#x27;middle_volume_percent&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;take_amount_in_later_12_month_highest&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;trans_amount_increase_rate_lately&#x27;</span>, <span class=\"string\">&#x27;trans_activity_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;trans_activity_day&#x27;</span>, <span class=\"string\">&#x27;transd_mcc&#x27;</span>, <span class=\"string\">&#x27;trans_days_interval_filter&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;trans_days_interval&#x27;</span>, <span class=\"string\">&#x27;regional_mobility&#x27;</span>, <span class=\"string\">&#x27;student_feature&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;repayment_capability&#x27;</span>, <span class=\"string\">&#x27;is_high_user&#x27;</span>, <span class=\"string\">&#x27;number_of_trans_from_2011&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;first_transaction_time&#x27;</span></span><br><span class=\"line\">       ]</span><br><span class=\"line\">name_list_2 = [</span><br><span class=\"line\">       <span class=\"string\">&#x27;historical_trans_amount&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;historical_trans_day&#x27;</span>, <span class=\"string\">&#x27;rank_trad_1_month&#x27;</span>, <span class=\"string\">&#x27;trans_amount_3_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;avg_consume_less_12_valid_month&#x27;</span>, <span class=\"string\">&#x27;abs&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;top_trans_count_last_1_month&#x27;</span>, <span class=\"string\">&#x27;avg_price_last_12_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;avg_price_top_last_12_valid_month&#x27;</span>, <span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;trans_top_time_last_1_month&#x27;</span>, <span class=\"string\">&#x27;trans_top_time_last_6_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;consume_top_time_last_1_month&#x27;</span>, <span class=\"string\">&#x27;consume_top_time_last_6_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;cross_consume_count_last_1_month&#x27;</span>,</span><br><span class=\"line\">       ]</span><br><span class=\"line\">name_list_3 = [</span><br><span class=\"line\">       <span class=\"string\">&#x27;trans_fail_top_count_enum_last_1_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;trans_fail_top_count_enum_last_6_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;trans_fail_top_count_enum_last_12_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;consume_mini_time_last_1_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;max_cumulative_consume_later_1_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;max_consume_count_later_6_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;railway_consume_count_last_12_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;pawns_auctions_trusts_consume_last_1_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;pawns_auctions_trusts_consume_last_6_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;jewelry_consume_count_last_6_month&#x27;</span>, </span><br><span class=\"line\">       <span class=\"string\">&#x27;first_transaction_day&#x27;</span>, <span class=\"string\">&#x27;trans_day_last_12_month&#x27;</span>, <span class=\"string\">&#x27;apply_score&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;apply_credibility&#x27;</span>, <span class=\"string\">&#x27;query_org_count&#x27;</span>,</span><br><span class=\"line\">       ]</span><br><span class=\"line\">name_list_4 = [</span><br><span class=\"line\">      <span class=\"string\">&#x27;query_finance_count&#x27;</span>, <span class=\"string\">&#x27;query_cash_count&#x27;</span>, <span class=\"string\">&#x27;query_sum_count&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;latest_query_time&#x27;</span>, <span class=\"string\">&#x27;latest_one_month_apply&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;latest_three_month_apply&#x27;</span>, <span class=\"string\">&#x27;latest_six_month_apply&#x27;</span>, <span class=\"string\">&#x27;loans_score&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;loans_credibility_behavior&#x27;</span>, <span class=\"string\">&#x27;loans_count&#x27;</span>, <span class=\"string\">&#x27;loans_settle_count&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;loans_overdue_count&#x27;</span>, <span class=\"string\">&#x27;loans_org_count_behavior&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;consfin_org_count_behavior&#x27;</span>, <span class=\"string\">&#x27;loans_cash_count&#x27;</span>,</span><br><span class=\"line\">       ]</span><br><span class=\"line\">name_list_5 = [</span><br><span class=\"line\">      <span class=\"string\">&#x27;latest_one_month_loan&#x27;</span>, <span class=\"string\">&#x27;latest_three_month_loan&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;latest_six_month_loan&#x27;</span>, <span class=\"string\">&#x27;history_suc_fee&#x27;</span>, <span class=\"string\">&#x27;history_fail_fee&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;latest_one_month_suc&#x27;</span>, <span class=\"string\">&#x27;latest_one_month_fail&#x27;</span>, <span class=\"string\">&#x27;loans_long_time&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;loans_latest_time&#x27;</span>, <span class=\"string\">&#x27;loans_credit_limit&#x27;</span>, <span class=\"string\">&#x27;loans_credibility_limit&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;loans_org_count_current&#x27;</span>, <span class=\"string\">&#x27;loans_product_count&#x27;</span>, <span class=\"string\">&#x27;loans_max_limit&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;loans_avg_limit&#x27;</span>,</span><br><span class=\"line\">       ]</span><br><span class=\"line\">name_list_6 = [</span><br><span class=\"line\">      <span class=\"string\">&#x27;consfin_credit_limit&#x27;</span>, <span class=\"string\">&#x27;consfin_credibility&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;consfin_org_count_current&#x27;</span>, <span class=\"string\">&#x27;consfin_product_count&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;consfin_max_limit&#x27;</span>, <span class=\"string\">&#x27;consfin_avg_limit&#x27;</span>, <span class=\"string\">&#x27;latest_query_day&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;loans_latest_day&#x27;</span></span><br><span class=\"line\">       ]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">5</span>, <span class=\"number\">3</span>, figsize=(<span class=\"number\">20</span>, <span class=\"number\">20</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,name <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(name_list_1):     </span><br><span class=\"line\">    sns.countplot(data=df, x=name, hue=<span class=\"string\">&#x27;status&#x27;</span>,  ax=ax[i // <span class=\"number\">3</span>][i % <span class=\"number\">3</span>])</span><br><span class=\"line\">    </span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_1.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_1.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">5</span>, <span class=\"number\">3</span>, figsize=(<span class=\"number\">20</span>, <span class=\"number\">20</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,name <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(name_list_2):     </span><br><span class=\"line\">    sns.countplot(data=df, x=name, hue=<span class=\"string\">&#x27;status&#x27;</span>,  ax=ax[i // <span class=\"number\">3</span>][i % <span class=\"number\">3</span>])</span><br><span class=\"line\">    </span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_2.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_2.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">5</span>, <span class=\"number\">3</span>, figsize=(<span class=\"number\">20</span>, <span class=\"number\">20</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,name <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(name_list_3):     </span><br><span class=\"line\">    sns.countplot(data=df, x=name, hue=<span class=\"string\">&#x27;status&#x27;</span>,  ax=ax[i // <span class=\"number\">3</span>][i % <span class=\"number\">3</span>])</span><br><span class=\"line\">    </span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_3.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_3.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">5</span>, <span class=\"number\">3</span>, figsize=(<span class=\"number\">20</span>, <span class=\"number\">20</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,name <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(name_list_4):     </span><br><span class=\"line\">    sns.countplot(data=df, x=name, hue=<span class=\"string\">&#x27;status&#x27;</span>,  ax=ax[i // <span class=\"number\">3</span>][i % <span class=\"number\">3</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_4.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_4.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">5</span>, <span class=\"number\">3</span>, figsize=(<span class=\"number\">20</span>, <span class=\"number\">20</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,name <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(name_list_5):     </span><br><span class=\"line\">    sns.countplot(data=df, x=name, hue=<span class=\"string\">&#x27;status&#x27;</span>,  ax=ax[i // <span class=\"number\">3</span>][i % <span class=\"number\">3</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_5.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_5.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">3</span>, <span class=\"number\">3</span>, figsize=(<span class=\"number\">20</span>, <span class=\"number\">20</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,name <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(name_list_6):     </span><br><span class=\"line\">    sns.countplot(data=df, x=name, hue=<span class=\"string\">&#x27;status&#x27;</span>,  ax=ax[i // <span class=\"number\">3</span>][i % <span class=\"number\">3</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_6.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_6.png\"\n                      alt=\"\"\n                ></p>\n<p>从以上分布图可以看出，连续型数据的特征基本上符合正态分布，指数分布或者泊松分布等，但在[‘rank_trad_1_month’,’trans_top_time_last_1_month’,’trans_top_time_last_6_month’,’consume_top_time_last_1_month’,’consume_top_time_last_6_month’,’loans_credit_limit’,’loans_credibility_limit’,’loans_max_limit’,’consfin_credibility’]这几个特征上出现数据于最左最右位置会出现骤升。从业务层面考虑，暂时未得出满意结论，待确认特征取数逻辑后再分析。<br>  还有，’avg_price_last_12_month’,’consfin_credit_limit’这两个特征虽然是连续型特征，但由图上看，出现标签分段，考虑继续探索，查看是否存在分段。</p>\n<p>  另外几个离散型特征，如’reg_preference_for_trad’,’regional_mobility’等，在标签status上区别明显，感觉是对模型有用的特征。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sns.boxplot(y = <span class=\"string\">&#x27;consfin_credit_limit&#x27;</span>,x = <span class=\"string\">&#x27;status&#x27;</span>,data = df)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_7.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_7.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sns.boxplot(y = <span class=\"string\">&#x27;avg_price_last_12_month&#x27;</span>,x = <span class=\"string\">&#x27;status&#x27;</span>,data = df)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_8.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_8.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sns.boxplot(y = <span class=\"string\">&#x27;rank_trad_1_month&#x27;</span>,x = <span class=\"string\">&#x27;status&#x27;</span>,data = df)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_9.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_9.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"数据预处理\"><a href=\"#数据预处理\" class=\"headerlink\" title=\"数据预处理\"></a>数据预处理</h2><h3 id=\"为什么需要处理缺失值？\"><a href=\"#为什么需要处理缺失值？\" class=\"headerlink\" title=\"为什么需要处理缺失值？\"></a>为什么需要处理缺失值？</h3><p>不同缺失值的处理方式在一定程度上影响了特征提取、建模和模型训练缺失值太多，可以尝试着直接删除，如果不删除，处理不好，可能会引来噪声缺失值较少，少于某一缺失率时，直接删除又会带来信息的损失，此时可以采取适当的填充方式。</p>\n<h3 id=\"缺失率大于多少时应当抛弃该特征？\"><a href=\"#缺失率大于多少时应当抛弃该特征？\" class=\"headerlink\" title=\"缺失率大于多少时应当抛弃该特征？\"></a>缺失率大于多少时应当抛弃该特征？</h3><p>一般为70%,但是还要分析该特征与训练目标的重要程度</p>\n<h3 id=\"缺失值填充有哪些方法？\"><a href=\"#缺失值填充有哪些方法？\" class=\"headerlink\" title=\"缺失值填充有哪些方法？\"></a>缺失值填充有哪些方法？</h3><h4 id=\"插值填充\"><a href=\"#插值填充\" class=\"headerlink\" title=\"插值填充\"></a>插值填充</h4><ul>\n<li>特殊值</li>\n<li>均值、加权均值（缺点：降低数据的方差，即随机性）</li>\n<li>中位数</li>\n<li>众数（多用在类别变数）</li>\n<li>…</li>\n</ul>\n<h4 id=\"插补法\"><a href=\"#插补法\" class=\"headerlink\" title=\"插补法\"></a>插补法</h4><ul>\n<li>随机插补法：从总体中随机抽取某个样本代替缺失样本</li>\n<li>多重插补法：通过变量之间的关系对缺失数据进行预测，利用蒙特卡洛方法生成多个完整的数据集，在对这些数据集进行分析，最后对分析结果进行汇总处理</li>\n<li>热平台插补：指在非缺失数据集中找到一个与缺失值所在样本相似的样本（匹配样本），利用其中的观测值对缺失值进行插补</li>\n<li>拉格朗日差值法</li>\n<li>牛顿插值法</li>\n</ul>\n<blockquote>\n<p>列的维度上，如果是连续性，就使用平均值插补，如果是离散性，就使用众数来插补; 行的维度上，引入预测模型，可考虑辅助回归，通过变量间的关系来预测缺失数据    </p>\n</blockquote>\n<h4 id=\"丢弃\"><a href=\"#丢弃\" class=\"headerlink\" title=\"丢弃\"></a>丢弃</h4><p>如果行和列的缺失达到一定的比例，建议放弃整行或整列数据</p>\n<h4 id=\"模型法\"><a href=\"#模型法\" class=\"headerlink\" title=\"模型法\"></a>模型法</h4><p>更多时候我们会基于已有的其他字段，将缺失字段作为目标变量进行预测，从而得到最为可能的补全值。如果带有缺失值的列是数值变量，采用回归模型补全；如果是分类变量，则采用分类模型补全</p>\n<h4 id=\"专家补全\"><a href=\"#专家补全\" class=\"headerlink\" title=\"专家补全\"></a>专家补全</h4><p>对于少量且具有重要意义的数据记录，专家补足也是非常重要的一种途径</p>\n<h4 id=\"不处理\"><a href=\"#不处理\" class=\"headerlink\" title=\"不处理\"></a>不处理</h4><ul>\n<li>当缺失值对模型的影响不大时，直接在包含空值的数据上进行数据挖掘</li>\n<li>很多模型对于缺失值有容忍度或灵活的处理方法，因此在预处理阶段可以不做处理</li>\n<li>树模型对于缺失值的敏感度较低，大部分时候可以在数据有缺失时使用</li>\n<li>涉及到距离度量(distance measurement)时，如计算两个点之间的距离，缺失数据就变得比较重要。因为涉及到“距离”这个概念，那么缺失值处理不当就会导致效果很差，如K近邻算法(KNN)和支持向量机(SVM)</li>\n<li>线性模型的代价函数(loss function)往往涉及到距离(distance)的计算，计算预测值和真实值之间的差别，这容易导致对缺失值敏感</li>\n<li>神经网络的鲁棒性强，对于缺失数据不是非常敏感，但一般没有那么多数据可供使用。</li>\n<li>贝叶斯模型对于缺失数据也比较稳定，数据量很小的时候首推贝叶斯模型。</li>\n</ul>\n<h3 id=\"时间序列\"><a href=\"#时间序列\" class=\"headerlink\" title=\"时间序列\"></a>时间序列</h3><p>依情况处理，主要看单独时间字段或时间字段与某些字段的组合属性对目标分析的作用程度，再采取相应方式来进行特征提取比如：可以将时间字段与其他字段属性进行组合，分析每天、每周、每月或特点星期几等情况下特征数据频率信息，总的来说还是得看分析得目标</p>\n<p>通常看到的情况是，除了考虑时间序列这个单独的特征外，往往是将时间序列和具有时间属性的特征联合起来分析，查看组合特征的对所需要分析的内容的影响</p>\n<h3 id=\"异常值和离群值\"><a href=\"#异常值和离群值\" class=\"headerlink\" title=\"异常值和离群值\"></a>异常值和离群值</h3><p>大多数的参数统计数值如均值、标准差、相关系数等，以及基于这些参数的统计分析均对离群值高度敏感。因此离群值的存在会对数据分析造成极大影响</p>\n<h4 id=\"判断\"><a href=\"#判断\" class=\"headerlink\" title=\"判断\"></a>判断</h4><ul>\n<li>用分位数搞定，看跟平均值的偏差超过几倍标准差</li>\n<li>LOF算法</li>\n<li>describe的时候加一个箱型图</li>\n</ul>\n<h4 id=\"处理\"><a href=\"#处理\" class=\"headerlink\" title=\"处理\"></a>处理</h4><ul>\n<li>对数转换</li>\n<li>缩尾</li>\n<li>截尾</li>\n<li>插值</li>\n</ul>\n<h3 id=\"无用特征删除\"><a href=\"#无用特征删除\" class=\"headerlink\" title=\"无用特征删除\"></a>无用特征删除</h3><p>将所有object格式的改为数值格式，其中有部分无用特征则可直接删除</p>\n<p>由上可看出需处理包含：[‘trade_no’, ‘bank_card_no’, ‘reg_preference_for_trad’, ‘source’, ‘id_name’, ‘latest_query_time’, ‘loans_latest_time’]</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df[<span class=\"string\">&#x27;source&#x27;</span>].value_counts(dropna = <span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>xs    4754\nName: source, dtype: int64\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">to_drop = [<span class=\"string\">&#x27;trade_no&#x27;</span>, <span class=\"string\">&#x27;bank_card_no&#x27;</span>, <span class=\"string\">&#x27;student_feature&#x27;</span>,<span class=\"string\">&#x27;cross_consume_count_last_1_month&#x27;</span>, <span class=\"string\">&#x27;id_name&#x27;</span>, <span class=\"string\">&#x27;source&#x27;</span>]</span><br><span class=\"line\">df = df.drop(to_drop, axis=<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"缺失填充\"><a href=\"#缺失填充\" class=\"headerlink\" title=\"缺失填充\"></a>缺失填充</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>].value_counts(dropna = <span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>一线城市    3403\n三线城市    1064\n境外       150\n二线城市     131\n其他城市       4\nNaN        2\nName: reg_preference_for_trad, dtype: int64\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>].fillna(<span class=\"string\">&#x27;其他城市&#x27;</span>,inplace = <span class=\"literal\">True</span>)</span><br><span class=\"line\">df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>].value_counts(dropna = <span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>一线城市    3403\n三线城市    1064\n境外       150\n二线城市     131\n其他城市       6\nName: reg_preference_for_trad, dtype: int64\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.isnull().<span class=\"built_in\">sum</span>().sort_values(ascending = <span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>latest_three_month_apply                      304\nquery_finance_count                           304\nlatest_six_month_apply                        304\nlatest_query_time                             304\nquery_sum_count                               304\nquery_cash_count                              304\nlatest_one_month_apply                        304\nquery_org_count                               304\napply_credibility                             304\napply_score                                   304\nlatest_query_day                              304\nlatest_three_month_loan                       297\nloans_score                                   297\nloans_credibility_behavior                    297\nloans_count                                   297\nloans_settle_count                            297\nloans_overdue_count                           297\nloans_org_count_behavior                      297\nconsfin_org_count_behavior                    297\nloans_cash_count                              297\nlatest_one_month_loan                         297\nloans_latest_day                              297\nlatest_six_month_loan                         297\nloans_product_count                           297\nhistory_suc_fee                               297\nconsfin_avg_limit                             297\nconsfin_product_count                         297\nconsfin_org_count_current                     297\nconsfin_credibility                           297\nconsfin_credit_limit                          297\n                                             ... \ntrans_amount_increase_rate_lately               3\ntrans_days_interval                             2\nregional_mobility                               2\nnumber_of_trans_from_2011                       2\nmiddle_volume_percent                           2\ntransd_mcc                                      2\ntrans_activity_day                              2\ntrans_activity_month                            2\nlow_volume_percent                              2\nhistorical_trans_day                            2\nfirst_transaction_time                          2\nfirst_transaction_day                           2\nrank_trad_1_month                               2\navg_consume_less_12_valid_month                 2\ntrans_day_last_12_month                         2\ntop_trans_count_last_1_month                    2\nmax_cumulative_consume_later_1_month            0\ncustid                                          0\nstatus                                          0\ntake_amount_in_later_12_month_highest           0\npawns_auctions_trusts_consume_last_6_month      0\npawns_auctions_trusts_consume_last_1_month      0\nreg_preference_for_trad                         0\nhistorical_trans_amount                         0\navg_price_last_12_month                         0\nabs                                             0\nrepayment_capability                            0\nis_high_user                                    0\ntrans_amount_3_month                            0\nUnnamed: 0                                      0\nLength: 84, dtype: int64\n</code></pre><h2 id=\"特征间探索\"><a href=\"#特征间探索\" class=\"headerlink\" title=\"特征间探索\"></a>特征间探索</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">corr = df[:].corr()</span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">15</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\">sb.heatmap(corr)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_10.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_10.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">corr</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>custid</th>\n      <th>low_volume_percent</th>\n      <th>middle_volume_percent</th>\n      <th>take_amount_in_later_12_month_highest</th>\n      <th>trans_amount_increase_rate_lately</th>\n      <th>trans_activity_month</th>\n      <th>trans_activity_day</th>\n      <th>transd_mcc</th>\n      <th>trans_days_interval_filter</th>\n      <th>...</th>\n      <th>loans_max_limit</th>\n      <th>loans_avg_limit</th>\n      <th>consfin_credit_limit</th>\n      <th>consfin_credibility</th>\n      <th>consfin_org_count_current</th>\n      <th>consfin_product_count</th>\n      <th>consfin_max_limit</th>\n      <th>consfin_avg_limit</th>\n      <th>latest_query_day</th>\n      <th>loans_latest_day</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Unnamed: 0</th>\n      <td>1.000000</td>\n      <td>-0.007628</td>\n      <td>0.002861</td>\n      <td>-0.022844</td>\n      <td>-0.019728</td>\n      <td>0.014076</td>\n      <td>-0.021715</td>\n      <td>-0.001027</td>\n      <td>-0.006975</td>\n      <td>-0.021338</td>\n      <td>...</td>\n      <td>0.012189</td>\n      <td>-0.004457</td>\n      <td>0.005967</td>\n      <td>0.007746</td>\n      <td>0.012062</td>\n      <td>0.009583</td>\n      <td>0.004020</td>\n      <td>0.008860</td>\n      <td>0.020774</td>\n      <td>0.026387</td>\n    </tr>\n    <tr>\n      <th>custid</th>\n      <td>-0.007628</td>\n      <td>1.000000</td>\n      <td>0.031430</td>\n      <td>0.090599</td>\n      <td>-0.030282</td>\n      <td>-0.001299</td>\n      <td>-0.118811</td>\n      <td>-0.216062</td>\n      <td>-0.147485</td>\n      <td>0.144513</td>\n      <td>...</td>\n      <td>-0.236185</td>\n      <td>-0.152017</td>\n      <td>-0.093180</td>\n      <td>-0.041979</td>\n      <td>-0.129297</td>\n      <td>-0.139197</td>\n      <td>-0.115324</td>\n      <td>-0.076767</td>\n      <td>0.099208</td>\n      <td>0.098628</td>\n    </tr>\n    <tr>\n      <th>low_volume_percent</th>\n      <td>0.002861</td>\n      <td>0.031430</td>\n      <td>1.000000</td>\n      <td>-0.151504</td>\n      <td>-0.066047</td>\n      <td>0.005331</td>\n      <td>0.023895</td>\n      <td>-0.093754</td>\n      <td>-0.095780</td>\n      <td>0.054680</td>\n      <td>...</td>\n      <td>-0.140173</td>\n      <td>-0.128145</td>\n      <td>-0.083987</td>\n      <td>-0.032534</td>\n      <td>-0.074851</td>\n      <td>-0.067226</td>\n      <td>-0.096647</td>\n      <td>-0.094627</td>\n      <td>0.069301</td>\n      <td>0.047500</td>\n    </tr>\n    <tr>\n      <th>middle_volume_percent</th>\n      <td>-0.022844</td>\n      <td>0.090599</td>\n      <td>-0.151504</td>\n      <td>1.000000</td>\n      <td>-0.135050</td>\n      <td>0.001608</td>\n      <td>-0.031743</td>\n      <td>-0.055491</td>\n      <td>-0.094736</td>\n      <td>0.010146</td>\n      <td>...</td>\n      <td>-0.145599</td>\n      <td>-0.110230</td>\n      <td>-0.153241</td>\n      <td>0.003266</td>\n      <td>-0.007761</td>\n      <td>-0.014847</td>\n      <td>-0.169575</td>\n      <td>-0.174126</td>\n      <td>-0.001628</td>\n      <td>-0.003253</td>\n    </tr>\n    <tr>\n      <th>take_amount_in_later_12_month_highest</th>\n      <td>-0.019728</td>\n      <td>-0.030282</td>\n      <td>-0.066047</td>\n      <td>-0.135050</td>\n      <td>1.000000</td>\n      <td>-0.006699</td>\n      <td>0.060997</td>\n      <td>0.112582</td>\n      <td>0.181435</td>\n      <td>-0.055318</td>\n      <td>...</td>\n      <td>0.071798</td>\n      <td>0.038880</td>\n      <td>0.039328</td>\n      <td>0.015841</td>\n      <td>0.021387</td>\n      <td>0.021337</td>\n      <td>0.054433</td>\n      <td>0.040634</td>\n      <td>-0.000570</td>\n      <td>-0.010231</td>\n    </tr>\n    <tr>\n      <th>trans_amount_increase_rate_lately</th>\n      <td>0.014076</td>\n      <td>-0.001299</td>\n      <td>0.005331</td>\n      <td>0.001608</td>\n      <td>-0.006699</td>\n      <td>1.000000</td>\n      <td>0.015389</td>\n      <td>-0.003061</td>\n      <td>-0.011644</td>\n      <td>0.013220</td>\n      <td>...</td>\n      <td>0.007119</td>\n      <td>0.000119</td>\n      <td>0.028868</td>\n      <td>0.006174</td>\n      <td>-0.019901</td>\n      <td>-0.019603</td>\n      <td>0.007123</td>\n      <td>0.040865</td>\n      <td>-0.001457</td>\n      <td>0.027221</td>\n    </tr>\n    <tr>\n      <th>trans_activity_month</th>\n      <td>-0.021715</td>\n      <td>-0.118811</td>\n      <td>0.023895</td>\n      <td>-0.031743</td>\n      <td>0.060997</td>\n      <td>0.015389</td>\n      <td>1.000000</td>\n      <td>0.063373</td>\n      <td>0.069272</td>\n      <td>-0.091630</td>\n      <td>...</td>\n      <td>0.061847</td>\n      <td>0.037275</td>\n      <td>-0.036822</td>\n      <td>-0.000400</td>\n      <td>0.003332</td>\n      <td>0.005534</td>\n      <td>-0.022388</td>\n      <td>-0.043764</td>\n      <td>-0.024161</td>\n      <td>-0.014880</td>\n    </tr>\n    <tr>\n      <th>trans_activity_day</th>\n      <td>-0.001027</td>\n      <td>-0.216062</td>\n      <td>-0.093754</td>\n      <td>-0.055491</td>\n      <td>0.112582</td>\n      <td>-0.003061</td>\n      <td>0.063373</td>\n      <td>1.000000</td>\n      <td>0.674547</td>\n      <td>-0.491304</td>\n      <td>...</td>\n      <td>0.445155</td>\n      <td>0.202242</td>\n      <td>0.096622</td>\n      <td>0.181157</td>\n      <td>0.553486</td>\n      <td>0.551140</td>\n      <td>0.224509</td>\n      <td>0.085255</td>\n      <td>-0.188965</td>\n      <td>-0.299110</td>\n    </tr>\n    <tr>\n      <th>transd_mcc</th>\n      <td>-0.006975</td>\n      <td>-0.147485</td>\n      <td>-0.095780</td>\n      <td>-0.094736</td>\n      <td>0.181435</td>\n      <td>-0.011644</td>\n      <td>0.069272</td>\n      <td>0.674547</td>\n      <td>1.000000</td>\n      <td>-0.407126</td>\n      <td>...</td>\n      <td>0.313715</td>\n      <td>0.165959</td>\n      <td>0.066250</td>\n      <td>0.131905</td>\n      <td>0.371197</td>\n      <td>0.374660</td>\n      <td>0.156951</td>\n      <td>0.057663</td>\n      <td>-0.120330</td>\n      <td>-0.211593</td>\n    </tr>\n    <tr>\n      <th>trans_days_interval_filter</th>\n      <td>-0.021338</td>\n      <td>0.144513</td>\n      <td>0.054680</td>\n      <td>0.010146</td>\n      <td>-0.055318</td>\n      <td>0.013220</td>\n      <td>-0.091630</td>\n      <td>-0.491304</td>\n      <td>-0.407126</td>\n      <td>1.000000</td>\n      <td>...</td>\n      <td>-0.222970</td>\n      <td>-0.118522</td>\n      <td>-0.055205</td>\n      <td>-0.142221</td>\n      <td>-0.287044</td>\n      <td>-0.286212</td>\n      <td>-0.111345</td>\n      <td>-0.045801</td>\n      <td>0.069560</td>\n      <td>0.163433</td>\n    </tr>\n    <tr>\n      <th>trans_days_interval</th>\n      <td>-0.006297</td>\n      <td>0.200145</td>\n      <td>0.062421</td>\n      <td>-0.000383</td>\n      <td>-0.053329</td>\n      <td>0.000521</td>\n      <td>-0.151579</td>\n      <td>-0.542118</td>\n      <td>-0.447308</td>\n      <td>0.690819</td>\n      <td>...</td>\n      <td>-0.271875</td>\n      <td>-0.163049</td>\n      <td>-0.034716</td>\n      <td>-0.102588</td>\n      <td>-0.285654</td>\n      <td>-0.286510</td>\n      <td>-0.105000</td>\n      <td>-0.024740</td>\n      <td>0.102343</td>\n      <td>0.178628</td>\n    </tr>\n    <tr>\n      <th>regional_mobility</th>\n      <td>0.011694</td>\n      <td>-0.134926</td>\n      <td>-0.042939</td>\n      <td>0.009671</td>\n      <td>0.024089</td>\n      <td>-0.026960</td>\n      <td>-0.219911</td>\n      <td>0.143697</td>\n      <td>0.114936</td>\n      <td>-0.124350</td>\n      <td>...</td>\n      <td>0.099696</td>\n      <td>0.062712</td>\n      <td>0.092796</td>\n      <td>0.054084</td>\n      <td>0.147120</td>\n      <td>0.145322</td>\n      <td>0.091150</td>\n      <td>0.079245</td>\n      <td>-0.051839</td>\n      <td>-0.107139</td>\n    </tr>\n    <tr>\n      <th>student_feature</th>\n      <td>0.014227</td>\n      <td>0.026639</td>\n      <td>-0.007327</td>\n      <td>0.018852</td>\n      <td>-0.013524</td>\n      <td>-0.002682</td>\n      <td>0.004966</td>\n      <td>0.011653</td>\n      <td>0.005921</td>\n      <td>-0.005412</td>\n      <td>...</td>\n      <td>0.021982</td>\n      <td>0.007634</td>\n      <td>0.001860</td>\n      <td>0.009800</td>\n      <td>0.020368</td>\n      <td>0.017777</td>\n      <td>0.000096</td>\n      <td>0.004799</td>\n      <td>-0.020274</td>\n      <td>-0.031571</td>\n    </tr>\n    <tr>\n      <th>repayment_capability</th>\n      <td>-0.006726</td>\n      <td>-0.026254</td>\n      <td>-0.041522</td>\n      <td>-0.178436</td>\n      <td>0.055174</td>\n      <td>-0.000572</td>\n      <td>0.024737</td>\n      <td>0.189494</td>\n      <td>0.115434</td>\n      <td>-0.048998</td>\n      <td>...</td>\n      <td>0.128100</td>\n      <td>0.066266</td>\n      <td>0.052900</td>\n      <td>0.007068</td>\n      <td>0.046341</td>\n      <td>0.046471</td>\n      <td>0.063720</td>\n      <td>0.052120</td>\n      <td>-0.020964</td>\n      <td>-0.049951</td>\n    </tr>\n    <tr>\n      <th>is_high_user</th>\n      <td>-0.002995</td>\n      <td>-0.004640</td>\n      <td>0.018546</td>\n      <td>-0.029172</td>\n      <td>0.068763</td>\n      <td>-0.002017</td>\n      <td>0.044231</td>\n      <td>-0.034766</td>\n      <td>-0.080892</td>\n      <td>0.146678</td>\n      <td>...</td>\n      <td>-0.006073</td>\n      <td>0.014809</td>\n      <td>0.001286</td>\n      <td>-0.000752</td>\n      <td>-0.020497</td>\n      <td>-0.017732</td>\n      <td>0.007764</td>\n      <td>0.013155</td>\n      <td>-0.011908</td>\n      <td>-0.015299</td>\n    </tr>\n    <tr>\n      <th>number_of_trans_from_2011</th>\n      <td>0.016355</td>\n      <td>-0.276856</td>\n      <td>-0.031668</td>\n      <td>-0.084995</td>\n      <td>0.056183</td>\n      <td>-0.013609</td>\n      <td>-0.198322</td>\n      <td>0.286353</td>\n      <td>0.262917</td>\n      <td>-0.181413</td>\n      <td>...</td>\n      <td>0.195444</td>\n      <td>0.142227</td>\n      <td>0.105527</td>\n      <td>0.066191</td>\n      <td>0.212621</td>\n      <td>0.215217</td>\n      <td>0.138342</td>\n      <td>0.088776</td>\n      <td>-0.087938</td>\n      <td>-0.140635</td>\n    </tr>\n    <tr>\n      <th>historical_trans_amount</th>\n      <td>0.002346</td>\n      <td>-0.179652</td>\n      <td>-0.117333</td>\n      <td>-0.255846</td>\n      <td>0.102959</td>\n      <td>-0.002527</td>\n      <td>0.016522</td>\n      <td>0.526801</td>\n      <td>0.392433</td>\n      <td>-0.254563</td>\n      <td>...</td>\n      <td>0.324514</td>\n      <td>0.165218</td>\n      <td>0.137554</td>\n      <td>0.073505</td>\n      <td>0.288324</td>\n      <td>0.288420</td>\n      <td>0.201670</td>\n      <td>0.138920</td>\n      <td>-0.087267</td>\n      <td>-0.156048</td>\n    </tr>\n    <tr>\n      <th>historical_trans_day</th>\n      <td>0.004245</td>\n      <td>-0.345875</td>\n      <td>-0.068345</td>\n      <td>-0.116128</td>\n      <td>0.112908</td>\n      <td>-0.006987</td>\n      <td>0.052108</td>\n      <td>0.855832</td>\n      <td>0.603820</td>\n      <td>-0.424616</td>\n      <td>...</td>\n      <td>0.430792</td>\n      <td>0.223623</td>\n      <td>0.111262</td>\n      <td>0.142560</td>\n      <td>0.472101</td>\n      <td>0.473890</td>\n      <td>0.219427</td>\n      <td>0.097498</td>\n      <td>-0.171007</td>\n      <td>-0.267034</td>\n    </tr>\n    <tr>\n      <th>rank_trad_1_month</th>\n      <td>0.011515</td>\n      <td>0.116798</td>\n      <td>0.102996</td>\n      <td>0.139914</td>\n      <td>-0.089095</td>\n      <td>0.028153</td>\n      <td>-0.017110</td>\n      <td>-0.517923</td>\n      <td>-0.481565</td>\n      <td>0.345540</td>\n      <td>...</td>\n      <td>-0.235028</td>\n      <td>-0.121879</td>\n      <td>-0.120020</td>\n      <td>-0.133787</td>\n      <td>-0.328297</td>\n      <td>-0.327323</td>\n      <td>-0.180749</td>\n      <td>-0.115613</td>\n      <td>0.139572</td>\n      <td>0.243659</td>\n    </tr>\n    <tr>\n      <th>trans_amount_3_month</th>\n      <td>-0.003329</td>\n      <td>-0.069252</td>\n      <td>-0.063526</td>\n      <td>-0.189438</td>\n      <td>0.074279</td>\n      <td>-0.003598</td>\n      <td>0.010864</td>\n      <td>0.293735</td>\n      <td>0.250140</td>\n      <td>-0.139654</td>\n      <td>...</td>\n      <td>0.186909</td>\n      <td>0.084463</td>\n      <td>0.065007</td>\n      <td>0.033856</td>\n      <td>0.151395</td>\n      <td>0.153457</td>\n      <td>0.094556</td>\n      <td>0.063275</td>\n      <td>-0.044342</td>\n      <td>-0.099134</td>\n    </tr>\n    <tr>\n      <th>avg_consume_less_12_valid_month</th>\n      <td>-0.001742</td>\n      <td>-0.087905</td>\n      <td>-0.042251</td>\n      <td>-0.154257</td>\n      <td>0.031360</td>\n      <td>0.006201</td>\n      <td>0.014532</td>\n      <td>0.081550</td>\n      <td>0.194729</td>\n      <td>-0.017535</td>\n      <td>...</td>\n      <td>0.054239</td>\n      <td>0.010832</td>\n      <td>0.024610</td>\n      <td>0.026514</td>\n      <td>0.103333</td>\n      <td>0.101638</td>\n      <td>0.044864</td>\n      <td>0.011955</td>\n      <td>-0.069481</td>\n      <td>-0.090181</td>\n    </tr>\n    <tr>\n      <th>abs</th>\n      <td>-0.004830</td>\n      <td>-0.059940</td>\n      <td>-0.059972</td>\n      <td>-0.247023</td>\n      <td>0.081978</td>\n      <td>-0.003474</td>\n      <td>0.038276</td>\n      <td>0.306292</td>\n      <td>0.160103</td>\n      <td>-0.054408</td>\n      <td>...</td>\n      <td>0.152274</td>\n      <td>0.105389</td>\n      <td>0.072716</td>\n      <td>0.009934</td>\n      <td>0.071542</td>\n      <td>0.074592</td>\n      <td>0.102727</td>\n      <td>0.090651</td>\n      <td>-0.042772</td>\n      <td>-0.065586</td>\n    </tr>\n    <tr>\n      <th>top_trans_count_last_1_month</th>\n      <td>0.021195</td>\n      <td>0.101220</td>\n      <td>0.037765</td>\n      <td>0.059410</td>\n      <td>-0.063713</td>\n      <td>0.029701</td>\n      <td>-0.026923</td>\n      <td>-0.503568</td>\n      <td>-0.475823</td>\n      <td>0.381422</td>\n      <td>...</td>\n      <td>-0.199205</td>\n      <td>-0.082819</td>\n      <td>-0.071977</td>\n      <td>-0.138804</td>\n      <td>-0.323863</td>\n      <td>-0.324179</td>\n      <td>-0.128756</td>\n      <td>-0.058697</td>\n      <td>0.140451</td>\n      <td>0.247943</td>\n    </tr>\n    <tr>\n      <th>avg_price_last_12_month</th>\n      <td>0.011454</td>\n      <td>-0.090752</td>\n      <td>-0.286213</td>\n      <td>-0.556220</td>\n      <td>0.129908</td>\n      <td>-0.004808</td>\n      <td>-0.006858</td>\n      <td>0.068127</td>\n      <td>0.067431</td>\n      <td>-0.003254</td>\n      <td>...</td>\n      <td>0.204154</td>\n      <td>0.186553</td>\n      <td>0.183277</td>\n      <td>-0.017057</td>\n      <td>0.019580</td>\n      <td>0.017570</td>\n      <td>0.179284</td>\n      <td>0.205885</td>\n      <td>-0.033386</td>\n      <td>-0.020140</td>\n    </tr>\n    <tr>\n      <th>avg_price_top_last_12_valid_month</th>\n      <td>-0.018637</td>\n      <td>0.124158</td>\n      <td>0.509637</td>\n      <td>0.369498</td>\n      <td>-0.123202</td>\n      <td>-0.030556</td>\n      <td>0.011839</td>\n      <td>-0.138470</td>\n      <td>-0.145411</td>\n      <td>0.064464</td>\n      <td>...</td>\n      <td>-0.316923</td>\n      <td>-0.285338</td>\n      <td>-0.172475</td>\n      <td>-0.002851</td>\n      <td>-0.087684</td>\n      <td>-0.080339</td>\n      <td>-0.197348</td>\n      <td>-0.195194</td>\n      <td>0.079399</td>\n      <td>0.062422</td>\n    </tr>\n    <tr>\n      <th>trans_top_time_last_1_month</th>\n      <td>-0.007772</td>\n      <td>-0.003624</td>\n      <td>-0.023020</td>\n      <td>-0.015316</td>\n      <td>0.028547</td>\n      <td>-0.021723</td>\n      <td>0.018931</td>\n      <td>0.092705</td>\n      <td>0.143620</td>\n      <td>-0.127328</td>\n      <td>...</td>\n      <td>0.039372</td>\n      <td>0.019334</td>\n      <td>0.005990</td>\n      <td>0.060674</td>\n      <td>0.059770</td>\n      <td>0.056594</td>\n      <td>0.021747</td>\n      <td>0.000811</td>\n      <td>-0.030739</td>\n      <td>-0.069952</td>\n    </tr>\n    <tr>\n      <th>trans_top_time_last_6_month</th>\n      <td>0.012229</td>\n      <td>0.063470</td>\n      <td>0.064055</td>\n      <td>0.025356</td>\n      <td>-0.079647</td>\n      <td>0.032999</td>\n      <td>-0.016856</td>\n      <td>-0.519642</td>\n      <td>-0.400228</td>\n      <td>0.541678</td>\n      <td>...</td>\n      <td>-0.227717</td>\n      <td>-0.111353</td>\n      <td>-0.055343</td>\n      <td>-0.151634</td>\n      <td>-0.336984</td>\n      <td>-0.334724</td>\n      <td>-0.106172</td>\n      <td>-0.042912</td>\n      <td>0.088539</td>\n      <td>0.199473</td>\n    </tr>\n    <tr>\n      <th>consume_top_time_last_1_month</th>\n      <td>-0.012425</td>\n      <td>-0.013828</td>\n      <td>-0.030325</td>\n      <td>-0.024816</td>\n      <td>0.022475</td>\n      <td>-0.020937</td>\n      <td>0.021517</td>\n      <td>0.126348</td>\n      <td>0.162267</td>\n      <td>-0.155562</td>\n      <td>...</td>\n      <td>0.053634</td>\n      <td>0.023311</td>\n      <td>0.018442</td>\n      <td>0.073859</td>\n      <td>0.083782</td>\n      <td>0.080835</td>\n      <td>0.038965</td>\n      <td>0.012452</td>\n      <td>-0.044495</td>\n      <td>-0.078152</td>\n    </tr>\n    <tr>\n      <th>consume_top_time_last_6_month</th>\n      <td>0.010297</td>\n      <td>0.071615</td>\n      <td>0.026853</td>\n      <td>0.033989</td>\n      <td>-0.062038</td>\n      <td>0.032106</td>\n      <td>-0.009154</td>\n      <td>-0.506739</td>\n      <td>-0.371122</td>\n      <td>0.489491</td>\n      <td>...</td>\n      <td>-0.228478</td>\n      <td>-0.109085</td>\n      <td>-0.055605</td>\n      <td>-0.128403</td>\n      <td>-0.331808</td>\n      <td>-0.329305</td>\n      <td>-0.105383</td>\n      <td>-0.042412</td>\n      <td>0.083349</td>\n      <td>0.194636</td>\n    </tr>\n    <tr>\n      <th>cross_consume_count_last_1_month</th>\n      <td>-0.019612</td>\n      <td>-0.015749</td>\n      <td>0.056716</td>\n      <td>-0.076003</td>\n      <td>0.042310</td>\n      <td>-0.004524</td>\n      <td>-0.001588</td>\n      <td>0.217779</td>\n      <td>0.236684</td>\n      <td>-0.098826</td>\n      <td>...</td>\n      <td>0.101269</td>\n      <td>0.038369</td>\n      <td>0.032169</td>\n      <td>0.024935</td>\n      <td>0.129515</td>\n      <td>0.131031</td>\n      <td>0.041163</td>\n      <td>0.025667</td>\n      <td>-0.026850</td>\n      <td>-0.081532</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>loans_score</th>\n      <td>-0.014716</td>\n      <td>-0.006276</td>\n      <td>-0.007019</td>\n      <td>-0.039519</td>\n      <td>-0.003928</td>\n      <td>0.010481</td>\n      <td>-0.020418</td>\n      <td>-0.211471</td>\n      <td>-0.141698</td>\n      <td>0.105373</td>\n      <td>...</td>\n      <td>-0.145502</td>\n      <td>-0.071344</td>\n      <td>0.076157</td>\n      <td>-0.043698</td>\n      <td>-0.242594</td>\n      <td>-0.249384</td>\n      <td>-0.004854</td>\n      <td>0.085289</td>\n      <td>0.035587</td>\n      <td>-0.019444</td>\n    </tr>\n    <tr>\n      <th>loans_credibility_behavior</th>\n      <td>-0.000191</td>\n      <td>-0.023587</td>\n      <td>0.037414</td>\n      <td>-0.031636</td>\n      <td>-0.017790</td>\n      <td>-0.003788</td>\n      <td>0.002694</td>\n      <td>-0.059242</td>\n      <td>-0.028579</td>\n      <td>0.016791</td>\n      <td>...</td>\n      <td>-0.109592</td>\n      <td>-0.059538</td>\n      <td>0.113228</td>\n      <td>0.202241</td>\n      <td>0.132995</td>\n      <td>0.141105</td>\n      <td>0.112848</td>\n      <td>0.110999</td>\n      <td>0.014235</td>\n      <td>-0.034587</td>\n    </tr>\n    <tr>\n      <th>loans_count</th>\n      <td>0.008971</td>\n      <td>-0.104423</td>\n      <td>-0.103643</td>\n      <td>0.093372</td>\n      <td>0.034853</td>\n      <td>-0.011057</td>\n      <td>0.010844</td>\n      <td>0.713700</td>\n      <td>0.433028</td>\n      <td>-0.340780</td>\n      <td>...</td>\n      <td>0.454809</td>\n      <td>0.167113</td>\n      <td>0.097746</td>\n      <td>0.189068</td>\n      <td>0.669975</td>\n      <td>0.658099</td>\n      <td>0.240708</td>\n      <td>0.067635</td>\n      <td>-0.194495</td>\n      <td>-0.388366</td>\n    </tr>\n    <tr>\n      <th>loans_settle_count</th>\n      <td>0.008509</td>\n      <td>-0.106395</td>\n      <td>-0.115451</td>\n      <td>0.084747</td>\n      <td>0.044691</td>\n      <td>-0.011398</td>\n      <td>0.006203</td>\n      <td>0.723008</td>\n      <td>0.440667</td>\n      <td>-0.346732</td>\n      <td>...</td>\n      <td>0.466131</td>\n      <td>0.175771</td>\n      <td>0.109141</td>\n      <td>0.183622</td>\n      <td>0.633814</td>\n      <td>0.618343</td>\n      <td>0.239062</td>\n      <td>0.079620</td>\n      <td>-0.198341</td>\n      <td>-0.374859</td>\n    </tr>\n    <tr>\n      <th>loans_overdue_count</th>\n      <td>-0.002123</td>\n      <td>-0.047870</td>\n      <td>0.003258</td>\n      <td>0.055341</td>\n      <td>-0.018406</td>\n      <td>-0.009483</td>\n      <td>0.026175</td>\n      <td>0.319103</td>\n      <td>0.193574</td>\n      <td>-0.145065</td>\n      <td>...</td>\n      <td>0.189896</td>\n      <td>0.071337</td>\n      <td>0.001805</td>\n      <td>0.089767</td>\n      <td>0.389047</td>\n      <td>0.396295</td>\n      <td>0.109103</td>\n      <td>-0.020359</td>\n      <td>-0.069116</td>\n      <td>-0.166293</td>\n    </tr>\n    <tr>\n      <th>loans_org_count_behavior</th>\n      <td>0.002662</td>\n      <td>-0.107997</td>\n      <td>-0.113256</td>\n      <td>0.086219</td>\n      <td>0.020780</td>\n      <td>-0.012629</td>\n      <td>0.014655</td>\n      <td>0.698811</td>\n      <td>0.451913</td>\n      <td>-0.330187</td>\n      <td>...</td>\n      <td>0.462677</td>\n      <td>0.133557</td>\n      <td>0.065915</td>\n      <td>0.231726</td>\n      <td>0.799828</td>\n      <td>0.784147</td>\n      <td>0.257087</td>\n      <td>0.038651</td>\n      <td>-0.216354</td>\n      <td>-0.402870</td>\n    </tr>\n    <tr>\n      <th>consfin_org_count_behavior</th>\n      <td>0.012062</td>\n      <td>-0.129297</td>\n      <td>-0.074851</td>\n      <td>-0.007761</td>\n      <td>0.021387</td>\n      <td>-0.019901</td>\n      <td>0.003332</td>\n      <td>0.553486</td>\n      <td>0.371197</td>\n      <td>-0.287044</td>\n      <td>...</td>\n      <td>0.357549</td>\n      <td>0.137506</td>\n      <td>0.102057</td>\n      <td>0.297390</td>\n      <td>1.000000</td>\n      <td>0.988027</td>\n      <td>0.345697</td>\n      <td>0.074170</td>\n      <td>-0.185038</td>\n      <td>-0.399885</td>\n    </tr>\n    <tr>\n      <th>loans_cash_count</th>\n      <td>-0.002987</td>\n      <td>-0.078110</td>\n      <td>-0.115566</td>\n      <td>0.123857</td>\n      <td>0.016962</td>\n      <td>-0.006482</td>\n      <td>0.018475</td>\n      <td>0.662281</td>\n      <td>0.420938</td>\n      <td>-0.298750</td>\n      <td>...</td>\n      <td>0.443326</td>\n      <td>0.108990</td>\n      <td>0.034866</td>\n      <td>0.156549</td>\n      <td>0.555002</td>\n      <td>0.539896</td>\n      <td>0.164961</td>\n      <td>0.012515</td>\n      <td>-0.197164</td>\n      <td>-0.337008</td>\n    </tr>\n    <tr>\n      <th>latest_one_month_loan</th>\n      <td>-0.001009</td>\n      <td>-0.082016</td>\n      <td>-0.034938</td>\n      <td>-0.017258</td>\n      <td>0.008845</td>\n      <td>-0.010482</td>\n      <td>0.010030</td>\n      <td>0.251331</td>\n      <td>0.152255</td>\n      <td>-0.109048</td>\n      <td>...</td>\n      <td>0.216387</td>\n      <td>0.078718</td>\n      <td>0.057899</td>\n      <td>0.087776</td>\n      <td>0.328566</td>\n      <td>0.334659</td>\n      <td>0.136317</td>\n      <td>0.039233</td>\n      <td>-0.167327</td>\n      <td>-0.564125</td>\n    </tr>\n    <tr>\n      <th>latest_three_month_loan</th>\n      <td>0.009841</td>\n      <td>-0.102432</td>\n      <td>-0.041141</td>\n      <td>-0.007416</td>\n      <td>0.009611</td>\n      <td>-0.012746</td>\n      <td>0.024060</td>\n      <td>0.277217</td>\n      <td>0.180567</td>\n      <td>-0.132316</td>\n      <td>...</td>\n      <td>0.235019</td>\n      <td>0.083134</td>\n      <td>0.055062</td>\n      <td>0.099953</td>\n      <td>0.410173</td>\n      <td>0.415173</td>\n      <td>0.158521</td>\n      <td>0.038337</td>\n      <td>-0.172112</td>\n      <td>-0.556912</td>\n    </tr>\n    <tr>\n      <th>latest_six_month_loan</th>\n      <td>0.013859</td>\n      <td>-0.084090</td>\n      <td>-0.080426</td>\n      <td>0.080167</td>\n      <td>0.034499</td>\n      <td>-0.007440</td>\n      <td>0.023376</td>\n      <td>0.618386</td>\n      <td>0.381795</td>\n      <td>-0.294128</td>\n      <td>...</td>\n      <td>0.395462</td>\n      <td>0.110447</td>\n      <td>0.067585</td>\n      <td>0.169560</td>\n      <td>0.653119</td>\n      <td>0.646769</td>\n      <td>0.214958</td>\n      <td>0.040151</td>\n      <td>-0.201667</td>\n      <td>-0.457269</td>\n    </tr>\n    <tr>\n      <th>history_suc_fee</th>\n      <td>0.005751</td>\n      <td>-0.154554</td>\n      <td>-0.068576</td>\n      <td>0.038832</td>\n      <td>0.036804</td>\n      <td>-0.013452</td>\n      <td>0.008331</td>\n      <td>0.707752</td>\n      <td>0.432147</td>\n      <td>-0.361614</td>\n      <td>...</td>\n      <td>0.439947</td>\n      <td>0.158091</td>\n      <td>0.129951</td>\n      <td>0.194162</td>\n      <td>0.682134</td>\n      <td>0.674063</td>\n      <td>0.258122</td>\n      <td>0.092018</td>\n      <td>-0.197019</td>\n      <td>-0.392292</td>\n    </tr>\n    <tr>\n      <th>history_fail_fee</th>\n      <td>0.005633</td>\n      <td>-0.039117</td>\n      <td>0.009093</td>\n      <td>0.055486</td>\n      <td>-0.019751</td>\n      <td>-0.006480</td>\n      <td>0.033715</td>\n      <td>0.269878</td>\n      <td>0.148111</td>\n      <td>-0.115664</td>\n      <td>...</td>\n      <td>0.164983</td>\n      <td>0.047106</td>\n      <td>0.008807</td>\n      <td>0.098387</td>\n      <td>0.399674</td>\n      <td>0.411005</td>\n      <td>0.130966</td>\n      <td>-0.011496</td>\n      <td>-0.060527</td>\n      <td>-0.199490</td>\n    </tr>\n    <tr>\n      <th>latest_one_month_suc</th>\n      <td>0.000168</td>\n      <td>-0.078523</td>\n      <td>-0.025131</td>\n      <td>-0.022327</td>\n      <td>0.022699</td>\n      <td>-0.009579</td>\n      <td>0.009873</td>\n      <td>0.228821</td>\n      <td>0.146654</td>\n      <td>-0.111359</td>\n      <td>...</td>\n      <td>0.194397</td>\n      <td>0.056937</td>\n      <td>0.023565</td>\n      <td>0.092642</td>\n      <td>0.349219</td>\n      <td>0.360903</td>\n      <td>0.119473</td>\n      <td>0.014118</td>\n      <td>-0.167496</td>\n      <td>-0.459412</td>\n    </tr>\n    <tr>\n      <th>latest_one_month_fail</th>\n      <td>0.013939</td>\n      <td>-0.041356</td>\n      <td>0.021126</td>\n      <td>-0.018844</td>\n      <td>-0.004671</td>\n      <td>-0.005436</td>\n      <td>0.017951</td>\n      <td>0.133230</td>\n      <td>0.080658</td>\n      <td>-0.053043</td>\n      <td>...</td>\n      <td>0.104707</td>\n      <td>0.041028</td>\n      <td>-0.000725</td>\n      <td>0.053177</td>\n      <td>0.228943</td>\n      <td>0.244784</td>\n      <td>0.078403</td>\n      <td>-0.011238</td>\n      <td>-0.051815</td>\n      <td>-0.232811</td>\n    </tr>\n    <tr>\n      <th>loans_long_time</th>\n      <td>0.000992</td>\n      <td>-0.216323</td>\n      <td>-0.074834</td>\n      <td>0.040822</td>\n      <td>0.012660</td>\n      <td>-0.002678</td>\n      <td>0.030914</td>\n      <td>0.384281</td>\n      <td>0.301560</td>\n      <td>-0.317888</td>\n      <td>...</td>\n      <td>0.368329</td>\n      <td>0.268476</td>\n      <td>0.144168</td>\n      <td>0.229963</td>\n      <td>0.345921</td>\n      <td>0.337877</td>\n      <td>0.198060</td>\n      <td>0.134422</td>\n      <td>-0.134214</td>\n      <td>-0.214274</td>\n    </tr>\n    <tr>\n      <th>loans_credit_limit</th>\n      <td>-0.006194</td>\n      <td>-0.160582</td>\n      <td>-0.138446</td>\n      <td>-0.086706</td>\n      <td>0.050185</td>\n      <td>0.013118</td>\n      <td>0.036172</td>\n      <td>0.229054</td>\n      <td>0.177929</td>\n      <td>-0.146462</td>\n      <td>...</td>\n      <td>0.745694</td>\n      <td>0.901755</td>\n      <td>0.085200</td>\n      <td>0.057358</td>\n      <td>0.151520</td>\n      <td>0.152471</td>\n      <td>0.123290</td>\n      <td>0.087213</td>\n      <td>-0.111170</td>\n      <td>-0.157736</td>\n    </tr>\n    <tr>\n      <th>loans_credibility_limit</th>\n      <td>-0.033850</td>\n      <td>-0.000850</td>\n      <td>-0.051545</td>\n      <td>0.090824</td>\n      <td>-0.025575</td>\n      <td>0.003868</td>\n      <td>-0.005513</td>\n      <td>0.161363</td>\n      <td>0.154721</td>\n      <td>-0.083218</td>\n      <td>...</td>\n      <td>0.328845</td>\n      <td>0.456704</td>\n      <td>-0.022646</td>\n      <td>-0.029875</td>\n      <td>0.115503</td>\n      <td>0.114720</td>\n      <td>0.021164</td>\n      <td>-0.036374</td>\n      <td>-0.127687</td>\n      <td>-0.138313</td>\n    </tr>\n    <tr>\n      <th>loans_org_count_current</th>\n      <td>-0.002987</td>\n      <td>-0.078110</td>\n      <td>-0.115566</td>\n      <td>0.123857</td>\n      <td>0.016962</td>\n      <td>-0.006482</td>\n      <td>0.018475</td>\n      <td>0.662281</td>\n      <td>0.420938</td>\n      <td>-0.298750</td>\n      <td>...</td>\n      <td>0.443326</td>\n      <td>0.108990</td>\n      <td>0.034866</td>\n      <td>0.156549</td>\n      <td>0.555002</td>\n      <td>0.539896</td>\n      <td>0.164961</td>\n      <td>0.012515</td>\n      <td>-0.197164</td>\n      <td>-0.337008</td>\n    </tr>\n    <tr>\n      <th>loans_product_count</th>\n      <td>-0.001941</td>\n      <td>-0.072159</td>\n      <td>-0.114296</td>\n      <td>0.122741</td>\n      <td>0.018572</td>\n      <td>-0.007575</td>\n      <td>0.019401</td>\n      <td>0.656939</td>\n      <td>0.416980</td>\n      <td>-0.295409</td>\n      <td>...</td>\n      <td>0.441316</td>\n      <td>0.108962</td>\n      <td>0.031936</td>\n      <td>0.155744</td>\n      <td>0.553607</td>\n      <td>0.539424</td>\n      <td>0.163650</td>\n      <td>0.009397</td>\n      <td>-0.199549</td>\n      <td>-0.348389</td>\n    </tr>\n    <tr>\n      <th>loans_max_limit</th>\n      <td>0.012189</td>\n      <td>-0.236185</td>\n      <td>-0.140173</td>\n      <td>-0.145599</td>\n      <td>0.071798</td>\n      <td>0.007119</td>\n      <td>0.061847</td>\n      <td>0.445155</td>\n      <td>0.313715</td>\n      <td>-0.222970</td>\n      <td>...</td>\n      <td>1.000000</td>\n      <td>0.716175</td>\n      <td>0.108760</td>\n      <td>0.101659</td>\n      <td>0.357549</td>\n      <td>0.354231</td>\n      <td>0.208389</td>\n      <td>0.109425</td>\n      <td>-0.190074</td>\n      <td>-0.282204</td>\n    </tr>\n    <tr>\n      <th>loans_avg_limit</th>\n      <td>-0.004457</td>\n      <td>-0.152017</td>\n      <td>-0.128145</td>\n      <td>-0.110230</td>\n      <td>0.038880</td>\n      <td>0.000119</td>\n      <td>0.037275</td>\n      <td>0.202242</td>\n      <td>0.165959</td>\n      <td>-0.118522</td>\n      <td>...</td>\n      <td>0.716175</td>\n      <td>1.000000</td>\n      <td>0.091117</td>\n      <td>0.031452</td>\n      <td>0.137506</td>\n      <td>0.137271</td>\n      <td>0.130307</td>\n      <td>0.098641</td>\n      <td>-0.099086</td>\n      <td>-0.144835</td>\n    </tr>\n    <tr>\n      <th>consfin_credit_limit</th>\n      <td>0.005967</td>\n      <td>-0.093180</td>\n      <td>-0.083987</td>\n      <td>-0.153241</td>\n      <td>0.039328</td>\n      <td>0.028868</td>\n      <td>-0.036822</td>\n      <td>0.096622</td>\n      <td>0.066250</td>\n      <td>-0.055205</td>\n      <td>...</td>\n      <td>0.108760</td>\n      <td>0.091117</td>\n      <td>1.000000</td>\n      <td>0.241837</td>\n      <td>0.102057</td>\n      <td>0.081338</td>\n      <td>0.788637</td>\n      <td>0.901470</td>\n      <td>-0.047756</td>\n      <td>-0.110230</td>\n    </tr>\n    <tr>\n      <th>consfin_credibility</th>\n      <td>0.007746</td>\n      <td>-0.041979</td>\n      <td>-0.032534</td>\n      <td>0.003266</td>\n      <td>0.015841</td>\n      <td>0.006174</td>\n      <td>-0.000400</td>\n      <td>0.181157</td>\n      <td>0.131905</td>\n      <td>-0.142221</td>\n      <td>...</td>\n      <td>0.101659</td>\n      <td>0.031452</td>\n      <td>0.241837</td>\n      <td>1.000000</td>\n      <td>0.297390</td>\n      <td>0.288275</td>\n      <td>0.216232</td>\n      <td>0.275861</td>\n      <td>-0.085131</td>\n      <td>-0.230984</td>\n    </tr>\n    <tr>\n      <th>consfin_org_count_current</th>\n      <td>0.012062</td>\n      <td>-0.129297</td>\n      <td>-0.074851</td>\n      <td>-0.007761</td>\n      <td>0.021387</td>\n      <td>-0.019901</td>\n      <td>0.003332</td>\n      <td>0.553486</td>\n      <td>0.371197</td>\n      <td>-0.287044</td>\n      <td>...</td>\n      <td>0.357549</td>\n      <td>0.137506</td>\n      <td>0.102057</td>\n      <td>0.297390</td>\n      <td>1.000000</td>\n      <td>0.988027</td>\n      <td>0.345697</td>\n      <td>0.074170</td>\n      <td>-0.185038</td>\n      <td>-0.399885</td>\n    </tr>\n    <tr>\n      <th>consfin_product_count</th>\n      <td>0.009583</td>\n      <td>-0.139197</td>\n      <td>-0.067226</td>\n      <td>-0.014847</td>\n      <td>0.021337</td>\n      <td>-0.019603</td>\n      <td>0.005534</td>\n      <td>0.551140</td>\n      <td>0.374660</td>\n      <td>-0.286212</td>\n      <td>...</td>\n      <td>0.354231</td>\n      <td>0.137271</td>\n      <td>0.081338</td>\n      <td>0.288275</td>\n      <td>0.988027</td>\n      <td>1.000000</td>\n      <td>0.329687</td>\n      <td>0.054292</td>\n      <td>-0.183685</td>\n      <td>-0.402011</td>\n    </tr>\n    <tr>\n      <th>consfin_max_limit</th>\n      <td>0.004020</td>\n      <td>-0.115324</td>\n      <td>-0.096647</td>\n      <td>-0.169575</td>\n      <td>0.054433</td>\n      <td>0.007123</td>\n      <td>-0.022388</td>\n      <td>0.224509</td>\n      <td>0.156951</td>\n      <td>-0.111345</td>\n      <td>...</td>\n      <td>0.208389</td>\n      <td>0.130307</td>\n      <td>0.788637</td>\n      <td>0.216232</td>\n      <td>0.345697</td>\n      <td>0.329687</td>\n      <td>1.000000</td>\n      <td>0.790580</td>\n      <td>-0.096890</td>\n      <td>-0.193945</td>\n    </tr>\n    <tr>\n      <th>consfin_avg_limit</th>\n      <td>0.008860</td>\n      <td>-0.076767</td>\n      <td>-0.094627</td>\n      <td>-0.174126</td>\n      <td>0.040634</td>\n      <td>0.040865</td>\n      <td>-0.043764</td>\n      <td>0.085255</td>\n      <td>0.057663</td>\n      <td>-0.045801</td>\n      <td>...</td>\n      <td>0.109425</td>\n      <td>0.098641</td>\n      <td>0.901470</td>\n      <td>0.275861</td>\n      <td>0.074170</td>\n      <td>0.054292</td>\n      <td>0.790580</td>\n      <td>1.000000</td>\n      <td>-0.042131</td>\n      <td>-0.088072</td>\n    </tr>\n    <tr>\n      <th>latest_query_day</th>\n      <td>0.020774</td>\n      <td>0.099208</td>\n      <td>0.069301</td>\n      <td>-0.001628</td>\n      <td>-0.000570</td>\n      <td>-0.001457</td>\n      <td>-0.024161</td>\n      <td>-0.188965</td>\n      <td>-0.120330</td>\n      <td>0.069560</td>\n      <td>...</td>\n      <td>-0.190074</td>\n      <td>-0.099086</td>\n      <td>-0.047756</td>\n      <td>-0.085131</td>\n      <td>-0.185038</td>\n      <td>-0.183685</td>\n      <td>-0.096890</td>\n      <td>-0.042131</td>\n      <td>1.000000</td>\n      <td>0.230078</td>\n    </tr>\n    <tr>\n      <th>loans_latest_day</th>\n      <td>0.026387</td>\n      <td>0.098628</td>\n      <td>0.047500</td>\n      <td>-0.003253</td>\n      <td>-0.010231</td>\n      <td>0.027221</td>\n      <td>-0.014880</td>\n      <td>-0.299110</td>\n      <td>-0.211593</td>\n      <td>0.163433</td>\n      <td>...</td>\n      <td>-0.282204</td>\n      <td>-0.144835</td>\n      <td>-0.110230</td>\n      <td>-0.230984</td>\n      <td>-0.399885</td>\n      <td>-0.402011</td>\n      <td>-0.193945</td>\n      <td>-0.088072</td>\n      <td>0.230078</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>82 rows × 82 columns</p>\n</div>\n\n\n\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://github.com/datawhalechina/Datawhale_Learning/tree/master/doc/%E7%90%86%E8%AE%BA%E5%BA%94%E7%94%A8/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98\" >DataWhale数据挖掘实战营<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.jianshu.com/p/29ece4592178\" >利用Python进行数据分析·第2版<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.jianshu.com/p/0c967a1526ef\" >Stata：离群值！离群值？离群值！<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.jiqizhixin.com/articles/021704\" >机器学习中如何处理不平衡数据？<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"数据集载入\"><a href=\"#数据集载入\" class=\"headerlink\" title=\"数据集载入\"></a>数据集载入</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">from</span> matplotlib <span class=\"keyword\">import</span> pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> seaborn <span class=\"keyword\">as</span> sns</span><br><span class=\"line\"><span class=\"keyword\">import</span> warnings</span><br><span class=\"line\">warnings.filterwarnings(<span class=\"string\">&#x27;ignore&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df = pd.read_csv(<span class=\"string\">u&quot;2019-08-01_金融数据描述_data1.csv&quot;</span>,encoding = <span class=\"string\">&#x27;gbk&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.head()</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>custid</th>\n      <th>trade_no</th>\n      <th>bank_card_no</th>\n      <th>low_volume_percent</th>\n      <th>middle_volume_percent</th>\n      <th>take_amount_in_later_12_month_highest</th>\n      <th>trans_amount_increase_rate_lately</th>\n      <th>trans_activity_month</th>\n      <th>trans_activity_day</th>\n      <th>...</th>\n      <th>loans_max_limit</th>\n      <th>loans_avg_limit</th>\n      <th>consfin_credit_limit</th>\n      <th>consfin_credibility</th>\n      <th>consfin_org_count_current</th>\n      <th>consfin_product_count</th>\n      <th>consfin_max_limit</th>\n      <th>consfin_avg_limit</th>\n      <th>latest_query_day</th>\n      <th>loans_latest_day</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5</td>\n      <td>2791858</td>\n      <td>20180507115231274000000023057383</td>\n      <td>卡号1</td>\n      <td>0.01</td>\n      <td>0.99</td>\n      <td>0</td>\n      <td>0.90</td>\n      <td>0.55</td>\n      <td>0.313</td>\n      <td>...</td>\n      <td>2900.0</td>\n      <td>1688.0</td>\n      <td>1200.0</td>\n      <td>75.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>1200.0</td>\n      <td>1200.0</td>\n      <td>12.0</td>\n      <td>18.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10</td>\n      <td>534047</td>\n      <td>20180507121002192000000023073000</td>\n      <td>卡号1</td>\n      <td>0.02</td>\n      <td>0.94</td>\n      <td>2000</td>\n      <td>1.28</td>\n      <td>1.00</td>\n      <td>0.458</td>\n      <td>...</td>\n      <td>3500.0</td>\n      <td>1758.0</td>\n      <td>15100.0</td>\n      <td>80.0</td>\n      <td>5.0</td>\n      <td>6.0</td>\n      <td>22800.0</td>\n      <td>9360.0</td>\n      <td>4.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>12</td>\n      <td>2849787</td>\n      <td>20180507125159718000000023114911</td>\n      <td>卡号1</td>\n      <td>0.04</td>\n      <td>0.96</td>\n      <td>0</td>\n      <td>1.00</td>\n      <td>1.00</td>\n      <td>0.114</td>\n      <td>...</td>\n      <td>1600.0</td>\n      <td>1250.0</td>\n      <td>4200.0</td>\n      <td>87.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>4200.0</td>\n      <td>4200.0</td>\n      <td>2.0</td>\n      <td>6.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>13</td>\n      <td>1809708</td>\n      <td>20180507121358683000000388283484</td>\n      <td>卡号1</td>\n      <td>0.00</td>\n      <td>0.96</td>\n      <td>2000</td>\n      <td>0.13</td>\n      <td>0.57</td>\n      <td>0.777</td>\n      <td>...</td>\n      <td>3200.0</td>\n      <td>1541.0</td>\n      <td>16300.0</td>\n      <td>80.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>30000.0</td>\n      <td>12180.0</td>\n      <td>2.0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>14</td>\n      <td>2499829</td>\n      <td>20180507115448545000000388205844</td>\n      <td>卡号1</td>\n      <td>0.01</td>\n      <td>0.99</td>\n      <td>0</td>\n      <td>0.46</td>\n      <td>1.00</td>\n      <td>0.175</td>\n      <td>...</td>\n      <td>2300.0</td>\n      <td>1630.0</td>\n      <td>8300.0</td>\n      <td>79.0</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>8400.0</td>\n      <td>8250.0</td>\n      <td>22.0</td>\n      <td>120.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 90 columns</p>\n</div>\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.info()</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 4754 entries, 0 to 4753\nData columns (total 90 columns):\nUnnamed: 0                                    4754 non-null int64\ncustid                                        4754 non-null int64\ntrade_no                                      4754 non-null object\nbank_card_no                                  4754 non-null object\nlow_volume_percent                            4752 non-null float64\nmiddle_volume_percent                         4752 non-null float64\ntake_amount_in_later_12_month_highest         4754 non-null int64\ntrans_amount_increase_rate_lately             4751 non-null float64\ntrans_activity_month                          4752 non-null float64\ntrans_activity_day                            4752 non-null float64\ntransd_mcc                                    4752 non-null float64\ntrans_days_interval_filter                    4746 non-null float64\ntrans_days_interval                           4752 non-null float64\nregional_mobility                             4752 non-null float64\nstudent_feature                               1756 non-null float64\nrepayment_capability                          4754 non-null int64\nis_high_user                                  4754 non-null int64\nnumber_of_trans_from_2011                     4752 non-null float64\nfirst_transaction_time                        4752 non-null float64\nhistorical_trans_amount                       4754 non-null int64\nhistorical_trans_day                          4752 non-null float64\nrank_trad_1_month                             4752 non-null float64\ntrans_amount_3_month                          4754 non-null int64\navg_consume_less_12_valid_month               4752 non-null float64\nabs                                           4754 non-null int64\ntop_trans_count_last_1_month                  4752 non-null float64\navg_price_last_12_month                       4754 non-null int64\navg_price_top_last_12_valid_month             4650 non-null float64\nreg_preference_for_trad                       4752 non-null object\ntrans_top_time_last_1_month                   4746 non-null float64\ntrans_top_time_last_6_month                   4746 non-null float64\nconsume_top_time_last_1_month                 4746 non-null float64\nconsume_top_time_last_6_month                 4746 non-null float64\ncross_consume_count_last_1_month              4328 non-null float64\ntrans_fail_top_count_enum_last_1_month        4738 non-null float64\ntrans_fail_top_count_enum_last_6_month        4738 non-null float64\ntrans_fail_top_count_enum_last_12_month       4738 non-null float64\nconsume_mini_time_last_1_month                4728 non-null float64\nmax_cumulative_consume_later_1_month          4754 non-null int64\nmax_consume_count_later_6_month               4746 non-null float64\nrailway_consume_count_last_12_month           4742 non-null float64\npawns_auctions_trusts_consume_last_1_month    4754 non-null int64\npawns_auctions_trusts_consume_last_6_month    4754 non-null int64\njewelry_consume_count_last_6_month            4742 non-null float64\nstatus                                        4754 non-null int64\nsource                                        4754 non-null object\nfirst_transaction_day                         4752 non-null float64\ntrans_day_last_12_month                       4752 non-null float64\nid_name                                       4478 non-null object\napply_score                                   4450 non-null float64\napply_credibility                             4450 non-null float64\nquery_org_count                               4450 non-null float64\nquery_finance_count                           4450 non-null float64\nquery_cash_count                              4450 non-null float64\nquery_sum_count                               4450 non-null float64\nlatest_query_time                             4450 non-null object\nlatest_one_month_apply                        4450 non-null float64\nlatest_three_month_apply                      4450 non-null float64\nlatest_six_month_apply                        4450 non-null float64\nloans_score                                   4457 non-null float64\nloans_credibility_behavior                    4457 non-null float64\nloans_count                                   4457 non-null float64\nloans_settle_count                            4457 non-null float64\nloans_overdue_count                           4457 non-null float64\nloans_org_count_behavior                      4457 non-null float64\nconsfin_org_count_behavior                    4457 non-null float64\nloans_cash_count                              4457 non-null float64\nlatest_one_month_loan                         4457 non-null float64\nlatest_three_month_loan                       4457 non-null float64\nlatest_six_month_loan                         4457 non-null float64\nhistory_suc_fee                               4457 non-null float64\nhistory_fail_fee                              4457 non-null float64\nlatest_one_month_suc                          4457 non-null float64\nlatest_one_month_fail                         4457 non-null float64\nloans_long_time                               4457 non-null float64\nloans_latest_time                             4457 non-null object\nloans_credit_limit                            4457 non-null float64\nloans_credibility_limit                       4457 non-null float64\nloans_org_count_current                       4457 non-null float64\nloans_product_count                           4457 non-null float64\nloans_max_limit                               4457 non-null float64\nloans_avg_limit                               4457 non-null float64\nconsfin_credit_limit                          4457 non-null float64\nconsfin_credibility                           4457 non-null float64\nconsfin_org_count_current                     4457 non-null float64\nconsfin_product_count                         4457 non-null float64\nconsfin_max_limit                             4457 non-null float64\nconsfin_avg_limit                             4457 non-null float64\nlatest_query_day                              4450 non-null float64\nloans_latest_day                              4457 non-null float64\ndtypes: float64(70), int64(13), object(7)\nmemory usage: 3.3+ MB\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedic = &#123;&#125; <span class=\"comment\"># 类型字典</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> df.columns:</span><br><span class=\"line\">    typedic[<span class=\"built_in\">str</span>(df[name].dtype)] = typedic.get(<span class=\"built_in\">str</span>(df[name].dtype),[])+[name]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> key,value <span class=\"keyword\">in</span> typedic.items():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&#123;&#125;格式共有&#123;&#125;个: &#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(key,<span class=\"built_in\">len</span>(value),value))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>int64格式共有13个: [&#39;Unnamed: 0&#39;, &#39;custid&#39;, &#39;take_amount_in_later_12_month_highest&#39;, &#39;repayment_capability&#39;, &#39;is_high_user&#39;, &#39;historical_trans_amount&#39;, &#39;trans_amount_3_month&#39;, &#39;abs&#39;, &#39;avg_price_last_12_month&#39;, &#39;max_cumulative_consume_later_1_month&#39;, &#39;pawns_auctions_trusts_consume_last_1_month&#39;, &#39;pawns_auctions_trusts_consume_last_6_month&#39;, &#39;status&#39;]\n\nobject格式共有7个: [&#39;trade_no&#39;, &#39;bank_card_no&#39;, &#39;reg_preference_for_trad&#39;, &#39;source&#39;, &#39;id_name&#39;, &#39;latest_query_time&#39;, &#39;loans_latest_time&#39;]\n\nfloat64格式共有70个: [&#39;low_volume_percent&#39;, &#39;middle_volume_percent&#39;, &#39;trans_amount_increase_rate_lately&#39;, &#39;trans_activity_month&#39;, &#39;trans_activity_day&#39;, &#39;transd_mcc&#39;, &#39;trans_days_interval_filter&#39;, &#39;trans_days_interval&#39;, &#39;regional_mobility&#39;, &#39;student_feature&#39;, &#39;number_of_trans_from_2011&#39;, &#39;first_transaction_time&#39;, &#39;historical_trans_day&#39;, &#39;rank_trad_1_month&#39;, &#39;avg_consume_less_12_valid_month&#39;, &#39;top_trans_count_last_1_month&#39;, &#39;avg_price_top_last_12_valid_month&#39;, &#39;trans_top_time_last_1_month&#39;, &#39;trans_top_time_last_6_month&#39;, &#39;consume_top_time_last_1_month&#39;, &#39;consume_top_time_last_6_month&#39;, &#39;cross_consume_count_last_1_month&#39;, &#39;trans_fail_top_count_enum_last_1_month&#39;, &#39;trans_fail_top_count_enum_last_6_month&#39;, &#39;trans_fail_top_count_enum_last_12_month&#39;, &#39;consume_mini_time_last_1_month&#39;, &#39;max_consume_count_later_6_month&#39;, &#39;railway_consume_count_last_12_month&#39;, &#39;jewelry_consume_count_last_6_month&#39;, &#39;first_transaction_day&#39;, &#39;trans_day_last_12_month&#39;, &#39;apply_score&#39;, &#39;apply_credibility&#39;, &#39;query_org_count&#39;, &#39;query_finance_count&#39;, &#39;query_cash_count&#39;, &#39;query_sum_count&#39;, &#39;latest_one_month_apply&#39;, &#39;latest_three_month_apply&#39;, &#39;latest_six_month_apply&#39;, &#39;loans_score&#39;, &#39;loans_credibility_behavior&#39;, &#39;loans_count&#39;, &#39;loans_settle_count&#39;, &#39;loans_overdue_count&#39;, &#39;loans_org_count_behavior&#39;, &#39;consfin_org_count_behavior&#39;, &#39;loans_cash_count&#39;, &#39;latest_one_month_loan&#39;, &#39;latest_three_month_loan&#39;, &#39;latest_six_month_loan&#39;, &#39;history_suc_fee&#39;, &#39;history_fail_fee&#39;, &#39;latest_one_month_suc&#39;, &#39;latest_one_month_fail&#39;, &#39;loans_long_time&#39;, &#39;loans_credit_limit&#39;, &#39;loans_credibility_limit&#39;, &#39;loans_org_count_current&#39;, &#39;loans_product_count&#39;, &#39;loans_max_limit&#39;, &#39;loans_avg_limit&#39;, &#39;consfin_credit_limit&#39;, &#39;consfin_credibility&#39;, &#39;consfin_org_count_current&#39;, &#39;consfin_product_count&#39;, &#39;consfin_max_limit&#39;, &#39;consfin_avg_limit&#39;, &#39;latest_query_day&#39;, &#39;loans_latest_day&#39;]\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.columns</span><br></pre></td></tr></table></figure>\n<pre><code>Index([&#39;Unnamed: 0&#39;, &#39;custid&#39;, &#39;trade_no&#39;, &#39;bank_card_no&#39;,\n       &#39;low_volume_percent&#39;, &#39;middle_volume_percent&#39;,\n       &#39;take_amount_in_later_12_month_highest&#39;,\n       &#39;trans_amount_increase_rate_lately&#39;, &#39;trans_activity_month&#39;,\n       &#39;trans_activity_day&#39;, &#39;transd_mcc&#39;, &#39;trans_days_interval_filter&#39;,\n       &#39;trans_days_interval&#39;, &#39;regional_mobility&#39;, &#39;student_feature&#39;,\n       &#39;repayment_capability&#39;, &#39;is_high_user&#39;, &#39;number_of_trans_from_2011&#39;,\n       &#39;first_transaction_time&#39;, &#39;historical_trans_amount&#39;,\n       &#39;historical_trans_day&#39;, &#39;rank_trad_1_month&#39;, &#39;trans_amount_3_month&#39;,\n       &#39;avg_consume_less_12_valid_month&#39;, &#39;abs&#39;,\n       &#39;top_trans_count_last_1_month&#39;, &#39;avg_price_last_12_month&#39;,\n       &#39;avg_price_top_last_12_valid_month&#39;, &#39;reg_preference_for_trad&#39;,\n       &#39;trans_top_time_last_1_month&#39;, &#39;trans_top_time_last_6_month&#39;,\n       &#39;consume_top_time_last_1_month&#39;, &#39;consume_top_time_last_6_month&#39;,\n       &#39;cross_consume_count_last_1_month&#39;,\n       &#39;trans_fail_top_count_enum_last_1_month&#39;,\n       &#39;trans_fail_top_count_enum_last_6_month&#39;,\n       &#39;trans_fail_top_count_enum_last_12_month&#39;,\n       &#39;consume_mini_time_last_1_month&#39;,\n       &#39;max_cumulative_consume_later_1_month&#39;,\n       &#39;max_consume_count_later_6_month&#39;,\n       &#39;railway_consume_count_last_12_month&#39;,\n       &#39;pawns_auctions_trusts_consume_last_1_month&#39;,\n       &#39;pawns_auctions_trusts_consume_last_6_month&#39;,\n       &#39;jewelry_consume_count_last_6_month&#39;, &#39;status&#39;, &#39;source&#39;,\n       &#39;first_transaction_day&#39;, &#39;trans_day_last_12_month&#39;, &#39;id_name&#39;,\n       &#39;apply_score&#39;, &#39;apply_credibility&#39;, &#39;query_org_count&#39;,\n       &#39;query_finance_count&#39;, &#39;query_cash_count&#39;, &#39;query_sum_count&#39;,\n       &#39;latest_query_time&#39;, &#39;latest_one_month_apply&#39;,\n       &#39;latest_three_month_apply&#39;, &#39;latest_six_month_apply&#39;, &#39;loans_score&#39;,\n       &#39;loans_credibility_behavior&#39;, &#39;loans_count&#39;, &#39;loans_settle_count&#39;,\n       &#39;loans_overdue_count&#39;, &#39;loans_org_count_behavior&#39;,\n       &#39;consfin_org_count_behavior&#39;, &#39;loans_cash_count&#39;,\n       &#39;latest_one_month_loan&#39;, &#39;latest_three_month_loan&#39;,\n       &#39;latest_six_month_loan&#39;, &#39;history_suc_fee&#39;, &#39;history_fail_fee&#39;,\n       &#39;latest_one_month_suc&#39;, &#39;latest_one_month_fail&#39;, &#39;loans_long_time&#39;,\n       &#39;loans_latest_time&#39;, &#39;loans_credit_limit&#39;, &#39;loans_credibility_limit&#39;,\n       &#39;loans_org_count_current&#39;, &#39;loans_product_count&#39;, &#39;loans_max_limit&#39;,\n       &#39;loans_avg_limit&#39;, &#39;consfin_credit_limit&#39;, &#39;consfin_credibility&#39;,\n       &#39;consfin_org_count_current&#39;, &#39;consfin_product_count&#39;,\n       &#39;consfin_max_limit&#39;, &#39;consfin_avg_limit&#39;, &#39;latest_query_day&#39;,\n       &#39;loans_latest_day&#39;],\n      dtype=&#39;object&#39;)\n</code></pre><h2 id=\"可视化各特征\"><a href=\"#可视化各特征\" class=\"headerlink\" title=\"可视化各特征\"></a>可视化各特征</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name_list_1 = [</span><br><span class=\"line\">       <span class=\"string\">&#x27;low_volume_percent&#x27;</span>, <span class=\"string\">&#x27;middle_volume_percent&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;take_amount_in_later_12_month_highest&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;trans_amount_increase_rate_lately&#x27;</span>, <span class=\"string\">&#x27;trans_activity_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;trans_activity_day&#x27;</span>, <span class=\"string\">&#x27;transd_mcc&#x27;</span>, <span class=\"string\">&#x27;trans_days_interval_filter&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;trans_days_interval&#x27;</span>, <span class=\"string\">&#x27;regional_mobility&#x27;</span>, <span class=\"string\">&#x27;student_feature&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;repayment_capability&#x27;</span>, <span class=\"string\">&#x27;is_high_user&#x27;</span>, <span class=\"string\">&#x27;number_of_trans_from_2011&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;first_transaction_time&#x27;</span></span><br><span class=\"line\">       ]</span><br><span class=\"line\">name_list_2 = [</span><br><span class=\"line\">       <span class=\"string\">&#x27;historical_trans_amount&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;historical_trans_day&#x27;</span>, <span class=\"string\">&#x27;rank_trad_1_month&#x27;</span>, <span class=\"string\">&#x27;trans_amount_3_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;avg_consume_less_12_valid_month&#x27;</span>, <span class=\"string\">&#x27;abs&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;top_trans_count_last_1_month&#x27;</span>, <span class=\"string\">&#x27;avg_price_last_12_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;avg_price_top_last_12_valid_month&#x27;</span>, <span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;trans_top_time_last_1_month&#x27;</span>, <span class=\"string\">&#x27;trans_top_time_last_6_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;consume_top_time_last_1_month&#x27;</span>, <span class=\"string\">&#x27;consume_top_time_last_6_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;cross_consume_count_last_1_month&#x27;</span>,</span><br><span class=\"line\">       ]</span><br><span class=\"line\">name_list_3 = [</span><br><span class=\"line\">       <span class=\"string\">&#x27;trans_fail_top_count_enum_last_1_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;trans_fail_top_count_enum_last_6_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;trans_fail_top_count_enum_last_12_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;consume_mini_time_last_1_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;max_cumulative_consume_later_1_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;max_consume_count_later_6_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;railway_consume_count_last_12_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;pawns_auctions_trusts_consume_last_1_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;pawns_auctions_trusts_consume_last_6_month&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;jewelry_consume_count_last_6_month&#x27;</span>, </span><br><span class=\"line\">       <span class=\"string\">&#x27;first_transaction_day&#x27;</span>, <span class=\"string\">&#x27;trans_day_last_12_month&#x27;</span>, <span class=\"string\">&#x27;apply_score&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;apply_credibility&#x27;</span>, <span class=\"string\">&#x27;query_org_count&#x27;</span>,</span><br><span class=\"line\">       ]</span><br><span class=\"line\">name_list_4 = [</span><br><span class=\"line\">      <span class=\"string\">&#x27;query_finance_count&#x27;</span>, <span class=\"string\">&#x27;query_cash_count&#x27;</span>, <span class=\"string\">&#x27;query_sum_count&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;latest_query_time&#x27;</span>, <span class=\"string\">&#x27;latest_one_month_apply&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;latest_three_month_apply&#x27;</span>, <span class=\"string\">&#x27;latest_six_month_apply&#x27;</span>, <span class=\"string\">&#x27;loans_score&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;loans_credibility_behavior&#x27;</span>, <span class=\"string\">&#x27;loans_count&#x27;</span>, <span class=\"string\">&#x27;loans_settle_count&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;loans_overdue_count&#x27;</span>, <span class=\"string\">&#x27;loans_org_count_behavior&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;consfin_org_count_behavior&#x27;</span>, <span class=\"string\">&#x27;loans_cash_count&#x27;</span>,</span><br><span class=\"line\">       ]</span><br><span class=\"line\">name_list_5 = [</span><br><span class=\"line\">      <span class=\"string\">&#x27;latest_one_month_loan&#x27;</span>, <span class=\"string\">&#x27;latest_three_month_loan&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;latest_six_month_loan&#x27;</span>, <span class=\"string\">&#x27;history_suc_fee&#x27;</span>, <span class=\"string\">&#x27;history_fail_fee&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;latest_one_month_suc&#x27;</span>, <span class=\"string\">&#x27;latest_one_month_fail&#x27;</span>, <span class=\"string\">&#x27;loans_long_time&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;loans_latest_time&#x27;</span>, <span class=\"string\">&#x27;loans_credit_limit&#x27;</span>, <span class=\"string\">&#x27;loans_credibility_limit&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;loans_org_count_current&#x27;</span>, <span class=\"string\">&#x27;loans_product_count&#x27;</span>, <span class=\"string\">&#x27;loans_max_limit&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;loans_avg_limit&#x27;</span>,</span><br><span class=\"line\">       ]</span><br><span class=\"line\">name_list_6 = [</span><br><span class=\"line\">      <span class=\"string\">&#x27;consfin_credit_limit&#x27;</span>, <span class=\"string\">&#x27;consfin_credibility&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;consfin_org_count_current&#x27;</span>, <span class=\"string\">&#x27;consfin_product_count&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;consfin_max_limit&#x27;</span>, <span class=\"string\">&#x27;consfin_avg_limit&#x27;</span>, <span class=\"string\">&#x27;latest_query_day&#x27;</span>,</span><br><span class=\"line\">       <span class=\"string\">&#x27;loans_latest_day&#x27;</span></span><br><span class=\"line\">       ]</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">5</span>, <span class=\"number\">3</span>, figsize=(<span class=\"number\">20</span>, <span class=\"number\">20</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,name <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(name_list_1):     </span><br><span class=\"line\">    sns.countplot(data=df, x=name, hue=<span class=\"string\">&#x27;status&#x27;</span>,  ax=ax[i // <span class=\"number\">3</span>][i % <span class=\"number\">3</span>])</span><br><span class=\"line\">    </span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_1.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_1.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">5</span>, <span class=\"number\">3</span>, figsize=(<span class=\"number\">20</span>, <span class=\"number\">20</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,name <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(name_list_2):     </span><br><span class=\"line\">    sns.countplot(data=df, x=name, hue=<span class=\"string\">&#x27;status&#x27;</span>,  ax=ax[i // <span class=\"number\">3</span>][i % <span class=\"number\">3</span>])</span><br><span class=\"line\">    </span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_2.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_2.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">5</span>, <span class=\"number\">3</span>, figsize=(<span class=\"number\">20</span>, <span class=\"number\">20</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,name <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(name_list_3):     </span><br><span class=\"line\">    sns.countplot(data=df, x=name, hue=<span class=\"string\">&#x27;status&#x27;</span>,  ax=ax[i // <span class=\"number\">3</span>][i % <span class=\"number\">3</span>])</span><br><span class=\"line\">    </span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_3.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_3.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">5</span>, <span class=\"number\">3</span>, figsize=(<span class=\"number\">20</span>, <span class=\"number\">20</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,name <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(name_list_4):     </span><br><span class=\"line\">    sns.countplot(data=df, x=name, hue=<span class=\"string\">&#x27;status&#x27;</span>,  ax=ax[i // <span class=\"number\">3</span>][i % <span class=\"number\">3</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_4.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_4.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">5</span>, <span class=\"number\">3</span>, figsize=(<span class=\"number\">20</span>, <span class=\"number\">20</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,name <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(name_list_5):     </span><br><span class=\"line\">    sns.countplot(data=df, x=name, hue=<span class=\"string\">&#x27;status&#x27;</span>,  ax=ax[i // <span class=\"number\">3</span>][i % <span class=\"number\">3</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_5.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_5.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f, ax = plt.subplots(<span class=\"number\">3</span>, <span class=\"number\">3</span>, figsize=(<span class=\"number\">20</span>, <span class=\"number\">20</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,name <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(name_list_6):     </span><br><span class=\"line\">    sns.countplot(data=df, x=name, hue=<span class=\"string\">&#x27;status&#x27;</span>,  ax=ax[i // <span class=\"number\">3</span>][i % <span class=\"number\">3</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_6.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_6.png\"\n                      alt=\"\"\n                ></p>\n<p>从以上分布图可以看出，连续型数据的特征基本上符合正态分布，指数分布或者泊松分布等，但在[‘rank_trad_1_month’,’trans_top_time_last_1_month’,’trans_top_time_last_6_month’,’consume_top_time_last_1_month’,’consume_top_time_last_6_month’,’loans_credit_limit’,’loans_credibility_limit’,’loans_max_limit’,’consfin_credibility’]这几个特征上出现数据于最左最右位置会出现骤升。从业务层面考虑，暂时未得出满意结论，待确认特征取数逻辑后再分析。<br>  还有，’avg_price_last_12_month’,’consfin_credit_limit’这两个特征虽然是连续型特征，但由图上看，出现标签分段，考虑继续探索，查看是否存在分段。</p>\n<p>  另外几个离散型特征，如’reg_preference_for_trad’,’regional_mobility’等，在标签status上区别明显，感觉是对模型有用的特征。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sns.boxplot(y = <span class=\"string\">&#x27;consfin_credit_limit&#x27;</span>,x = <span class=\"string\">&#x27;status&#x27;</span>,data = df)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_7.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_7.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sns.boxplot(y = <span class=\"string\">&#x27;avg_price_last_12_month&#x27;</span>,x = <span class=\"string\">&#x27;status&#x27;</span>,data = df)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_8.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_8.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sns.boxplot(y = <span class=\"string\">&#x27;rank_trad_1_month&#x27;</span>,x = <span class=\"string\">&#x27;status&#x27;</span>,data = df)</span><br><span class=\"line\"></span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_9.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_9.png\"\n                      alt=\"\"\n                ></p>\n<h2 id=\"数据预处理\"><a href=\"#数据预处理\" class=\"headerlink\" title=\"数据预处理\"></a>数据预处理</h2><h3 id=\"为什么需要处理缺失值？\"><a href=\"#为什么需要处理缺失值？\" class=\"headerlink\" title=\"为什么需要处理缺失值？\"></a>为什么需要处理缺失值？</h3><p>不同缺失值的处理方式在一定程度上影响了特征提取、建模和模型训练缺失值太多，可以尝试着直接删除，如果不删除，处理不好，可能会引来噪声缺失值较少，少于某一缺失率时，直接删除又会带来信息的损失，此时可以采取适当的填充方式。</p>\n<h3 id=\"缺失率大于多少时应当抛弃该特征？\"><a href=\"#缺失率大于多少时应当抛弃该特征？\" class=\"headerlink\" title=\"缺失率大于多少时应当抛弃该特征？\"></a>缺失率大于多少时应当抛弃该特征？</h3><p>一般为70%,但是还要分析该特征与训练目标的重要程度</p>\n<h3 id=\"缺失值填充有哪些方法？\"><a href=\"#缺失值填充有哪些方法？\" class=\"headerlink\" title=\"缺失值填充有哪些方法？\"></a>缺失值填充有哪些方法？</h3><h4 id=\"插值填充\"><a href=\"#插值填充\" class=\"headerlink\" title=\"插值填充\"></a>插值填充</h4><ul>\n<li>特殊值</li>\n<li>均值、加权均值（缺点：降低数据的方差，即随机性）</li>\n<li>中位数</li>\n<li>众数（多用在类别变数）</li>\n<li>…</li>\n</ul>\n<h4 id=\"插补法\"><a href=\"#插补法\" class=\"headerlink\" title=\"插补法\"></a>插补法</h4><ul>\n<li>随机插补法：从总体中随机抽取某个样本代替缺失样本</li>\n<li>多重插补法：通过变量之间的关系对缺失数据进行预测，利用蒙特卡洛方法生成多个完整的数据集，在对这些数据集进行分析，最后对分析结果进行汇总处理</li>\n<li>热平台插补：指在非缺失数据集中找到一个与缺失值所在样本相似的样本（匹配样本），利用其中的观测值对缺失值进行插补</li>\n<li>拉格朗日差值法</li>\n<li>牛顿插值法</li>\n</ul>\n<blockquote>\n<p>列的维度上，如果是连续性，就使用平均值插补，如果是离散性，就使用众数来插补; 行的维度上，引入预测模型，可考虑辅助回归，通过变量间的关系来预测缺失数据    </p>\n</blockquote>\n<h4 id=\"丢弃\"><a href=\"#丢弃\" class=\"headerlink\" title=\"丢弃\"></a>丢弃</h4><p>如果行和列的缺失达到一定的比例，建议放弃整行或整列数据</p>\n<h4 id=\"模型法\"><a href=\"#模型法\" class=\"headerlink\" title=\"模型法\"></a>模型法</h4><p>更多时候我们会基于已有的其他字段，将缺失字段作为目标变量进行预测，从而得到最为可能的补全值。如果带有缺失值的列是数值变量，采用回归模型补全；如果是分类变量，则采用分类模型补全</p>\n<h4 id=\"专家补全\"><a href=\"#专家补全\" class=\"headerlink\" title=\"专家补全\"></a>专家补全</h4><p>对于少量且具有重要意义的数据记录，专家补足也是非常重要的一种途径</p>\n<h4 id=\"不处理\"><a href=\"#不处理\" class=\"headerlink\" title=\"不处理\"></a>不处理</h4><ul>\n<li>当缺失值对模型的影响不大时，直接在包含空值的数据上进行数据挖掘</li>\n<li>很多模型对于缺失值有容忍度或灵活的处理方法，因此在预处理阶段可以不做处理</li>\n<li>树模型对于缺失值的敏感度较低，大部分时候可以在数据有缺失时使用</li>\n<li>涉及到距离度量(distance measurement)时，如计算两个点之间的距离，缺失数据就变得比较重要。因为涉及到“距离”这个概念，那么缺失值处理不当就会导致效果很差，如K近邻算法(KNN)和支持向量机(SVM)</li>\n<li>线性模型的代价函数(loss function)往往涉及到距离(distance)的计算，计算预测值和真实值之间的差别，这容易导致对缺失值敏感</li>\n<li>神经网络的鲁棒性强，对于缺失数据不是非常敏感，但一般没有那么多数据可供使用。</li>\n<li>贝叶斯模型对于缺失数据也比较稳定，数据量很小的时候首推贝叶斯模型。</li>\n</ul>\n<h3 id=\"时间序列\"><a href=\"#时间序列\" class=\"headerlink\" title=\"时间序列\"></a>时间序列</h3><p>依情况处理，主要看单独时间字段或时间字段与某些字段的组合属性对目标分析的作用程度，再采取相应方式来进行特征提取比如：可以将时间字段与其他字段属性进行组合，分析每天、每周、每月或特点星期几等情况下特征数据频率信息，总的来说还是得看分析得目标</p>\n<p>通常看到的情况是，除了考虑时间序列这个单独的特征外，往往是将时间序列和具有时间属性的特征联合起来分析，查看组合特征的对所需要分析的内容的影响</p>\n<h3 id=\"异常值和离群值\"><a href=\"#异常值和离群值\" class=\"headerlink\" title=\"异常值和离群值\"></a>异常值和离群值</h3><p>大多数的参数统计数值如均值、标准差、相关系数等，以及基于这些参数的统计分析均对离群值高度敏感。因此离群值的存在会对数据分析造成极大影响</p>\n<h4 id=\"判断\"><a href=\"#判断\" class=\"headerlink\" title=\"判断\"></a>判断</h4><ul>\n<li>用分位数搞定，看跟平均值的偏差超过几倍标准差</li>\n<li>LOF算法</li>\n<li>describe的时候加一个箱型图</li>\n</ul>\n<h4 id=\"处理\"><a href=\"#处理\" class=\"headerlink\" title=\"处理\"></a>处理</h4><ul>\n<li>对数转换</li>\n<li>缩尾</li>\n<li>截尾</li>\n<li>插值</li>\n</ul>\n<h3 id=\"无用特征删除\"><a href=\"#无用特征删除\" class=\"headerlink\" title=\"无用特征删除\"></a>无用特征删除</h3><p>将所有object格式的改为数值格式，其中有部分无用特征则可直接删除</p>\n<p>由上可看出需处理包含：[‘trade_no’, ‘bank_card_no’, ‘reg_preference_for_trad’, ‘source’, ‘id_name’, ‘latest_query_time’, ‘loans_latest_time’]</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df[<span class=\"string\">&#x27;source&#x27;</span>].value_counts(dropna = <span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>xs    4754\nName: source, dtype: int64\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">to_drop = [<span class=\"string\">&#x27;trade_no&#x27;</span>, <span class=\"string\">&#x27;bank_card_no&#x27;</span>, <span class=\"string\">&#x27;student_feature&#x27;</span>,<span class=\"string\">&#x27;cross_consume_count_last_1_month&#x27;</span>, <span class=\"string\">&#x27;id_name&#x27;</span>, <span class=\"string\">&#x27;source&#x27;</span>]</span><br><span class=\"line\">df = df.drop(to_drop, axis=<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"缺失填充\"><a href=\"#缺失填充\" class=\"headerlink\" title=\"缺失填充\"></a>缺失填充</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>].value_counts(dropna = <span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>一线城市    3403\n三线城市    1064\n境外       150\n二线城市     131\n其他城市       4\nNaN        2\nName: reg_preference_for_trad, dtype: int64\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>].fillna(<span class=\"string\">&#x27;其他城市&#x27;</span>,inplace = <span class=\"literal\">True</span>)</span><br><span class=\"line\">df[<span class=\"string\">&#x27;reg_preference_for_trad&#x27;</span>].value_counts(dropna = <span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>一线城市    3403\n三线城市    1064\n境外       150\n二线城市     131\n其他城市       6\nName: reg_preference_for_trad, dtype: int64\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.isnull().<span class=\"built_in\">sum</span>().sort_values(ascending = <span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n<pre><code>latest_three_month_apply                      304\nquery_finance_count                           304\nlatest_six_month_apply                        304\nlatest_query_time                             304\nquery_sum_count                               304\nquery_cash_count                              304\nlatest_one_month_apply                        304\nquery_org_count                               304\napply_credibility                             304\napply_score                                   304\nlatest_query_day                              304\nlatest_three_month_loan                       297\nloans_score                                   297\nloans_credibility_behavior                    297\nloans_count                                   297\nloans_settle_count                            297\nloans_overdue_count                           297\nloans_org_count_behavior                      297\nconsfin_org_count_behavior                    297\nloans_cash_count                              297\nlatest_one_month_loan                         297\nloans_latest_day                              297\nlatest_six_month_loan                         297\nloans_product_count                           297\nhistory_suc_fee                               297\nconsfin_avg_limit                             297\nconsfin_product_count                         297\nconsfin_org_count_current                     297\nconsfin_credibility                           297\nconsfin_credit_limit                          297\n                                             ... \ntrans_amount_increase_rate_lately               3\ntrans_days_interval                             2\nregional_mobility                               2\nnumber_of_trans_from_2011                       2\nmiddle_volume_percent                           2\ntransd_mcc                                      2\ntrans_activity_day                              2\ntrans_activity_month                            2\nlow_volume_percent                              2\nhistorical_trans_day                            2\nfirst_transaction_time                          2\nfirst_transaction_day                           2\nrank_trad_1_month                               2\navg_consume_less_12_valid_month                 2\ntrans_day_last_12_month                         2\ntop_trans_count_last_1_month                    2\nmax_cumulative_consume_later_1_month            0\ncustid                                          0\nstatus                                          0\ntake_amount_in_later_12_month_highest           0\npawns_auctions_trusts_consume_last_6_month      0\npawns_auctions_trusts_consume_last_1_month      0\nreg_preference_for_trad                         0\nhistorical_trans_amount                         0\navg_price_last_12_month                         0\nabs                                             0\nrepayment_capability                            0\nis_high_user                                    0\ntrans_amount_3_month                            0\nUnnamed: 0                                      0\nLength: 84, dtype: int64\n</code></pre><h2 id=\"特征间探索\"><a href=\"#特征间探索\" class=\"headerlink\" title=\"特征间探索\"></a>特征间探索</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">corr = df[:].corr()</span><br><span class=\"line\">plt.figure(figsize=(<span class=\"number\">15</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\">sb.heatmap(corr)</span><br><span class=\"line\">plt.savefig(<span class=\"string\">&quot;../img/2019-08-01_金融数据描述_10.png&quot;</span>)</span><br><span class=\"line\">plt.close()</span><br></pre></td></tr></table></figure>\n<p><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"/img/2019-08-01_金融数据描述_10.png\"\n                      alt=\"\"\n                ></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">corr</span><br></pre></td></tr></table></figure>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>custid</th>\n      <th>low_volume_percent</th>\n      <th>middle_volume_percent</th>\n      <th>take_amount_in_later_12_month_highest</th>\n      <th>trans_amount_increase_rate_lately</th>\n      <th>trans_activity_month</th>\n      <th>trans_activity_day</th>\n      <th>transd_mcc</th>\n      <th>trans_days_interval_filter</th>\n      <th>...</th>\n      <th>loans_max_limit</th>\n      <th>loans_avg_limit</th>\n      <th>consfin_credit_limit</th>\n      <th>consfin_credibility</th>\n      <th>consfin_org_count_current</th>\n      <th>consfin_product_count</th>\n      <th>consfin_max_limit</th>\n      <th>consfin_avg_limit</th>\n      <th>latest_query_day</th>\n      <th>loans_latest_day</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Unnamed: 0</th>\n      <td>1.000000</td>\n      <td>-0.007628</td>\n      <td>0.002861</td>\n      <td>-0.022844</td>\n      <td>-0.019728</td>\n      <td>0.014076</td>\n      <td>-0.021715</td>\n      <td>-0.001027</td>\n      <td>-0.006975</td>\n      <td>-0.021338</td>\n      <td>...</td>\n      <td>0.012189</td>\n      <td>-0.004457</td>\n      <td>0.005967</td>\n      <td>0.007746</td>\n      <td>0.012062</td>\n      <td>0.009583</td>\n      <td>0.004020</td>\n      <td>0.008860</td>\n      <td>0.020774</td>\n      <td>0.026387</td>\n    </tr>\n    <tr>\n      <th>custid</th>\n      <td>-0.007628</td>\n      <td>1.000000</td>\n      <td>0.031430</td>\n      <td>0.090599</td>\n      <td>-0.030282</td>\n      <td>-0.001299</td>\n      <td>-0.118811</td>\n      <td>-0.216062</td>\n      <td>-0.147485</td>\n      <td>0.144513</td>\n      <td>...</td>\n      <td>-0.236185</td>\n      <td>-0.152017</td>\n      <td>-0.093180</td>\n      <td>-0.041979</td>\n      <td>-0.129297</td>\n      <td>-0.139197</td>\n      <td>-0.115324</td>\n      <td>-0.076767</td>\n      <td>0.099208</td>\n      <td>0.098628</td>\n    </tr>\n    <tr>\n      <th>low_volume_percent</th>\n      <td>0.002861</td>\n      <td>0.031430</td>\n      <td>1.000000</td>\n      <td>-0.151504</td>\n      <td>-0.066047</td>\n      <td>0.005331</td>\n      <td>0.023895</td>\n      <td>-0.093754</td>\n      <td>-0.095780</td>\n      <td>0.054680</td>\n      <td>...</td>\n      <td>-0.140173</td>\n      <td>-0.128145</td>\n      <td>-0.083987</td>\n      <td>-0.032534</td>\n      <td>-0.074851</td>\n      <td>-0.067226</td>\n      <td>-0.096647</td>\n      <td>-0.094627</td>\n      <td>0.069301</td>\n      <td>0.047500</td>\n    </tr>\n    <tr>\n      <th>middle_volume_percent</th>\n      <td>-0.022844</td>\n      <td>0.090599</td>\n      <td>-0.151504</td>\n      <td>1.000000</td>\n      <td>-0.135050</td>\n      <td>0.001608</td>\n      <td>-0.031743</td>\n      <td>-0.055491</td>\n      <td>-0.094736</td>\n      <td>0.010146</td>\n      <td>...</td>\n      <td>-0.145599</td>\n      <td>-0.110230</td>\n      <td>-0.153241</td>\n      <td>0.003266</td>\n      <td>-0.007761</td>\n      <td>-0.014847</td>\n      <td>-0.169575</td>\n      <td>-0.174126</td>\n      <td>-0.001628</td>\n      <td>-0.003253</td>\n    </tr>\n    <tr>\n      <th>take_amount_in_later_12_month_highest</th>\n      <td>-0.019728</td>\n      <td>-0.030282</td>\n      <td>-0.066047</td>\n      <td>-0.135050</td>\n      <td>1.000000</td>\n      <td>-0.006699</td>\n      <td>0.060997</td>\n      <td>0.112582</td>\n      <td>0.181435</td>\n      <td>-0.055318</td>\n      <td>...</td>\n      <td>0.071798</td>\n      <td>0.038880</td>\n      <td>0.039328</td>\n      <td>0.015841</td>\n      <td>0.021387</td>\n      <td>0.021337</td>\n      <td>0.054433</td>\n      <td>0.040634</td>\n      <td>-0.000570</td>\n      <td>-0.010231</td>\n    </tr>\n    <tr>\n      <th>trans_amount_increase_rate_lately</th>\n      <td>0.014076</td>\n      <td>-0.001299</td>\n      <td>0.005331</td>\n      <td>0.001608</td>\n      <td>-0.006699</td>\n      <td>1.000000</td>\n      <td>0.015389</td>\n      <td>-0.003061</td>\n      <td>-0.011644</td>\n      <td>0.013220</td>\n      <td>...</td>\n      <td>0.007119</td>\n      <td>0.000119</td>\n      <td>0.028868</td>\n      <td>0.006174</td>\n      <td>-0.019901</td>\n      <td>-0.019603</td>\n      <td>0.007123</td>\n      <td>0.040865</td>\n      <td>-0.001457</td>\n      <td>0.027221</td>\n    </tr>\n    <tr>\n      <th>trans_activity_month</th>\n      <td>-0.021715</td>\n      <td>-0.118811</td>\n      <td>0.023895</td>\n      <td>-0.031743</td>\n      <td>0.060997</td>\n      <td>0.015389</td>\n      <td>1.000000</td>\n      <td>0.063373</td>\n      <td>0.069272</td>\n      <td>-0.091630</td>\n      <td>...</td>\n      <td>0.061847</td>\n      <td>0.037275</td>\n      <td>-0.036822</td>\n      <td>-0.000400</td>\n      <td>0.003332</td>\n      <td>0.005534</td>\n      <td>-0.022388</td>\n      <td>-0.043764</td>\n      <td>-0.024161</td>\n      <td>-0.014880</td>\n    </tr>\n    <tr>\n      <th>trans_activity_day</th>\n      <td>-0.001027</td>\n      <td>-0.216062</td>\n      <td>-0.093754</td>\n      <td>-0.055491</td>\n      <td>0.112582</td>\n      <td>-0.003061</td>\n      <td>0.063373</td>\n      <td>1.000000</td>\n      <td>0.674547</td>\n      <td>-0.491304</td>\n      <td>...</td>\n      <td>0.445155</td>\n      <td>0.202242</td>\n      <td>0.096622</td>\n      <td>0.181157</td>\n      <td>0.553486</td>\n      <td>0.551140</td>\n      <td>0.224509</td>\n      <td>0.085255</td>\n      <td>-0.188965</td>\n      <td>-0.299110</td>\n    </tr>\n    <tr>\n      <th>transd_mcc</th>\n      <td>-0.006975</td>\n      <td>-0.147485</td>\n      <td>-0.095780</td>\n      <td>-0.094736</td>\n      <td>0.181435</td>\n      <td>-0.011644</td>\n      <td>0.069272</td>\n      <td>0.674547</td>\n      <td>1.000000</td>\n      <td>-0.407126</td>\n      <td>...</td>\n      <td>0.313715</td>\n      <td>0.165959</td>\n      <td>0.066250</td>\n      <td>0.131905</td>\n      <td>0.371197</td>\n      <td>0.374660</td>\n      <td>0.156951</td>\n      <td>0.057663</td>\n      <td>-0.120330</td>\n      <td>-0.211593</td>\n    </tr>\n    <tr>\n      <th>trans_days_interval_filter</th>\n      <td>-0.021338</td>\n      <td>0.144513</td>\n      <td>0.054680</td>\n      <td>0.010146</td>\n      <td>-0.055318</td>\n      <td>0.013220</td>\n      <td>-0.091630</td>\n      <td>-0.491304</td>\n      <td>-0.407126</td>\n      <td>1.000000</td>\n      <td>...</td>\n      <td>-0.222970</td>\n      <td>-0.118522</td>\n      <td>-0.055205</td>\n      <td>-0.142221</td>\n      <td>-0.287044</td>\n      <td>-0.286212</td>\n      <td>-0.111345</td>\n      <td>-0.045801</td>\n      <td>0.069560</td>\n      <td>0.163433</td>\n    </tr>\n    <tr>\n      <th>trans_days_interval</th>\n      <td>-0.006297</td>\n      <td>0.200145</td>\n      <td>0.062421</td>\n      <td>-0.000383</td>\n      <td>-0.053329</td>\n      <td>0.000521</td>\n      <td>-0.151579</td>\n      <td>-0.542118</td>\n      <td>-0.447308</td>\n      <td>0.690819</td>\n      <td>...</td>\n      <td>-0.271875</td>\n      <td>-0.163049</td>\n      <td>-0.034716</td>\n      <td>-0.102588</td>\n      <td>-0.285654</td>\n      <td>-0.286510</td>\n      <td>-0.105000</td>\n      <td>-0.024740</td>\n      <td>0.102343</td>\n      <td>0.178628</td>\n    </tr>\n    <tr>\n      <th>regional_mobility</th>\n      <td>0.011694</td>\n      <td>-0.134926</td>\n      <td>-0.042939</td>\n      <td>0.009671</td>\n      <td>0.024089</td>\n      <td>-0.026960</td>\n      <td>-0.219911</td>\n      <td>0.143697</td>\n      <td>0.114936</td>\n      <td>-0.124350</td>\n      <td>...</td>\n      <td>0.099696</td>\n      <td>0.062712</td>\n      <td>0.092796</td>\n      <td>0.054084</td>\n      <td>0.147120</td>\n      <td>0.145322</td>\n      <td>0.091150</td>\n      <td>0.079245</td>\n      <td>-0.051839</td>\n      <td>-0.107139</td>\n    </tr>\n    <tr>\n      <th>student_feature</th>\n      <td>0.014227</td>\n      <td>0.026639</td>\n      <td>-0.007327</td>\n      <td>0.018852</td>\n      <td>-0.013524</td>\n      <td>-0.002682</td>\n      <td>0.004966</td>\n      <td>0.011653</td>\n      <td>0.005921</td>\n      <td>-0.005412</td>\n      <td>...</td>\n      <td>0.021982</td>\n      <td>0.007634</td>\n      <td>0.001860</td>\n      <td>0.009800</td>\n      <td>0.020368</td>\n      <td>0.017777</td>\n      <td>0.000096</td>\n      <td>0.004799</td>\n      <td>-0.020274</td>\n      <td>-0.031571</td>\n    </tr>\n    <tr>\n      <th>repayment_capability</th>\n      <td>-0.006726</td>\n      <td>-0.026254</td>\n      <td>-0.041522</td>\n      <td>-0.178436</td>\n      <td>0.055174</td>\n      <td>-0.000572</td>\n      <td>0.024737</td>\n      <td>0.189494</td>\n      <td>0.115434</td>\n      <td>-0.048998</td>\n      <td>...</td>\n      <td>0.128100</td>\n      <td>0.066266</td>\n      <td>0.052900</td>\n      <td>0.007068</td>\n      <td>0.046341</td>\n      <td>0.046471</td>\n      <td>0.063720</td>\n      <td>0.052120</td>\n      <td>-0.020964</td>\n      <td>-0.049951</td>\n    </tr>\n    <tr>\n      <th>is_high_user</th>\n      <td>-0.002995</td>\n      <td>-0.004640</td>\n      <td>0.018546</td>\n      <td>-0.029172</td>\n      <td>0.068763</td>\n      <td>-0.002017</td>\n      <td>0.044231</td>\n      <td>-0.034766</td>\n      <td>-0.080892</td>\n      <td>0.146678</td>\n      <td>...</td>\n      <td>-0.006073</td>\n      <td>0.014809</td>\n      <td>0.001286</td>\n      <td>-0.000752</td>\n      <td>-0.020497</td>\n      <td>-0.017732</td>\n      <td>0.007764</td>\n      <td>0.013155</td>\n      <td>-0.011908</td>\n      <td>-0.015299</td>\n    </tr>\n    <tr>\n      <th>number_of_trans_from_2011</th>\n      <td>0.016355</td>\n      <td>-0.276856</td>\n      <td>-0.031668</td>\n      <td>-0.084995</td>\n      <td>0.056183</td>\n      <td>-0.013609</td>\n      <td>-0.198322</td>\n      <td>0.286353</td>\n      <td>0.262917</td>\n      <td>-0.181413</td>\n      <td>...</td>\n      <td>0.195444</td>\n      <td>0.142227</td>\n      <td>0.105527</td>\n      <td>0.066191</td>\n      <td>0.212621</td>\n      <td>0.215217</td>\n      <td>0.138342</td>\n      <td>0.088776</td>\n      <td>-0.087938</td>\n      <td>-0.140635</td>\n    </tr>\n    <tr>\n      <th>historical_trans_amount</th>\n      <td>0.002346</td>\n      <td>-0.179652</td>\n      <td>-0.117333</td>\n      <td>-0.255846</td>\n      <td>0.102959</td>\n      <td>-0.002527</td>\n      <td>0.016522</td>\n      <td>0.526801</td>\n      <td>0.392433</td>\n      <td>-0.254563</td>\n      <td>...</td>\n      <td>0.324514</td>\n      <td>0.165218</td>\n      <td>0.137554</td>\n      <td>0.073505</td>\n      <td>0.288324</td>\n      <td>0.288420</td>\n      <td>0.201670</td>\n      <td>0.138920</td>\n      <td>-0.087267</td>\n      <td>-0.156048</td>\n    </tr>\n    <tr>\n      <th>historical_trans_day</th>\n      <td>0.004245</td>\n      <td>-0.345875</td>\n      <td>-0.068345</td>\n      <td>-0.116128</td>\n      <td>0.112908</td>\n      <td>-0.006987</td>\n      <td>0.052108</td>\n      <td>0.855832</td>\n      <td>0.603820</td>\n      <td>-0.424616</td>\n      <td>...</td>\n      <td>0.430792</td>\n      <td>0.223623</td>\n      <td>0.111262</td>\n      <td>0.142560</td>\n      <td>0.472101</td>\n      <td>0.473890</td>\n      <td>0.219427</td>\n      <td>0.097498</td>\n      <td>-0.171007</td>\n      <td>-0.267034</td>\n    </tr>\n    <tr>\n      <th>rank_trad_1_month</th>\n      <td>0.011515</td>\n      <td>0.116798</td>\n      <td>0.102996</td>\n      <td>0.139914</td>\n      <td>-0.089095</td>\n      <td>0.028153</td>\n      <td>-0.017110</td>\n      <td>-0.517923</td>\n      <td>-0.481565</td>\n      <td>0.345540</td>\n      <td>...</td>\n      <td>-0.235028</td>\n      <td>-0.121879</td>\n      <td>-0.120020</td>\n      <td>-0.133787</td>\n      <td>-0.328297</td>\n      <td>-0.327323</td>\n      <td>-0.180749</td>\n      <td>-0.115613</td>\n      <td>0.139572</td>\n      <td>0.243659</td>\n    </tr>\n    <tr>\n      <th>trans_amount_3_month</th>\n      <td>-0.003329</td>\n      <td>-0.069252</td>\n      <td>-0.063526</td>\n      <td>-0.189438</td>\n      <td>0.074279</td>\n      <td>-0.003598</td>\n      <td>0.010864</td>\n      <td>0.293735</td>\n      <td>0.250140</td>\n      <td>-0.139654</td>\n      <td>...</td>\n      <td>0.186909</td>\n      <td>0.084463</td>\n      <td>0.065007</td>\n      <td>0.033856</td>\n      <td>0.151395</td>\n      <td>0.153457</td>\n      <td>0.094556</td>\n      <td>0.063275</td>\n      <td>-0.044342</td>\n      <td>-0.099134</td>\n    </tr>\n    <tr>\n      <th>avg_consume_less_12_valid_month</th>\n      <td>-0.001742</td>\n      <td>-0.087905</td>\n      <td>-0.042251</td>\n      <td>-0.154257</td>\n      <td>0.031360</td>\n      <td>0.006201</td>\n      <td>0.014532</td>\n      <td>0.081550</td>\n      <td>0.194729</td>\n      <td>-0.017535</td>\n      <td>...</td>\n      <td>0.054239</td>\n      <td>0.010832</td>\n      <td>0.024610</td>\n      <td>0.026514</td>\n      <td>0.103333</td>\n      <td>0.101638</td>\n      <td>0.044864</td>\n      <td>0.011955</td>\n      <td>-0.069481</td>\n      <td>-0.090181</td>\n    </tr>\n    <tr>\n      <th>abs</th>\n      <td>-0.004830</td>\n      <td>-0.059940</td>\n      <td>-0.059972</td>\n      <td>-0.247023</td>\n      <td>0.081978</td>\n      <td>-0.003474</td>\n      <td>0.038276</td>\n      <td>0.306292</td>\n      <td>0.160103</td>\n      <td>-0.054408</td>\n      <td>...</td>\n      <td>0.152274</td>\n      <td>0.105389</td>\n      <td>0.072716</td>\n      <td>0.009934</td>\n      <td>0.071542</td>\n      <td>0.074592</td>\n      <td>0.102727</td>\n      <td>0.090651</td>\n      <td>-0.042772</td>\n      <td>-0.065586</td>\n    </tr>\n    <tr>\n      <th>top_trans_count_last_1_month</th>\n      <td>0.021195</td>\n      <td>0.101220</td>\n      <td>0.037765</td>\n      <td>0.059410</td>\n      <td>-0.063713</td>\n      <td>0.029701</td>\n      <td>-0.026923</td>\n      <td>-0.503568</td>\n      <td>-0.475823</td>\n      <td>0.381422</td>\n      <td>...</td>\n      <td>-0.199205</td>\n      <td>-0.082819</td>\n      <td>-0.071977</td>\n      <td>-0.138804</td>\n      <td>-0.323863</td>\n      <td>-0.324179</td>\n      <td>-0.128756</td>\n      <td>-0.058697</td>\n      <td>0.140451</td>\n      <td>0.247943</td>\n    </tr>\n    <tr>\n      <th>avg_price_last_12_month</th>\n      <td>0.011454</td>\n      <td>-0.090752</td>\n      <td>-0.286213</td>\n      <td>-0.556220</td>\n      <td>0.129908</td>\n      <td>-0.004808</td>\n      <td>-0.006858</td>\n      <td>0.068127</td>\n      <td>0.067431</td>\n      <td>-0.003254</td>\n      <td>...</td>\n      <td>0.204154</td>\n      <td>0.186553</td>\n      <td>0.183277</td>\n      <td>-0.017057</td>\n      <td>0.019580</td>\n      <td>0.017570</td>\n      <td>0.179284</td>\n      <td>0.205885</td>\n      <td>-0.033386</td>\n      <td>-0.020140</td>\n    </tr>\n    <tr>\n      <th>avg_price_top_last_12_valid_month</th>\n      <td>-0.018637</td>\n      <td>0.124158</td>\n      <td>0.509637</td>\n      <td>0.369498</td>\n      <td>-0.123202</td>\n      <td>-0.030556</td>\n      <td>0.011839</td>\n      <td>-0.138470</td>\n      <td>-0.145411</td>\n      <td>0.064464</td>\n      <td>...</td>\n      <td>-0.316923</td>\n      <td>-0.285338</td>\n      <td>-0.172475</td>\n      <td>-0.002851</td>\n      <td>-0.087684</td>\n      <td>-0.080339</td>\n      <td>-0.197348</td>\n      <td>-0.195194</td>\n      <td>0.079399</td>\n      <td>0.062422</td>\n    </tr>\n    <tr>\n      <th>trans_top_time_last_1_month</th>\n      <td>-0.007772</td>\n      <td>-0.003624</td>\n      <td>-0.023020</td>\n      <td>-0.015316</td>\n      <td>0.028547</td>\n      <td>-0.021723</td>\n      <td>0.018931</td>\n      <td>0.092705</td>\n      <td>0.143620</td>\n      <td>-0.127328</td>\n      <td>...</td>\n      <td>0.039372</td>\n      <td>0.019334</td>\n      <td>0.005990</td>\n      <td>0.060674</td>\n      <td>0.059770</td>\n      <td>0.056594</td>\n      <td>0.021747</td>\n      <td>0.000811</td>\n      <td>-0.030739</td>\n      <td>-0.069952</td>\n    </tr>\n    <tr>\n      <th>trans_top_time_last_6_month</th>\n      <td>0.012229</td>\n      <td>0.063470</td>\n      <td>0.064055</td>\n      <td>0.025356</td>\n      <td>-0.079647</td>\n      <td>0.032999</td>\n      <td>-0.016856</td>\n      <td>-0.519642</td>\n      <td>-0.400228</td>\n      <td>0.541678</td>\n      <td>...</td>\n      <td>-0.227717</td>\n      <td>-0.111353</td>\n      <td>-0.055343</td>\n      <td>-0.151634</td>\n      <td>-0.336984</td>\n      <td>-0.334724</td>\n      <td>-0.106172</td>\n      <td>-0.042912</td>\n      <td>0.088539</td>\n      <td>0.199473</td>\n    </tr>\n    <tr>\n      <th>consume_top_time_last_1_month</th>\n      <td>-0.012425</td>\n      <td>-0.013828</td>\n      <td>-0.030325</td>\n      <td>-0.024816</td>\n      <td>0.022475</td>\n      <td>-0.020937</td>\n      <td>0.021517</td>\n      <td>0.126348</td>\n      <td>0.162267</td>\n      <td>-0.155562</td>\n      <td>...</td>\n      <td>0.053634</td>\n      <td>0.023311</td>\n      <td>0.018442</td>\n      <td>0.073859</td>\n      <td>0.083782</td>\n      <td>0.080835</td>\n      <td>0.038965</td>\n      <td>0.012452</td>\n      <td>-0.044495</td>\n      <td>-0.078152</td>\n    </tr>\n    <tr>\n      <th>consume_top_time_last_6_month</th>\n      <td>0.010297</td>\n      <td>0.071615</td>\n      <td>0.026853</td>\n      <td>0.033989</td>\n      <td>-0.062038</td>\n      <td>0.032106</td>\n      <td>-0.009154</td>\n      <td>-0.506739</td>\n      <td>-0.371122</td>\n      <td>0.489491</td>\n      <td>...</td>\n      <td>-0.228478</td>\n      <td>-0.109085</td>\n      <td>-0.055605</td>\n      <td>-0.128403</td>\n      <td>-0.331808</td>\n      <td>-0.329305</td>\n      <td>-0.105383</td>\n      <td>-0.042412</td>\n      <td>0.083349</td>\n      <td>0.194636</td>\n    </tr>\n    <tr>\n      <th>cross_consume_count_last_1_month</th>\n      <td>-0.019612</td>\n      <td>-0.015749</td>\n      <td>0.056716</td>\n      <td>-0.076003</td>\n      <td>0.042310</td>\n      <td>-0.004524</td>\n      <td>-0.001588</td>\n      <td>0.217779</td>\n      <td>0.236684</td>\n      <td>-0.098826</td>\n      <td>...</td>\n      <td>0.101269</td>\n      <td>0.038369</td>\n      <td>0.032169</td>\n      <td>0.024935</td>\n      <td>0.129515</td>\n      <td>0.131031</td>\n      <td>0.041163</td>\n      <td>0.025667</td>\n      <td>-0.026850</td>\n      <td>-0.081532</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>loans_score</th>\n      <td>-0.014716</td>\n      <td>-0.006276</td>\n      <td>-0.007019</td>\n      <td>-0.039519</td>\n      <td>-0.003928</td>\n      <td>0.010481</td>\n      <td>-0.020418</td>\n      <td>-0.211471</td>\n      <td>-0.141698</td>\n      <td>0.105373</td>\n      <td>...</td>\n      <td>-0.145502</td>\n      <td>-0.071344</td>\n      <td>0.076157</td>\n      <td>-0.043698</td>\n      <td>-0.242594</td>\n      <td>-0.249384</td>\n      <td>-0.004854</td>\n      <td>0.085289</td>\n      <td>0.035587</td>\n      <td>-0.019444</td>\n    </tr>\n    <tr>\n      <th>loans_credibility_behavior</th>\n      <td>-0.000191</td>\n      <td>-0.023587</td>\n      <td>0.037414</td>\n      <td>-0.031636</td>\n      <td>-0.017790</td>\n      <td>-0.003788</td>\n      <td>0.002694</td>\n      <td>-0.059242</td>\n      <td>-0.028579</td>\n      <td>0.016791</td>\n      <td>...</td>\n      <td>-0.109592</td>\n      <td>-0.059538</td>\n      <td>0.113228</td>\n      <td>0.202241</td>\n      <td>0.132995</td>\n      <td>0.141105</td>\n      <td>0.112848</td>\n      <td>0.110999</td>\n      <td>0.014235</td>\n      <td>-0.034587</td>\n    </tr>\n    <tr>\n      <th>loans_count</th>\n      <td>0.008971</td>\n      <td>-0.104423</td>\n      <td>-0.103643</td>\n      <td>0.093372</td>\n      <td>0.034853</td>\n      <td>-0.011057</td>\n      <td>0.010844</td>\n      <td>0.713700</td>\n      <td>0.433028</td>\n      <td>-0.340780</td>\n      <td>...</td>\n      <td>0.454809</td>\n      <td>0.167113</td>\n      <td>0.097746</td>\n      <td>0.189068</td>\n      <td>0.669975</td>\n      <td>0.658099</td>\n      <td>0.240708</td>\n      <td>0.067635</td>\n      <td>-0.194495</td>\n      <td>-0.388366</td>\n    </tr>\n    <tr>\n      <th>loans_settle_count</th>\n      <td>0.008509</td>\n      <td>-0.106395</td>\n      <td>-0.115451</td>\n      <td>0.084747</td>\n      <td>0.044691</td>\n      <td>-0.011398</td>\n      <td>0.006203</td>\n      <td>0.723008</td>\n      <td>0.440667</td>\n      <td>-0.346732</td>\n      <td>...</td>\n      <td>0.466131</td>\n      <td>0.175771</td>\n      <td>0.109141</td>\n      <td>0.183622</td>\n      <td>0.633814</td>\n      <td>0.618343</td>\n      <td>0.239062</td>\n      <td>0.079620</td>\n      <td>-0.198341</td>\n      <td>-0.374859</td>\n    </tr>\n    <tr>\n      <th>loans_overdue_count</th>\n      <td>-0.002123</td>\n      <td>-0.047870</td>\n      <td>0.003258</td>\n      <td>0.055341</td>\n      <td>-0.018406</td>\n      <td>-0.009483</td>\n      <td>0.026175</td>\n      <td>0.319103</td>\n      <td>0.193574</td>\n      <td>-0.145065</td>\n      <td>...</td>\n      <td>0.189896</td>\n      <td>0.071337</td>\n      <td>0.001805</td>\n      <td>0.089767</td>\n      <td>0.389047</td>\n      <td>0.396295</td>\n      <td>0.109103</td>\n      <td>-0.020359</td>\n      <td>-0.069116</td>\n      <td>-0.166293</td>\n    </tr>\n    <tr>\n      <th>loans_org_count_behavior</th>\n      <td>0.002662</td>\n      <td>-0.107997</td>\n      <td>-0.113256</td>\n      <td>0.086219</td>\n      <td>0.020780</td>\n      <td>-0.012629</td>\n      <td>0.014655</td>\n      <td>0.698811</td>\n      <td>0.451913</td>\n      <td>-0.330187</td>\n      <td>...</td>\n      <td>0.462677</td>\n      <td>0.133557</td>\n      <td>0.065915</td>\n      <td>0.231726</td>\n      <td>0.799828</td>\n      <td>0.784147</td>\n      <td>0.257087</td>\n      <td>0.038651</td>\n      <td>-0.216354</td>\n      <td>-0.402870</td>\n    </tr>\n    <tr>\n      <th>consfin_org_count_behavior</th>\n      <td>0.012062</td>\n      <td>-0.129297</td>\n      <td>-0.074851</td>\n      <td>-0.007761</td>\n      <td>0.021387</td>\n      <td>-0.019901</td>\n      <td>0.003332</td>\n      <td>0.553486</td>\n      <td>0.371197</td>\n      <td>-0.287044</td>\n      <td>...</td>\n      <td>0.357549</td>\n      <td>0.137506</td>\n      <td>0.102057</td>\n      <td>0.297390</td>\n      <td>1.000000</td>\n      <td>0.988027</td>\n      <td>0.345697</td>\n      <td>0.074170</td>\n      <td>-0.185038</td>\n      <td>-0.399885</td>\n    </tr>\n    <tr>\n      <th>loans_cash_count</th>\n      <td>-0.002987</td>\n      <td>-0.078110</td>\n      <td>-0.115566</td>\n      <td>0.123857</td>\n      <td>0.016962</td>\n      <td>-0.006482</td>\n      <td>0.018475</td>\n      <td>0.662281</td>\n      <td>0.420938</td>\n      <td>-0.298750</td>\n      <td>...</td>\n      <td>0.443326</td>\n      <td>0.108990</td>\n      <td>0.034866</td>\n      <td>0.156549</td>\n      <td>0.555002</td>\n      <td>0.539896</td>\n      <td>0.164961</td>\n      <td>0.012515</td>\n      <td>-0.197164</td>\n      <td>-0.337008</td>\n    </tr>\n    <tr>\n      <th>latest_one_month_loan</th>\n      <td>-0.001009</td>\n      <td>-0.082016</td>\n      <td>-0.034938</td>\n      <td>-0.017258</td>\n      <td>0.008845</td>\n      <td>-0.010482</td>\n      <td>0.010030</td>\n      <td>0.251331</td>\n      <td>0.152255</td>\n      <td>-0.109048</td>\n      <td>...</td>\n      <td>0.216387</td>\n      <td>0.078718</td>\n      <td>0.057899</td>\n      <td>0.087776</td>\n      <td>0.328566</td>\n      <td>0.334659</td>\n      <td>0.136317</td>\n      <td>0.039233</td>\n      <td>-0.167327</td>\n      <td>-0.564125</td>\n    </tr>\n    <tr>\n      <th>latest_three_month_loan</th>\n      <td>0.009841</td>\n      <td>-0.102432</td>\n      <td>-0.041141</td>\n      <td>-0.007416</td>\n      <td>0.009611</td>\n      <td>-0.012746</td>\n      <td>0.024060</td>\n      <td>0.277217</td>\n      <td>0.180567</td>\n      <td>-0.132316</td>\n      <td>...</td>\n      <td>0.235019</td>\n      <td>0.083134</td>\n      <td>0.055062</td>\n      <td>0.099953</td>\n      <td>0.410173</td>\n      <td>0.415173</td>\n      <td>0.158521</td>\n      <td>0.038337</td>\n      <td>-0.172112</td>\n      <td>-0.556912</td>\n    </tr>\n    <tr>\n      <th>latest_six_month_loan</th>\n      <td>0.013859</td>\n      <td>-0.084090</td>\n      <td>-0.080426</td>\n      <td>0.080167</td>\n      <td>0.034499</td>\n      <td>-0.007440</td>\n      <td>0.023376</td>\n      <td>0.618386</td>\n      <td>0.381795</td>\n      <td>-0.294128</td>\n      <td>...</td>\n      <td>0.395462</td>\n      <td>0.110447</td>\n      <td>0.067585</td>\n      <td>0.169560</td>\n      <td>0.653119</td>\n      <td>0.646769</td>\n      <td>0.214958</td>\n      <td>0.040151</td>\n      <td>-0.201667</td>\n      <td>-0.457269</td>\n    </tr>\n    <tr>\n      <th>history_suc_fee</th>\n      <td>0.005751</td>\n      <td>-0.154554</td>\n      <td>-0.068576</td>\n      <td>0.038832</td>\n      <td>0.036804</td>\n      <td>-0.013452</td>\n      <td>0.008331</td>\n      <td>0.707752</td>\n      <td>0.432147</td>\n      <td>-0.361614</td>\n      <td>...</td>\n      <td>0.439947</td>\n      <td>0.158091</td>\n      <td>0.129951</td>\n      <td>0.194162</td>\n      <td>0.682134</td>\n      <td>0.674063</td>\n      <td>0.258122</td>\n      <td>0.092018</td>\n      <td>-0.197019</td>\n      <td>-0.392292</td>\n    </tr>\n    <tr>\n      <th>history_fail_fee</th>\n      <td>0.005633</td>\n      <td>-0.039117</td>\n      <td>0.009093</td>\n      <td>0.055486</td>\n      <td>-0.019751</td>\n      <td>-0.006480</td>\n      <td>0.033715</td>\n      <td>0.269878</td>\n      <td>0.148111</td>\n      <td>-0.115664</td>\n      <td>...</td>\n      <td>0.164983</td>\n      <td>0.047106</td>\n      <td>0.008807</td>\n      <td>0.098387</td>\n      <td>0.399674</td>\n      <td>0.411005</td>\n      <td>0.130966</td>\n      <td>-0.011496</td>\n      <td>-0.060527</td>\n      <td>-0.199490</td>\n    </tr>\n    <tr>\n      <th>latest_one_month_suc</th>\n      <td>0.000168</td>\n      <td>-0.078523</td>\n      <td>-0.025131</td>\n      <td>-0.022327</td>\n      <td>0.022699</td>\n      <td>-0.009579</td>\n      <td>0.009873</td>\n      <td>0.228821</td>\n      <td>0.146654</td>\n      <td>-0.111359</td>\n      <td>...</td>\n      <td>0.194397</td>\n      <td>0.056937</td>\n      <td>0.023565</td>\n      <td>0.092642</td>\n      <td>0.349219</td>\n      <td>0.360903</td>\n      <td>0.119473</td>\n      <td>0.014118</td>\n      <td>-0.167496</td>\n      <td>-0.459412</td>\n    </tr>\n    <tr>\n      <th>latest_one_month_fail</th>\n      <td>0.013939</td>\n      <td>-0.041356</td>\n      <td>0.021126</td>\n      <td>-0.018844</td>\n      <td>-0.004671</td>\n      <td>-0.005436</td>\n      <td>0.017951</td>\n      <td>0.133230</td>\n      <td>0.080658</td>\n      <td>-0.053043</td>\n      <td>...</td>\n      <td>0.104707</td>\n      <td>0.041028</td>\n      <td>-0.000725</td>\n      <td>0.053177</td>\n      <td>0.228943</td>\n      <td>0.244784</td>\n      <td>0.078403</td>\n      <td>-0.011238</td>\n      <td>-0.051815</td>\n      <td>-0.232811</td>\n    </tr>\n    <tr>\n      <th>loans_long_time</th>\n      <td>0.000992</td>\n      <td>-0.216323</td>\n      <td>-0.074834</td>\n      <td>0.040822</td>\n      <td>0.012660</td>\n      <td>-0.002678</td>\n      <td>0.030914</td>\n      <td>0.384281</td>\n      <td>0.301560</td>\n      <td>-0.317888</td>\n      <td>...</td>\n      <td>0.368329</td>\n      <td>0.268476</td>\n      <td>0.144168</td>\n      <td>0.229963</td>\n      <td>0.345921</td>\n      <td>0.337877</td>\n      <td>0.198060</td>\n      <td>0.134422</td>\n      <td>-0.134214</td>\n      <td>-0.214274</td>\n    </tr>\n    <tr>\n      <th>loans_credit_limit</th>\n      <td>-0.006194</td>\n      <td>-0.160582</td>\n      <td>-0.138446</td>\n      <td>-0.086706</td>\n      <td>0.050185</td>\n      <td>0.013118</td>\n      <td>0.036172</td>\n      <td>0.229054</td>\n      <td>0.177929</td>\n      <td>-0.146462</td>\n      <td>...</td>\n      <td>0.745694</td>\n      <td>0.901755</td>\n      <td>0.085200</td>\n      <td>0.057358</td>\n      <td>0.151520</td>\n      <td>0.152471</td>\n      <td>0.123290</td>\n      <td>0.087213</td>\n      <td>-0.111170</td>\n      <td>-0.157736</td>\n    </tr>\n    <tr>\n      <th>loans_credibility_limit</th>\n      <td>-0.033850</td>\n      <td>-0.000850</td>\n      <td>-0.051545</td>\n      <td>0.090824</td>\n      <td>-0.025575</td>\n      <td>0.003868</td>\n      <td>-0.005513</td>\n      <td>0.161363</td>\n      <td>0.154721</td>\n      <td>-0.083218</td>\n      <td>...</td>\n      <td>0.328845</td>\n      <td>0.456704</td>\n      <td>-0.022646</td>\n      <td>-0.029875</td>\n      <td>0.115503</td>\n      <td>0.114720</td>\n      <td>0.021164</td>\n      <td>-0.036374</td>\n      <td>-0.127687</td>\n      <td>-0.138313</td>\n    </tr>\n    <tr>\n      <th>loans_org_count_current</th>\n      <td>-0.002987</td>\n      <td>-0.078110</td>\n      <td>-0.115566</td>\n      <td>0.123857</td>\n      <td>0.016962</td>\n      <td>-0.006482</td>\n      <td>0.018475</td>\n      <td>0.662281</td>\n      <td>0.420938</td>\n      <td>-0.298750</td>\n      <td>...</td>\n      <td>0.443326</td>\n      <td>0.108990</td>\n      <td>0.034866</td>\n      <td>0.156549</td>\n      <td>0.555002</td>\n      <td>0.539896</td>\n      <td>0.164961</td>\n      <td>0.012515</td>\n      <td>-0.197164</td>\n      <td>-0.337008</td>\n    </tr>\n    <tr>\n      <th>loans_product_count</th>\n      <td>-0.001941</td>\n      <td>-0.072159</td>\n      <td>-0.114296</td>\n      <td>0.122741</td>\n      <td>0.018572</td>\n      <td>-0.007575</td>\n      <td>0.019401</td>\n      <td>0.656939</td>\n      <td>0.416980</td>\n      <td>-0.295409</td>\n      <td>...</td>\n      <td>0.441316</td>\n      <td>0.108962</td>\n      <td>0.031936</td>\n      <td>0.155744</td>\n      <td>0.553607</td>\n      <td>0.539424</td>\n      <td>0.163650</td>\n      <td>0.009397</td>\n      <td>-0.199549</td>\n      <td>-0.348389</td>\n    </tr>\n    <tr>\n      <th>loans_max_limit</th>\n      <td>0.012189</td>\n      <td>-0.236185</td>\n      <td>-0.140173</td>\n      <td>-0.145599</td>\n      <td>0.071798</td>\n      <td>0.007119</td>\n      <td>0.061847</td>\n      <td>0.445155</td>\n      <td>0.313715</td>\n      <td>-0.222970</td>\n      <td>...</td>\n      <td>1.000000</td>\n      <td>0.716175</td>\n      <td>0.108760</td>\n      <td>0.101659</td>\n      <td>0.357549</td>\n      <td>0.354231</td>\n      <td>0.208389</td>\n      <td>0.109425</td>\n      <td>-0.190074</td>\n      <td>-0.282204</td>\n    </tr>\n    <tr>\n      <th>loans_avg_limit</th>\n      <td>-0.004457</td>\n      <td>-0.152017</td>\n      <td>-0.128145</td>\n      <td>-0.110230</td>\n      <td>0.038880</td>\n      <td>0.000119</td>\n      <td>0.037275</td>\n      <td>0.202242</td>\n      <td>0.165959</td>\n      <td>-0.118522</td>\n      <td>...</td>\n      <td>0.716175</td>\n      <td>1.000000</td>\n      <td>0.091117</td>\n      <td>0.031452</td>\n      <td>0.137506</td>\n      <td>0.137271</td>\n      <td>0.130307</td>\n      <td>0.098641</td>\n      <td>-0.099086</td>\n      <td>-0.144835</td>\n    </tr>\n    <tr>\n      <th>consfin_credit_limit</th>\n      <td>0.005967</td>\n      <td>-0.093180</td>\n      <td>-0.083987</td>\n      <td>-0.153241</td>\n      <td>0.039328</td>\n      <td>0.028868</td>\n      <td>-0.036822</td>\n      <td>0.096622</td>\n      <td>0.066250</td>\n      <td>-0.055205</td>\n      <td>...</td>\n      <td>0.108760</td>\n      <td>0.091117</td>\n      <td>1.000000</td>\n      <td>0.241837</td>\n      <td>0.102057</td>\n      <td>0.081338</td>\n      <td>0.788637</td>\n      <td>0.901470</td>\n      <td>-0.047756</td>\n      <td>-0.110230</td>\n    </tr>\n    <tr>\n      <th>consfin_credibility</th>\n      <td>0.007746</td>\n      <td>-0.041979</td>\n      <td>-0.032534</td>\n      <td>0.003266</td>\n      <td>0.015841</td>\n      <td>0.006174</td>\n      <td>-0.000400</td>\n      <td>0.181157</td>\n      <td>0.131905</td>\n      <td>-0.142221</td>\n      <td>...</td>\n      <td>0.101659</td>\n      <td>0.031452</td>\n      <td>0.241837</td>\n      <td>1.000000</td>\n      <td>0.297390</td>\n      <td>0.288275</td>\n      <td>0.216232</td>\n      <td>0.275861</td>\n      <td>-0.085131</td>\n      <td>-0.230984</td>\n    </tr>\n    <tr>\n      <th>consfin_org_count_current</th>\n      <td>0.012062</td>\n      <td>-0.129297</td>\n      <td>-0.074851</td>\n      <td>-0.007761</td>\n      <td>0.021387</td>\n      <td>-0.019901</td>\n      <td>0.003332</td>\n      <td>0.553486</td>\n      <td>0.371197</td>\n      <td>-0.287044</td>\n      <td>...</td>\n      <td>0.357549</td>\n      <td>0.137506</td>\n      <td>0.102057</td>\n      <td>0.297390</td>\n      <td>1.000000</td>\n      <td>0.988027</td>\n      <td>0.345697</td>\n      <td>0.074170</td>\n      <td>-0.185038</td>\n      <td>-0.399885</td>\n    </tr>\n    <tr>\n      <th>consfin_product_count</th>\n      <td>0.009583</td>\n      <td>-0.139197</td>\n      <td>-0.067226</td>\n      <td>-0.014847</td>\n      <td>0.021337</td>\n      <td>-0.019603</td>\n      <td>0.005534</td>\n      <td>0.551140</td>\n      <td>0.374660</td>\n      <td>-0.286212</td>\n      <td>...</td>\n      <td>0.354231</td>\n      <td>0.137271</td>\n      <td>0.081338</td>\n      <td>0.288275</td>\n      <td>0.988027</td>\n      <td>1.000000</td>\n      <td>0.329687</td>\n      <td>0.054292</td>\n      <td>-0.183685</td>\n      <td>-0.402011</td>\n    </tr>\n    <tr>\n      <th>consfin_max_limit</th>\n      <td>0.004020</td>\n      <td>-0.115324</td>\n      <td>-0.096647</td>\n      <td>-0.169575</td>\n      <td>0.054433</td>\n      <td>0.007123</td>\n      <td>-0.022388</td>\n      <td>0.224509</td>\n      <td>0.156951</td>\n      <td>-0.111345</td>\n      <td>...</td>\n      <td>0.208389</td>\n      <td>0.130307</td>\n      <td>0.788637</td>\n      <td>0.216232</td>\n      <td>0.345697</td>\n      <td>0.329687</td>\n      <td>1.000000</td>\n      <td>0.790580</td>\n      <td>-0.096890</td>\n      <td>-0.193945</td>\n    </tr>\n    <tr>\n      <th>consfin_avg_limit</th>\n      <td>0.008860</td>\n      <td>-0.076767</td>\n      <td>-0.094627</td>\n      <td>-0.174126</td>\n      <td>0.040634</td>\n      <td>0.040865</td>\n      <td>-0.043764</td>\n      <td>0.085255</td>\n      <td>0.057663</td>\n      <td>-0.045801</td>\n      <td>...</td>\n      <td>0.109425</td>\n      <td>0.098641</td>\n      <td>0.901470</td>\n      <td>0.275861</td>\n      <td>0.074170</td>\n      <td>0.054292</td>\n      <td>0.790580</td>\n      <td>1.000000</td>\n      <td>-0.042131</td>\n      <td>-0.088072</td>\n    </tr>\n    <tr>\n      <th>latest_query_day</th>\n      <td>0.020774</td>\n      <td>0.099208</td>\n      <td>0.069301</td>\n      <td>-0.001628</td>\n      <td>-0.000570</td>\n      <td>-0.001457</td>\n      <td>-0.024161</td>\n      <td>-0.188965</td>\n      <td>-0.120330</td>\n      <td>0.069560</td>\n      <td>...</td>\n      <td>-0.190074</td>\n      <td>-0.099086</td>\n      <td>-0.047756</td>\n      <td>-0.085131</td>\n      <td>-0.185038</td>\n      <td>-0.183685</td>\n      <td>-0.096890</td>\n      <td>-0.042131</td>\n      <td>1.000000</td>\n      <td>0.230078</td>\n    </tr>\n    <tr>\n      <th>loans_latest_day</th>\n      <td>0.026387</td>\n      <td>0.098628</td>\n      <td>0.047500</td>\n      <td>-0.003253</td>\n      <td>-0.010231</td>\n      <td>0.027221</td>\n      <td>-0.014880</td>\n      <td>-0.299110</td>\n      <td>-0.211593</td>\n      <td>0.163433</td>\n      <td>...</td>\n      <td>-0.282204</td>\n      <td>-0.144835</td>\n      <td>-0.110230</td>\n      <td>-0.230984</td>\n      <td>-0.399885</td>\n      <td>-0.402011</td>\n      <td>-0.193945</td>\n      <td>-0.088072</td>\n      <td>0.230078</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>82 rows × 82 columns</p>\n</div>\n\n\n\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://github.com/datawhalechina/Datawhale_Learning/tree/master/doc/%E7%90%86%E8%AE%BA%E5%BA%94%E7%94%A8/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98\" >DataWhale数据挖掘实战营<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.jianshu.com/p/29ece4592178\" >利用Python进行数据分析·第2版<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.jianshu.com/p/0c967a1526ef\" >Stata：离群值！离群值？离群值！<i class=\"fas fa-external-link-alt\"></i></a></li>\n<li><a class=\"link\"   href=\"https://www.jiqizhixin.com/articles/021704\" >机器学习中如何处理不平衡数据？<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"},{"title":"BeautifulSoup","abbrlink":51103,"date":"2019-07-01T16:00:00.000Z","_content":"\n## 请求\n\n\n```python\nimport requests\nresult = requests.get(\"https://news.163.com/\")\n```\n\n\n```python\n# 从返回result的状态码中，了解到是否请求成功\nresult.status_code\n```\n\n\n\n\n    200\n\n\n\n\n```python\nresult.encoding\n```\n\n\n\n\n    'GBK'\n\n\n\n\n```python\ncontent = result.content\nprint (content[:1000]) #前1000个字符\n```\n\n    b' <!DOCTYPE HTML>\\n<!--[if IE 6 ]> <html id=\"ne_wrap\" class=\"ne_ua_ie6 ne_ua_ielte8\"> <![endif]-->\\n<!--[if IE 7 ]> <html id=\"ne_wrap\" class=\"ne_ua_ie7 ne_ua_ielte8\"> <![endif]-->\\n<!--[if IE 8 ]> <html id=\"ne_wrap\" class=\"ne_ua_ie8 ne_ua_ielte8\"> <![endif]-->\\n<!--[if IE 9 ]> <html id=\"ne_wrap\" class=\"ne_ua_ie9\"> <![endif]-->\\n<!--[if (gte IE 10)|!(IE)]><!--> <html id=\"ne_wrap\" phone=\"1\"> <!--<![endif]-->\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\\n<meta name=\"model_url\" content=\"http://news.163.com/special/index2015/\" />\\n<title>\\xcd\\xf8\\xd2\\xd7\\xd0\\xc2\\xce\\xc5</title>\\n<base target=\"_blank\" />\\n<meta name=\"keywords\" content=\"\\xd0\\xc2\\xce\\xc5,\\xd0\\xc2\\xce\\xc5\\xd6\\xd0\\xd0\\xc4,\\xd0\\xc2\\xce\\xc5\\xc6\\xb5\\xb5\\xc0,\\xca\\xb1\\xca\\xc2\\xb1\\xa8\\xb5\\xc0\" />\\n<meta name=\"description\" content=\"\\xd0\\xc2\\xce\\xc5,\\xd0\\xc2\\xce\\xc5\\xd6\\xd0\\xd0\\xc4,\\xb0\\xfc\\xba\\xac\\xd3\\xd0\\xca\\xb1\\xd5\\xfe\\xd0\\xc2\\xce\\xc5,\\xb9\\xfa\\xc4\\xda\\xd0\\xc2\\xce\\xc5,\\xb9\\xfa\\xbc\\xca\\xd0\\xc2\\xce\\xc5,\\xc9\\xe7\\xbb\\xe1\\xd0\\xc2\\xce\\xc5,\\xca\\xb1\\xca\\xc2\\xc6\\xc0\\xc2\\xdb,\\xd0\\xc2\\xce\\xc5\\xcd\\xbc\\xc6\\xac,\\xd0\\xc2\\xce\\xc5\\xd7\\xa8\\xcc\\xe2,\\xd0\\xc2\\xce\\xc5\\xc2\\xdb\\xcc\\xb3,\\xbe\\xfc\\xca\\xc2,\\xc0\\xfa\\xca\\xb7,\\xb5\\xc4\\xd7\\xa8\\xd2\\xb5\\xca\\xb1\\xca\\xc2\\xb1\\xa8\\xb5\\xc0\\xc3\\xc5\\xbb\\xa7\\xcd\\xf8\\xd5\\xbe\" />\\n  <script type=\"text/javascript\" _keep=\"true\">\\n    var matchStr =window.location.href;\\n    var reURL = /^(https):\\\\/\\\\/.+$/;\\n    if(!reURL.test(matchStr)){\\n        windo'\n\n\n## 模拟登入\n\n\n```python\ns = requests.session()\ndata = {'user':'用户名','passdw':'密码'}\n#post 换成登录的地址，\nres=s.post('http://www.xxx.net/index.php?action=login',data);\n#换成抓取的地址\ns.get('http://www.xxx.net/archives/155/');\n```\n\n## BeautifulSoup\n\n\n```python\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nfrom bs4 import BeautifulSoup\nsoup = BeautifulSoup(content, fromEncoding=\"GB2312\") #注意这个地方\nprint(soup)\n```\n\n    <!DOCTYPE HTML>\n    <!--[if IE 6 ]> <html id=\"ne_wrap\" class=\"ne_ua_ie6 ne_ua_ielte8\"> <![endif]--><!--[if IE 7 ]> <html id=\"ne_wrap\" class=\"ne_ua_ie7 ne_ua_ielte8\"> <![endif]--><!--[if IE 8 ]> <html id=\"ne_wrap\" class=\"ne_ua_ie8 ne_ua_ielte8\"> <![endif]--><!--[if IE 9 ]> <html id=\"ne_wrap\" class=\"ne_ua_ie9\"> <![endif]--><!--[if (gte IE 10)|!(IE)]><!--><html id=\"ne_wrap\" phone=\"1\"> <!--<![endif]-->\n    <head>\n    <meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n    <meta content=\"http://news.163.com/special/index2015/\" name=\"model_url\"/>\n    <title>网易新闻</title>\n    <base target=\"_blank\"/>\n    <meta content=\"新闻,新闻中心,新闻频道,时事报道\" name=\"keywords\"/>\n    <meta content=\"新闻,新闻中心,包含有时政新闻,国内新闻,国际新闻,社会新闻,时事评论,新闻图片,新闻专题,新闻论坛,军事,历史,的专业时事报道门户网站\" name=\"description\"/>\n    <script _keep=\"true\" type=\"text/javascript\">\n        var matchStr =window.location.href;\n        var reURL = /^(https):\\/\\/.+$/;\n        if(!reURL.test(matchStr)){\n            window.location.href = \"https://news.163.com/\";\n        }\n      </script>\n    <!-- 适配3g ie8bug-->\n    <!-- 广告样式 -->\n    <style>\n    .channel_relative_2016{\n        position:relative;\n        line-height: 0px;\n    }\n    .channel_relative_2016_lh{\n        line-height: 0px;\n    }\n    .channel_ad_2016{\n        height: 17px;\n        display:none;\n        background: rgba(0,0,0,0.6);\n        background: #000\\9;\n        color: #fff;\n        border-radius: 0 8px 0px 0px;\n        line-height: 17px;\n        width: 30px;\n        text-align: left;\n        overflow: hidden;\n        font-size: 12px;\n        font-family: Arial;\n        position:absolute;\n        left:0;\n        bottom:0;\n        z-index:3;\n    }\n    .channel_ad_text_2016{\n        position: absolute;\n        right: 1px;\n        bottom: -2px;\n        color: #999999;\n        z-index:3;\n        font-size: 12px;\n        font-family: Arial;\n       display:none;\n      line-height: 18px;\n    }\n    .channel_relative_2016 .channel_ad_2016,.channel_relative_2016 .channel_ad_text_2016{\n        display: inline-block;\n    }\n    </style>\n    <!-- channel2019_logo样式 -->\n    <style type=\"text/css\">\n    \t.channel2019_logo{\n    \t\tbackground: url(http://cms-bucket.ws.126.net/2019/04/25/09e37a6a4dd349468cd38dd79a3b15b7.png) no-repeat !important;\n    \t\twidth: 152px !important;\n    \t\theight: 37px !important;\n    \t\tdisplay: block !important;\n    \t\tfloat: left!important;\n    \t}\n    \t/*新闻*/\n    \t.channel2019_news_logo{\n    \t\tbackground-position: 0px 4px !important;\n    \t}\n    \t/*科技*/\n    \t.channel2019_tech_logo{\n    \t\tbackground-position: 0px -96px !important;\n        \t\n    \t}\n    \t/*手机*/\n    \t.channel2019_mobile_logo{\n    \t\tbackground-position: 0px -196px !important;\n    \t\t\n    \t}\n    \t/*数码*/\n    \t.channel2019_digi_logo{\n    \t\tbackground-position: 0px -296px !important;\n        \t\n    \t}\n    \t/*新闻学院*/\n    \t.channel2019_college_logo{\n    \t\tbackground-position: 0px -396px !important;\n    \t\twidth: 213px !important;\n    \t}\n    \t/*政务*/\n    \t.channel2019_gov_logo{\n    \t\tbackground-position: 0px -496px !important;\n    \t}\n    \t/*军事*/\n    \t.channel2019_war_logo{\n    \t\tbackground-position: 0px 0px !important;\n        \theight: 33px !important;\n    \t}\n    \t/*航空*/\n    \t.channel2019_air_logo{\n    \t\tbackground-position: 0px 0px !important;\n        \theight: 33px !important;\n    \t}\n       /*新闻排行榜*/\n    \t.channel2019_newsrank_logo{\n    \t\tbackground-position: 0px 0px !important;\n        \theight: 33px !important;\n    \t}\n      \t/*新闻图片*/\n    \t.channel2019_newsphoto_logo{\n    \t\tbackground-position: 0px -2200px !important;\n          \twidth: 213px !important;\n        \theight: 33px !important;\n    \t}\n    \t/*体育*/\n    \t.channel2019_sports_logo{\n    \t\tbackground-position: 0px -796px !important;\n    \t}\n      \t/*体育二级页*/\n    \t.channel2019_sportssub_logo{\n    \t\theight: 33px !important;\n    \t\tbackground-position: 0px -800px !important;\n    \t}\n    \t/*娱乐*/\n    \t.channel2019_ent_logo{\n    \t\tbackground-position: 0px -896px !important;\n    \t}\n    \t/*音乐*/\n    \t.channel2019_music_logo{\n    \t\tbackground-position: 0px -900px !important;\n        \theight: 32px !important;\n    \t}\n    \t/*时尚*/\n    \t.channel2019_fashion_logo{\n    \t\tbackground-position: 0px -1100px !important;\n    \t\theight: 32px !important;\n    \t}\n    \t/*女人*/\n    \t.channel2019_lady_logo{\n    \t\tbackground-position: 0px -1196px !important;\n    \t}\n    \t/*财经*/\n    \t.channel2019_money_logo{\n    \t\tbackground-position: 0px -1300px !important;\n    \t}\n        /*手机图片*/\n    \t.channel2019_mobilephoto_logo{\n    \t\tbackground-position: 0px -2300px !important;\n    \t\twidth: 213px !important;\n        \theight: 33px !important;\n    \t}\n    \t/*汽车*/\n    \t.channel2019_auto_logo{\n    \t\tbackground-position: 0px -1396px !important;\n    \t}\n    \t/*旅游*/\n    \t.channel2019_travel_logo{\n    \t\tbackground-position: 0px -1496px !important;\n    \t}\n    \t/*健康*/\n    \t.channel2019_jiankang_logo{\n    \t\tbackground-position: 0px -1596px !important;\n    \t}\n    \t/*教育*/\n    \t.channel2019_edu_logo{\n    \t\tbackground-position: 0px -1696px !important;\n    \t}\n    \t/*艺术*/\n    \t.channel2019_art_logo{\n    \t\tbackground-position: 0px -1796px !important;\n    \t}\n    \t/*亲子*/\n    \t.channel2019_baby_logo{\n    \t\tbackground-position: 0px -1896px !important;\n    \t}\n    \t/*双创*/\n    \t.channel2019_shuangchuang_logo{\n    \t\tbackground-position: 0px -1996px !important;\n    \t}\n    \t/*酒香*/\n    \t.channel2019_jiu_logo{\n    \t\tbackground-position: 0px -2096px !important;\n    \t}\n      \t/*游戏*/\n    \t.channel2019_game_logo{\n    \t\tbackground-position: 0px -2400px !important;\n    \t}\n    \t</style>\n    <script _keep=\"true\" type=\"text/javascript\">\n    (function() {\n        if(/s=noRedirect/i.test(location.search)) return; \n        if(/AppleWebKit.*Mobile/i.test(navigator.userAgent) || (/MIDP|SymbianOS|NOKIA|SAMSUNG|LG|NEC|TCL|Alcatel|BIRD|DBTEL|Dopod|PHILIPS|HAIER|LENOVO|MOT-|Nokia|SonyEricsson|SIE-|Amoi|ZTE/.test(navigator.userAgent))) {\n            try {\n                if(/Android|Windows Phone|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent)) {\n                     window.location.href = \"https://3g.163.com/touch/news/\";\n                } else if(/iPad/i.test(navigator.userAgent)) {\n                    window.location.href = \"https://news.163.com/pad/\"\n                }\n            } catch(e) {}\n        }   \n    })();\n    </script>\n    <script _keep=\"true\" charset=\"gbk\" src=\"//news.163.com/special/00015CJL/xw_news_data.js\"></script>\n    <!-- 社交传播统计 -->\n    <script src=\"//static.ws.126.net/163/frontend/libs/antanalysis.min.js\"></script>\n    <script _keep=\"true\" src=\"//static.ws.126.net/163/frontend/antnest/NTM-KFGT6I8U-38.js\"></script>\n    <script crossorigin=\"anonymous\" src=\"https://static.ws.126.net/163/frontend/libs/raven-3.26.2.min.js\"></script>\n    <link href=\"https://static.ws.126.net/163/f2e/news/index2016_rmd/css/head~a2a2093f5d52d.css\" rel=\"stylesheet\"/>\n    </head>\n    <body class=\"news_pc\" ne-class=\"{{myState.isNs9 ? 'ns9' : 'ns12'}}\" ne-module=\"/news/index2016_rmd/index2016.js\">\n    <div class=\"index2016_wrap\" id=\"index2016_wrap\">\n    <div>\n    <!-- 节日动画 start -->\n    <!-- 节日动画 end -->\n    <div class=\"common_nav\">\n    <link href=\"//static.ws.126.net/163/f2e/commonnav2019/css/commonnav_headcss-61ce66f60e.css\" rel=\"stylesheet\"/>\n    <!-- urs -->\n    <script _keep=\"true\" src=\"//urswebzj.nosdn.127.net/webzj_cdn101/message.js\" type=\"text/javascript\"></script>\n    <div class=\"ntes_nav_wrap\" id=\"js_N_NTES_wrap\">\n    <div class=\"ntes-nav\" id=\"js_N_nav\">\n    <div class=\"ntes-nav-main clearfix\">\n    <div class=\"c-fl\">\n    <a class=\"ntes-nav-index-title ntes-nav-entry-wide c-fl\" href=\"http://www.163.com/\" title=\"网易首页\">网易首页</a>\n    <!-- 应用 -->\n    <div class=\"js_N_navSelect ntes-nav-select ntes-nav-select-wide ntes-nav-app c-fl\">\n    <a class=\"ntes-nav-select-title ntes-nav-entry-bgblack JS_NTES_LOG_FE\" href=\"http://www.163.com/#f=topnav\">应用\n                <em class=\"ntes-nav-select-arr\"></em>\n    </a>\n    <div class=\"ntes-nav-select-pop\">\n    <ul class=\"ntes-nav-select-list clearfix\">\n    <li>\n    <a href=\"http://m.163.com/newsapp/#f=topnav\">\n    <span>\n    <em class=\"ntes-nav-app-newsapp\">网易新闻</em>\n    </span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://open.163.com/#f=topnav\">\n    <span>\n    <em class=\"ntes-nav-app-open\">网易公开课</em>\n    </span>\n    </a>\n    </li>\n    <li>\n    <a href=\"https://hongcai.163.com/?from=pcsy-button\">\n    <span>\n    <em class=\"ntes-nav-app-hongcai\">网易红彩</em>\n    </span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://u.163.com/aosoutbdbd8\">\n    <span>\n    <em class=\"ntes-nav-app-yanxuan\">网易严选</em>\n    </span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://mail.163.com/client/dl.html?from=mail46\">\n    <span>\n    <em class=\"ntes-nav-app-mail\">邮箱大师</em>\n    </span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://study.163.com/client/download.htm?from=163app&amp;utm_source=163.com&amp;utm_medium=web_app&amp;utm_campaign=business\">\n    <span>\n    <em class=\"ntes-nav-app-study\">网易云课堂</em>\n    </span>\n    </a>\n    </li>\n    <li class=\"last\">\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece47f92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=6b69bfbfac0db5f335232faa957a27bb&amp;target=https%3A%2F%2Fapp.kaola.com%2F%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>\n    <em class=\"ntes-nav-app-kaola-hg\">网易考拉</em>\n    </span>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </div>\n    <div class=\"c-fr\">\n    <!-- 片段开始 -->\n    <div class=\"ntes-nav-quick-navigation\">\n    <a class=\"ntes-nav-quick-navigation-btn\" href=\"javascript:void(0);\" id=\"js_N_ntes_nav_quick_navigation_btn\" target=\"_self\">\n    <em>快速导航\n                  <span class=\"menu1\"></span>\n    <span class=\"menu2\"></span>\n    <span class=\"menu3\"></span>\n    </em>\n    </a>\n    <div class=\"ntes-quicknav-pop\" id=\"js_N_ntes_quicknav_pop\">\n    <div class=\"ntes-quicknav-list\">\n    <div class=\"ntes-quicknav-content\">\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-1\">\n    <li>\n    <h3><a href=\"https://news.163.com\">新闻</a></h3>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/domestic\">国内</a>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/world\">国际</a>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/photo\">图片</a>\n    </li>\n    <li>\n    <a href=\"http://view.163.com\">评论</a>\n    </li>\n    <li>\n    <a href=\"http://discovery.163.com\">探索</a>\n    </li>\n    <li>\n    <a href=\"http://war.163.com\">军事</a>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/localnews/\">本地新闻</a>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/special/wangsansanhome/\">王三三</a>\n    </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-2\">\n    <li>\n    <h3><a href=\"http://sports.163.com\">体育</a></h3>\n    </li>\n    <li>\n    <a href=\"http://sports.163.com/nba\">NBA</a>\n    </li>\n    <li>\n    <a href=\"http://sports.163.com/cba\">CBA</a>\n    </li>\n    <li>\n    <a href=\"http://sports.163.com/allsports\">综合</a>\n    </li>\n    <li>\n    <a href=\"http://sports.163.com/zc\">中超</a>\n    </li>\n    <li>\n    <a href=\"http://sports.163.com/world\">国际足球</a>\n    </li>\n    <li>\n    <a href=\"http://sports.163.com/yc\">英超</a>\n    </li>\n    <li>\n    <a href=\"http://sports.163.com/xj\">西甲</a>\n    </li>\n    <li>\n    <a href=\"http://sports.163.com/yj\">意甲</a>\n    </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-3\">\n    <li>\n    <h3><a href=\"http://ent.163.com\">娱乐</a></h3>\n    </li>\n    <li>\n    <a href=\"http://ent.163.com/star\">明星</a>\n    </li>\n    <li>\n    <a href=\"http://ent.163.com/photo\">图片</a>\n    </li>\n    <li>\n    <a href=\"http://ent.163.com/movie\">电影</a>\n    </li>\n    <li>\n    <a href=\"http://ent.163.com/tv\">电视</a>\n    </li>\n    <li>\n    <a href=\"http://ent.163.com/music\">音乐</a>\n    </li>\n    <li>\n    <a href=\"http://ent.163.com/special/gsbjb/\">稿事编辑部</a>\n    </li>\n    <li>\n    <a href=\"http://ent.163.com/special/focus_ent/\">娱乐FOCUS</a>\n    </li>\n    <li><a href=\"http://ent.163.com/special/xbkhz/\">星捕快</a></li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-4\">\n    <li>\n    <h3><a href=\"http://money.163.com\">财经</a></h3>\n    </li>\n    <li>\n    <a href=\"http://money.163.com/stock\">股票</a>\n    </li>\n    <li>\n    <a href=\"http://quotes.money.163.com/stock\">行情</a>\n    </li>\n    <li>\n    <a href=\"http://money.163.com/chanjing\">产经</a>\n    </li>\n    <li>\n    <a href=\"http://money.163.com/ipo\">新股</a>\n    </li>\n    <li>\n    <a href=\"http://money.163.com/finance\">金融</a>\n    </li>\n    <li>\n    <a href=\"http://money.163.com/fund\">基金</a>\n    </li>\n    <li>\n    <a href=\"http://biz.163.com\">商业</a>\n    </li>\n    <li>\n    <a href=\"http://money.163.com/licai\">理财</a>\n    </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-5\">\n    <li>\n    <h3><a href=\"http://auto.163.com\">汽车</a></h3>\n    </li>\n    <li>\n    <a href=\"http://auto.163.com/buy\">购车</a>\n    </li>\n    <li>\n    <a href=\"http://auto.163.com/depreciate\">行情</a>\n    </li>\n    <li>\n    <a href=\"http://product.auto.163.com/finder\">选车</a>\n    </li>\n    <li>\n    <a href=\"http://product.auto.163.com\">车型库</a>\n    </li>\n    <li>\n    <a href=\"http://auto.163.com/news\">行业</a>\n    </li>\n    <li>\n    <a href=\"http://auto.163.com/chezhu\">用车</a>\n    </li>\n    <li>\n    <a href=\"http://auto.163.com/photo\">汽车图片</a>\n    </li>\n    <li>\n                       \n                      </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-6\">\n    <li>\n    <h3><a href=\"http://tech.163.com\">科技</a></h3>\n    </li>\n    <li>\n    <a href=\"http://tech.163.com/telecom/\">通信</a>\n    </li>\n    <li>\n    <a href=\"http://tech.163.com/it\">IT</a>\n    </li>\n    <li>\n    <a href=\"http://tech.163.com/internet\">互联网</a>\n    </li>\n    <li>\n    <a href=\"http://tech.163.com/special/ydhlw\">移动互联网</a>\n    </li>\n    <li>\n    <a href=\"http://tech.163.com/special/chzt\">特别策划</a>\n    </li>\n    <li>\n    <a href=\"http://tech.163.com/special/wudaokou\">五道口沙龙</a>\n    </li>\n    <li>\n    <a href=\"http://tech.163.com/special/yyzd\">易语中的</a>\n    </li>\n    <li>\n    <a href=\"http://tech.163.com/special\">专题</a>\n    </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-7\">\n    <li>\n    <h3><a href=\"http://lady.163.com\">女人</a></h3>\n    </li>\n    <li>\n    <a href=\"http://baby.163.com\">亲子</a>\n    </li>\n    <li>\n    <a href=\"http://fashion.163.com/art\">艺术</a>\n    </li>\n    <li>\n    <a href=\"http://fashion.163.com\">时尚</a>\n    </li>\n    <li>\n    <a href=\"http://shoucang.163.com\">收藏</a>\n    </li>\n    <li>\n    <a href=\"http://lady.163.com/sense\">情感</a>\n    </li>\n    <li>\n    <a href=\"http://lady.163.com/astro\">星座</a>\n    </li>\n    <li>\n    <a href=\"http://lady.163.com/beauty\">美容</a>\n    </li>\n    <li>\n    <a href=\"http://cosmetic.lady.163.com/trial\">免费试用</a>\n    </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-8\">\n    <li>\n    <h3><a href=\"http://mobile.163.com\">手机</a><span>/</span><a href=\"http://digi.163.com/\">数码</a></h3>\n    </li>\n    <li>\n    <a href=\"http://mobile.163.com/mi\">移动</a>\n    </li>\n    <li>\n    <a href=\"http://digi.163.com/pc\">电脑</a>\n    </li>\n    <li>\n    <a href=\"http://product.mobile.163.com\">手机库</a>\n    </li>\n    <li>\n    <a href=\"http://hea.163.com/\">家电</a>\n    </li>\n    <li>\n    <a href=\"http://digi.163.com/smart\">智能硬件</a>\n    </li>\n    <li>\n    <a href=\"http://digi.163.com/dc\">相机</a>\n    </li>\n    <li>\n    <a href=\"http://v.mobile.163.com\">手机视频</a>\n    </li>\n    <li>\n                       \n                      </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-9\">\n    <li>\n    <h3><a href=\"http://house.163.com\">房产</a><span>/</span><a href=\"http://home.163.com\">家居</a></h3>\n    </li>\n    <li>\n    <a href=\"http://bj.house.163.com\">北京房产</a>\n    </li>\n    <li>\n    <a href=\"http://sh.house.163.com\">上海房产</a>\n    </li>\n    <li>\n    <a href=\"http://gz.house.163.com\">广州房产</a>\n    </li>\n    <li>\n    <a href=\"http://house.163.com/city\">全部分站</a>\n    </li>\n    <li>\n    <a href=\"http://xf.house.163.com\">楼盘库</a>\n    </li>\n    <li>\n    <a href=\"http://home.163.com/jiaju/\">家具</a>\n    </li>\n    <li>\n    <a href=\"http://home.163.com/weiyu/\">卫浴</a>\n    </li>\n    <li>\n    <a href=\"http://home.163.com/special/jiajuyigui\">衣柜</a>\n    </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-10\">\n    <li>\n    <h3><a href=\"http://travel.163.com\">旅游</a></h3>\n    </li>\n    <li>\n    <a href=\"http://travel.163.com/outdoor\">户外</a>\n    </li>\n    <li>\n    <a href=\"http://guizhou.travel.163.com\">贵州</a>\n    </li>\n    <li>\n    <a href=\"http://travel.163.com/food\">美食</a>\n    </li>\n    <li>\n    <a href=\"http://jingdian.travel.163.com/domestic/1000066937\">四川</a>\n    </li>\n    <li>\n    <a href=\"http://jingdian.travel.163.com\">景点</a>\n    </li>\n    <li>\n    <a href=\"http://jingdian.travel.163.com/domestic/1000066944\">新疆</a>\n    </li>\n    <li>\n    <a href=\"http://travel.163.com/special/travellist/#f=endnav\">专题</a>\n    </li>\n    <li>\n    <a href=\"http://jingdian.travel.163.com/domestic/1000066926/#f=endnav\">西藏</a>\n    </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-11\">\n    <li>\n    <h3><a href=\"http://edu.163.com\">教育</a></h3>\n    </li>\n    <li>\n    <a href=\"http://edu.163.com/yimin\">移民</a>\n    </li>\n    <li>\n    <a href=\"http://edu.163.com/kaoyan\">考研</a>\n    </li>\n    <li>\n    <a href=\"http://edu.163.com/liuxue\">留学</a>\n    </li>\n    <li>\n    <a href=\"http://edu.163.com/special/official\">公务员</a>\n    </li>\n    <li>\n    <a href=\"http://edu.163.com/en\">外语</a>\n    </li>\n    <li>\n    <a href=\"http://kids.163.com\">中小学</a>\n    </li>\n    <li>\n    <a href=\"http://edu.163.com/gaokao\">高考</a>\n    </li>\n    <li>\n    <a href=\"http://daxue.163.com\">校园</a>\n    </li>\n    </ul>\n    <div class=\"ntes-nav-sitemap\"><a href=\"http://sitemap.163.com/\"><i></i>查看网易地图</a></div>\n    </div>\n    </div>\n    </div>\n    </div>\n    <div class=\"c-fr\">\n    <div class=\"c-fl\" id=\"js_N_navLoginBefore\">\n    <div class=\"js_loginframe ntes-nav-login ntes-nav-login-normal\" id=\"js_N_navHighlight\">\n    <a class=\"ntes-nav-login-title\" href=\"http://reg.163.com/\" id=\"js_N_nav_login_title\">登录</a>\n    <div class=\"ntes-nav-loginframe-pop\" id=\"js_N_login_wrap\">\n    <!--加载登陆组件-->\n    </div>\n    </div>\n    <div class=\"js_N_navSelect ntes-nav-select ntes-nav-select-wide JS_NTES_LOG_FE c-fl\">\n    <a class=\"ntes-nav-select-title ntes-nav-select-title-register\" href=\"http://reg.email.163.com/mailregAll/reg0.jsp?from=163navi&amp;regPage=163\">注册免费邮箱\n                    <em class=\"ntes-nav-select-arr\"></em>\n    </a>\n    <div class=\"ntes-nav-select-pop\">\n    <ul class=\"ntes-nav-select-list clearfix\" style=\"width:210px;\">\n    <li>\n    <a href=\"http://reg.vip.163.com/register.m?from=topnav\">\n    <span style=\"width:190px;\">注册VIP邮箱（特权邮箱，付费）</span>\n    </a>\n    </li>\n    <li class=\"last JS_NTES_LOG_FE\">\n    <a href=\"http://mail.163.com/client/dl.html?from=mail46\">\n    <span style=\"width:190px;\">免费下载网易官方手机邮箱应用</span>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </div>\n    <div class=\"c-fl\" id=\"js_N_navLoginAfter\" style=\"display:none\">\n    <div class=\"js_N_navSelect ntes-nav-select ntes-nav-logined JS_NTES_LOG_FE\" id=\"js_N_logined_warp\">\n    <span class=\"ntes-nav-select-title ntes-nav-logined-userinfo\">\n    <span class=\"ntes-nav-logined-username\" id=\"js_N_navUsername\"></span>\n    <em class=\"ntes-nav-select-arr\"></em>\n    </span>\n    <div class=\"ntes-nav-select-pop\" id=\"js_login_suggest_wrap\">\n    <ul class=\"ntes-nav-select-list clearfix\" id=\"js_logined_suggest\"></ul>\n    </div>\n    </div>\n    <a class=\"ntes-nav-entry-wide c-fl\" id=\"js_N_navLogout\" target=\"_self\">安全退出</a>\n    </div>\n    </div>\n    <ul class=\"ntes-nav-inside\">\n    <li>\n    <div class=\"js_N_navSelect ntes-nav-select c-fl\">\n    <a class=\"ntes-nav-mobile-title ntes-nav-entry-bgblack\" href=\"http://www.163.com/newsapp/#f=163nav\">\n    <em class=\"ntes-nav-entry-mobile\">移动端</em>\n    </a>\n    <div class=\"qrcode-img\">\n    <a href=\"http://www.163.com/newsapp/#f=163nav\">\n    <img src=\"//static.ws.126.net/f2e/include/common_nav/images/topapp.jpg\"/>\n    </a>\n    </div>\n    </div>\n    </li>\n    <li>\n    <div class=\"js_N_navSelect ntes-nav-select c-fl\">\n    <a class=\"ntes-nav-select-title ntes-nav-select-title-huatian ntes-nav-entry-bgblack\" href=\"https://open.163.com/\" id=\"js_love_url\">\n    <em class=\"ntes-nav-entry-huatian\">网易公开课</em>\n    <em class=\"ntes-nav-select-arr\"></em>\n    <span class=\"ntes-nav-msg\">\n    <em class=\"ntes-nav-msg-num\"></em>\n    </span>\n    </a>\n    <div class=\"ntes-nav-select-pop ntes-nav-select-pop-huatian\">\n    <ul class=\"ntes-nav-select-list clearfix\">\n    <li>\n    <a href=\"https://vip.open.163.com\">\n    <span>付费精品</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"https://open.163.com/ted/\">\n    <span>TED</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"https://open.163.com/ocw/\">\n    <span>国际名校公开课</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://open.163.com/cuvocw/\">\n    <span>中国大学视频公开课</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"https://open.163.com/appreciation\">\n    <span>赏课</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"https://open.163.com/khan/\">\n    <span>可汗学院</span>\n    </a>\n    </li>\n    <li class=\"last\">\n    <a href=\"http://open.163.com/special/appdownload_pc/\">\n    <span>下载公开课</span>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </li>\n    <li>\n    <div class=\"js_N_navSelect ntes-nav-select c-fl\">\n    <a class=\"ntes-nav-select-title ntes-nav-select-title-kaola ntes-nav-entry-bgblack\" href=\"http://da.kaola.com/redirect?t=5aaebece48792c00&amp;p=c901ea7c&amp;proId=1024&amp;code=d638f275b1755320e845734e53e897ee&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\" id=\"js_kaola_url\">\n    <em class=\"ntes-nav-entry-kaola\">网易考拉</em>\n    <em class=\"ntes-nav-select-arr\"></em>\n    <span class=\"ntes-nav-msg ntes-nav-kaola-msg\" id=\"js_N_navKaolaMsg\">\n    <em class=\"ntes-nav-msg-num\"></em>\n    </span>\n    </a>\n    <div class=\"ntes-nav-select-pop ntes-nav-select-pop-kaola\">\n    <ul class=\"ntes-nav-select-list clearfix\">\n    <li>\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece48f92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=b3e224752b2cad85e9831e8c6cf7fbbd&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fbimaibangdan.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>1000元新人大礼包</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece49392c00&amp;p=c901ea7c&amp;proId=1024&amp;code=fd8e43f4a20a26fbe60f7e7de1f17efe&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>新人专享进口好货</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece49392c01&amp;p=c901ea7c&amp;proId=1024&amp;code=21bcd5b595fc235cfd11e3e1cff14177&amp;target=https%3A%2F%2Factivity.kaola.com%2Factivity%2FflashSaleIndex%2Fshow.html%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>今日限时抢购</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece49792c00&amp;p=c901ea7c&amp;proId=1024&amp;code=ecc40777cb2d68a3d9fb078b232f081d&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfyrzolcpagerz.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>营养保健</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece49b92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=0cdd5a920c768340ffc12eccd659341d&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fnewpc.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>个人洗护</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece4a392c00&amp;p=c901ea7c&amp;proId=1024&amp;code=ee49a3a793f22e648ac616f5dab061dd&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjpwmb9zcpagesl.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>美容彩妆</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece4a792c00&amp;p=c901ea7c&amp;proId=1024&amp;code=6eb2598fd20963efc203a4e3fe88f4e2&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fmyxrq.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>母婴儿童</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece4ab92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=3946ce460ba655c11afac69855dfc02b&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Ffoodnewcustomers.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>环球美食</span>\n    </a>\n    </li>\n    <li class=\"last\">\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece4af92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=2eee7290051863737a434d44f3c0d46f&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fnewtalent.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>家居生活</span>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </li>\n    <li>\n    <div class=\"js_N_navSelect ntes-nav-select c-fl\">\n    <a class=\"ntes-nav-select-title ntes-nav-select-title-lofter ntes-nav-entry-bgblack\" href=\"http://you.163.com/?from=web_fc_menhu_xinrukou_1\" id=\"js_lofter_icon_url\">\n    <em class=\"ntes-nav-entry-lofter\">网易严选</em>\n    <em class=\"ntes-nav-select-arr\"></em>\n    <span class=\"ntes-nav-msg\" id=\"js_N_navLofterMsg\">\n    <em class=\"ntes-nav-msg-num\"></em>\n    </span>\n    </a>\n    <div class=\"ntes-nav-select-pop ntes-nav-select-pop-lofter\">\n    <ul class=\"ntes-nav-select-list clearfix\" id=\"js_lofter_pop_url\">\n    <li>\n    <a href=\"http://you.163.com/act/static/Fb2d1OZ714.html?from=web_fc_menhu_xinrukou_1\">\n    <span>888元现金券</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://you.163.com/manufacturer/list?from=web_fc_menhu_xinrukou_3\">\n    <span>品牌制造商爆款</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://you.163.com/item/recommend?from=web_fc_menhu_xinrukou_4\">\n    <span>999+人气好评品</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://you.163.com/flashSale/index?from=web_fc_menhu_xinrukou_5\">\n    <span>限时特惠</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://you.163.com/item/list?categoryId=1005000&amp;from=web_fc_menhu_xinrukou_7\">\n    <span>居家床品</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://you.163.com/item/list?categoryId=1005001&amp;from=web_fc_menhu_xinrukou_8\">\n    <span>精致餐厨</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://you.163.com/item/list?categoryId=1008000&amp;from=web_fc_menhu_xinrukou_9\">\n    <span>箱包鞋类</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://you.163.com/item/list?categoryId=1010000&amp;from=web_fc_menhu_xinrukou_10\">\n    <span>经典服饰</span>\n    </a>\n    </li>\n    <li class=\"last\">\n    <a href=\"http://you.163.com/item/list?categoryId=1005002&amp;from=web_fc_menhu_xinrukou_11\">\n    <span>健康美食</span>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </li>\n    <li>\n    <div class=\"js_N_navSelect ntes-nav-select c-fl\">\n    <a class=\"ntes-nav-select-title ntes-nav-select-title-money ntes-nav-entry-bgblack\" href=\"http://pay.163.com/\">\n    <em class=\"ntes-nav-entry-money\">支付</em>\n    <em class=\"ntes-nav-select-arr\"></em>\n    </a>\n    <div class=\"ntes-nav-select-pop ntes-nav-select-pop-temp\">\n    <ul class=\"ntes-nav-select-list clearfix\">\n    <li>\n    <a href=\"http://pay.163.com/#f=topnav\">\n    <span>一卡通充值</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://ecard.163.com/script/index#f=topnav\">\n    <span>一卡通购买</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"https://k.163.com/?product=163&amp;trackid=01\">\n    <span>网易白金卡</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"https://epay.163.com/\">\n    <span>我的网易支付</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"https://3c.163.com/?from=wangyimenhu16\">\n    <span>网易智造</span>\n    </a>\n    </li>\n    <li class=\"last\">\n    <a href=\"http://lq.163.com?from=neteasemoney\">\n    <span>网易来钱-借现金</span>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </li>\n    <li>\n    <div class=\"js_N_navSelect ntes-nav-select c-fl\">\n    <a class=\"ntes-nav-select-title ntes-nav-select-title-cart ntes-nav-entry-bgblack\" href=\"http://baoxian.163.com/car/?from=mhgwc\">\n    <em class=\"ntes-nav-entry-cart\">电商</em>\n    <em class=\"ntes-nav-select-arr\"></em>\n    </a>\n    <div class=\"ntes-nav-select-pop ntes-nav-select-pop-temp\">\n    <ul class=\"ntes-nav-select-list clearfix\">\n    <li>\n    <a href=\"http://you.163.com?from=web_in_wydaohang\">\n    <span>严选</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://lq.163.com?from=neteasebuy\">\n    <span>我要借钱</span>\n    </a>\n    </li>\n    <li class=\"last\">\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece4b392c00&amp;p=c901ea7c&amp;proId=1024&amp;code=d15f8f9d72ccc507aeefda91b43c0cd2&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>网易考拉</span>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </li>\n    <li>\n    <div class=\"js_N_navSelect ntes-nav-select c-fl\">\n    <a class=\"ntes-nav-select-title ntes-nav-select-title-mail ntes-nav-entry-bgblack\" id=\"js_mail_url\">\n    <em class=\"ntes-nav-entry-mail\">邮箱</em>\n    <em class=\"ntes-nav-select-arr\"></em>\n    <span class=\"ntes-nav-msg\" id=\"js_N_navMailMsg\">\n    <em class=\"ntes-nav-msg-num\" id=\"js_N_navMailMsgNum\"></em>\n    </span>\n    </a>\n    <div class=\"ntes-nav-select-pop ntes-nav-select-pop-mail\">\n    <ul class=\"ntes-nav-select-list clearfix\">\n    <li>\n    <a href=\"http://email.163.com/#f=topnav\">\n    <span>免费邮箱</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://vipmail.163.com/#f=topnav\">\n    <span>VIP邮箱</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://qiye.163.com/#f=topnav\">\n    <span>企业邮箱</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://reg.email.163.com/mailregAll/reg0.jsp?from=ntes_nav&amp;regPage=163\">\n    <span>免费注册</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://reg.email.163.com/unireg/call.do?cmd=register.entrance&amp;flow=mobile&amp;from=ntes_nav\">\n    <span>快速注册</span>\n    </a>\n    </li>\n    <li class=\"last\">\n    <a href=\"http://mail.163.com/dashi/dlpro.html?from=mail46\">\n    <span>客户端下载</span>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </div>\n    </div>\n    <script src=\"//static.ws.126.net/163/f2e/commonnav2019/js/commonnav_headjs-2f356198e6.js\"></script>\n    </div>\n    <!-- 节日背景 -->\n    <div class=\"ns-bg-wrap\">\n    <div class=\"N-nav-channel JS_NTES_LOG_FE\" data-module-name=\"xwwzy_11_headdaohang\">\n    <a class=\"first\" href=\"https://news.163.com/\">新闻</a><a href=\"http://sports.163.com/\">体育</a><a href=\"http://sports.163.com/nba/\">NBA</a><a href=\"http://ent.163.com/\">娱乐</a><a href=\"http://money.163.com/\">财经</a><a href=\"http://money.163.com/stock/\">股票</a><a href=\"http://auto.163.com/\" id=\"_link_auto\">汽车</a><a href=\"http://tech.163.com/\">科技</a><a href=\"http://mobile.163.com/\">手机</a><a href=\"http://digi.163.com/\">数码</a><a href=\"http://lady.163.com/\">女人</a><a href=\"http://v.163.com/\">直播</a><a href=\"http://v.163.com/special/video/#tuijian\">视频</a><a href=\"http://travel.163.com/\">旅游</a><a href=\"http://house.163.com/\" id=\"houseUrl\">房产</a><a href=\"http://home.163.com/\" id=\"homeUrl\">家居</a><a href=\"http://edu.163.com/\">教育</a><a href=\"http://book.163.com/\">读书</a><a href=\"https://news.163.com/\" id=\"_link_game\">本地</a><a href=\"http://jiankang.163.com/\">健康</a><a href=\"http://rd.da.netease.com/redirect?t=5802fb18cf033c80&amp;p=e17af55c&amp;proId=1024&amp;target=https%3A%2F%2Fwww.kaola.com%2F%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">海淘</a><a class=\"last\" href=\"http://art.163.com/\">艺术</a>\n    </div>\n    <!-- 游戏替换为本地，并定向 0310-->\n    <!-- 配置定向城市 -->\n    <script _keep=\"true\" type=\"text/javascript\">\n    var HouseNavBendiTxt = {\n        \"province\": [\n            {\n                \"name\": \"北京市\",\n                \"shortName\": \"北京\",\n                \"url\":\"http://bj.news.163.com/\"\n            },\n            {\n                \"name\": \"上海市\",\n                \"shortName\": \"上海\",\n                \"url\":\"http://sh.news.163.com/\"\n            },\n            {\n                \"name\": \"天津市\",\n                \"shortName\": \"天津\",\n                \"url\":\"http://tj.news.163.com/\"\n            },\n            {\n                \"name\": \"广东省\",\n                \"shortName\": \"广东\",\n                \"url\":\"http://gd.news.163.com/\"\n            },\n            {\n                \"name\": \"江苏省\",\n                \"shortName\": \"江苏\",\n                \"url\":\"http://js.news.163.com/\"\n            },\n            {\n                \"name\": \"浙江省\",\n                \"shortName\": \"浙江\",\n                \"url\":\"http://zj.news.163.com/\"\n            },\n            {\n                \"name\": \"四川省\",\n                \"shortName\": \"四川\",\n                \"url\":\"http://sc.news.163.com/\"\n            },\n            {\n                \"name\": \"黑龙江省\",\n                \"shortName\": \"黑龙江\",\n                \"url\":\"http://hlj.news.163.com/\"\n            },\n            {\n                \"name\": \"吉林省\",\n                \"shortName\": \"吉林\",\n                \"url\":\"http://jl.news.163.com/\"\n            },\n            {\n                \"name\": \"辽宁省\",\n                \"shortName\": \"辽宁\",\n                \"url\":\"http://liaoning.news.163.com/\"\n            },\n            {\n                \"name\": \"内蒙古自治区\",\n                \"shortName\": \"内蒙古\",\n                \"url\":\"http://hhht.news.163.com/\"\n            },\n            {\n                \"name\": \"河北省\",\n                \"shortName\": \"河北\",\n                \"url\":\"http://hebei.news.163.com/\"\n            },\n            {\n                \"name\": \"河南省\",\n                \"shortName\": \"河南\",\n                \"url\":\"http://henan.163.com/\"\n            },\n            {\n                \"name\": \"山东省\",\n                \"shortName\": \"山东\",\n                \"url\":\"http://sd.news.163.com/\"\n            },\n            {\n                \"name\": \"陕西省\",\n                \"shortName\": \"陕西\",\n                \"url\":\"http://shanxi.news.163.com/\"\n            },\n            {\n                \"name\": \"甘肃省\",\n                \"shortName\": \"甘肃\",\n                \"url\":\"http://gs.news.163.com/\"\n            },\n            {\n                \"name\": \"宁夏回族自治区\",\n                \"shortName\": \"宁夏\",\n                \"url\":\"http://ningxia.news.163.com/\"\n            },\n            {\n                \"name\": \"新疆维吾尔自治区\",\n                \"shortName\": \"新疆\",\n                \"url\":\"http://xj.news.163.com/\"\n            },\n            {\n                \"name\": \"安徽省\",\n                \"shortName\": \"安徽\",\n                \"url\":\"http://ah.news.163.com/\"\n            },\n            {\n                \"name\": \"福建省\",\n                \"shortName\": \"福建\",\n                \"url\":\"http://fj.news.163.com/\"\n            },\n            {\n                \"name\": \"广西壮族自治区\",\n                \"shortName\": \"广西\",\n                \"url\":\"http://gx.news.163.com/\"\n            },\n            {\n                \"name\": \"重庆市\",\n                \"shortName\": \"重庆\",\n                \"url\":\"http://chongqing.163.com/\"\n            },\n            {\n                \"name\": \"湖北省\",\n                \"shortName\": \"湖北\",\n                \"url\":\"http://hb.news.163.com/\"\n            },\n            {\n                \"name\": \"江西省\",\n                \"shortName\": \"江西\",\n                \"url\":\"http://jx.news.163.com/\"\n            },\n            {\n                \"name\": \"海南省\",\n                \"shortName\": \"海南\",\n                \"url\":\"http://hn.news.163.com/\"\n            },\n            {\n                \"name\": \"贵州省\",\n                \"shortName\": \"贵州\",\n                \"url\":\"http://gz.news.163.com/\"\n            },\n            {\n                \"name\": \"云南省\",\n                \"shortName\": \"云南\",\n                \"url\":\"http://yn.news.163.com/\"\n            },\n            {\n                \"name\": \"湖南省\",\n                \"shortName\": \"上海\",\n                \"url\":\"http://sh.news.163.com/\"\n            },\n            {\n                \"name\": \"山西省\",\n                \"shortName\": \"山西\",\n                \"url\":\"http://sx.news.163.com\"\n            },\n            {\n                \"name\": \"西藏自治区\",\n                \"shortName\": \"北京\",\n                \"url\":\"http://bj.news.163.com/\"\n            },\n            {\n                \"name\": \"香港特别行政区\",\n                \"shortName\": \"广东\",\n                \"url\":\"http://gd.news.163.com/\"\n            },\n            {\n                \"name\": \"澳门特别行政区\",\n                \"shortName\": \"广东\",\n                \"url\":\"http://gd.news.163.com/\"\n            },\n            {\n                \"name\": \"台湾省\",\n                \"shortName\": \"广东\",\n                \"url\":\"http://gd.news.163.com/\"\n            },\n            {\n                \"name\": \"天津市\",\n                \"shortName\": \"北京\",\n                \"url\":\"http://bj.news.163.com/\"\n            },\n            {\n                \"name\": \"青海省\",\n                \"shortName\": \"北京\",\n                \"url\":\"http://bj.news.163.com/\"\n            }\n        ],\n        \"city\": [\n            {\n                \"name\": \"大连市\",\n                \"shortName\": \"大连\",\n                \"url\":\"http://dl.news.163.com\"\n            },\n            {\n                \"name\": \"青岛市\",\n                \"shortName\": \"青岛\",\n                \"url\":\"http://qingdao.news.163.com\"\n            },\n            {\n                \"name\": \"宁波市\",\n                \"shortName\": \"宁波\",\n                \"url\":\"http://ningbo.news.163.com\"\n            },\n            {\n                \"name\": \"厦门市\",\n                \"shortName\": \"厦门\",\n                \"url\":\"http://xiamen.news.163.com\"\n            },\n            {\n                \"name\": \"深圳市\",\n                \"shortName\": \"深圳\",\n                \"url\":\"http://shenzhen.news.163.com/\"\n            }\n        ],\n        \"defalt\": {\n                \"name\": \"\",\n                \"shortName\": \"本地\",\n                \"url\":\"http://news.163.com/\"\n            }\n    };\n    </script>\n    <script _keep=\"true\" type=\"text/javascript\">\n        //本地设置定向省份\n        function setBendiName(){\n            var js_nav_bendi = document.getElementById(\"_link_game\");\n            var cityname = \"\";\n            var cityurl = \"\";\n            var _loc = window.localAddress;\n            if(!js_nav_bendi)\n                return;\n            if(HouseNavBendiTxt.city && _loc){\n                var citylist = HouseNavBendiTxt.city;\n                var localcity = _loc.city;\n                for(var i=0;i<citylist.length;i++){\n                    if(citylist[i].name == localcity){\n                        cityname = citylist[i].shortName;\n                        cityurl = citylist[i].url;\n                        break;\n                    }\n                }\n            }\n            if(cityname == \"\" && cityurl == \"\" && HouseNavBendiTxt.province && _loc){\n                var provincelist = HouseNavBendiTxt.province;\n                var localprovince = _loc.province;\n                for(var i=0;i<provincelist.length;i++){\n                    if(provincelist[i].name == localprovince){\n                        cityname = provincelist[i].shortName;\n                        cityurl = provincelist[i].url;\n                        break;\n                    }\n                }\n            }\n            if(js_nav_bendi && cityname != \"\" && cityurl != \"\"){\n                js_nav_bendi.innerHTML = cityname;\n                js_nav_bendi.href = cityurl;\n            }\n            if(js_nav_bendi && cityname == \"\" && cityurl == \"\"){\n                js_nav_bendi.innerHTML = \"本地\";\n                js_nav_bendi.href = \"http://news.163.com\";\n            }\n        }\n        function BENDI_NAV_CALLBACK(data){\n           if(data && data.result){\n                if(window.HouseNavBendiTxt){\n                    window.localAddress = data.result;\n                    setBendiName();\n                } \n           }\n        };\n        \n        if(window.localAddress){\n            if(window.HouseNavBendiTxt){\n                setBendiName();\n            } \n        }else{\n            var url = \"//ipservice.163.com/locate/api/getLocByIp?key=C6E22B7D480E3312C74EC7EF013E50C5&callback=BENDI_NAV_CALLBACK\";\n            var script = document.createElement('script');\n            script.setAttribute('src', url);\n            document.getElementsByTagName('head')[0].appendChild(script);\n        }\n    </script>\n    <div class=\"index2016_content\">\n    <!-- 头部广告 开始-->\n    <div class=\"ns_area index_top_ad channel_relative_2016\">\n    <!--16新闻首页顶通-->\n    <div adtype=\"topColumnAd\" class=\"at_item common_ad_item top_ad_column\" requesturl=\"https://nex.163.com/q?app=7BE0FC82&amp;c=news&amp;l=11&amp;site=netease&amp;affiliate=news&amp;cat=homepage&amp;type=column1200x125_960x100&amp;location=10\"></div>\n    <span class=\"channel_ad_2016\">广告</span>\n    </div>\n    <!-- 头部广告 结束-->\n    <!-- 头部导航 开始-->\n    <div class=\"index_head\">\n    <div ne-module=\"/news/index2016_rmd/modules/head/head.js\">\n    <div class=\"ns_area hd\">\n    <h1>\n    <a class=\"channel2019_logo channel2019_news_logo\" href=\"https://news.163.com/\">网易新闻有态度</a>\n    </h1>\n    <!-- <div class=\"top-search\">\n            <form action=\"http://news.yodao.com/search\" method=\"get\" name=\"nisearch_top\" id=\"formtop\" target=\"_blank\">\n                <input type=\"hidden\" name=\"keyfrom\" value=\"sports.163\">\n                <input type=\"hidden\" name=\"suser\" value=\"user163\">\n                <input type=\"hidden\" name=\"ue\" value=\"gbk\">\n                <div class=\"search-input\"> <span class=\"hidden\">搜索</span>\n                    <input type=\"text\" name=\"q\" id=\"searchInput_top\" onfocus=\"this.value=''\" value=\"输入关键字\" class=\"text-box \">\n                    <input type=\"submit\" name=\"Submit\" value=\"\" tabindex=\"0\" title=\"搜索\" class=\"search-submit\" id=\"sb_form_go\">\n                </div>\n            </form>\n        </div> -->\n    <!-- 天气 -->\n    <div class=\"ns-lid-weather\" id=\"nsWeatherTop\">\n    <div class=\"ns-weather\" id=\"nsWeather\">\n    <a href=\"http://news.163.com/weather/\">\n    <script ne-repeat=\"weather in weatherInfo\" type=\"text/template\">\n                    <img class=\"ns-weather-icon\" ne-src=\"http://static.ws.126.net/f2e/news/index2015/img/weather/<%=weather.icon%>\">\n                    <div class=\"ns-weather-text\"><%=weather.weather%></div>\n                    <div class=\"ns-weather-info\"><%=weather.temp2%>°~<%=weather.temp1%>°</div>\n                    <div class=\"ns-weather-city\"><%=weather.city%></div>\n                </script>\n    </a>\n    </div>\n    </div>\n    </div>\n    </div>\n    <div class=\"bd\">\n    <div class=\"ns_area list\">\n    <ul>\n    <li class=\"first\"><a href=\"http://www.163.com/\">首页</a></li>\n    <li><a href=\"http://news.163.com/rank/\">排行</a></li>\n    <li><a href=\"http://news.163.com/photo/#Current\">图片</a></li>\n    <li class=\"menu_guonei\"><a href=\"http://news.163.com/domestic/\">国内</a></li>\n    <li class=\"menu_guoji\"><a href=\"http://news.163.com/world/\">国际</a></li>\n    <!--<li class=\"menu_shehui\"><a href=\"http://news.163.com/shehui/\">社会</a></li>-->\n    <li><a href=\"http://data.163.com/special/datablog/\">数读</a></li>\n    <li class=\"menu_war\"><a href=\"http://war.163.com/\">军事</a></li>\n    <li class=\"menu_hangkong\"><a href=\"http://news.163.com/air/\">航空</a></li>\n    <li class=\"menu_wurenji\"><a href=\"http://news.163.com/uav/\">无人机</a></li>\n    <li><a href=\"http://news.163.com/college\">新闻学院</a></li>\n    <li><a href=\"http://gov.163.com/\">政务</a></li>\n    <li><a href=\"http://gongyi.163.com/\">公益</a></li>\n    <li><a href=\"http://media.163.com/\">媒体</a></li>\n    <li class=\"last\"><a href=\"http://news.163.com/special/wangsansanhome/\">王三三</a></li>\n    </ul>\n    </div>\n    </div>\n    </div>\n    <!-- 头部导航 结束-->\n    <!-- 内容区域 开始 -->\n    <div class=\"ns_area clearfix index_main\">\n    <!-- 原创栏目 开始 -->\n    <div class=\"main_origina_column\" id=\"js_origina_column\">\n    <div ne-module=\"/news/index2016_rmd/modules/originacolumn/originacolumn.js\">\n    <div class=\"origina_column_warp\">\n    <h2>\n    <span>新闻各有态度</span>\n    </h2>\n    <div class=\"scroll_bd\" ne-role=\"scroll_bd\">\n    <div class=\"scroll_column_bd\">\n    <ul class=\"scroll_ul\">\n    <!-- 回声 开始 -->\n    <!-- 回声 结束 -->\n    <!-- 数读 开始 -->\n    <li class=\"cell cell_sd cell_hover\">\n    <p class=\"tag_line\">\n    <a class=\"tags tag_sd\" href=\"http://data.163.com/special/datablog/\">数读</a>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://data.163.com/19/0626/14/EIJQJG9L000181IU.html\" ne-role=\"detail\">\n    <h3>\n                                    中国哪里的地铁最拥挤？\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"中国哪里的地铁最拥挤？\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/26/30e8760df3044e29a18fac3514dd22b1.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://data.163.com/19/0625/11/EIH0CQEK00019GOE.html\">娶一个潮汕老婆到底是什么体验</a></li>\n    <li class=\"twoli\"><a href=\"http://data.163.com/19/0621/17/EI7BLS3600019GOE.html\">不瞒你说，成都早餐好吃到爆</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 数读 结束 -->\n    <!-- 人间 开始 -->\n    <li class=\"cell cell_rj\">\n    <p class=\"tag_line\">\n    <a class=\"tags tag_rj\" href=\"http://renjian.163.com/\">人间</a>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://renjian.163.com/19/0628/14/EIP21K41000181RV.html\" ne-role=\"detail\">\n    <h3>\n                                    小白作者的变现之路\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"小白作者的变现之路\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/27f33fcbfcec4b42b6837807b7a0883f.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://renjian.163.com/19/0627/16/EIML2HJO000181RV.html\">被毒虫男友拖下水的女大学生</a></li>\n    <li class=\"twoli\"><a href=\"http://renjian.163.com/19/0626/13/EIJPJMCH000181RV.html\">领导，求你让我加班吧</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 人间 结束 -->\n    <!-- 大国小民 开始 -->\n    <li class=\"cell cell_dgxm\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_dgxm\">大国小民</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://renjian.163.com/19/0624/14/EIEOBNCB000181RK.html\" ne-role=\"detail\">\n    <h3>\n                                    当不了官发不了财的读书人\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"当不了官发不了财的读书人\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/24/b77e119ffeca477fa4bd2144b1fcb86c.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://renjian.163.com/19/0620/16/EI4JRNO7000181RK.html\">四个博士，一地鸡毛</a></li>\n    <li class=\"twoli\"><a href=\"http://renjian.163.com/19/0618/12/EHV0QRVG000181RK.html\">医闹得逞后，伤害的到底是谁</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 大国小民 结束 -->\n    <!-- 三三有梗 开始 -->\n    <li class=\"cell cell_dada\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_dada\">三三有梗</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://news.163.com/19/0627/11/EIM57O490001885B.html\" ne-role=\"detail\">\n    <h3>\n                                    据说99%的人在图书馆一定会碰上......\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"据说99%的人在图书馆一定会碰上......\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/27/06eb8f4a3d4647bf9360ff5e71f003b8.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://news.163.com/19/0626/15/EIK0IJT40001885B.html\">我可能，得了种，前任病</a></li>\n    <li class=\"twoli\"><a href=\"https://news.163.com/19/0617/09/EHS57H4L0001885B.html\">那些KO不掉我的,最终成了我的OK</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 三三有梗 结束 -->\n    <!-- 三三映画 开始 -->\n    <!-- 三三映画 结束 -->\n    <!-- 我去1990 开始 -->\n    <li class=\"cell cell_wq1990\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_wq1990\">我去1990</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://news.163.com/19/0628/11/EIOL94760001885B.html\" ne-role=\"detail\">\n    <h3>\n                                    直男幼稚行为大赏\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"直男幼稚行为大赏\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/0b3890cd2f4b473fa0127b5e33ae6ccf.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://news.163.com/19/0624/12/EIEFGMVL0001885B.html\">打个赌，爱情友情你分不清楚</a></li>\n    <li class=\"twoli\"><a href=\"https://news.163.com/19/0621/12/EI6NKDTU0001885B.html\">不会唱歌的人进 KTV 以后有多惨</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 我去1990 结束 -->\n    <!-- 轻松一刻 开始 -->\n    <li class=\"cell cell_qsyk\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_qsyk\">轻松一刻</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://news.163.com/19/0628/19/EIPIQT4O000181BR.html\" ne-role=\"detail\">\n    <h3>\n                                    彩票一直都不中，我却忍不住要买\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"彩票一直都不中，我却忍不住要买\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/f44265c5b4ef4a11a99eedbde7c49833.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://news.163.com/19/0627/17/EIMPGJAU000181BR.html\">原来\"神仙眷侣\"离婚,也是一地鸡毛</a></li>\n    <li class=\"twoli\"><a href=\"https://news.163.com/19/0626/18/EIK95RV0000181BR.html\">我宣布，北大清华这对CP锁死了！</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 轻松一刻 结束 -->\n    <!-- 槽值 开始 -->\n    <li class=\"cell cell_caozhi\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_caozhi\">槽值</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://caozhi.news.163.com/19/0623/22/EID0CBIH000181TI.html\" ne-role=\"detail\">\n    <h3>\n                                    佟丽娅，这次你赢了\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"佟丽娅，这次你赢了\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/23/67d24242d479451ea705e26296187f78.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://caozhi.news.163.com/19/0623/15/EIC9LGSP000181TI.html\">千万别在深夜点开这神作</a></li>\n    <li class=\"twoli\"><a href=\"http://caozhi.news.163.com/19/0618/19/EHVRID7G000181TI.html\">那个发“嗯”的人，已被踢出群聊</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 槽值 结束 -->\n    <!-- 谈心社 开始 -->\n    <li class=\"cell cell_tanxinshe\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_tanxinshe\">谈心社</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://news.163.com/19/0628/17/EIPCOKEA0001982T.html\" ne-role=\"detail\">\n    <h3>\n                                    王宝强母亲去世：来日方长是人生的错觉\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"王宝强母亲去世：来日方长是人生的错觉\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/ecd0de8b8dc0402da72d814bde76f06e.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://news.163.com/19/0627/13/EIMC0EDH0001982T.html\">宋仲基宋慧乔离婚：再美的爱情也会过期</a></li>\n    <li class=\"twoli\"><a href=\"https://news.163.com/19/0626/17/EIK6AD550001982T.html\">杨紫冰箱藏药，戳穿最怂瞬间</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 谈心社 结束 -->\n    <!-- 看客 开始 -->\n    <li class=\"cell cell_kanke\">\n    <p class=\"tag_line\">\n    <a class=\"tags tag_kanke\" href=\"http://renjian.163.com/special/renjian_kanke/\">看客</a>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://renjian.163.com/19/0628/11/EIOMK185000199ET.html\" ne-role=\"detail\">\n    <h3>\n                                    我奶茶都戒了，日本人才知道它的好\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"我奶茶都戒了，日本人才知道它的好\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/f35eceb8d111496693e8f77a71a49cba.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://renjian.163.com/19/0620/11/EI43PM8Q000199ET.html\">美国堕胎残酷物语</a></li>\n    <li class=\"twoli\"><a href=\"http://renjian.163.com/19/0613/11/EHI39FML000199ET.html\">跑腿小哥提供的十万种服务</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 看客 结束 -->\n    <!-- 身体密码 开始 -->\n    <li class=\"cell cell_stpwd\">\n    <p class=\"tag_line\">\n    <a class=\"tags tag_stpwd\" href=\"http://jiankang.163.com/special/zhutierji/?type=3\">身体密码</a>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://jiankang.163.com/19/0625/11/EIH061CM0038804G.html\" ne-role=\"detail\">\n    <h3>\n                                    防晒，99%的人都做错了……\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"防晒，99%的人都做错了……\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/25/f260b6843fca4702bb5e4e316600f113.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://jiankang.163.com/19/0617/14/EHSN7PPV0038804G.html\">当代人减肥：迈不过25岁这道坎</a></li>\n    <li class=\"twoli\"><a href=\"https://jiankang.163.com/19/0608/15/EH5J9IGA00388AD5.html\">多年后 无数中年人仍会被高考吓醒</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 身体密码 结束 -->\n    <!-- 哒哒 开始 -->\n    <!-- 哒哒 结束 -->\n    </ul>\n    </div>\n    <div id=\"js_baseline\"></div>\n    <span class=\"white_bg\" id=\"js_white_bg\"></span>\n    </div>\n    </div>\n    </div>\n    </div>\n    <!-- 原创栏目 结束 -->\n    <!-- 中间新闻 开始 -->\n    <div class=\"main_center_news\">\n    <!-- 头条新闻 -->\n    <div class=\"mod_top_news2\" id=\"js_top_news\">\n    <h2>\n    <a href=\"https://news.163.com/19/0628/16/EIP8R4SV000189FH.html\">央视独家：习近平会见日本首相</a>\n    </h2>\n    <ul class=\"top_news_ul\">\n    <li><a href=\"https://news.163.com/19/0628/16/EIP8N52U0001875N.html\">外交部回应中美元首会面</a>|<a href=\"https://news.163.com/19/0628/14/EIOVIP2500018AP1.html\" target=\"_blank\">特朗普会见普京 笑称:不要干预美国大选哦</a></li>\n    <li><a href=\"https://news.163.com/19/0628/16/EIP7KOH70001875P.html\">住建部:加快垃圾分类处理设施建设</a>|<a href=\"https://news.163.com/19/0628/16/EIP8F9QQ0001875P.html\" target=\"_blank\">袁仁国被公诉:受贿数额特别巨大</a></li>\n    <li><a href=\"https://news.163.com/19/0628/13/EIOSPGLJ0001899O.html\">湖南耒阳人大常委会原主任携子主动投案</a>|<a href=\"https://news.163.com/19/0628/13/EIOUHOB70001875P.html\" target=\"_blank\">美的48小时内被骗10亿资金</a></li>\n    </ul>\n    <h2 class=\"top_news_title\">\n    <a href=\"https://news.163.com/19/0628/19/EIPH3F1V0001875P.html\">垃圾分类逼疯上海人？别笑！马上轮到这46个城市</a>\n    </h2>\n    <ul class=\"top_news_ul\">\n    <li><a href=\"https://news.163.com/19/0628/19/EIPILCJ70001875P.html\">女子酒后澡堂一打六被刑拘</a>|<a href=\"https://news.163.com/19/0628/18/EIPFI0KN0001875P.html\" target=\"_blank\">杀人案嫌犯向警察开枪拒捕 被当场击毙</a></li>\n    <li><a href=\"https://news.163.com/19/0628/16/EIP8RHM70001875P.html\">95后飙摩托车追高铁发抖音被刑拘</a>|<a href=\"https://news.163.com/19/0628/16/EIP7B7RP0001899O.html\" target=\"_blank\">母亲担心儿子粗心在其手背\"刺\"字</a></li>\n    <li><a href=\"https://news.163.com/19/0628/15/EIP4Q6BQ0001899O.html\">女子高铁上劝老人看好小孩被骂</a>|<a href=\"https://news.163.com/19/0628/16/EIP8QO5Q0001875P.html\" target=\"_blank\">南京杀妻案死者姑妈：侄女生前要强</a></li>\n    </ul>\n    </div>\n    <!-- 广告 开始 -->\n    <div class=\"mod_top_news_ad\">\n    <!-- 16新闻首页01小通栏 -->\n    <a class=\"ad_hover_href\" href=\"http://gb.corp.163.com/gb/legal.html\"></a>\n    <iframe border=\"0\" frameborder=\"no\" height=\"50\" marginheight=\"0\" marginwidth=\"0\" scrolling=\"no\" src=\"https://g.163.com/r?site=netease&amp;affiliate=news&amp;cat=homepage&amp;type=logo600x50&amp;location=1\" width=\"600\"></iframe>\n    </div>\n    <!-- 广告 结束 -->\n    <!-- 特别报道 开始 -->\n    <div class=\"mod_important_news none\">\n    <h5><label>特别报道</label></h5>\n    <h2>\n    <a href=\"http://news.163.com/16/0721/19/BSH7V8QF00014JB6.html\">辽宁遭暴雨侵袭致城市内涝 紧急转移12万人</a>\n    </h2>\n    <ul class=\"top_news_ul\">\n    <li><a href=\"http://news.163.com/16/0721/10/BSG7HOH20001124J.html\">民政部:北方暴雨75人死亡失踪</a>|<a href=\"http://news.163.com/16/0721/12/BSGG5VK300011229.html\" target=\"_blank\">北京发生山洪灾害 铲车翻倒4人被困</a></li>\n    <li><a href=\"http://news.163.com/16/0721/12/BSGHHVLK00011229.html\">搜救犬水灾救援22天殉职 主人:它太累了</a>|<a href=\"http://news.163.com/16/0721/07/BSFUFFP800014AED.html\" target=\"_blank\">姐妹被洪水卷走警方拒立案</a></li>\n    </ul>\n    <div class=\"mod_important_pic\">\n    <ul class=\"clearfix\">\n    <li>\n    <a href=\"http://news.163.com/photoview/00AN0001/2189402.html?from=ph_ss#p=BSG716GE00AN0001\">\n    <img height=\"120\" src=\"http://img3.cache.netease.com/news/2016/7/21/20160721131401d35e2.jpg\" width=\"190\"/>\n    <span class=\"bg\"></span>\n    <h3>河南遇强降雨 9.8万人转移</h3>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/photoview/00AP0001/2189377.html?from=ph_ss#p=BSFTQ99H00AP0001\">\n    <img height=\"120\" src=\"http://img3.cache.netease.com/news/2016/7/21/201607211319466e84e.jpg\" width=\"190\"/>\n    <span class=\"bg\"></span>\n    <h3>女主播直播暴雨 浑身湿透</h3>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/photoview/00AP0001/2189389.html?from=ph_ss#p=BSG1S9AM00AP0001\">\n    <img height=\"120\" src=\"http://img5.cache.netease.com/news/2016/7/21/20160721132119ef59b.jpg\" width=\"190\"/>\n    <span class=\"bg\"></span>\n    <h3>湖北民众省道上趟水摸鱼</h3>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    <!-- 特别报道 结束 -->\n    <!-- 网易公开课 开始-->\n    <div class=\"mod_netes_origina\" ne-module=\"/news/index2016_rmd/modules/slide/slide.js\">\n    <script _keep=\"true\" type=\"text/javascript\">\n        window.GGKSLIDEDATA = [\n                                                                             {\n                \"title\":\"你多久没读完一本书了？带你克服读书拖延症\",\n                \"imgsrc\":\"https://cms-bucket.ws.126.net/2019/06/26/225c40fe7f9141a8852f70d20c381f8b.jpeg?imageView&thumbnail=600y250\",\n                \"link\":\"https://vip.open.163.com/courses/2531?p=xs_zt04\"\n            }\n                                                             ,\n                    {\n                \"title\":\"曾国藩：普通人怎样通过自我努力改写命运？\",\n                \"imgsrc\":\"https://cms-bucket.ws.126.net/2019/05/16/b0ba21dfb7ef4716a1275a2c1914832a.jpeg?imageView&thumbnail=600y250\",\n                \"link\":\"https://vip.open.163.com/courses/1047?p=xs_zt03\"\n            }\n                                                             ,\n                    {\n                \"title\":\"你单一的收入模式，拖垮的是你财富积累速度\",\n                \"imgsrc\":\"https://cms-bucket.ws.126.net/2019/03/21/fe5cf147142b414793a6326f654b41ce.jpeg?imageView&thumbnail=600y250\",\n                \"link\":\"https://vip.open.163.com/courses/3547?p=xs_zt04\"\n            }\n                                                             ,\n                    {\n                \"title\":\"健身VS不健身，完全是两种不同的人生\",\n                \"imgsrc\":\"https://cms-bucket.nosdn.127.net/2018/11/12/94fbcf460348460f9b73300aa1948cb3.jpeg?imageView&thumbnail=600y250\",\n                \"link\":\"https://vip.open.163.com/courses/192?p=xs_zt02\"\n            }\n                ];\n    </script>\n    <div class=\"mod_idx_focus\" ne-module=\"/modules/slide/slide.js\" ne-props=\"events:mouseover;interval:4000;topicid=000501EP;listnum=8;pointstart=80;pointend=100;\" ne-state=\"slideMethod:left;events=mouseover;interval=4000\">\n    <div class=\"hd\">\n    <h2><a href=\"https://open.163.com/\">网易公开课</a></h2>\n    <div class=\"focus_ctrl\">\n    <span ne-role=\"slide-nav\"></span>\n    <span ne-role=\"slide-nav\"></span>\n    <span ne-role=\"slide-nav\"></span>\n    <span ne-role=\"slide-nav\"></span>\n    </div>\n    </div>\n    <a class=\"focus_prev\" ne-role=\"slide-prev\"></a>\n    <a class=\"focus_next\" ne-role=\"slide-next\"></a>\n    <div class=\"focus_body\" ne-role=\"slide-body\">\n    <ul ne-role=\"slide-scroll\">\n    <script ne-foreach=\"gkkdatalist\" type=\"text/template\">\n                <li <%if(__i == 0){%>class=\"current\"<%}%> ne-role=\"slide-page\">\n                    <a href=\"<%=link%>\" title=\"<%=title%>\" class=\"photo\"><img src=\"<%=imgsrc%>\" width=\"600\" height=\"250\" alt=\"<%=title%>\"/></a>\n                    <span class=\"bg\"></span>\n                    <h3>\n                        <a href=\"<%=link%>\"><%=title%></a>\n                    </h3>\n                </li>\n                </script>\n    </ul>\n    <span class=\"ad_hover_pic\">广告</span>\n    </div>\n    </div>\n    </div>\n    <!-- 网易公开课 结束-->\n    <!-- 信息流 开始-->\n    <div class=\"mod_datalist\" ne-extend=\"/news/index2016_rmd/modules/datalist2016/config.js\" ne-module=\"/news/index2016_rmd/modules/datalist2016/datalist2016.js\">\n    <div class=\"newsdata_wrap\" ne-module=\"/modules/tabs/tabs.js\" ne-on=\"showed:changepanel\" ne-state=\"showhide:true;delay:400;\">\n    <div class=\"newsdata_nav\" ne-class=\"{{myState.fixedTop ? 'fixed_top':''}}\">\n    <ul class=\"clearfix\">\n    <li class=\"nav_item\">\n    <a class=\"nav_name no_cursor\" href=\"javascript:;\" ne-role=\"tab-nav\" target=\"_self\">\n                        要闻\n                        <span class=\"nav_item_ink\"></span>\n    </a>\n    </li>\n    <li class=\"nav_item\">\n    <a class=\"nav_name no_cursor\" href=\"{{myState.channelbendiurl}}\" ne-class=\"{{myState.bendiTstyle ? 'bendistyle' : ''}}\" ne-role=\"tab-nav\" target=\"{{myState.channelbendiurl == 'javascript:;' ? '_self' : '_blank'}}\">\n    <strong ne-text=\"{{myState.bendiCity}}\"></strong>\n    <span class=\"nav_item_ink\"></span>\n    </a>\n    </li>\n    <!-- <li class=\"nav_item\">\n                    <a class=\"nav_name\" ne-role=\"tab-nav\" href=\"http://news.163.com/shehui/\">\n                        社会\n                        <span class=\"nav_item_ink\"></span>\n                    </a>\n                </li> -->\n    <li class=\"nav_item\">\n    <a class=\"nav_name\" href=\"http://news.163.com/domestic/\" ne-role=\"tab-nav\">\n                        国内\n                        <span class=\"nav_item_ink\"></span>\n    </a>\n    </li>\n    <li class=\"nav_item\">\n    <a class=\"nav_name\" href=\"http://news.163.com/world/\" ne-role=\"tab-nav\">\n                        国际\n                        <span class=\"nav_item_ink\"></span>\n    </a>\n    </li>\n    <li class=\"nav_item\">\n    <a class=\"nav_name no_cursor\" href=\"javascript:;\" ne-role=\"tab-nav\" target=\"_self\">\n                        独家\n                        <span class=\"nav_item_ink\"></span>\n    </a>\n    </li>\n    <li class=\"nav_item\">\n    <a class=\"nav_name\" href=\"http://war.163.com/\" ne-role=\"tab-nav\">\n                        军事\n                        <span class=\"nav_item_ink\"></span>\n    </a>\n    </li>\n    <li class=\"nav_item\">\n    <a class=\"nav_name\" href=\"http://money.163.com/\" ne-role=\"tab-nav\">\n                        财经\n                        <span class=\"nav_item_ink\"></span>\n    </a>\n    </li>\n    <li class=\"nav_item\">\n    <a class=\"nav_name\" href=\"http://tech.163.com/\" ne-role=\"tab-nav\">\n                        科技\n                        <span class=\"nav_item_ink\"></span>\n    </a>\n    </li>\n    </ul>\n    <a class=\"more\" href=\"javascript:;\" ne-class=\"{{myState.morechannel ? 'more_hover': ''}}\" ne-mouseout=\"morehideChannel()\" ne-mouseover=\"moreShowChannel()\" ne-role=\"morebtn\" target=\"_self\">更多</a>\n    <div class=\"more_list\" ne-click=\"moreList($event)\" ne-role=\"more_list\" ne-show=\"{{myState.morechannel}}\">\n    <!-- <a ne-role=\"tab-nav\" href=\"http://tech.163.com/\">科技</a> -->\n    <a href=\"http://sports.163.com/\" ne-role=\"tab-nav\">体育</a>\n    <a href=\"http://ent.163.com/\" ne-role=\"tab-nav\">娱乐</a>\n    <a href=\"http://lady.163.com/\" ne-role=\"tab-nav\">时尚</a>\n    <a href=\"http://auto.163.com/\" ne-role=\"tab-nav\">汽车</a>\n    <a href=\"{{myState.channelhouseurl}}\" ne-role=\"tab-nav\">房产</a>\n    <a href=\"http://news.163.com/air/\" ne-role=\"tab-nav\">航空</a>\n    <a href=\"http://jiankang.163.com/\" ne-role=\"tab-nav\">健康</a>\n    </div>\n    </div>\n    <a class=\"newsdata_prev\" href=\"#prev\" ne-class=\"{{myState.fixedTop ? 'fixed_data_show': ''}}\" ne-click=\"tabPrevFn($event);\" ne-hide=\"{{myState.iPad}}\">\n    <span></span>\n    <div class=\"newsdata_btn_name\">{{myState.preBtnName}}</div>\n    </a>\n    <a class=\"newsdata_next\" href=\"#next\" ne-class=\"{{myState.fixedTop ? 'fixed_data_show': ''}}\" ne-click=\"tabNextFn($event);\" ne-hide=\"{{myState.iPad}}\">\n    <span></span>\n    <div class=\"newsdata_btn_name\">{{myState.nextBtnName}}</div>\n    </a>\n    <ul class=\"newsdata_list\" ne-class=\"{{myState.fixedTop ? 'fixed_bar_padding': ''}} {{myState.bgLoading ? 'bgloading': 'noloading'}}\">\n    <li class=\"newsdata_item\" ne-repeat=\"body in navList\" ne-role=\"tab-body\">\n    <div class=\"ndi_main\" ne-class=\"{{myState.message &gt; 0 ? 'show_message':''}}\">\n    <script ne-repeat=\"newrow in datalist[__i]\" type=\"text/template\">\n                    <%if(newrow.style == \"iframe\"){%>\n                        <div class=\"at_item info_ad_item news_iframe_ad\" adType=\"infoAd\" ne-click=\"adClickTracker(<%=newrow.infoAdIdx%>,'infoAd')\">\n                            <iframe src=\"<%=newrow.iframe[0].link%>\" width=\"<%=newrow.iframe[0].iframewidth || 600 %>\" height=\"<%=newrow.iframe[0].iframeheight || 100 %>\" frameborder=\"0\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe>\n                        </div>\n                    <%}else if(newrow.style == \"docAD\"){%>\n                        <div class=\"at_item info_ad_item news_article clearfix\" adType=\"infoAd\" ne-click=\"adClickTracker(<%=newrow.infoAdIdx%>,'infoAd')\">\n                            <a href=\"<%=newrow.relatedActionLinks[0].url%>\" class=\"na_pic\">\n                                <img src=\"<%=newrow.resources[0].urls[0]%>\" width=\"140\" height=\"88\">\n                            </a>\n                            <div class=\"na_detail clearfix\">\n                                <div class=\"news_title\">\n                                    <h3><strong><a href=\"<%=newrow.relatedActionLinks[0].url%>\"><%=newrow.title%></a>\n                                    </strong></h3>\n                                </div>\n                            </div>\n                            <div class=\"ad_detail clearfix\">\n                                <span class=\"tg_tag\"><%=newrow.source%></span>\n                                <span class=\"keywords\" ne-html=\"<%=newrow.content%>\"></span>\n                            </div>\n                        </div>\n                    <%} else if(newrow.style == \"photosetAD\"){%>\n                        <div class=\"at_item info_ad_item news_photoview clearfix news_ad_photoview\" adType=\"infoAd\" ne-click=\"adClickTracker(<%=newrow.infoAdIdx%>,'infoAd')\">\n                            <div class=\"news_title\">\n                                <h3><strong><a href=\"<%=newrow.relatedActionLinks[0].url%>\"><%=newrow.title%></a></strong></h3>\n                            </div>\n                            <div class=\"np_pic\">\n                                <a href=\"<%=newrow.relatedActionLinks[0].url%>\">\n                                    <span class=\"p_img3\">\n                                        <img src=\"<%=newrow.resources[0].urls[0]%>\" width=\"190\" height=\"120\">\n                                    </span>\n                                    <span class=\"p_img3\">\n                                        <img src=\"<%=newrow.resources[0].urls[1]%>\" width=\"190\" height=\"120\">\n                                    </span>\n                                    <span class=\"p_img3\">\n                                        <img src=\"<%=newrow.resources[0].urls[2]%>\" width=\"190\" height=\"120\" class=\"pic_last\">\n                                    </span>\n                                </a>\n                            </div>\n                            <div class=\"ad_detail clearfix\">\n                                <span class=\"tg_tag\"><%=newrow.source%></span>\n                                <span class=\"keywords\" ne-html=\"<%=newrow.content%>\"></span>\n                            </div>\n                        </div>\n                    <%} else if(newrow.style == \"columsAD\"){%>\n                        <div class=\"at_item info_ad_item news_special clearfix news_ad_special\" adType=\"infoAd\" ne-click=\"adClickTracker(<%=newrow.infoAdIdx%>,'infoAd')\">\n                            <div class=\"news_title\">\n                                <h3><strong><a href=\"<%=newrow.relatedActionLinks[0].url%>\"><%=newrow.title%></a></strong></h3>\n                            </div>\n                            <a href=\"<%=newrow.relatedActionLinks[0].url%>\" class=\"ns_pic\"><img src=\"<%=newrow.resources[0].urls[0]%>\" width=\"600\" height=\"200\"></a>\n                            <div class=\"ad_detail clearfix\">\n                                <span class=\"tg_tag\"><%=newrow.source%></span>\n                                <span class=\"keywords\" ne-html=\"<%=newrow.content%>\"></span>\n                            </div>\n                        </div>\n                    <%} else if(newrow.imgurl && newrow.add1 && newrow.add2 && /\\.jpg$|\\.png$|\\.jpeg$|\\.gif$/.test(newrow.imgurl) && /\\.jpg$|\\.png$|\\.jpeg$|\\.gif$/.test(newrow.add1) && /\\.jpg$|\\.png$|\\.jpeg$|\\.gif$/.test(newrow.add2)){%>\n                        <div class=\"data_row news_photoview clearfix <%if(__i == 0){%>news_first <%}%>\">\n                            <div class=\"news_title\">\n                                <h3><a href=\"<%=newrow.docurl%>\"><%=newrow.title%></a></h3>\n                            </div>\n                            <div class=\"np_pic\">\n                                <a href=\"<%=newrow.docurl%>\">\n                                    <span class=\"p_img3\">\n                                    <%if(newrow.imgurl.indexOf('gif') != -1){%>\n                                    <img src=\"<%=newrow.imgurl%>\" width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\">\n                                    <%} else {%> \n                                    <img src=\"<%=newrow.imgurl%>?imageView&thumbnail=190y120&quality=85\" width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\">\n                                    <%}%> \n                                    </span>\n                                    <span class=\"p_img3\">\n                                    <%if(newrow.add1.indexOf('gif') != -1){%>\n                                    <img src=\"<%=newrow.add1%>\" width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\">\n                                    <%} else {%> \n                                    <img src=\"<%=newrow.add1%>?imageView&thumbnail=190y120&quality=85\" width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/index2016_rmd/images/pic3_error0106.jpg';\">\n                                    <%}%> \n                                    </span>\n                                    <span class=\"p_img3\">\n                                    <%if(newrow.add2.indexOf('gif') != -1){%>\n                                    <img src=\"<%=newrow.add2%>\" width=\"190\" height=\"120\" class=\"pic_last\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\">\n                                    <%} else {%> \n                                    <img src=\"<%=newrow.add2%>?imageView&thumbnail=190y120&quality=85\" width=\"190\" height=\"120\" class=\"pic_last\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\">\n                                    <%}%> \n                                    </span>\n                                </a>\n                            </div>\n                            <div class=\"np_detail clearfix\">\n                                <div class=\"news_tag\">\n                                    <%if(newrow.channelname && newrow.channelname != \"shehui\" && newrow.channelname != \"guonei\" && newrow.channelname != \"guoji\" && newrow.channelname != \"dada\" && newrow.channelname != \"war\" && newrow.channelname != \"hangkong\"){%>\n                                        <%if(newrow.tlastid != \"\"){%>\n                                            <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                        <%}else if(newrow.label != \"\"){%>\n                                            <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                            <em><%=newrow.label%></em></a>\n                                        <%}%> \n                                    <%}%>\n                                    <%if(newrow.keywords.length > 0){%>\n                                        <div class=\"keywords\">\n                                        <%bowlder.each(newrow.keywords,function(k){%>\n                                            <a href=\"<%=k.akey_link%>\"><%=k.keyname%></a>\n                                        <%})%> \n                                        </div>\n                                    <%}%> \n                                    <%if(newrow.time){%>\n                                        <span class=\"time\"><%=formatTime(newrow.time)%></span>\n                                    <%}%> \n                                </div>\n                                <div class=\"share-join clearfix\">\n                                    <%if(newrow.tienum != \"\"){%>\n                                    <a class=\"post_recommend_tie right\" href=\"<%=newrow.commenturl%>\" >\n                                        <div class=\"post_recommend_tie_wrap\">\n                                            <span class=\"post_recommend_tie_icon icons\"><%=newrow.tienum%></span> \n                                            <span class=\"post_recommend_tie_text\"><i>跟贴</i><%=newrow.tienum%></span>\n                                        </div>\n                                    </a>\n                                    <%}%>\n                                    <div class=\"ne-shares-parent right\">\n                                        <span href=\"#share\" title=\"分享\" class=\"ne-shares-arr\"></span>\n                                        <div class=\"share-join-item\" ne-module=\"/modules/shares/shares.js\" ne-state=\"cls.hover:ne-shares-open;title:<%=newrow.title%>;url:<%=newrow.docurl%>;pic:<%=newrow.imgurl%>\" >\n    <div class=\"ne-shares-pop6x1wrap\" ne-role=\"share-wrap\">\n    <ul class=\"ne-shares-pop6x1\">\n        <li>\n            <a ne-click=\"share('yixin')\" href=\"http://yixin.im/#f=www\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-yixin\"></i>\n                    <span class=\"ep-share-name\">易信</span>\n                </span>\n            </a>\n        </li>\n        <li>\n            <a ne-mouseover=\"initWeixin()\" href=\"javascript:\" target=\"_self\" class=\"ne-shares-weixin\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-weixin\"></i>\n                    <span class=\"ep-share-name\">微信</span>\n                </span>\n            </a>\n        </li>\n        <li>\n            <a ne-click=\"share('sina')\" href=\"javascript:\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-sina\"></i>\n                    <span class=\"ep-share-name\">微博</span>\n                </span>\n            </a>\n        </li>\n        <li class=\"last\">\n            <a ne-click=\"share('qzone')\" href=\"javascript:\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-qzone\"></i>\n                    <span class=\"ep-share-name\">QQ空间</span>\n                </span>\n            </a>\n        </li>\n    </ul>\n    </div>\n    <div class=\"ne-shares-qrwrap\">\n      <div class=\"ne-shares-qrarr\"></div>\n      <div ne-role=\"qrcode\" class=\"ne-shares-qrcode\"></div>\n      <p>用微信扫码二维码</p><p>分享至好友和朋友圈</p>\n    </div>\n    </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    <%} else if(newrow.add1 && /\\.jpg$|\\.png$|\\.jpeg$|\\.gif$/.test(newrow.add1)){%>\n                        <div class=\"data_row news_special clearfix <%if(__i == 0){%>news_first <%}%>\">\n                            <div class=\"news_title\">\n                                <h3><a href=\"<%=newrow.docurl%>\"><%=newrow.title%></a></h3>\n                                <%if(newrow.channelname && newrow.channelname != \"shehui\" && newrow.channelname != \"guonei\" && newrow.channelname != \"guoji\" && newrow.channelname != \"dada\" && newrow.channelname != \"war\" && newrow.channelname != \"hangkong\"){%>\n                                    <%if(newrow.tlastid != \"\"){%>\n                                        <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                    <%}else if(newrow.label != \"\"){%>\n                                        <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                        <em><%=newrow.label%></em></a>\n                                    <%}%> \n                                <%}%>\n                            </div>\n                            <a href=\"<%=newrow.docurl%>\" class=\"ns_pic\">\n                                <%if(newrow.add1.indexOf('gif') != -1){%>\n                                <img src=\"<%=newrow.add1%>\" alt=\"<%=newrow.title%>\" width=\"600\" height=\"300\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/special_error0106.jpg';\">\n                                <%} else {%> \n                                <img src=\"<%=newrow.add1%>?imageView&thumbnail=600y300&quality=85\" alt=\"<%=newrow.title%>\" width=\"600\" height=\"300\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/special_error0106.jpg';\">\n                                <%}%> \n                            </a>\n                        </div>\n                    <%} else if(newrow.imgurl && newrow.imgurl != \"\"){%>\n                        <div class=\"data_row news_article clearfix <%if(__i == 0){%>news_first<%}%>\">\n                            <%if(newrow.imgurl != \"\"){%>\n                                <a href=\"<%=newrow.docurl%>\" class=\"na_pic\">\n                                    <%if(newrow.imgurl.indexOf('gif') != -1){%>\n                                    <img src=\"<%=newrow.imgurl%>\" alt=\"<%=newrow.title%>\" width=\"140\" height=\"88\" onerror=\"imgError(this)\">\n                                    <%} else {%> \n                                    <img src=\"<%=newrow.imgurl%>?imageView&thumbnail=140y88&quality=85\" alt=\"<%=newrow.title%>\" width=\"140\" height=\"88\" onerror=\"imgError(this)\">\n                                    <%}%> \n                                </a>\n                            <%}%> \n                            <div class=\"na_detail clearfix <%if(newrow.imgurl == \"\"){%>no_pic<%}%>\">\n                                <div class=\"news_title\">\n                                    <h3><a href=\"<%=newrow.docurl%>\"><%=newrow.title%></a></h3>\n                                </div>\n                                <div class=\"news_tag\">\n                                    <%if(newrow.channelname && newrow.channelname != \"shehui\" && newrow.channelname != \"guonei\" && newrow.channelname != \"guoji\" && newrow.channelname != \"dada\" && newrow.channelname != \"war\" && newrow.channelname != \"hangkong\"){%>\n                                        <%if(newrow.tlastid != \"\"){%>\n                                            <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                        <%}else if(newrow.label != \"\"){%>\n                                            <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                            <em><%=newrow.label%></em></a>\n                                        <%}%> \n                                    <%}%>\n                                    <%if(newrow.keywords && newrow.keywords.length > 0){%>\n                                        <div class=\"keywords\">\n                                        <%bowlder.each(newrow.keywords,function(k){%>\n                                            <a href=\"<%=k.akey_link%>\"><%=k.keyname%></a>\n                                        <%})%> \n                                        </div>\n                                    <%}%> \n                                    <%if(newrow.time){%>\n                                        <span class=\"time\"><%=formatTime(newrow.time)%></span>\n                                    <%}%> \n                                </div>\n                                <div class=\"share-join clearfix\">\n                                    <a class=\"post_recommend_tie right\" href=\"<%=newrow.commenturl%>\" >\n                                        <div class=\"post_recommend_tie_wrap\">\n                                            <span class=\"post_recommend_tie_icon icons\"><%=newrow.tienum ? newrow.tienum : 0%></span> \n                                            <span class=\"post_recommend_tie_text\"><i>跟贴</i><%=newrow.tienum%></span>\n                                        </div>\n                                    </a>\n                                    <div class=\"ne-shares-parent right\">\n                                        <span href=\"#share\" title=\"分享\" class=\"ne-shares-arr\"></span>\n                                        <div class=\"share-join-item\" ne-module=\"/modules/shares/shares.js\" ne-state=\"cls.hover:ne-shares-open;title:<%=newrow.title%>;url:<%=newrow.docurl%>;pic:<%=newrow.imgurl%>\" >\n    <div class=\"ne-shares-pop6x1wrap\" ne-role=\"share-wrap\">\n    <ul class=\"ne-shares-pop6x1\">\n        <li>\n            <a ne-click=\"share('yixin')\" href=\"http://yixin.im/#f=www\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-yixin\"></i>\n                    <span class=\"ep-share-name\">易信</span>\n                </span>\n            </a>\n        </li>\n        <li>\n            <a ne-mouseover=\"initWeixin()\" href=\"javascript:\" target=\"_self\" class=\"ne-shares-weixin\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-weixin\"></i>\n                    <span class=\"ep-share-name\">微信</span>\n                </span>\n            </a>\n        </li>\n        <li>\n            <a ne-click=\"share('sina')\" href=\"javascript:\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-sina\"></i>\n                    <span class=\"ep-share-name\">微博</span>\n                </span>\n            </a>\n        </li>\n        <li class=\"last\">\n            <a ne-click=\"share('qzone')\" href=\"javascript:\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-qzone\"></i>\n                    <span class=\"ep-share-name\">QQ空间</span>\n                </span>\n            </a>\n        </li>\n    </ul>\n    </div>\n    <div class=\"ne-shares-qrwrap\">\n      <div class=\"ne-shares-qrarr\"></div>\n      <div ne-role=\"qrcode\" class=\"ne-shares-qrcode\"></div>\n      <p>用微信扫码二维码</p><p>分享至好友和朋友圈</p>\n    </div>\n    </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    <%} else if(newrow.pics3 && newrow.pics3.length >= 3){%>\n                        <div class=\"data_row news_photoview clearfix <%if(__i == 0){%>news_first <%}%>\">\n                            <div class=\"news_title\">\n                                <h3><a href=\"<%=newrow.docurl%>\"><%=newrow.title%></a></h3>\n                            </div>\n                            <div class=\"np_pic\">\n                                <a href=\"<%=newrow.docurl%>\">\n                                    <%bowlder.each(newrow.pics3,function(n){%>\n                                        <span class=\"p_img3\">\n                                        <img src=\"<%=n.pic%>\" width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\">\n                                        </span>\n                                    <%})%> \n                                </a>\n                            </div>\n                            <div class=\"np_detail clearfix\">\n                                <div class=\"news_tag\">\n                                    <%if(newrow.channelname && newrow.channelname != \"shehui\" && newrow.channelname != \"guonei\" && newrow.channelname != \"guoji\" && newrow.channelname != \"dada\" && newrow.channelname != \"war\" && newrow.channelname != \"hangkong\"){%>\n                                        <%if(newrow.tlastid != \"\"){%>\n                                            <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                        <%}else if(newrow.label != \"\"){%>\n                                            <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                            <em><%=newrow.label%></em></a>\n                                        <%}%> \n                                    <%}%>\n                                    <%if(newrow.keywords && newrow.keywords.length > 0){%>\n                                        <div class=\"keywords\">\n                                        <%bowlder.each(newrow.keywords,function(k){%>\n                                            <a href=\"<%=k.akey_link%>\"><%=k.keyname%></a>\n                                        <%})%> \n                                        </div>\n                                    <%}%> \n                                    <%if(newrow.time){%>\n                                        <span class=\"time\"><%=formatTime(newrow.time)%></span>\n                                    <%}%> \n                                </div>\n                                <div class=\"share-join clearfix\">\n                                    <a class=\"post_recommend_tie right\" href=\"<%=newrow.commenturl%>\" >\n                                        <div class=\"post_recommend_tie_wrap\">\n                                            <span class=\"post_recommend_tie_icon icons\"><%=newrow.tienum%></span> \n                                            <span class=\"post_recommend_tie_text\"><i>跟贴</i><%=newrow.tienum%></span>\n                                        </div>\n                                    </a>\n                                    <div class=\"ne-shares-parent right\">\n                                        <span href=\"#share\" title=\"分享\" class=\"ne-shares-arr\"></span>\n                                        <div class=\"share-join-item\" ne-module=\"/modules/shares/shares.js\" ne-state=\"cls.hover:ne-shares-open;title:<%=newrow.title%>;url:<%=newrow.docurl%>;pic:<%=newrow.imgurl%>\" >\n    <div class=\"ne-shares-pop6x1wrap\" ne-role=\"share-wrap\">\n    <ul class=\"ne-shares-pop6x1\">\n        <li>\n            <a ne-click=\"share('yixin')\" href=\"http://yixin.im/#f=www\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-yixin\"></i>\n                    <span class=\"ep-share-name\">易信</span>\n                </span>\n            </a>\n        </li>\n        <li>\n            <a ne-mouseover=\"initWeixin()\" href=\"javascript:\" target=\"_self\" class=\"ne-shares-weixin\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-weixin\"></i>\n                    <span class=\"ep-share-name\">微信</span>\n                </span>\n            </a>\n        </li>\n        <li>\n            <a ne-click=\"share('sina')\" href=\"javascript:\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-sina\"></i>\n                    <span class=\"ep-share-name\">微博</span>\n                </span>\n            </a>\n        </li>\n        <li class=\"last\">\n            <a ne-click=\"share('qzone')\" href=\"javascript:\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-qzone\"></i>\n                    <span class=\"ep-share-name\">QQ空间</span>\n                </span>\n            </a>\n        </li>\n    </ul>\n    </div>\n    <div class=\"ne-shares-qrwrap\">\n      <div class=\"ne-shares-qrarr\"></div>\n      <div ne-role=\"qrcode\" class=\"ne-shares-qrcode\"></div>\n      <p>用微信扫码二维码</p><p>分享至好友和朋友圈</p>\n    </div>\n    </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    <%} else {%>\n                        <div class=\"data_row news_article clearfix <%if(__i == 0){%>news_first<%}%>\" i={{__i}}>\n                            <div class=\"na_detail clearfix no_pic\">\n                                <div class=\"news_title\">\n                                    <h3><a href=\"<%=newrow.docurl%>\"><%=newrow.title%></a></h3>\n                                </div>\n                                <div class=\"news_tag\">\n                                    <%if(newrow.channelname && newrow.channelname != \"shehui\" && newrow.channelname != \"guonei\" && newrow.channelname != \"guoji\" && newrow.channelname != \"dada\" && newrow.channelname != \"war\" && newrow.channelname != \"hangkong\"){%>\n                                        <%if(newrow.tlastid != \"\"){%>\n                                            <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                        <%}else if(newrow.label != \"\"){%>\n                                            <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                            <em><%=newrow.label%></em></a>\n                                        <%}%> \n                                    <%}%>\n                                    <%if(newrow.keywords && newrow.keywords.length > 0){%>\n                                        <div class=\"keywords\">\n                                        <%bowlder.each(newrow.keywords,function(k){%>\n                                            <a href=\"<%=k.akey_link%>\"><%=k.keyname%></a>\n                                        <%})%> \n                                        </div>\n                                    <%}%> \n                                    <%if(newrow.time){%>\n                                        <span class=\"time\"><%=formatTime(newrow.time)%></span>\n                                    <%}%> \n                                </div>\n                                <div class=\"share-join clearfix\">\n                                    <a class=\"post_recommend_tie right\" href=\"<%=newrow.commenturl%>\" >\n                                        <div class=\"post_recommend_tie_wrap\">\n                                            <span class=\"post_recommend_tie_icon icons\"><%=newrow.tienum ? newrow.tienum : 0%></span> \n                                            <span class=\"post_recommend_tie_text\"><i>跟贴</i><%=newrow.tienum%></span>\n                                        </div>\n                                    </a>\n                                    <div class=\"ne-shares-parent right\">\n                                        <span href=\"#share\" title=\"分享\" class=\"ne-shares-arr\"></span>\n                                        <div class=\"share-join-item\" ne-module=\"/modules/shares/shares.js\" ne-state=\"cls.hover:ne-shares-open;title:<%=newrow.title%>;url:<%=newrow.docurl%>;pic:<%=newrow.imgurl%>\" >\n    <div class=\"ne-shares-pop6x1wrap\" ne-role=\"share-wrap\">\n    <ul class=\"ne-shares-pop6x1\">\n        <li>\n            <a ne-click=\"share('yixin')\" href=\"http://yixin.im/#f=www\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-yixin\"></i>\n                    <span class=\"ep-share-name\">易信</span>\n                </span>\n            </a>\n        </li>\n        <li>\n            <a ne-mouseover=\"initWeixin()\" href=\"javascript:\" target=\"_self\" class=\"ne-shares-weixin\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-weixin\"></i>\n                    <span class=\"ep-share-name\">微信</span>\n                </span>\n            </a>\n        </li>\n        <li>\n            <a ne-click=\"share('sina')\" href=\"javascript:\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-sina\"></i>\n                    <span class=\"ep-share-name\">微博</span>\n                </span>\n            </a>\n        </li>\n        <li class=\"last\">\n            <a ne-click=\"share('qzone')\" href=\"javascript:\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-qzone\"></i>\n                    <span class=\"ep-share-name\">QQ空间</span>\n                </span>\n            </a>\n        </li>\n    </ul>\n    </div>\n    <div class=\"ne-shares-qrwrap\">\n      <div class=\"ne-shares-qrarr\"></div>\n      <div ne-role=\"qrcode\" class=\"ne-shares-qrcode\"></div>\n      <p>用微信扫码二维码</p><p>分享至好友和朋友圈</p>\n    </div>\n    </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    <%}%>\n                    </script>\n    </div>\n    </li>\n    </ul>\n    <div class=\"load_more_foot\" id=\"load_more_foot\"></div>\n    <a class=\"load_more_btn\" ne-click=\"clickLoadMore();\" ne-hide=\"{{myState.counter &gt;= navList[myState.ndNavIndex].totalPage || myState.counter == 0}}\" target=\"_self\">\n    <div class=\"post_addmore\" ne-visible=\"{{myState.counter &lt; navList[myState.ndNavIndex].totalPage &amp;&amp; !myState.loading}}\">\n    <i>+</i>\n    <span>加载更多</span>\n    </div>\n    <div class=\"post_adding\" ne-show=\"{{myState.loading}}\">\n    <i>+</i>\n    <span>加载中...</span>\n    </div>\n    </a>\n    <div class=\"load_more_tip\" ne-show=\"{{myState.counter &gt;= navList[myState.ndNavIndex].totalPage}}\">:-)已经到最后啦~</div>\n    </div>\n    </div>\n    <!-- 信息流 结束 -->\n    </div>\n    <!-- 中间新闻 结束 -->\n    <!-- 右侧栏目 开始 -->\n    <div class=\"main_right_channel\">\n    <!-- 广告 -->\n    <!-- 300*30 -->\n    <!-- 新闻首页焦点图上方L特殊标识广告 开始-->\n    <!-- <div class=\"mod_newsr_ad1\">\n    <a href=\"http://g.163.com/a?CID=45744&Values=2901173312&Redirect=http://clickc.admaster.com.cn/c/a73960,b1279435,c369,i0,m101,8a1,8b2,h\"><img class=\"block mb10\" width=\"300\" height=\"30\" src=\"http://img1.126.net/channel11/024018300301009.jpg\" alt=\"广告\"></a>\n    </div> -->\n    <!--新闻首页焦点图上方L特殊标识广告 结束-->\n    <!-- 焦点图 开始-->\n    <div class=\"mod_right_focus\">\n    <div ne-module=\"\">\n    <div class=\"mod_focus\" ne-module=\"/modules/slide/slide.js\" ne-state=\"slideMethod:left;events=mouseover;interval=4000;loop=true;\">\n    <div class=\"f_body\" ne-role=\"slide-body\">\n    <ul class=\"f_main clearfix\" ne-role=\"slide-scroll\">\n    <li ne-role=\"slide-page\">\n    <a href=\"http://g.163.com/a?CID=68685&amp;Values=1366894002&amp;Redirect=http://clk.gentags.net/clk/iv-10648/st-31/cr-2/oi-1303641/or-7535/adv-158/pcon-0/https%253A%252F%252Fent.163.com%252F19%252F0625%252F16%252FEIHG8HLF000398QL.html\">\n    <img height=\"400\" src=\"http://nimg.ws.126.net/?url=https://yt-adp.ws.126.net/channel21/037408_300400_axry_20190626.jpg&amp;thumbnail=300x2147483647&amp;quality=75&amp;type=jpg\" width=\"300\"/>\n    <span class=\"bg\"></span>\n    <h3>三金西瓜霜独家冠名网易封面故事</h3>\n    </a>\n    </li>\n    <li ne-role=\"slide-page\">\n    <a href=\"http://news.163.com/photoview/00AP0001/2302561.html\">\n    <img height=\"400\" src=\"https://cms-bucket.ws.126.net/2019/06/28/e5b070c1f96349b0829da88b41105903.jpeg?imageView&amp;thumbnail=300y400\" width=\"300\"/>\n    <span class=\"bg\"></span>\n    <h3>浒苔绿潮开始在山东沿海登陆</h3>\n    </a>\n    </li>\n    <li ne-role=\"slide-page\">\n    <a href=\"http://news.163.com/photoview/00AP0001/2302559.html\">\n    <img height=\"400\" src=\"https://cms-bucket.ws.126.net/2019/06/28/2792654fe66f4985879a8cc30a89a6cc.jpeg?imageView&amp;thumbnail=300y400\" width=\"300\"/>\n    <span class=\"bg\"></span>\n    <h3>广西南宁抓获涉传人员286名</h3>\n    </a>\n    </li>\n    <li ne-role=\"slide-page\">\n    <a href=\"http://news.163.com/photoview/00AO0001/2302560.html\">\n    <img height=\"400\" src=\"https://cms-bucket.ws.126.net/2019/06/28/202e20527525474cac861ba7e56a2dde.jpeg?imageView&amp;thumbnail=300y400\" width=\"300\"/>\n    <span class=\"bg\"></span>\n    <h3>民主党初选辩论次日:拜登现身</h3>\n    </a>\n    </li>\n    </ul>\n    </div>\n    <div class=\"f_title\">\n    <span class=\"current\" ne-role=\"slide-nav\">1</span>\n    <span class=\"\" ne-role=\"slide-nav\">2</span>\n    <span class=\"\" ne-role=\"slide-nav\">3</span>\n    <span class=\"\" ne-role=\"slide-nav\">4</span>\n    </div>\n    <a class=\"f_prev\" ne-role=\"slide-prev\">&lt;</a>\n    <a class=\"f_next\" ne-role=\"slide-next\">&gt;</a>\n    </div>\n    </div>\n    </div>\n    <!-- 焦点图 结束-->\n    <!-- 广告 开始-->\n    <div class=\"mod_ad_toutu channel_relative_2016\">\n    <ul class=\"clearfix\">\n    <li><a href=\"http://baoxian.163.com/activity/act1605/index.html?from=mhds1605\">免费领取iPhone6s</a></li>\n    <li><a href=\"http://mall.163.com/mobile/fill.jsp?from=wwwtext\">手机费快充超低折扣</a></li>\n    <li><a href=\"http://baoxian.163.com/car/activitylist.html?from=mhdstbl\">免费送现金红包！</a></li>\n    <li><a href=\"http://piao.163.com/movie/47080.html?from=newsword\">镜中多奇境依旧爱丽丝</a></li>\n    </ul>\n    <span class=\"channel_ad_text_2016\">广告</span>\n    </div>\n    <!-- 广告 结束-->\n    <!-- 右侧960原创栏目 开始 -->\n    <div class=\"origina_column_960\" id=\"js_origina_column_960\">\n    <div ne-module=\"/news/index2016_rmd/modules/originacolumn/originacolumn.js\">\n    <div class=\"origina_column_warp\">\n    <h2>\n    <span>新闻各有态度</span>\n    </h2>\n    <div class=\"scroll_bd\" ne-role=\"scroll_bd\">\n    <div class=\"scroll_column_bd\">\n    <ul class=\"scroll_ul\">\n    <!-- 回声 开始 -->\n    <!-- 回声 结束 -->\n    <!-- 数读 开始 -->\n    <li class=\"cell cell_sd cell_hover\">\n    <p class=\"tag_line\">\n    <a class=\"tags tag_sd\" href=\"http://data.163.com/special/datablog/\">数读</a>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://data.163.com/19/0626/14/EIJQJG9L000181IU.html\" ne-role=\"detail\">\n    <h3>\n                                    中国哪里的地铁最拥挤？\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"中国哪里的地铁最拥挤？\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/26/30e8760df3044e29a18fac3514dd22b1.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://data.163.com/19/0625/11/EIH0CQEK00019GOE.html\">娶一个潮汕老婆到底是什么体验</a></li>\n    <li class=\"twoli\"><a href=\"http://data.163.com/19/0621/17/EI7BLS3600019GOE.html\">不瞒你说，成都早餐好吃到爆</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 数读 结束 -->\n    <!-- 人间 开始 -->\n    <li class=\"cell cell_rj\">\n    <p class=\"tag_line\">\n    <a class=\"tags tag_rj\" href=\"http://renjian.163.com/\">人间</a>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://renjian.163.com/19/0628/14/EIP21K41000181RV.html\" ne-role=\"detail\">\n    <h3>\n                                    小白作者的变现之路\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"小白作者的变现之路\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/27f33fcbfcec4b42b6837807b7a0883f.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://renjian.163.com/19/0627/16/EIML2HJO000181RV.html\">被毒虫男友拖下水的女大学生</a></li>\n    <li class=\"twoli\"><a href=\"http://renjian.163.com/19/0626/13/EIJPJMCH000181RV.html\">领导，求你让我加班吧</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 人间 结束 -->\n    <!-- 大国小民 开始 -->\n    <li class=\"cell cell_dgxm\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_dgxm\">大国小民</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://renjian.163.com/19/0624/14/EIEOBNCB000181RK.html\" ne-role=\"detail\">\n    <h3>\n                                    当不了官发不了财的读书人\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"当不了官发不了财的读书人\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/24/b77e119ffeca477fa4bd2144b1fcb86c.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://renjian.163.com/19/0620/16/EI4JRNO7000181RK.html\">四个博士，一地鸡毛</a></li>\n    <li class=\"twoli\"><a href=\"http://renjian.163.com/19/0618/12/EHV0QRVG000181RK.html\">医闹得逞后，伤害的到底是谁</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 大国小民 结束 -->\n    <!-- 三三有梗 开始 -->\n    <li class=\"cell cell_dada\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_dada\">三三有梗</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://news.163.com/19/0627/11/EIM57O490001885B.html\" ne-role=\"detail\">\n    <h3>\n                                    据说99%的人在图书馆一定会碰上......\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"据说99%的人在图书馆一定会碰上......\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/27/06eb8f4a3d4647bf9360ff5e71f003b8.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://news.163.com/19/0626/15/EIK0IJT40001885B.html\">我可能，得了种，前任病</a></li>\n    <li class=\"twoli\"><a href=\"https://news.163.com/19/0617/09/EHS57H4L0001885B.html\">那些KO不掉我的,最终成了我的OK</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 三三有梗 结束 -->\n    <!-- 三三映画 开始 -->\n    <!-- 三三映画 结束 -->\n    <!-- 我去1990 开始 -->\n    <li class=\"cell cell_wq1990\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_wq1990\">我去1990</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://news.163.com/19/0628/11/EIOL94760001885B.html\" ne-role=\"detail\">\n    <h3>\n                                    直男幼稚行为大赏\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"直男幼稚行为大赏\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/0b3890cd2f4b473fa0127b5e33ae6ccf.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://news.163.com/19/0624/12/EIEFGMVL0001885B.html\">打个赌，爱情友情你分不清楚</a></li>\n    <li class=\"twoli\"><a href=\"https://news.163.com/19/0621/12/EI6NKDTU0001885B.html\">不会唱歌的人进 KTV 以后有多惨</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 我去1990 结束 -->\n    <!-- 轻松一刻 开始 -->\n    <li class=\"cell cell_qsyk\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_qsyk\">轻松一刻</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://news.163.com/19/0628/19/EIPIQT4O000181BR.html\" ne-role=\"detail\">\n    <h3>\n                                    彩票一直都不中，我却忍不住要买\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"彩票一直都不中，我却忍不住要买\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/f44265c5b4ef4a11a99eedbde7c49833.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://news.163.com/19/0627/17/EIMPGJAU000181BR.html\">原来\"神仙眷侣\"离婚,也是一地鸡毛</a></li>\n    <li class=\"twoli\"><a href=\"https://news.163.com/19/0626/18/EIK95RV0000181BR.html\">我宣布，北大清华这对CP锁死了！</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 轻松一刻 结束 -->\n    <!-- 槽值 开始 -->\n    <li class=\"cell cell_caozhi\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_caozhi\">槽值</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://caozhi.news.163.com/19/0623/22/EID0CBIH000181TI.html\" ne-role=\"detail\">\n    <h3>\n                                    佟丽娅，这次你赢了\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"佟丽娅，这次你赢了\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/23/67d24242d479451ea705e26296187f78.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://caozhi.news.163.com/19/0623/15/EIC9LGSP000181TI.html\">千万别在深夜点开这神作</a></li>\n    <li class=\"twoli\"><a href=\"http://caozhi.news.163.com/19/0618/19/EHVRID7G000181TI.html\">那个发“嗯”的人，已被踢出群聊</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 槽值 结束 -->\n    <!-- 谈心社 开始 -->\n    <li class=\"cell cell_tanxinshe\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_tanxinshe\">谈心社</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://news.163.com/19/0628/17/EIPCOKEA0001982T.html\" ne-role=\"detail\">\n    <h3>\n                                    王宝强母亲去世：来日方长是人生的错觉\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"王宝强母亲去世：来日方长是人生的错觉\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/ecd0de8b8dc0402da72d814bde76f06e.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://news.163.com/19/0627/13/EIMC0EDH0001982T.html\">宋仲基宋慧乔离婚：再美的爱情也会过期</a></li>\n    <li class=\"twoli\"><a href=\"https://news.163.com/19/0626/17/EIK6AD550001982T.html\">杨紫冰箱藏药，戳穿最怂瞬间</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 谈心社 结束 -->\n    <!-- 看客 开始 -->\n    <li class=\"cell cell_kanke\">\n    <p class=\"tag_line\">\n    <a class=\"tags tag_kanke\" href=\"http://renjian.163.com/special/renjian_kanke/\">看客</a>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://renjian.163.com/19/0628/11/EIOMK185000199ET.html\" ne-role=\"detail\">\n    <h3>\n                                    我奶茶都戒了，日本人才知道它的好\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"我奶茶都戒了，日本人才知道它的好\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/f35eceb8d111496693e8f77a71a49cba.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://renjian.163.com/19/0620/11/EI43PM8Q000199ET.html\">美国堕胎残酷物语</a></li>\n    <li class=\"twoli\"><a href=\"http://renjian.163.com/19/0613/11/EHI39FML000199ET.html\">跑腿小哥提供的十万种服务</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 看客 结束 -->\n    <!-- 身体密码 开始 -->\n    <li class=\"cell cell_stpwd\">\n    <p class=\"tag_line\">\n    <a class=\"tags tag_stpwd\" href=\"http://jiankang.163.com/special/zhutierji/?type=3\">身体密码</a>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://jiankang.163.com/19/0625/11/EIH061CM0038804G.html\" ne-role=\"detail\">\n    <h3>\n                                    防晒，99%的人都做错了……\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"防晒，99%的人都做错了……\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/25/f260b6843fca4702bb5e4e316600f113.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://jiankang.163.com/19/0617/14/EHSN7PPV0038804G.html\">当代人减肥：迈不过25岁这道坎</a></li>\n    <li class=\"twoli\"><a href=\"https://jiankang.163.com/19/0608/15/EH5J9IGA00388AD5.html\">多年后 无数中年人仍会被高考吓醒</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 身体密码 结束 -->\n    <!-- 哒哒 开始 -->\n    <!-- 哒哒 结束 -->\n    </ul>\n    </div>\n    <div id=\"js_baseline\"></div>\n    <span class=\"white_bg\" id=\"js_white_bg\"></span>\n    </div>\n    </div>\n    </div>\n    </div>\n    <!-- 右侧960原创栏目 结束 -->\n    <div class=\"mt12 mod_ad_1 mod_ad_r\">\n    <!-- 300*250 -->\n    <div adtype=\"rightAd\" class=\"at_item right_ad_item\" requesturl=\"https://nex.163.com/q?app=7BE0FC82&amp;c=news&amp;l=31&amp;site=netease&amp;affiliate=news&amp;cat=homepage&amp;type=logo300x250&amp;location=1\"></div>\n    <a class=\"ad_hover_href\" href=\"javascript:;\" target=\"_self\"></a>\n    </div>\n    <!-- 新闻策划 开始 -->\n    <div class=\"mt35 mod_pageh5\">\n    <div ne-module=\"/news/index2016_rmd/modules/modh5/modh5.js\">\n    <div class=\"idx_cm_title\">\n    <a class=\"title\" href=\"https://open.163.com/\">网易公开课</a>\n    </div>\n    <div class=\"wrap\" ne-module=\"/modules/slide/slide.js\" ne-state=\"slideMethod:left;events=mouseover;interval=4000;loop=true;\">\n    <div class=\"h5_bg h5_border\">\n    <div class=\"h5_body\" ne-role=\"slide-body\">\n    <div class=\"h5_main clearfix\" ne-role=\"slide-scroll\">\n    <div class=\"h5_item\" ne-role=\"slide-page\">\n    <div class=\"h5_item_poster\">\n    <a href=\"https://vip.open.163.com/courses/2698?p=xs_yt01\">\n    <img height=\"436\" src=\"https://cms-bucket.ws.126.net/2019/06/26/b2ef8c1d0fed49078cb104f94c9f253e.jpeg\" width=\"280\"/>\n    <span class=\"bg\"></span>\n    <h3>他凭什么甩开同龄人，做职场前5%？</h3>\n    </a>\n    </div>\n    </div>\n    <div class=\"h5_item\" ne-role=\"slide-page\">\n    <div class=\"h5_item_poster\">\n    <a href=\"https://vip.open.163.com/courses/2249?p=xs_yt02\">\n    <img height=\"436\" src=\"https://cms-bucket.ws.126.net/2019/06/27/ffa8db82492446c88efe2d540ed64d6a.jpeg\" width=\"280\"/>\n    <span class=\"bg\"></span>\n    <h3>一个人成熟的标志：与负面情绪和解</h3>\n    </a>\n    </div>\n    </div>\n    <div class=\"h5_item\" ne-role=\"slide-page\">\n    <div class=\"h5_item_poster\">\n    <a href=\"https://vip.open.163.com/courses/1078?p=xs_yt03\">\n    <img height=\"436\" src=\"https://cms-bucket.ws.126.net/2019/06/26/893a6ecab816408cb5971de6ec236dde.jpeg\" width=\"280\"/>\n    <span class=\"bg\"></span>\n    <h3>情商高的人，走到哪儿都大受欢迎</h3>\n    </a>\n    </div>\n    </div>\n    <div class=\"h5_item\" ne-role=\"slide-page\">\n    <div class=\"h5_item_poster\">\n    <a href=\"https://vip.open.163.com/courses/2019?p=xs_yt04\">\n    <img height=\"436\" src=\"https://cms-bucket.ws.126.net/2019/06/26/f48048d211e44c889e241e545b29a000.jpeg\" width=\"280\"/>\n    <span class=\"bg\"></span>\n    <h3>每天5分钟，告别办公室综合症</h3>\n    </a>\n    </div>\n    </div>\n    </div>\n    <span class=\"ad_hover_pic\">广告</span>\n    </div>\n    <!-- <div class=\"scrollbtn scrollbtl\" ne-role=\"scrollbtn\"><a ne-role=\"slide-prev\" class=\"f_prev\">&lt;</a></div>\n    \t\t<div class=\"scrollbtn scrollbtnr\" ne-role=\"scrollbtn\"><a ne-role=\"slide-next\" class=\"f_next\">&gt;</a></div> -->\n    <div class=\"nav clearfix\">\n    <span ne-repeat=\"1..state.total\" ne-role=\"slide-nav\"></span>\n    </div>\n    </div>\n    <!-- <div class=\"nav clearfix\">\n    \t\t<span ne-role=\"slide-nav\" ne-repeat=\"1..state.total\"></span>\n    \t</div> -->\n    </div></div>\n    </div>\n    <!-- 新闻策划 结束 -->\n    <!-- 新闻专题 开始 -->\n    <div class=\"mt30 mod_news_special\">\n    <div class=\"idx_cm_title\">\n    <h2 class=\"title\"><a href=\"http://news.163.com/special/\">新闻专题</a></h2>\n    </div>\n    <div class=\"bd\">\n    <div class=\"photo\">\n    <a href=\"http://news.163.com/special/2019qglh/\">\n    <img alt=\"2019年全国两会\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/03/07/c8134391d38245dc849b99fbf1ce33b0.png?imageView&amp;thumbnail=300y90\" width=\"300\"/>\n    </a>\n    </div>\n    <h3>\n    <span>HOT</span>\n    <strong><a href=\"http://news.163.com/special/2019qglh/\">2019年全国两会</a></strong>\n    </h3>\n    <ul class=\"idx_cm_list\">\n    <li>\n    <a href=\"http://news.163.com/special/zghj70/\">海军成立70周年</a>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/special/chunyun_2019/\">2019年春运春节</a>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/special/chang_e4/\">嫦娥四号登月</a>\n    </li>\n    <li>\n    <a href=\"http://cms-bucket.ws.126.net/2019/06/26/080a0e9f8b014dd5b261f9e988f7f7f9.jpeg\">声明</a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    <!-- 新闻专题 结束 -->\n    <!-- 高层动态 开始-->\n    <div class=\"mt27 mod_high_dynamic\">\n    <div class=\"idx_cm_title\">\n    <h2 class=\"title\"><a href=\"http://news.163.com/special/00011269/gdmore.html\">高层动态</a></h2>\n    </div>\n    <ul class=\"idx_cm_list idx_cm_list_h\">\n    <li>\n    <a href=\"https://news.163.com/19/0628/11/EIOL0214000189FH.html\">习近平会见联合国秘书长古特雷斯</a>\n    </li>\n    <li>\n    <a href=\"https://news.163.com/19/0620/14/EI4ESVV9000189FH.html\">习近平抵达平壤 开始对朝鲜进行国事访问</a>\n    </li>\n    </ul>\n    </div>\n    <!-- 高层动态 结束-->\n    <div class=\"mt25 mod_ad_2 mod_ad_r\">\n    <!-- 300*250 -->\n    <div adtype=\"rightAd\" class=\"at_item right_ad_item\" requesturl=\"https://nex.163.com/q?app=7BE0FC82&amp;c=news&amp;l=32&amp;site=netease&amp;affiliate=news&amp;cat=homepage&amp;type=logo300x250&amp;location=2\"></div>\n    <a class=\"ad_hover_href\" href=\"javascript:;\" target=\"_self\"></a>\n    </div>\n    <!-- 军事 航空  开始 -->\n    <div class=\"mt35 mod_war\">\n    <div class=\"idx_cm_title\">\n    <h2 class=\"title\">\n    <a href=\"http://war.163.com/\">军事</a>\n    <i>・</i>\n    <a href=\"http://news.163.com/air/\">航空</a>\n    </h2>\n    </div>\n    <div class=\"idx_cm_img\">\n    <a href=\"http://war.163.com/photoview/4T8E0001/2301528.html\">\n    </a></div></div></div></div></div></div></div></div></body></html>\n\n\n\n```python\nsamples = soup.find_all(\"a\")\nsamples\n```\n\n\n\n\n    [<a class=\"ntes-nav-index-title ntes-nav-entry-wide c-fl\" href=\"http://www.163.com/\" title=\"网易首页\">网易首页</a>,\n     <a class=\"ntes-nav-select-title ntes-nav-entry-bgblack JS_NTES_LOG_FE\" href=\"http://www.163.com/#f=topnav\">应用\n                 <em class=\"ntes-nav-select-arr\"></em>\n     </a>,\n     <a href=\"http://m.163.com/newsapp/#f=topnav\">\n     <span>\n     <em class=\"ntes-nav-app-newsapp\">网易新闻</em>\n     </span>\n     </a>,\n     <a href=\"http://open.163.com/#f=topnav\">\n     <span>\n     <em class=\"ntes-nav-app-open\">网易公开课</em>\n     </span>\n     </a>,\n     <a href=\"https://hongcai.163.com/?from=pcsy-button\">\n     <span>\n     <em class=\"ntes-nav-app-hongcai\">网易红彩</em>\n     </span>\n     </a>,\n     <a href=\"http://u.163.com/aosoutbdbd8\">\n     <span>\n     <em class=\"ntes-nav-app-yanxuan\">网易严选</em>\n     </span>\n     </a>,\n     <a href=\"http://mail.163.com/client/dl.html?from=mail46\">\n     <span>\n     <em class=\"ntes-nav-app-mail\">邮箱大师</em>\n     </span>\n     </a>,\n     <a href=\"http://study.163.com/client/download.htm?from=163app&amp;utm_source=163.com&amp;utm_medium=web_app&amp;utm_campaign=business\">\n     <span>\n     <em class=\"ntes-nav-app-study\">网易云课堂</em>\n     </span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece47f92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=6b69bfbfac0db5f335232faa957a27bb&amp;target=https%3A%2F%2Fapp.kaola.com%2F%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>\n     <em class=\"ntes-nav-app-kaola-hg\">网易考拉</em>\n     </span>\n     </a>,\n     <a class=\"ntes-nav-quick-navigation-btn\" href=\"javascript:void(0);\" id=\"js_N_ntes_nav_quick_navigation_btn\" target=\"_self\">\n     <em>快速导航\n                   <span class=\"menu1\"></span>\n     <span class=\"menu2\"></span>\n     <span class=\"menu3\"></span>\n     </em>\n     </a>,\n     <a href=\"https://news.163.com\">新闻</a>,\n     <a href=\"http://news.163.com/domestic\">国内</a>,\n     <a href=\"http://news.163.com/world\">国际</a>,\n     <a href=\"http://news.163.com/photo\">图片</a>,\n     <a href=\"http://view.163.com\">评论</a>,\n     <a href=\"http://discovery.163.com\">探索</a>,\n     <a href=\"http://war.163.com\">军事</a>,\n     <a href=\"http://news.163.com/localnews/\">本地新闻</a>,\n     <a href=\"http://news.163.com/special/wangsansanhome/\">王三三</a>,\n     <a href=\"http://sports.163.com\">体育</a>,\n     <a href=\"http://sports.163.com/nba\">NBA</a>,\n     <a href=\"http://sports.163.com/cba\">CBA</a>,\n     <a href=\"http://sports.163.com/allsports\">综合</a>,\n     <a href=\"http://sports.163.com/zc\">中超</a>,\n     <a href=\"http://sports.163.com/world\">国际足球</a>,\n     <a href=\"http://sports.163.com/yc\">英超</a>,\n     <a href=\"http://sports.163.com/xj\">西甲</a>,\n     <a href=\"http://sports.163.com/yj\">意甲</a>,\n     <a href=\"http://ent.163.com\">娱乐</a>,\n     <a href=\"http://ent.163.com/star\">明星</a>,\n     <a href=\"http://ent.163.com/photo\">图片</a>,\n     <a href=\"http://ent.163.com/movie\">电影</a>,\n     <a href=\"http://ent.163.com/tv\">电视</a>,\n     <a href=\"http://ent.163.com/music\">音乐</a>,\n     <a href=\"http://ent.163.com/special/gsbjb/\">稿事编辑部</a>,\n     <a href=\"http://ent.163.com/special/focus_ent/\">娱乐FOCUS</a>,\n     <a href=\"http://ent.163.com/special/xbkhz/\">星捕快</a>,\n     <a href=\"http://money.163.com\">财经</a>,\n     <a href=\"http://money.163.com/stock\">股票</a>,\n     <a href=\"http://quotes.money.163.com/stock\">行情</a>,\n     <a href=\"http://money.163.com/chanjing\">产经</a>,\n     <a href=\"http://money.163.com/ipo\">新股</a>,\n     <a href=\"http://money.163.com/finance\">金融</a>,\n     <a href=\"http://money.163.com/fund\">基金</a>,\n     <a href=\"http://biz.163.com\">商业</a>,\n     <a href=\"http://money.163.com/licai\">理财</a>,\n     <a href=\"http://auto.163.com\">汽车</a>,\n     <a href=\"http://auto.163.com/buy\">购车</a>,\n     <a href=\"http://auto.163.com/depreciate\">行情</a>,\n     <a href=\"http://product.auto.163.com/finder\">选车</a>,\n     <a href=\"http://product.auto.163.com\">车型库</a>,\n     <a href=\"http://auto.163.com/news\">行业</a>,\n     <a href=\"http://auto.163.com/chezhu\">用车</a>,\n     <a href=\"http://auto.163.com/photo\">汽车图片</a>,\n     <a href=\"http://tech.163.com\">科技</a>,\n     <a href=\"http://tech.163.com/telecom/\">通信</a>,\n     <a href=\"http://tech.163.com/it\">IT</a>,\n     <a href=\"http://tech.163.com/internet\">互联网</a>,\n     <a href=\"http://tech.163.com/special/ydhlw\">移动互联网</a>,\n     <a href=\"http://tech.163.com/special/chzt\">特别策划</a>,\n     <a href=\"http://tech.163.com/special/wudaokou\">五道口沙龙</a>,\n     <a href=\"http://tech.163.com/special/yyzd\">易语中的</a>,\n     <a href=\"http://tech.163.com/special\">专题</a>,\n     <a href=\"http://lady.163.com\">女人</a>,\n     <a href=\"http://baby.163.com\">亲子</a>,\n     <a href=\"http://fashion.163.com/art\">艺术</a>,\n     <a href=\"http://fashion.163.com\">时尚</a>,\n     <a href=\"http://shoucang.163.com\">收藏</a>,\n     <a href=\"http://lady.163.com/sense\">情感</a>,\n     <a href=\"http://lady.163.com/astro\">星座</a>,\n     <a href=\"http://lady.163.com/beauty\">美容</a>,\n     <a href=\"http://cosmetic.lady.163.com/trial\">免费试用</a>,\n     <a href=\"http://mobile.163.com\">手机</a>,\n     <a href=\"http://digi.163.com/\">数码</a>,\n     <a href=\"http://mobile.163.com/mi\">移动</a>,\n     <a href=\"http://digi.163.com/pc\">电脑</a>,\n     <a href=\"http://product.mobile.163.com\">手机库</a>,\n     <a href=\"http://hea.163.com/\">家电</a>,\n     <a href=\"http://digi.163.com/smart\">智能硬件</a>,\n     <a href=\"http://digi.163.com/dc\">相机</a>,\n     <a href=\"http://v.mobile.163.com\">手机视频</a>,\n     <a href=\"http://house.163.com\">房产</a>,\n     <a href=\"http://home.163.com\">家居</a>,\n     <a href=\"http://bj.house.163.com\">北京房产</a>,\n     <a href=\"http://sh.house.163.com\">上海房产</a>,\n     <a href=\"http://gz.house.163.com\">广州房产</a>,\n     <a href=\"http://house.163.com/city\">全部分站</a>,\n     <a href=\"http://xf.house.163.com\">楼盘库</a>,\n     <a href=\"http://home.163.com/jiaju/\">家具</a>,\n     <a href=\"http://home.163.com/weiyu/\">卫浴</a>,\n     <a href=\"http://home.163.com/special/jiajuyigui\">衣柜</a>,\n     <a href=\"http://travel.163.com\">旅游</a>,\n     <a href=\"http://travel.163.com/outdoor\">户外</a>,\n     <a href=\"http://guizhou.travel.163.com\">贵州</a>,\n     <a href=\"http://travel.163.com/food\">美食</a>,\n     <a href=\"http://jingdian.travel.163.com/domestic/1000066937\">四川</a>,\n     <a href=\"http://jingdian.travel.163.com\">景点</a>,\n     <a href=\"http://jingdian.travel.163.com/domestic/1000066944\">新疆</a>,\n     <a href=\"http://travel.163.com/special/travellist/#f=endnav\">专题</a>,\n     <a href=\"http://jingdian.travel.163.com/domestic/1000066926/#f=endnav\">西藏</a>,\n     <a href=\"http://edu.163.com\">教育</a>,\n     <a href=\"http://edu.163.com/yimin\">移民</a>,\n     <a href=\"http://edu.163.com/kaoyan\">考研</a>,\n     <a href=\"http://edu.163.com/liuxue\">留学</a>,\n     <a href=\"http://edu.163.com/special/official\">公务员</a>,\n     <a href=\"http://edu.163.com/en\">外语</a>,\n     <a href=\"http://kids.163.com\">中小学</a>,\n     <a href=\"http://edu.163.com/gaokao\">高考</a>,\n     <a href=\"http://daxue.163.com\">校园</a>,\n     <a href=\"http://sitemap.163.com/\"><i></i>查看网易地图</a>,\n     <a class=\"ntes-nav-login-title\" href=\"http://reg.163.com/\" id=\"js_N_nav_login_title\">登录</a>,\n     <a class=\"ntes-nav-select-title ntes-nav-select-title-register\" href=\"http://reg.email.163.com/mailregAll/reg0.jsp?from=163navi&amp;regPage=163\">注册免费邮箱\n                     <em class=\"ntes-nav-select-arr\"></em>\n     </a>,\n     <a href=\"http://reg.vip.163.com/register.m?from=topnav\">\n     <span style=\"width:190px;\">注册VIP邮箱（特权邮箱，付费）</span>\n     </a>,\n     <a href=\"http://mail.163.com/client/dl.html?from=mail46\">\n     <span style=\"width:190px;\">免费下载网易官方手机邮箱应用</span>\n     </a>,\n     <a class=\"ntes-nav-entry-wide c-fl\" id=\"js_N_navLogout\" target=\"_self\">安全退出</a>,\n     <a class=\"ntes-nav-mobile-title ntes-nav-entry-bgblack\" href=\"http://www.163.com/newsapp/#f=163nav\">\n     <em class=\"ntes-nav-entry-mobile\">移动端</em>\n     </a>,\n     <a href=\"http://www.163.com/newsapp/#f=163nav\">\n     <img src=\"//static.ws.126.net/f2e/include/common_nav/images/topapp.jpg\"/>\n     </a>,\n     <a class=\"ntes-nav-select-title ntes-nav-select-title-huatian ntes-nav-entry-bgblack\" href=\"https://open.163.com/\" id=\"js_love_url\">\n     <em class=\"ntes-nav-entry-huatian\">网易公开课</em>\n     <em class=\"ntes-nav-select-arr\"></em>\n     <span class=\"ntes-nav-msg\">\n     <em class=\"ntes-nav-msg-num\"></em>\n     </span>\n     </a>,\n     <a href=\"https://vip.open.163.com\">\n     <span>付费精品</span>\n     </a>,\n     <a href=\"https://open.163.com/ted/\">\n     <span>TED</span>\n     </a>,\n     <a href=\"https://open.163.com/ocw/\">\n     <span>国际名校公开课</span>\n     </a>,\n     <a href=\"http://open.163.com/cuvocw/\">\n     <span>中国大学视频公开课</span>\n     </a>,\n     <a href=\"https://open.163.com/appreciation\">\n     <span>赏课</span>\n     </a>,\n     <a href=\"https://open.163.com/khan/\">\n     <span>可汗学院</span>\n     </a>,\n     <a href=\"http://open.163.com/special/appdownload_pc/\">\n     <span>下载公开课</span>\n     </a>,\n     <a class=\"ntes-nav-select-title ntes-nav-select-title-kaola ntes-nav-entry-bgblack\" href=\"http://da.kaola.com/redirect?t=5aaebece48792c00&amp;p=c901ea7c&amp;proId=1024&amp;code=d638f275b1755320e845734e53e897ee&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\" id=\"js_kaola_url\">\n     <em class=\"ntes-nav-entry-kaola\">网易考拉</em>\n     <em class=\"ntes-nav-select-arr\"></em>\n     <span class=\"ntes-nav-msg ntes-nav-kaola-msg\" id=\"js_N_navKaolaMsg\">\n     <em class=\"ntes-nav-msg-num\"></em>\n     </span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece48f92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=b3e224752b2cad85e9831e8c6cf7fbbd&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fbimaibangdan.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>1000元新人大礼包</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece49392c00&amp;p=c901ea7c&amp;proId=1024&amp;code=fd8e43f4a20a26fbe60f7e7de1f17efe&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>新人专享进口好货</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece49392c01&amp;p=c901ea7c&amp;proId=1024&amp;code=21bcd5b595fc235cfd11e3e1cff14177&amp;target=https%3A%2F%2Factivity.kaola.com%2Factivity%2FflashSaleIndex%2Fshow.html%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>今日限时抢购</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece49792c00&amp;p=c901ea7c&amp;proId=1024&amp;code=ecc40777cb2d68a3d9fb078b232f081d&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfyrzolcpagerz.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>营养保健</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece49b92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=0cdd5a920c768340ffc12eccd659341d&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fnewpc.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>个人洗护</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece4a392c00&amp;p=c901ea7c&amp;proId=1024&amp;code=ee49a3a793f22e648ac616f5dab061dd&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjpwmb9zcpagesl.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>美容彩妆</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece4a792c00&amp;p=c901ea7c&amp;proId=1024&amp;code=6eb2598fd20963efc203a4e3fe88f4e2&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fmyxrq.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>母婴儿童</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece4ab92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=3946ce460ba655c11afac69855dfc02b&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Ffoodnewcustomers.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>环球美食</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece4af92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=2eee7290051863737a434d44f3c0d46f&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fnewtalent.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>家居生活</span>\n     </a>,\n     <a class=\"ntes-nav-select-title ntes-nav-select-title-lofter ntes-nav-entry-bgblack\" href=\"http://you.163.com/?from=web_fc_menhu_xinrukou_1\" id=\"js_lofter_icon_url\">\n     <em class=\"ntes-nav-entry-lofter\">网易严选</em>\n     <em class=\"ntes-nav-select-arr\"></em>\n     <span class=\"ntes-nav-msg\" id=\"js_N_navLofterMsg\">\n     <em class=\"ntes-nav-msg-num\"></em>\n     </span>\n     </a>,\n     <a href=\"http://you.163.com/act/static/Fb2d1OZ714.html?from=web_fc_menhu_xinrukou_1\">\n     <span>888元现金券</span>\n     </a>,\n     <a href=\"http://you.163.com/manufacturer/list?from=web_fc_menhu_xinrukou_3\">\n     <span>品牌制造商爆款</span>\n     </a>,\n     <a href=\"http://you.163.com/item/recommend?from=web_fc_menhu_xinrukou_4\">\n     <span>999+人气好评品</span>\n     </a>,\n     <a href=\"http://you.163.com/flashSale/index?from=web_fc_menhu_xinrukou_5\">\n     <span>限时特惠</span>\n     </a>,\n     <a href=\"http://you.163.com/item/list?categoryId=1005000&amp;from=web_fc_menhu_xinrukou_7\">\n     <span>居家床品</span>\n     </a>,\n     <a href=\"http://you.163.com/item/list?categoryId=1005001&amp;from=web_fc_menhu_xinrukou_8\">\n     <span>精致餐厨</span>\n     </a>,\n     <a href=\"http://you.163.com/item/list?categoryId=1008000&amp;from=web_fc_menhu_xinrukou_9\">\n     <span>箱包鞋类</span>\n     </a>,\n     <a href=\"http://you.163.com/item/list?categoryId=1010000&amp;from=web_fc_menhu_xinrukou_10\">\n     <span>经典服饰</span>\n     </a>,\n     <a href=\"http://you.163.com/item/list?categoryId=1005002&amp;from=web_fc_menhu_xinrukou_11\">\n     <span>健康美食</span>\n     </a>,\n     <a class=\"ntes-nav-select-title ntes-nav-select-title-money ntes-nav-entry-bgblack\" href=\"http://pay.163.com/\">\n     <em class=\"ntes-nav-entry-money\">支付</em>\n     <em class=\"ntes-nav-select-arr\"></em>\n     </a>,\n     <a href=\"http://pay.163.com/#f=topnav\">\n     <span>一卡通充值</span>\n     </a>,\n     <a href=\"http://ecard.163.com/script/index#f=topnav\">\n     <span>一卡通购买</span>\n     </a>,\n     <a href=\"https://k.163.com/?product=163&amp;trackid=01\">\n     <span>网易白金卡</span>\n     </a>,\n     <a href=\"https://epay.163.com/\">\n     <span>我的网易支付</span>\n     </a>,\n     <a href=\"https://3c.163.com/?from=wangyimenhu16\">\n     <span>网易智造</span>\n     </a>,\n     <a href=\"http://lq.163.com?from=neteasemoney\">\n     <span>网易来钱-借现金</span>\n     </a>,\n     <a class=\"ntes-nav-select-title ntes-nav-select-title-cart ntes-nav-entry-bgblack\" href=\"http://baoxian.163.com/car/?from=mhgwc\">\n     <em class=\"ntes-nav-entry-cart\">电商</em>\n     <em class=\"ntes-nav-select-arr\"></em>\n     </a>,\n     <a href=\"http://you.163.com?from=web_in_wydaohang\">\n     <span>严选</span>\n     </a>,\n     <a href=\"http://lq.163.com?from=neteasebuy\">\n     <span>我要借钱</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece4b392c00&amp;p=c901ea7c&amp;proId=1024&amp;code=d15f8f9d72ccc507aeefda91b43c0cd2&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>网易考拉</span>\n     </a>,\n     <a class=\"ntes-nav-select-title ntes-nav-select-title-mail ntes-nav-entry-bgblack\" id=\"js_mail_url\">\n     <em class=\"ntes-nav-entry-mail\">邮箱</em>\n     <em class=\"ntes-nav-select-arr\"></em>\n     <span class=\"ntes-nav-msg\" id=\"js_N_navMailMsg\">\n     <em class=\"ntes-nav-msg-num\" id=\"js_N_navMailMsgNum\"></em>\n     </span>\n     </a>,\n     <a href=\"http://email.163.com/#f=topnav\">\n     <span>免费邮箱</span>\n     </a>,\n     <a href=\"http://vipmail.163.com/#f=topnav\">\n     <span>VIP邮箱</span>\n     </a>,\n     <a href=\"http://qiye.163.com/#f=topnav\">\n     <span>企业邮箱</span>\n     </a>,\n     <a href=\"http://reg.email.163.com/mailregAll/reg0.jsp?from=ntes_nav&amp;regPage=163\">\n     <span>免费注册</span>\n     </a>,\n     <a href=\"http://reg.email.163.com/unireg/call.do?cmd=register.entrance&amp;flow=mobile&amp;from=ntes_nav\">\n     <span>快速注册</span>\n     </a>,\n     <a href=\"http://mail.163.com/dashi/dlpro.html?from=mail46\">\n     <span>客户端下载</span>\n     </a>,\n     <a class=\"first\" href=\"https://news.163.com/\">新闻</a>,\n     <a href=\"http://sports.163.com/\">体育</a>,\n     <a href=\"http://sports.163.com/nba/\">NBA</a>,\n     <a href=\"http://ent.163.com/\">娱乐</a>,\n     <a href=\"http://money.163.com/\">财经</a>,\n     <a href=\"http://money.163.com/stock/\">股票</a>,\n     <a href=\"http://auto.163.com/\" id=\"_link_auto\">汽车</a>,\n     <a href=\"http://tech.163.com/\">科技</a>,\n     <a href=\"http://mobile.163.com/\">手机</a>,\n     <a href=\"http://digi.163.com/\">数码</a>,\n     <a href=\"http://lady.163.com/\">女人</a>,\n     <a href=\"http://v.163.com/\">直播</a>,\n     <a href=\"http://v.163.com/special/video/#tuijian\">视频</a>,\n     <a href=\"http://travel.163.com/\">旅游</a>,\n     <a href=\"http://house.163.com/\" id=\"houseUrl\">房产</a>,\n     <a href=\"http://home.163.com/\" id=\"homeUrl\">家居</a>,\n     <a href=\"http://edu.163.com/\">教育</a>,\n     <a href=\"http://book.163.com/\">读书</a>,\n     <a href=\"https://news.163.com/\" id=\"_link_game\">本地</a>,\n     <a href=\"http://jiankang.163.com/\">健康</a>,\n     <a href=\"http://rd.da.netease.com/redirect?t=5802fb18cf033c80&amp;p=e17af55c&amp;proId=1024&amp;target=https%3A%2F%2Fwww.kaola.com%2F%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">海淘</a>,\n     <a class=\"last\" href=\"http://art.163.com/\">艺术</a>,\n     <a class=\"channel2019_logo channel2019_news_logo\" href=\"https://news.163.com/\">网易新闻有态度</a>,\n     <a href=\"http://news.163.com/weather/\">\n     <script ne-repeat=\"weather in weatherInfo\" type=\"text/template\">\n                     <img class=\"ns-weather-icon\" ne-src=\"http://static.ws.126.net/f2e/news/index2015/img/weather/<%=weather.icon%>\">\n                     <div class=\"ns-weather-text\"><%=weather.weather%></div>\n                     <div class=\"ns-weather-info\"><%=weather.temp2%>°~<%=weather.temp1%>°</div>\n                     <div class=\"ns-weather-city\"><%=weather.city%></div>\n                 </script>\n     </a>,\n     <a href=\"http://www.163.com/\">首页</a>,\n     <a href=\"http://news.163.com/rank/\">排行</a>,\n     <a href=\"http://news.163.com/photo/#Current\">图片</a>,\n     <a href=\"http://news.163.com/domestic/\">国内</a>,\n     <a href=\"http://news.163.com/world/\">国际</a>,\n     <a href=\"http://data.163.com/special/datablog/\">数读</a>,\n     <a href=\"http://war.163.com/\">军事</a>,\n     <a href=\"http://news.163.com/air/\">航空</a>,\n     <a href=\"http://news.163.com/uav/\">无人机</a>,\n     <a href=\"http://news.163.com/college\">新闻学院</a>,\n     <a href=\"http://gov.163.com/\">政务</a>,\n     <a href=\"http://gongyi.163.com/\">公益</a>,\n     <a href=\"http://media.163.com/\">媒体</a>,\n     <a href=\"http://news.163.com/special/wangsansanhome/\">王三三</a>,\n     <a class=\"tags tag_sd\" href=\"http://data.163.com/special/datablog/\">数读</a>,\n     <a class=\"detail\" href=\"http://data.163.com/19/0626/14/EIJQJG9L000181IU.html\" ne-role=\"detail\">\n     <h3>\n                                     中国哪里的地铁最拥挤？\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"中国哪里的地铁最拥挤？\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/26/30e8760df3044e29a18fac3514dd22b1.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://data.163.com/19/0625/11/EIH0CQEK00019GOE.html\">娶一个潮汕老婆到底是什么体验</a>,\n     <a href=\"http://data.163.com/19/0621/17/EI7BLS3600019GOE.html\">不瞒你说，成都早餐好吃到爆</a>,\n     <a class=\"tags tag_rj\" href=\"http://renjian.163.com/\">人间</a>,\n     <a class=\"detail\" href=\"http://renjian.163.com/19/0628/14/EIP21K41000181RV.html\" ne-role=\"detail\">\n     <h3>\n                                     小白作者的变现之路\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"小白作者的变现之路\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/27f33fcbfcec4b42b6837807b7a0883f.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://renjian.163.com/19/0627/16/EIML2HJO000181RV.html\">被毒虫男友拖下水的女大学生</a>,\n     <a href=\"http://renjian.163.com/19/0626/13/EIJPJMCH000181RV.html\">领导，求你让我加班吧</a>,\n     <a class=\"detail\" href=\"http://renjian.163.com/19/0624/14/EIEOBNCB000181RK.html\" ne-role=\"detail\">\n     <h3>\n                                     当不了官发不了财的读书人\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"当不了官发不了财的读书人\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/24/b77e119ffeca477fa4bd2144b1fcb86c.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://renjian.163.com/19/0620/16/EI4JRNO7000181RK.html\">四个博士，一地鸡毛</a>,\n     <a href=\"http://renjian.163.com/19/0618/12/EHV0QRVG000181RK.html\">医闹得逞后，伤害的到底是谁</a>,\n     <a class=\"detail\" href=\"https://news.163.com/19/0627/11/EIM57O490001885B.html\" ne-role=\"detail\">\n     <h3>\n                                     据说99%的人在图书馆一定会碰上......\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"据说99%的人在图书馆一定会碰上......\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/27/06eb8f4a3d4647bf9360ff5e71f003b8.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://news.163.com/19/0626/15/EIK0IJT40001885B.html\">我可能，得了种，前任病</a>,\n     <a href=\"https://news.163.com/19/0617/09/EHS57H4L0001885B.html\">那些KO不掉我的,最终成了我的OK</a>,\n     <a class=\"detail\" href=\"https://news.163.com/19/0628/11/EIOL94760001885B.html\" ne-role=\"detail\">\n     <h3>\n                                     直男幼稚行为大赏\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"直男幼稚行为大赏\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/0b3890cd2f4b473fa0127b5e33ae6ccf.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://news.163.com/19/0624/12/EIEFGMVL0001885B.html\">打个赌，爱情友情你分不清楚</a>,\n     <a href=\"https://news.163.com/19/0621/12/EI6NKDTU0001885B.html\">不会唱歌的人进 KTV 以后有多惨</a>,\n     <a class=\"detail\" href=\"https://news.163.com/19/0628/19/EIPIQT4O000181BR.html\" ne-role=\"detail\">\n     <h3>\n                                     彩票一直都不中，我却忍不住要买\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"彩票一直都不中，我却忍不住要买\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/f44265c5b4ef4a11a99eedbde7c49833.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://news.163.com/19/0627/17/EIMPGJAU000181BR.html\">原来\"神仙眷侣\"离婚,也是一地鸡毛</a>,\n     <a href=\"https://news.163.com/19/0626/18/EIK95RV0000181BR.html\">我宣布，北大清华这对CP锁死了！</a>,\n     <a class=\"detail\" href=\"http://caozhi.news.163.com/19/0623/22/EID0CBIH000181TI.html\" ne-role=\"detail\">\n     <h3>\n                                     佟丽娅，这次你赢了\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"佟丽娅，这次你赢了\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/23/67d24242d479451ea705e26296187f78.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://caozhi.news.163.com/19/0623/15/EIC9LGSP000181TI.html\">千万别在深夜点开这神作</a>,\n     <a href=\"http://caozhi.news.163.com/19/0618/19/EHVRID7G000181TI.html\">那个发“嗯”的人，已被踢出群聊</a>,\n     <a class=\"detail\" href=\"https://news.163.com/19/0628/17/EIPCOKEA0001982T.html\" ne-role=\"detail\">\n     <h3>\n                                     王宝强母亲去世：来日方长是人生的错觉\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"王宝强母亲去世：来日方长是人生的错觉\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/ecd0de8b8dc0402da72d814bde76f06e.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://news.163.com/19/0627/13/EIMC0EDH0001982T.html\">宋仲基宋慧乔离婚：再美的爱情也会过期</a>,\n     <a href=\"https://news.163.com/19/0626/17/EIK6AD550001982T.html\">杨紫冰箱藏药，戳穿最怂瞬间</a>,\n     <a class=\"tags tag_kanke\" href=\"http://renjian.163.com/special/renjian_kanke/\">看客</a>,\n     <a class=\"detail\" href=\"http://renjian.163.com/19/0628/11/EIOMK185000199ET.html\" ne-role=\"detail\">\n     <h3>\n                                     我奶茶都戒了，日本人才知道它的好\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"我奶茶都戒了，日本人才知道它的好\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/f35eceb8d111496693e8f77a71a49cba.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://renjian.163.com/19/0620/11/EI43PM8Q000199ET.html\">美国堕胎残酷物语</a>,\n     <a href=\"http://renjian.163.com/19/0613/11/EHI39FML000199ET.html\">跑腿小哥提供的十万种服务</a>,\n     <a class=\"tags tag_stpwd\" href=\"http://jiankang.163.com/special/zhutierji/?type=3\">身体密码</a>,\n     <a class=\"detail\" href=\"https://jiankang.163.com/19/0625/11/EIH061CM0038804G.html\" ne-role=\"detail\">\n     <h3>\n                                     防晒，99%的人都做错了……\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"防晒，99%的人都做错了……\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/25/f260b6843fca4702bb5e4e316600f113.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://jiankang.163.com/19/0617/14/EHSN7PPV0038804G.html\">当代人减肥：迈不过25岁这道坎</a>,\n     <a href=\"https://jiankang.163.com/19/0608/15/EH5J9IGA00388AD5.html\">多年后 无数中年人仍会被高考吓醒</a>,\n     <a href=\"https://news.163.com/19/0628/16/EIP8R4SV000189FH.html\">央视独家：习近平会见日本首相</a>,\n     <a href=\"https://news.163.com/19/0628/16/EIP8N52U0001875N.html\">外交部回应中美元首会面</a>,\n     <a href=\"https://news.163.com/19/0628/14/EIOVIP2500018AP1.html\" target=\"_blank\">特朗普会见普京 笑称:不要干预美国大选哦</a>,\n     <a href=\"https://news.163.com/19/0628/16/EIP7KOH70001875P.html\">住建部:加快垃圾分类处理设施建设</a>,\n     <a href=\"https://news.163.com/19/0628/16/EIP8F9QQ0001875P.html\" target=\"_blank\">袁仁国被公诉:受贿数额特别巨大</a>,\n     <a href=\"https://news.163.com/19/0628/13/EIOSPGLJ0001899O.html\">湖南耒阳人大常委会原主任携子主动投案</a>,\n     <a href=\"https://news.163.com/19/0628/13/EIOUHOB70001875P.html\" target=\"_blank\">美的48小时内被骗10亿资金</a>,\n     <a href=\"https://news.163.com/19/0628/19/EIPH3F1V0001875P.html\">垃圾分类逼疯上海人？别笑！马上轮到这46个城市</a>,\n     <a href=\"https://news.163.com/19/0628/19/EIPILCJ70001875P.html\">女子酒后澡堂一打六被刑拘</a>,\n     <a href=\"https://news.163.com/19/0628/18/EIPFI0KN0001875P.html\" target=\"_blank\">杀人案嫌犯向警察开枪拒捕 被当场击毙</a>,\n     <a href=\"https://news.163.com/19/0628/16/EIP8RHM70001875P.html\">95后飙摩托车追高铁发抖音被刑拘</a>,\n     <a href=\"https://news.163.com/19/0628/16/EIP7B7RP0001899O.html\" target=\"_blank\">母亲担心儿子粗心在其手背\"刺\"字</a>,\n     <a href=\"https://news.163.com/19/0628/15/EIP4Q6BQ0001899O.html\">女子高铁上劝老人看好小孩被骂</a>,\n     <a href=\"https://news.163.com/19/0628/16/EIP8QO5Q0001875P.html\" target=\"_blank\">南京杀妻案死者姑妈：侄女生前要强</a>,\n     <a class=\"ad_hover_href\" href=\"http://gb.corp.163.com/gb/legal.html\"></a>,\n     <a href=\"http://news.163.com/16/0721/19/BSH7V8QF00014JB6.html\">辽宁遭暴雨侵袭致城市内涝 紧急转移12万人</a>,\n     <a href=\"http://news.163.com/16/0721/10/BSG7HOH20001124J.html\">民政部:北方暴雨75人死亡失踪</a>,\n     <a href=\"http://news.163.com/16/0721/12/BSGG5VK300011229.html\" target=\"_blank\">北京发生山洪灾害 铲车翻倒4人被困</a>,\n     <a href=\"http://news.163.com/16/0721/12/BSGHHVLK00011229.html\">搜救犬水灾救援22天殉职 主人:它太累了</a>,\n     <a href=\"http://news.163.com/16/0721/07/BSFUFFP800014AED.html\" target=\"_blank\">姐妹被洪水卷走警方拒立案</a>,\n     <a href=\"http://news.163.com/photoview/00AN0001/2189402.html?from=ph_ss#p=BSG716GE00AN0001\">\n     <img height=\"120\" src=\"http://img3.cache.netease.com/news/2016/7/21/20160721131401d35e2.jpg\" width=\"190\"/>\n     <span class=\"bg\"></span>\n     <h3>河南遇强降雨 9.8万人转移</h3>\n     </a>,\n     <a href=\"http://news.163.com/photoview/00AP0001/2189377.html?from=ph_ss#p=BSFTQ99H00AP0001\">\n     <img height=\"120\" src=\"http://img3.cache.netease.com/news/2016/7/21/201607211319466e84e.jpg\" width=\"190\"/>\n     <span class=\"bg\"></span>\n     <h3>女主播直播暴雨 浑身湿透</h3>\n     </a>,\n     <a href=\"http://news.163.com/photoview/00AP0001/2189389.html?from=ph_ss#p=BSG1S9AM00AP0001\">\n     <img height=\"120\" src=\"http://img5.cache.netease.com/news/2016/7/21/20160721132119ef59b.jpg\" width=\"190\"/>\n     <span class=\"bg\"></span>\n     <h3>湖北民众省道上趟水摸鱼</h3>\n     </a>,\n     <a href=\"https://open.163.com/\">网易公开课</a>,\n     <a class=\"focus_prev\" ne-role=\"slide-prev\"></a>,\n     <a class=\"focus_next\" ne-role=\"slide-next\"></a>,\n     <a class=\"nav_name no_cursor\" href=\"javascript:;\" ne-role=\"tab-nav\" target=\"_self\">\n                         要闻\n                         <span class=\"nav_item_ink\"></span>\n     </a>,\n     <a class=\"nav_name no_cursor\" href=\"{{myState.channelbendiurl}}\" ne-class=\"{{myState.bendiTstyle ? 'bendistyle' : ''}}\" ne-role=\"tab-nav\" target=\"{{myState.channelbendiurl == 'javascript:;' ? '_self' : '_blank'}}\">\n     <strong ne-text=\"{{myState.bendiCity}}\"></strong>\n     <span class=\"nav_item_ink\"></span>\n     </a>,\n     <a class=\"nav_name\" href=\"http://news.163.com/domestic/\" ne-role=\"tab-nav\">\n                         国内\n                         <span class=\"nav_item_ink\"></span>\n     </a>,\n     <a class=\"nav_name\" href=\"http://news.163.com/world/\" ne-role=\"tab-nav\">\n                         国际\n                         <span class=\"nav_item_ink\"></span>\n     </a>,\n     <a class=\"nav_name no_cursor\" href=\"javascript:;\" ne-role=\"tab-nav\" target=\"_self\">\n                         独家\n                         <span class=\"nav_item_ink\"></span>\n     </a>,\n     <a class=\"nav_name\" href=\"http://war.163.com/\" ne-role=\"tab-nav\">\n                         军事\n                         <span class=\"nav_item_ink\"></span>\n     </a>,\n     <a class=\"nav_name\" href=\"http://money.163.com/\" ne-role=\"tab-nav\">\n                         财经\n                         <span class=\"nav_item_ink\"></span>\n     </a>,\n     <a class=\"nav_name\" href=\"http://tech.163.com/\" ne-role=\"tab-nav\">\n                         科技\n                         <span class=\"nav_item_ink\"></span>\n     </a>,\n     <a class=\"more\" href=\"javascript:;\" ne-class=\"{{myState.morechannel ? 'more_hover': ''}}\" ne-mouseout=\"morehideChannel()\" ne-mouseover=\"moreShowChannel()\" ne-role=\"morebtn\" target=\"_self\">更多</a>,\n     <a href=\"http://sports.163.com/\" ne-role=\"tab-nav\">体育</a>,\n     <a href=\"http://ent.163.com/\" ne-role=\"tab-nav\">娱乐</a>,\n     <a href=\"http://lady.163.com/\" ne-role=\"tab-nav\">时尚</a>,\n     <a href=\"http://auto.163.com/\" ne-role=\"tab-nav\">汽车</a>,\n     <a href=\"{{myState.channelhouseurl}}\" ne-role=\"tab-nav\">房产</a>,\n     <a href=\"http://news.163.com/air/\" ne-role=\"tab-nav\">航空</a>,\n     <a href=\"http://jiankang.163.com/\" ne-role=\"tab-nav\">健康</a>,\n     <a class=\"newsdata_prev\" href=\"#prev\" ne-class=\"{{myState.fixedTop ? 'fixed_data_show': ''}}\" ne-click=\"tabPrevFn($event);\" ne-hide=\"{{myState.iPad}}\">\n     <span></span>\n     <div class=\"newsdata_btn_name\">{{myState.preBtnName}}</div>\n     </a>,\n     <a class=\"newsdata_next\" href=\"#next\" ne-class=\"{{myState.fixedTop ? 'fixed_data_show': ''}}\" ne-click=\"tabNextFn($event);\" ne-hide=\"{{myState.iPad}}\">\n     <span></span>\n     <div class=\"newsdata_btn_name\">{{myState.nextBtnName}}</div>\n     </a>,\n     <a class=\"load_more_btn\" ne-click=\"clickLoadMore();\" ne-hide=\"{{myState.counter &gt;= navList[myState.ndNavIndex].totalPage || myState.counter == 0}}\" target=\"_self\">\n     <div class=\"post_addmore\" ne-visible=\"{{myState.counter &lt; navList[myState.ndNavIndex].totalPage &amp;&amp; !myState.loading}}\">\n     <i>+</i>\n     <span>加载更多</span>\n     </div>\n     <div class=\"post_adding\" ne-show=\"{{myState.loading}}\">\n     <i>+</i>\n     <span>加载中...</span>\n     </div>\n     </a>,\n     <a href=\"http://g.163.com/a?CID=68685&amp;Values=1366894002&amp;Redirect=http://clk.gentags.net/clk/iv-10648/st-31/cr-2/oi-1303641/or-7535/adv-158/pcon-0/https%253A%252F%252Fent.163.com%252F19%252F0625%252F16%252FEIHG8HLF000398QL.html\">\n     <img height=\"400\" src=\"http://nimg.ws.126.net/?url=https://yt-adp.ws.126.net/channel21/037408_300400_axry_20190626.jpg&amp;thumbnail=300x2147483647&amp;quality=75&amp;type=jpg\" width=\"300\"/>\n     <span class=\"bg\"></span>\n     <h3>三金西瓜霜独家冠名网易封面故事</h3>\n     </a>,\n     <a href=\"http://news.163.com/photoview/00AP0001/2302561.html\">\n     <img height=\"400\" src=\"https://cms-bucket.ws.126.net/2019/06/28/e5b070c1f96349b0829da88b41105903.jpeg?imageView&amp;thumbnail=300y400\" width=\"300\"/>\n     <span class=\"bg\"></span>\n     <h3>浒苔绿潮开始在山东沿海登陆</h3>\n     </a>,\n     <a href=\"http://news.163.com/photoview/00AP0001/2302559.html\">\n     <img height=\"400\" src=\"https://cms-bucket.ws.126.net/2019/06/28/2792654fe66f4985879a8cc30a89a6cc.jpeg?imageView&amp;thumbnail=300y400\" width=\"300\"/>\n     <span class=\"bg\"></span>\n     <h3>广西南宁抓获涉传人员286名</h3>\n     </a>,\n     <a href=\"http://news.163.com/photoview/00AO0001/2302560.html\">\n     <img height=\"400\" src=\"https://cms-bucket.ws.126.net/2019/06/28/202e20527525474cac861ba7e56a2dde.jpeg?imageView&amp;thumbnail=300y400\" width=\"300\"/>\n     <span class=\"bg\"></span>\n     <h3>民主党初选辩论次日:拜登现身</h3>\n     </a>,\n     <a class=\"f_prev\" ne-role=\"slide-prev\">&lt;</a>,\n     <a class=\"f_next\" ne-role=\"slide-next\">&gt;</a>,\n     <a href=\"http://baoxian.163.com/activity/act1605/index.html?from=mhds1605\">免费领取iPhone6s</a>,\n     <a href=\"http://mall.163.com/mobile/fill.jsp?from=wwwtext\">手机费快充超低折扣</a>,\n     <a href=\"http://baoxian.163.com/car/activitylist.html?from=mhdstbl\">免费送现金红包！</a>,\n     <a href=\"http://piao.163.com/movie/47080.html?from=newsword\">镜中多奇境依旧爱丽丝</a>,\n     <a class=\"tags tag_sd\" href=\"http://data.163.com/special/datablog/\">数读</a>,\n     <a class=\"detail\" href=\"http://data.163.com/19/0626/14/EIJQJG9L000181IU.html\" ne-role=\"detail\">\n     <h3>\n                                     中国哪里的地铁最拥挤？\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"中国哪里的地铁最拥挤？\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/26/30e8760df3044e29a18fac3514dd22b1.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://data.163.com/19/0625/11/EIH0CQEK00019GOE.html\">娶一个潮汕老婆到底是什么体验</a>,\n     <a href=\"http://data.163.com/19/0621/17/EI7BLS3600019GOE.html\">不瞒你说，成都早餐好吃到爆</a>,\n     <a class=\"tags tag_rj\" href=\"http://renjian.163.com/\">人间</a>,\n     <a class=\"detail\" href=\"http://renjian.163.com/19/0628/14/EIP21K41000181RV.html\" ne-role=\"detail\">\n     <h3>\n                                     小白作者的变现之路\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"小白作者的变现之路\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/27f33fcbfcec4b42b6837807b7a0883f.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://renjian.163.com/19/0627/16/EIML2HJO000181RV.html\">被毒虫男友拖下水的女大学生</a>,\n     <a href=\"http://renjian.163.com/19/0626/13/EIJPJMCH000181RV.html\">领导，求你让我加班吧</a>,\n     <a class=\"detail\" href=\"http://renjian.163.com/19/0624/14/EIEOBNCB000181RK.html\" ne-role=\"detail\">\n     <h3>\n                                     当不了官发不了财的读书人\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"当不了官发不了财的读书人\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/24/b77e119ffeca477fa4bd2144b1fcb86c.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://renjian.163.com/19/0620/16/EI4JRNO7000181RK.html\">四个博士，一地鸡毛</a>,\n     <a href=\"http://renjian.163.com/19/0618/12/EHV0QRVG000181RK.html\">医闹得逞后，伤害的到底是谁</a>,\n     <a class=\"detail\" href=\"https://news.163.com/19/0627/11/EIM57O490001885B.html\" ne-role=\"detail\">\n     <h3>\n                                     据说99%的人在图书馆一定会碰上......\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"据说99%的人在图书馆一定会碰上......\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/27/06eb8f4a3d4647bf9360ff5e71f003b8.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://news.163.com/19/0626/15/EIK0IJT40001885B.html\">我可能，得了种，前任病</a>,\n     <a href=\"https://news.163.com/19/0617/09/EHS57H4L0001885B.html\">那些KO不掉我的,最终成了我的OK</a>,\n     <a class=\"detail\" href=\"https://news.163.com/19/0628/11/EIOL94760001885B.html\" ne-role=\"detail\">\n     <h3>\n                                     直男幼稚行为大赏\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"直男幼稚行为大赏\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/0b3890cd2f4b473fa0127b5e33ae6ccf.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://news.163.com/19/0624/12/EIEFGMVL0001885B.html\">打个赌，爱情友情你分不清楚</a>,\n     <a href=\"https://news.163.com/19/0621/12/EI6NKDTU0001885B.html\">不会唱歌的人进 KTV 以后有多惨</a>,\n     <a class=\"detail\" href=\"https://news.163.com/19/0628/19/EIPIQT4O000181BR.html\" ne-role=\"detail\">\n     <h3>\n                                     彩票一直都不中，我却忍不住要买\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"彩票一直都不中，我却忍不住要买\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/f44265c5b4ef4a11a99eedbde7c49833.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://news.163.com/19/0627/17/EIMPGJAU000181BR.html\">原来\"神仙眷侣\"离婚,也是一地鸡毛</a>,\n     <a href=\"https://news.163.com/19/0626/18/EIK95RV0000181BR.html\">我宣布，北大清华这对CP锁死了！</a>,\n     <a class=\"detail\" href=\"http://caozhi.news.163.com/19/0623/22/EID0CBIH000181TI.html\" ne-role=\"detail\">\n     <h3>\n                                     佟丽娅，这次你赢了\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"佟丽娅，这次你赢了\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/23/67d24242d479451ea705e26296187f78.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://caozhi.news.163.com/19/0623/15/EIC9LGSP000181TI.html\">千万别在深夜点开这神作</a>,\n     <a href=\"http://caozhi.news.163.com/19/0618/19/EHVRID7G000181TI.html\">那个发“嗯”的人，已被踢出群聊</a>,\n     <a class=\"detail\" href=\"https://news.163.com/19/0628/17/EIPCOKEA0001982T.html\" ne-role=\"detail\">\n     <h3>\n                                     王宝强母亲去世：来日方长是人生的错觉\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"王宝强母亲去世：来日方长是人生的错觉\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/ecd0de8b8dc0402da72d814bde76f06e.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://news.163.com/19/0627/13/EIMC0EDH0001982T.html\">宋仲基宋慧乔离婚：再美的爱情也会过期</a>,\n     <a href=\"https://news.163.com/19/0626/17/EIK6AD550001982T.html\">杨紫冰箱藏药，戳穿最怂瞬间</a>,\n     <a class=\"tags tag_kanke\" href=\"http://renjian.163.com/special/renjian_kanke/\">看客</a>,\n     <a class=\"detail\" href=\"http://renjian.163.com/19/0628/11/EIOMK185000199ET.html\" ne-role=\"detail\">\n     <h3>\n                                     我奶茶都戒了，日本人才知道它的好\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"我奶茶都戒了，日本人才知道它的好\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/f35eceb8d111496693e8f77a71a49cba.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://renjian.163.com/19/0620/11/EI43PM8Q000199ET.html\">美国堕胎残酷物语</a>,\n     <a href=\"http://renjian.163.com/19/0613/11/EHI39FML000199ET.html\">跑腿小哥提供的十万种服务</a>,\n     <a class=\"tags tag_stpwd\" href=\"http://jiankang.163.com/special/zhutierji/?type=3\">身体密码</a>,\n     <a class=\"detail\" href=\"https://jiankang.163.com/19/0625/11/EIH061CM0038804G.html\" ne-role=\"detail\">\n     <h3>\n                                     防晒，99%的人都做错了……\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"防晒，99%的人都做错了……\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/25/f260b6843fca4702bb5e4e316600f113.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://jiankang.163.com/19/0617/14/EHSN7PPV0038804G.html\">当代人减肥：迈不过25岁这道坎</a>,\n     <a href=\"https://jiankang.163.com/19/0608/15/EH5J9IGA00388AD5.html\">多年后 无数中年人仍会被高考吓醒</a>,\n     <a class=\"ad_hover_href\" href=\"javascript:;\" target=\"_self\"></a>,\n     <a class=\"title\" href=\"https://open.163.com/\">网易公开课</a>,\n     <a href=\"https://vip.open.163.com/courses/2698?p=xs_yt01\">\n     <img height=\"436\" src=\"https://cms-bucket.ws.126.net/2019/06/26/b2ef8c1d0fed49078cb104f94c9f253e.jpeg\" width=\"280\"/>\n     <span class=\"bg\"></span>\n     <h3>他凭什么甩开同龄人，做职场前5%？</h3>\n     </a>,\n     <a href=\"https://vip.open.163.com/courses/2249?p=xs_yt02\">\n     <img height=\"436\" src=\"https://cms-bucket.ws.126.net/2019/06/27/ffa8db82492446c88efe2d540ed64d6a.jpeg\" width=\"280\"/>\n     <span class=\"bg\"></span>\n     <h3>一个人成熟的标志：与负面情绪和解</h3>\n     </a>,\n     <a href=\"https://vip.open.163.com/courses/1078?p=xs_yt03\">\n     <img height=\"436\" src=\"https://cms-bucket.ws.126.net/2019/06/26/893a6ecab816408cb5971de6ec236dde.jpeg\" width=\"280\"/>\n     <span class=\"bg\"></span>\n     <h3>情商高的人，走到哪儿都大受欢迎</h3>\n     </a>,\n     <a href=\"https://vip.open.163.com/courses/2019?p=xs_yt04\">\n     <img height=\"436\" src=\"https://cms-bucket.ws.126.net/2019/06/26/f48048d211e44c889e241e545b29a000.jpeg\" width=\"280\"/>\n     <span class=\"bg\"></span>\n     <h3>每天5分钟，告别办公室综合症</h3>\n     </a>,\n     <a href=\"http://news.163.com/special/\">新闻专题</a>,\n     <a href=\"http://news.163.com/special/2019qglh/\">\n     <img alt=\"2019年全国两会\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/03/07/c8134391d38245dc849b99fbf1ce33b0.png?imageView&amp;thumbnail=300y90\" width=\"300\"/>\n     </a>,\n     <a href=\"http://news.163.com/special/2019qglh/\">2019年全国两会</a>,\n     <a href=\"http://news.163.com/special/zghj70/\">海军成立70周年</a>,\n     <a href=\"http://news.163.com/special/chunyun_2019/\">2019年春运春节</a>,\n     <a href=\"http://news.163.com/special/chang_e4/\">嫦娥四号登月</a>,\n     <a href=\"http://cms-bucket.ws.126.net/2019/06/26/080a0e9f8b014dd5b261f9e988f7f7f9.jpeg\">声明</a>,\n     <a href=\"http://news.163.com/special/00011269/gdmore.html\">高层动态</a>,\n     <a href=\"https://news.163.com/19/0628/11/EIOL0214000189FH.html\">习近平会见联合国秘书长古特雷斯</a>,\n     <a href=\"https://news.163.com/19/0620/14/EI4ESVV9000189FH.html\">习近平抵达平壤 开始对朝鲜进行国事访问</a>,\n     <a class=\"ad_hover_href\" href=\"javascript:;\" target=\"_self\"></a>,\n     <a href=\"http://war.163.com/\">军事</a>,\n     <a href=\"http://news.163.com/air/\">航空</a>,\n     <a href=\"http://war.163.com/photoview/4T8E0001/2301528.html\">\n     </a>]\n\n\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n","source":"_posts/2019-07-02_BeautifulSoup.md","raw":"---\ntitle: BeautifulSoup\ncategories:\n  - Python\nabbrlink: 51103\ndate: 2019-07-02 00:00:00\n---\n\n## 请求\n\n\n```python\nimport requests\nresult = requests.get(\"https://news.163.com/\")\n```\n\n\n```python\n# 从返回result的状态码中，了解到是否请求成功\nresult.status_code\n```\n\n\n\n\n    200\n\n\n\n\n```python\nresult.encoding\n```\n\n\n\n\n    'GBK'\n\n\n\n\n```python\ncontent = result.content\nprint (content[:1000]) #前1000个字符\n```\n\n    b' <!DOCTYPE HTML>\\n<!--[if IE 6 ]> <html id=\"ne_wrap\" class=\"ne_ua_ie6 ne_ua_ielte8\"> <![endif]-->\\n<!--[if IE 7 ]> <html id=\"ne_wrap\" class=\"ne_ua_ie7 ne_ua_ielte8\"> <![endif]-->\\n<!--[if IE 8 ]> <html id=\"ne_wrap\" class=\"ne_ua_ie8 ne_ua_ielte8\"> <![endif]-->\\n<!--[if IE 9 ]> <html id=\"ne_wrap\" class=\"ne_ua_ie9\"> <![endif]-->\\n<!--[if (gte IE 10)|!(IE)]><!--> <html id=\"ne_wrap\" phone=\"1\"> <!--<![endif]-->\\n<head>\\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\\n<meta name=\"model_url\" content=\"http://news.163.com/special/index2015/\" />\\n<title>\\xcd\\xf8\\xd2\\xd7\\xd0\\xc2\\xce\\xc5</title>\\n<base target=\"_blank\" />\\n<meta name=\"keywords\" content=\"\\xd0\\xc2\\xce\\xc5,\\xd0\\xc2\\xce\\xc5\\xd6\\xd0\\xd0\\xc4,\\xd0\\xc2\\xce\\xc5\\xc6\\xb5\\xb5\\xc0,\\xca\\xb1\\xca\\xc2\\xb1\\xa8\\xb5\\xc0\" />\\n<meta name=\"description\" content=\"\\xd0\\xc2\\xce\\xc5,\\xd0\\xc2\\xce\\xc5\\xd6\\xd0\\xd0\\xc4,\\xb0\\xfc\\xba\\xac\\xd3\\xd0\\xca\\xb1\\xd5\\xfe\\xd0\\xc2\\xce\\xc5,\\xb9\\xfa\\xc4\\xda\\xd0\\xc2\\xce\\xc5,\\xb9\\xfa\\xbc\\xca\\xd0\\xc2\\xce\\xc5,\\xc9\\xe7\\xbb\\xe1\\xd0\\xc2\\xce\\xc5,\\xca\\xb1\\xca\\xc2\\xc6\\xc0\\xc2\\xdb,\\xd0\\xc2\\xce\\xc5\\xcd\\xbc\\xc6\\xac,\\xd0\\xc2\\xce\\xc5\\xd7\\xa8\\xcc\\xe2,\\xd0\\xc2\\xce\\xc5\\xc2\\xdb\\xcc\\xb3,\\xbe\\xfc\\xca\\xc2,\\xc0\\xfa\\xca\\xb7,\\xb5\\xc4\\xd7\\xa8\\xd2\\xb5\\xca\\xb1\\xca\\xc2\\xb1\\xa8\\xb5\\xc0\\xc3\\xc5\\xbb\\xa7\\xcd\\xf8\\xd5\\xbe\" />\\n  <script type=\"text/javascript\" _keep=\"true\">\\n    var matchStr =window.location.href;\\n    var reURL = /^(https):\\\\/\\\\/.+$/;\\n    if(!reURL.test(matchStr)){\\n        windo'\n\n\n## 模拟登入\n\n\n```python\ns = requests.session()\ndata = {'user':'用户名','passdw':'密码'}\n#post 换成登录的地址，\nres=s.post('http://www.xxx.net/index.php?action=login',data);\n#换成抓取的地址\ns.get('http://www.xxx.net/archives/155/');\n```\n\n## BeautifulSoup\n\n\n```python\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nfrom bs4 import BeautifulSoup\nsoup = BeautifulSoup(content, fromEncoding=\"GB2312\") #注意这个地方\nprint(soup)\n```\n\n    <!DOCTYPE HTML>\n    <!--[if IE 6 ]> <html id=\"ne_wrap\" class=\"ne_ua_ie6 ne_ua_ielte8\"> <![endif]--><!--[if IE 7 ]> <html id=\"ne_wrap\" class=\"ne_ua_ie7 ne_ua_ielte8\"> <![endif]--><!--[if IE 8 ]> <html id=\"ne_wrap\" class=\"ne_ua_ie8 ne_ua_ielte8\"> <![endif]--><!--[if IE 9 ]> <html id=\"ne_wrap\" class=\"ne_ua_ie9\"> <![endif]--><!--[if (gte IE 10)|!(IE)]><!--><html id=\"ne_wrap\" phone=\"1\"> <!--<![endif]-->\n    <head>\n    <meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"/>\n    <meta content=\"http://news.163.com/special/index2015/\" name=\"model_url\"/>\n    <title>网易新闻</title>\n    <base target=\"_blank\"/>\n    <meta content=\"新闻,新闻中心,新闻频道,时事报道\" name=\"keywords\"/>\n    <meta content=\"新闻,新闻中心,包含有时政新闻,国内新闻,国际新闻,社会新闻,时事评论,新闻图片,新闻专题,新闻论坛,军事,历史,的专业时事报道门户网站\" name=\"description\"/>\n    <script _keep=\"true\" type=\"text/javascript\">\n        var matchStr =window.location.href;\n        var reURL = /^(https):\\/\\/.+$/;\n        if(!reURL.test(matchStr)){\n            window.location.href = \"https://news.163.com/\";\n        }\n      </script>\n    <!-- 适配3g ie8bug-->\n    <!-- 广告样式 -->\n    <style>\n    .channel_relative_2016{\n        position:relative;\n        line-height: 0px;\n    }\n    .channel_relative_2016_lh{\n        line-height: 0px;\n    }\n    .channel_ad_2016{\n        height: 17px;\n        display:none;\n        background: rgba(0,0,0,0.6);\n        background: #000\\9;\n        color: #fff;\n        border-radius: 0 8px 0px 0px;\n        line-height: 17px;\n        width: 30px;\n        text-align: left;\n        overflow: hidden;\n        font-size: 12px;\n        font-family: Arial;\n        position:absolute;\n        left:0;\n        bottom:0;\n        z-index:3;\n    }\n    .channel_ad_text_2016{\n        position: absolute;\n        right: 1px;\n        bottom: -2px;\n        color: #999999;\n        z-index:3;\n        font-size: 12px;\n        font-family: Arial;\n       display:none;\n      line-height: 18px;\n    }\n    .channel_relative_2016 .channel_ad_2016,.channel_relative_2016 .channel_ad_text_2016{\n        display: inline-block;\n    }\n    </style>\n    <!-- channel2019_logo样式 -->\n    <style type=\"text/css\">\n    \t.channel2019_logo{\n    \t\tbackground: url(http://cms-bucket.ws.126.net/2019/04/25/09e37a6a4dd349468cd38dd79a3b15b7.png) no-repeat !important;\n    \t\twidth: 152px !important;\n    \t\theight: 37px !important;\n    \t\tdisplay: block !important;\n    \t\tfloat: left!important;\n    \t}\n    \t/*新闻*/\n    \t.channel2019_news_logo{\n    \t\tbackground-position: 0px 4px !important;\n    \t}\n    \t/*科技*/\n    \t.channel2019_tech_logo{\n    \t\tbackground-position: 0px -96px !important;\n        \t\n    \t}\n    \t/*手机*/\n    \t.channel2019_mobile_logo{\n    \t\tbackground-position: 0px -196px !important;\n    \t\t\n    \t}\n    \t/*数码*/\n    \t.channel2019_digi_logo{\n    \t\tbackground-position: 0px -296px !important;\n        \t\n    \t}\n    \t/*新闻学院*/\n    \t.channel2019_college_logo{\n    \t\tbackground-position: 0px -396px !important;\n    \t\twidth: 213px !important;\n    \t}\n    \t/*政务*/\n    \t.channel2019_gov_logo{\n    \t\tbackground-position: 0px -496px !important;\n    \t}\n    \t/*军事*/\n    \t.channel2019_war_logo{\n    \t\tbackground-position: 0px 0px !important;\n        \theight: 33px !important;\n    \t}\n    \t/*航空*/\n    \t.channel2019_air_logo{\n    \t\tbackground-position: 0px 0px !important;\n        \theight: 33px !important;\n    \t}\n       /*新闻排行榜*/\n    \t.channel2019_newsrank_logo{\n    \t\tbackground-position: 0px 0px !important;\n        \theight: 33px !important;\n    \t}\n      \t/*新闻图片*/\n    \t.channel2019_newsphoto_logo{\n    \t\tbackground-position: 0px -2200px !important;\n          \twidth: 213px !important;\n        \theight: 33px !important;\n    \t}\n    \t/*体育*/\n    \t.channel2019_sports_logo{\n    \t\tbackground-position: 0px -796px !important;\n    \t}\n      \t/*体育二级页*/\n    \t.channel2019_sportssub_logo{\n    \t\theight: 33px !important;\n    \t\tbackground-position: 0px -800px !important;\n    \t}\n    \t/*娱乐*/\n    \t.channel2019_ent_logo{\n    \t\tbackground-position: 0px -896px !important;\n    \t}\n    \t/*音乐*/\n    \t.channel2019_music_logo{\n    \t\tbackground-position: 0px -900px !important;\n        \theight: 32px !important;\n    \t}\n    \t/*时尚*/\n    \t.channel2019_fashion_logo{\n    \t\tbackground-position: 0px -1100px !important;\n    \t\theight: 32px !important;\n    \t}\n    \t/*女人*/\n    \t.channel2019_lady_logo{\n    \t\tbackground-position: 0px -1196px !important;\n    \t}\n    \t/*财经*/\n    \t.channel2019_money_logo{\n    \t\tbackground-position: 0px -1300px !important;\n    \t}\n        /*手机图片*/\n    \t.channel2019_mobilephoto_logo{\n    \t\tbackground-position: 0px -2300px !important;\n    \t\twidth: 213px !important;\n        \theight: 33px !important;\n    \t}\n    \t/*汽车*/\n    \t.channel2019_auto_logo{\n    \t\tbackground-position: 0px -1396px !important;\n    \t}\n    \t/*旅游*/\n    \t.channel2019_travel_logo{\n    \t\tbackground-position: 0px -1496px !important;\n    \t}\n    \t/*健康*/\n    \t.channel2019_jiankang_logo{\n    \t\tbackground-position: 0px -1596px !important;\n    \t}\n    \t/*教育*/\n    \t.channel2019_edu_logo{\n    \t\tbackground-position: 0px -1696px !important;\n    \t}\n    \t/*艺术*/\n    \t.channel2019_art_logo{\n    \t\tbackground-position: 0px -1796px !important;\n    \t}\n    \t/*亲子*/\n    \t.channel2019_baby_logo{\n    \t\tbackground-position: 0px -1896px !important;\n    \t}\n    \t/*双创*/\n    \t.channel2019_shuangchuang_logo{\n    \t\tbackground-position: 0px -1996px !important;\n    \t}\n    \t/*酒香*/\n    \t.channel2019_jiu_logo{\n    \t\tbackground-position: 0px -2096px !important;\n    \t}\n      \t/*游戏*/\n    \t.channel2019_game_logo{\n    \t\tbackground-position: 0px -2400px !important;\n    \t}\n    \t</style>\n    <script _keep=\"true\" type=\"text/javascript\">\n    (function() {\n        if(/s=noRedirect/i.test(location.search)) return; \n        if(/AppleWebKit.*Mobile/i.test(navigator.userAgent) || (/MIDP|SymbianOS|NOKIA|SAMSUNG|LG|NEC|TCL|Alcatel|BIRD|DBTEL|Dopod|PHILIPS|HAIER|LENOVO|MOT-|Nokia|SonyEricsson|SIE-|Amoi|ZTE/.test(navigator.userAgent))) {\n            try {\n                if(/Android|Windows Phone|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent)) {\n                     window.location.href = \"https://3g.163.com/touch/news/\";\n                } else if(/iPad/i.test(navigator.userAgent)) {\n                    window.location.href = \"https://news.163.com/pad/\"\n                }\n            } catch(e) {}\n        }   \n    })();\n    </script>\n    <script _keep=\"true\" charset=\"gbk\" src=\"//news.163.com/special/00015CJL/xw_news_data.js\"></script>\n    <!-- 社交传播统计 -->\n    <script src=\"//static.ws.126.net/163/frontend/libs/antanalysis.min.js\"></script>\n    <script _keep=\"true\" src=\"//static.ws.126.net/163/frontend/antnest/NTM-KFGT6I8U-38.js\"></script>\n    <script crossorigin=\"anonymous\" src=\"https://static.ws.126.net/163/frontend/libs/raven-3.26.2.min.js\"></script>\n    <link href=\"https://static.ws.126.net/163/f2e/news/index2016_rmd/css/head~a2a2093f5d52d.css\" rel=\"stylesheet\"/>\n    </head>\n    <body class=\"news_pc\" ne-class=\"{{myState.isNs9 ? 'ns9' : 'ns12'}}\" ne-module=\"/news/index2016_rmd/index2016.js\">\n    <div class=\"index2016_wrap\" id=\"index2016_wrap\">\n    <div>\n    <!-- 节日动画 start -->\n    <!-- 节日动画 end -->\n    <div class=\"common_nav\">\n    <link href=\"//static.ws.126.net/163/f2e/commonnav2019/css/commonnav_headcss-61ce66f60e.css\" rel=\"stylesheet\"/>\n    <!-- urs -->\n    <script _keep=\"true\" src=\"//urswebzj.nosdn.127.net/webzj_cdn101/message.js\" type=\"text/javascript\"></script>\n    <div class=\"ntes_nav_wrap\" id=\"js_N_NTES_wrap\">\n    <div class=\"ntes-nav\" id=\"js_N_nav\">\n    <div class=\"ntes-nav-main clearfix\">\n    <div class=\"c-fl\">\n    <a class=\"ntes-nav-index-title ntes-nav-entry-wide c-fl\" href=\"http://www.163.com/\" title=\"网易首页\">网易首页</a>\n    <!-- 应用 -->\n    <div class=\"js_N_navSelect ntes-nav-select ntes-nav-select-wide ntes-nav-app c-fl\">\n    <a class=\"ntes-nav-select-title ntes-nav-entry-bgblack JS_NTES_LOG_FE\" href=\"http://www.163.com/#f=topnav\">应用\n                <em class=\"ntes-nav-select-arr\"></em>\n    </a>\n    <div class=\"ntes-nav-select-pop\">\n    <ul class=\"ntes-nav-select-list clearfix\">\n    <li>\n    <a href=\"http://m.163.com/newsapp/#f=topnav\">\n    <span>\n    <em class=\"ntes-nav-app-newsapp\">网易新闻</em>\n    </span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://open.163.com/#f=topnav\">\n    <span>\n    <em class=\"ntes-nav-app-open\">网易公开课</em>\n    </span>\n    </a>\n    </li>\n    <li>\n    <a href=\"https://hongcai.163.com/?from=pcsy-button\">\n    <span>\n    <em class=\"ntes-nav-app-hongcai\">网易红彩</em>\n    </span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://u.163.com/aosoutbdbd8\">\n    <span>\n    <em class=\"ntes-nav-app-yanxuan\">网易严选</em>\n    </span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://mail.163.com/client/dl.html?from=mail46\">\n    <span>\n    <em class=\"ntes-nav-app-mail\">邮箱大师</em>\n    </span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://study.163.com/client/download.htm?from=163app&amp;utm_source=163.com&amp;utm_medium=web_app&amp;utm_campaign=business\">\n    <span>\n    <em class=\"ntes-nav-app-study\">网易云课堂</em>\n    </span>\n    </a>\n    </li>\n    <li class=\"last\">\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece47f92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=6b69bfbfac0db5f335232faa957a27bb&amp;target=https%3A%2F%2Fapp.kaola.com%2F%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>\n    <em class=\"ntes-nav-app-kaola-hg\">网易考拉</em>\n    </span>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </div>\n    <div class=\"c-fr\">\n    <!-- 片段开始 -->\n    <div class=\"ntes-nav-quick-navigation\">\n    <a class=\"ntes-nav-quick-navigation-btn\" href=\"javascript:void(0);\" id=\"js_N_ntes_nav_quick_navigation_btn\" target=\"_self\">\n    <em>快速导航\n                  <span class=\"menu1\"></span>\n    <span class=\"menu2\"></span>\n    <span class=\"menu3\"></span>\n    </em>\n    </a>\n    <div class=\"ntes-quicknav-pop\" id=\"js_N_ntes_quicknav_pop\">\n    <div class=\"ntes-quicknav-list\">\n    <div class=\"ntes-quicknav-content\">\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-1\">\n    <li>\n    <h3><a href=\"https://news.163.com\">新闻</a></h3>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/domestic\">国内</a>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/world\">国际</a>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/photo\">图片</a>\n    </li>\n    <li>\n    <a href=\"http://view.163.com\">评论</a>\n    </li>\n    <li>\n    <a href=\"http://discovery.163.com\">探索</a>\n    </li>\n    <li>\n    <a href=\"http://war.163.com\">军事</a>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/localnews/\">本地新闻</a>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/special/wangsansanhome/\">王三三</a>\n    </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-2\">\n    <li>\n    <h3><a href=\"http://sports.163.com\">体育</a></h3>\n    </li>\n    <li>\n    <a href=\"http://sports.163.com/nba\">NBA</a>\n    </li>\n    <li>\n    <a href=\"http://sports.163.com/cba\">CBA</a>\n    </li>\n    <li>\n    <a href=\"http://sports.163.com/allsports\">综合</a>\n    </li>\n    <li>\n    <a href=\"http://sports.163.com/zc\">中超</a>\n    </li>\n    <li>\n    <a href=\"http://sports.163.com/world\">国际足球</a>\n    </li>\n    <li>\n    <a href=\"http://sports.163.com/yc\">英超</a>\n    </li>\n    <li>\n    <a href=\"http://sports.163.com/xj\">西甲</a>\n    </li>\n    <li>\n    <a href=\"http://sports.163.com/yj\">意甲</a>\n    </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-3\">\n    <li>\n    <h3><a href=\"http://ent.163.com\">娱乐</a></h3>\n    </li>\n    <li>\n    <a href=\"http://ent.163.com/star\">明星</a>\n    </li>\n    <li>\n    <a href=\"http://ent.163.com/photo\">图片</a>\n    </li>\n    <li>\n    <a href=\"http://ent.163.com/movie\">电影</a>\n    </li>\n    <li>\n    <a href=\"http://ent.163.com/tv\">电视</a>\n    </li>\n    <li>\n    <a href=\"http://ent.163.com/music\">音乐</a>\n    </li>\n    <li>\n    <a href=\"http://ent.163.com/special/gsbjb/\">稿事编辑部</a>\n    </li>\n    <li>\n    <a href=\"http://ent.163.com/special/focus_ent/\">娱乐FOCUS</a>\n    </li>\n    <li><a href=\"http://ent.163.com/special/xbkhz/\">星捕快</a></li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-4\">\n    <li>\n    <h3><a href=\"http://money.163.com\">财经</a></h3>\n    </li>\n    <li>\n    <a href=\"http://money.163.com/stock\">股票</a>\n    </li>\n    <li>\n    <a href=\"http://quotes.money.163.com/stock\">行情</a>\n    </li>\n    <li>\n    <a href=\"http://money.163.com/chanjing\">产经</a>\n    </li>\n    <li>\n    <a href=\"http://money.163.com/ipo\">新股</a>\n    </li>\n    <li>\n    <a href=\"http://money.163.com/finance\">金融</a>\n    </li>\n    <li>\n    <a href=\"http://money.163.com/fund\">基金</a>\n    </li>\n    <li>\n    <a href=\"http://biz.163.com\">商业</a>\n    </li>\n    <li>\n    <a href=\"http://money.163.com/licai\">理财</a>\n    </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-5\">\n    <li>\n    <h3><a href=\"http://auto.163.com\">汽车</a></h3>\n    </li>\n    <li>\n    <a href=\"http://auto.163.com/buy\">购车</a>\n    </li>\n    <li>\n    <a href=\"http://auto.163.com/depreciate\">行情</a>\n    </li>\n    <li>\n    <a href=\"http://product.auto.163.com/finder\">选车</a>\n    </li>\n    <li>\n    <a href=\"http://product.auto.163.com\">车型库</a>\n    </li>\n    <li>\n    <a href=\"http://auto.163.com/news\">行业</a>\n    </li>\n    <li>\n    <a href=\"http://auto.163.com/chezhu\">用车</a>\n    </li>\n    <li>\n    <a href=\"http://auto.163.com/photo\">汽车图片</a>\n    </li>\n    <li>\n                       \n                      </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-6\">\n    <li>\n    <h3><a href=\"http://tech.163.com\">科技</a></h3>\n    </li>\n    <li>\n    <a href=\"http://tech.163.com/telecom/\">通信</a>\n    </li>\n    <li>\n    <a href=\"http://tech.163.com/it\">IT</a>\n    </li>\n    <li>\n    <a href=\"http://tech.163.com/internet\">互联网</a>\n    </li>\n    <li>\n    <a href=\"http://tech.163.com/special/ydhlw\">移动互联网</a>\n    </li>\n    <li>\n    <a href=\"http://tech.163.com/special/chzt\">特别策划</a>\n    </li>\n    <li>\n    <a href=\"http://tech.163.com/special/wudaokou\">五道口沙龙</a>\n    </li>\n    <li>\n    <a href=\"http://tech.163.com/special/yyzd\">易语中的</a>\n    </li>\n    <li>\n    <a href=\"http://tech.163.com/special\">专题</a>\n    </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-7\">\n    <li>\n    <h3><a href=\"http://lady.163.com\">女人</a></h3>\n    </li>\n    <li>\n    <a href=\"http://baby.163.com\">亲子</a>\n    </li>\n    <li>\n    <a href=\"http://fashion.163.com/art\">艺术</a>\n    </li>\n    <li>\n    <a href=\"http://fashion.163.com\">时尚</a>\n    </li>\n    <li>\n    <a href=\"http://shoucang.163.com\">收藏</a>\n    </li>\n    <li>\n    <a href=\"http://lady.163.com/sense\">情感</a>\n    </li>\n    <li>\n    <a href=\"http://lady.163.com/astro\">星座</a>\n    </li>\n    <li>\n    <a href=\"http://lady.163.com/beauty\">美容</a>\n    </li>\n    <li>\n    <a href=\"http://cosmetic.lady.163.com/trial\">免费试用</a>\n    </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-8\">\n    <li>\n    <h3><a href=\"http://mobile.163.com\">手机</a><span>/</span><a href=\"http://digi.163.com/\">数码</a></h3>\n    </li>\n    <li>\n    <a href=\"http://mobile.163.com/mi\">移动</a>\n    </li>\n    <li>\n    <a href=\"http://digi.163.com/pc\">电脑</a>\n    </li>\n    <li>\n    <a href=\"http://product.mobile.163.com\">手机库</a>\n    </li>\n    <li>\n    <a href=\"http://hea.163.com/\">家电</a>\n    </li>\n    <li>\n    <a href=\"http://digi.163.com/smart\">智能硬件</a>\n    </li>\n    <li>\n    <a href=\"http://digi.163.com/dc\">相机</a>\n    </li>\n    <li>\n    <a href=\"http://v.mobile.163.com\">手机视频</a>\n    </li>\n    <li>\n                       \n                      </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-9\">\n    <li>\n    <h3><a href=\"http://house.163.com\">房产</a><span>/</span><a href=\"http://home.163.com\">家居</a></h3>\n    </li>\n    <li>\n    <a href=\"http://bj.house.163.com\">北京房产</a>\n    </li>\n    <li>\n    <a href=\"http://sh.house.163.com\">上海房产</a>\n    </li>\n    <li>\n    <a href=\"http://gz.house.163.com\">广州房产</a>\n    </li>\n    <li>\n    <a href=\"http://house.163.com/city\">全部分站</a>\n    </li>\n    <li>\n    <a href=\"http://xf.house.163.com\">楼盘库</a>\n    </li>\n    <li>\n    <a href=\"http://home.163.com/jiaju/\">家具</a>\n    </li>\n    <li>\n    <a href=\"http://home.163.com/weiyu/\">卫浴</a>\n    </li>\n    <li>\n    <a href=\"http://home.163.com/special/jiajuyigui\">衣柜</a>\n    </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-10\">\n    <li>\n    <h3><a href=\"http://travel.163.com\">旅游</a></h3>\n    </li>\n    <li>\n    <a href=\"http://travel.163.com/outdoor\">户外</a>\n    </li>\n    <li>\n    <a href=\"http://guizhou.travel.163.com\">贵州</a>\n    </li>\n    <li>\n    <a href=\"http://travel.163.com/food\">美食</a>\n    </li>\n    <li>\n    <a href=\"http://jingdian.travel.163.com/domestic/1000066937\">四川</a>\n    </li>\n    <li>\n    <a href=\"http://jingdian.travel.163.com\">景点</a>\n    </li>\n    <li>\n    <a href=\"http://jingdian.travel.163.com/domestic/1000066944\">新疆</a>\n    </li>\n    <li>\n    <a href=\"http://travel.163.com/special/travellist/#f=endnav\">专题</a>\n    </li>\n    <li>\n    <a href=\"http://jingdian.travel.163.com/domestic/1000066926/#f=endnav\">西藏</a>\n    </li>\n    </ul>\n    <ul class=\"ntes-quicknav-column ntes-quicknav-column-11\">\n    <li>\n    <h3><a href=\"http://edu.163.com\">教育</a></h3>\n    </li>\n    <li>\n    <a href=\"http://edu.163.com/yimin\">移民</a>\n    </li>\n    <li>\n    <a href=\"http://edu.163.com/kaoyan\">考研</a>\n    </li>\n    <li>\n    <a href=\"http://edu.163.com/liuxue\">留学</a>\n    </li>\n    <li>\n    <a href=\"http://edu.163.com/special/official\">公务员</a>\n    </li>\n    <li>\n    <a href=\"http://edu.163.com/en\">外语</a>\n    </li>\n    <li>\n    <a href=\"http://kids.163.com\">中小学</a>\n    </li>\n    <li>\n    <a href=\"http://edu.163.com/gaokao\">高考</a>\n    </li>\n    <li>\n    <a href=\"http://daxue.163.com\">校园</a>\n    </li>\n    </ul>\n    <div class=\"ntes-nav-sitemap\"><a href=\"http://sitemap.163.com/\"><i></i>查看网易地图</a></div>\n    </div>\n    </div>\n    </div>\n    </div>\n    <div class=\"c-fr\">\n    <div class=\"c-fl\" id=\"js_N_navLoginBefore\">\n    <div class=\"js_loginframe ntes-nav-login ntes-nav-login-normal\" id=\"js_N_navHighlight\">\n    <a class=\"ntes-nav-login-title\" href=\"http://reg.163.com/\" id=\"js_N_nav_login_title\">登录</a>\n    <div class=\"ntes-nav-loginframe-pop\" id=\"js_N_login_wrap\">\n    <!--加载登陆组件-->\n    </div>\n    </div>\n    <div class=\"js_N_navSelect ntes-nav-select ntes-nav-select-wide JS_NTES_LOG_FE c-fl\">\n    <a class=\"ntes-nav-select-title ntes-nav-select-title-register\" href=\"http://reg.email.163.com/mailregAll/reg0.jsp?from=163navi&amp;regPage=163\">注册免费邮箱\n                    <em class=\"ntes-nav-select-arr\"></em>\n    </a>\n    <div class=\"ntes-nav-select-pop\">\n    <ul class=\"ntes-nav-select-list clearfix\" style=\"width:210px;\">\n    <li>\n    <a href=\"http://reg.vip.163.com/register.m?from=topnav\">\n    <span style=\"width:190px;\">注册VIP邮箱（特权邮箱，付费）</span>\n    </a>\n    </li>\n    <li class=\"last JS_NTES_LOG_FE\">\n    <a href=\"http://mail.163.com/client/dl.html?from=mail46\">\n    <span style=\"width:190px;\">免费下载网易官方手机邮箱应用</span>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </div>\n    <div class=\"c-fl\" id=\"js_N_navLoginAfter\" style=\"display:none\">\n    <div class=\"js_N_navSelect ntes-nav-select ntes-nav-logined JS_NTES_LOG_FE\" id=\"js_N_logined_warp\">\n    <span class=\"ntes-nav-select-title ntes-nav-logined-userinfo\">\n    <span class=\"ntes-nav-logined-username\" id=\"js_N_navUsername\"></span>\n    <em class=\"ntes-nav-select-arr\"></em>\n    </span>\n    <div class=\"ntes-nav-select-pop\" id=\"js_login_suggest_wrap\">\n    <ul class=\"ntes-nav-select-list clearfix\" id=\"js_logined_suggest\"></ul>\n    </div>\n    </div>\n    <a class=\"ntes-nav-entry-wide c-fl\" id=\"js_N_navLogout\" target=\"_self\">安全退出</a>\n    </div>\n    </div>\n    <ul class=\"ntes-nav-inside\">\n    <li>\n    <div class=\"js_N_navSelect ntes-nav-select c-fl\">\n    <a class=\"ntes-nav-mobile-title ntes-nav-entry-bgblack\" href=\"http://www.163.com/newsapp/#f=163nav\">\n    <em class=\"ntes-nav-entry-mobile\">移动端</em>\n    </a>\n    <div class=\"qrcode-img\">\n    <a href=\"http://www.163.com/newsapp/#f=163nav\">\n    <img src=\"//static.ws.126.net/f2e/include/common_nav/images/topapp.jpg\"/>\n    </a>\n    </div>\n    </div>\n    </li>\n    <li>\n    <div class=\"js_N_navSelect ntes-nav-select c-fl\">\n    <a class=\"ntes-nav-select-title ntes-nav-select-title-huatian ntes-nav-entry-bgblack\" href=\"https://open.163.com/\" id=\"js_love_url\">\n    <em class=\"ntes-nav-entry-huatian\">网易公开课</em>\n    <em class=\"ntes-nav-select-arr\"></em>\n    <span class=\"ntes-nav-msg\">\n    <em class=\"ntes-nav-msg-num\"></em>\n    </span>\n    </a>\n    <div class=\"ntes-nav-select-pop ntes-nav-select-pop-huatian\">\n    <ul class=\"ntes-nav-select-list clearfix\">\n    <li>\n    <a href=\"https://vip.open.163.com\">\n    <span>付费精品</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"https://open.163.com/ted/\">\n    <span>TED</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"https://open.163.com/ocw/\">\n    <span>国际名校公开课</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://open.163.com/cuvocw/\">\n    <span>中国大学视频公开课</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"https://open.163.com/appreciation\">\n    <span>赏课</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"https://open.163.com/khan/\">\n    <span>可汗学院</span>\n    </a>\n    </li>\n    <li class=\"last\">\n    <a href=\"http://open.163.com/special/appdownload_pc/\">\n    <span>下载公开课</span>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </li>\n    <li>\n    <div class=\"js_N_navSelect ntes-nav-select c-fl\">\n    <a class=\"ntes-nav-select-title ntes-nav-select-title-kaola ntes-nav-entry-bgblack\" href=\"http://da.kaola.com/redirect?t=5aaebece48792c00&amp;p=c901ea7c&amp;proId=1024&amp;code=d638f275b1755320e845734e53e897ee&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\" id=\"js_kaola_url\">\n    <em class=\"ntes-nav-entry-kaola\">网易考拉</em>\n    <em class=\"ntes-nav-select-arr\"></em>\n    <span class=\"ntes-nav-msg ntes-nav-kaola-msg\" id=\"js_N_navKaolaMsg\">\n    <em class=\"ntes-nav-msg-num\"></em>\n    </span>\n    </a>\n    <div class=\"ntes-nav-select-pop ntes-nav-select-pop-kaola\">\n    <ul class=\"ntes-nav-select-list clearfix\">\n    <li>\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece48f92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=b3e224752b2cad85e9831e8c6cf7fbbd&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fbimaibangdan.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>1000元新人大礼包</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece49392c00&amp;p=c901ea7c&amp;proId=1024&amp;code=fd8e43f4a20a26fbe60f7e7de1f17efe&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>新人专享进口好货</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece49392c01&amp;p=c901ea7c&amp;proId=1024&amp;code=21bcd5b595fc235cfd11e3e1cff14177&amp;target=https%3A%2F%2Factivity.kaola.com%2Factivity%2FflashSaleIndex%2Fshow.html%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>今日限时抢购</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece49792c00&amp;p=c901ea7c&amp;proId=1024&amp;code=ecc40777cb2d68a3d9fb078b232f081d&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfyrzolcpagerz.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>营养保健</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece49b92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=0cdd5a920c768340ffc12eccd659341d&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fnewpc.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>个人洗护</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece4a392c00&amp;p=c901ea7c&amp;proId=1024&amp;code=ee49a3a793f22e648ac616f5dab061dd&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjpwmb9zcpagesl.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>美容彩妆</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece4a792c00&amp;p=c901ea7c&amp;proId=1024&amp;code=6eb2598fd20963efc203a4e3fe88f4e2&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fmyxrq.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>母婴儿童</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece4ab92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=3946ce460ba655c11afac69855dfc02b&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Ffoodnewcustomers.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>环球美食</span>\n    </a>\n    </li>\n    <li class=\"last\">\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece4af92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=2eee7290051863737a434d44f3c0d46f&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fnewtalent.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>家居生活</span>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </li>\n    <li>\n    <div class=\"js_N_navSelect ntes-nav-select c-fl\">\n    <a class=\"ntes-nav-select-title ntes-nav-select-title-lofter ntes-nav-entry-bgblack\" href=\"http://you.163.com/?from=web_fc_menhu_xinrukou_1\" id=\"js_lofter_icon_url\">\n    <em class=\"ntes-nav-entry-lofter\">网易严选</em>\n    <em class=\"ntes-nav-select-arr\"></em>\n    <span class=\"ntes-nav-msg\" id=\"js_N_navLofterMsg\">\n    <em class=\"ntes-nav-msg-num\"></em>\n    </span>\n    </a>\n    <div class=\"ntes-nav-select-pop ntes-nav-select-pop-lofter\">\n    <ul class=\"ntes-nav-select-list clearfix\" id=\"js_lofter_pop_url\">\n    <li>\n    <a href=\"http://you.163.com/act/static/Fb2d1OZ714.html?from=web_fc_menhu_xinrukou_1\">\n    <span>888元现金券</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://you.163.com/manufacturer/list?from=web_fc_menhu_xinrukou_3\">\n    <span>品牌制造商爆款</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://you.163.com/item/recommend?from=web_fc_menhu_xinrukou_4\">\n    <span>999+人气好评品</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://you.163.com/flashSale/index?from=web_fc_menhu_xinrukou_5\">\n    <span>限时特惠</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://you.163.com/item/list?categoryId=1005000&amp;from=web_fc_menhu_xinrukou_7\">\n    <span>居家床品</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://you.163.com/item/list?categoryId=1005001&amp;from=web_fc_menhu_xinrukou_8\">\n    <span>精致餐厨</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://you.163.com/item/list?categoryId=1008000&amp;from=web_fc_menhu_xinrukou_9\">\n    <span>箱包鞋类</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://you.163.com/item/list?categoryId=1010000&amp;from=web_fc_menhu_xinrukou_10\">\n    <span>经典服饰</span>\n    </a>\n    </li>\n    <li class=\"last\">\n    <a href=\"http://you.163.com/item/list?categoryId=1005002&amp;from=web_fc_menhu_xinrukou_11\">\n    <span>健康美食</span>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </li>\n    <li>\n    <div class=\"js_N_navSelect ntes-nav-select c-fl\">\n    <a class=\"ntes-nav-select-title ntes-nav-select-title-money ntes-nav-entry-bgblack\" href=\"http://pay.163.com/\">\n    <em class=\"ntes-nav-entry-money\">支付</em>\n    <em class=\"ntes-nav-select-arr\"></em>\n    </a>\n    <div class=\"ntes-nav-select-pop ntes-nav-select-pop-temp\">\n    <ul class=\"ntes-nav-select-list clearfix\">\n    <li>\n    <a href=\"http://pay.163.com/#f=topnav\">\n    <span>一卡通充值</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://ecard.163.com/script/index#f=topnav\">\n    <span>一卡通购买</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"https://k.163.com/?product=163&amp;trackid=01\">\n    <span>网易白金卡</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"https://epay.163.com/\">\n    <span>我的网易支付</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"https://3c.163.com/?from=wangyimenhu16\">\n    <span>网易智造</span>\n    </a>\n    </li>\n    <li class=\"last\">\n    <a href=\"http://lq.163.com?from=neteasemoney\">\n    <span>网易来钱-借现金</span>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </li>\n    <li>\n    <div class=\"js_N_navSelect ntes-nav-select c-fl\">\n    <a class=\"ntes-nav-select-title ntes-nav-select-title-cart ntes-nav-entry-bgblack\" href=\"http://baoxian.163.com/car/?from=mhgwc\">\n    <em class=\"ntes-nav-entry-cart\">电商</em>\n    <em class=\"ntes-nav-select-arr\"></em>\n    </a>\n    <div class=\"ntes-nav-select-pop ntes-nav-select-pop-temp\">\n    <ul class=\"ntes-nav-select-list clearfix\">\n    <li>\n    <a href=\"http://you.163.com?from=web_in_wydaohang\">\n    <span>严选</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://lq.163.com?from=neteasebuy\">\n    <span>我要借钱</span>\n    </a>\n    </li>\n    <li class=\"last\">\n    <a href=\"http://da.kaola.com/redirect?t=5aaebece4b392c00&amp;p=c901ea7c&amp;proId=1024&amp;code=d15f8f9d72ccc507aeefda91b43c0cd2&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n    <span>网易考拉</span>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </li>\n    <li>\n    <div class=\"js_N_navSelect ntes-nav-select c-fl\">\n    <a class=\"ntes-nav-select-title ntes-nav-select-title-mail ntes-nav-entry-bgblack\" id=\"js_mail_url\">\n    <em class=\"ntes-nav-entry-mail\">邮箱</em>\n    <em class=\"ntes-nav-select-arr\"></em>\n    <span class=\"ntes-nav-msg\" id=\"js_N_navMailMsg\">\n    <em class=\"ntes-nav-msg-num\" id=\"js_N_navMailMsgNum\"></em>\n    </span>\n    </a>\n    <div class=\"ntes-nav-select-pop ntes-nav-select-pop-mail\">\n    <ul class=\"ntes-nav-select-list clearfix\">\n    <li>\n    <a href=\"http://email.163.com/#f=topnav\">\n    <span>免费邮箱</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://vipmail.163.com/#f=topnav\">\n    <span>VIP邮箱</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://qiye.163.com/#f=topnav\">\n    <span>企业邮箱</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://reg.email.163.com/mailregAll/reg0.jsp?from=ntes_nav&amp;regPage=163\">\n    <span>免费注册</span>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://reg.email.163.com/unireg/call.do?cmd=register.entrance&amp;flow=mobile&amp;from=ntes_nav\">\n    <span>快速注册</span>\n    </a>\n    </li>\n    <li class=\"last\">\n    <a href=\"http://mail.163.com/dashi/dlpro.html?from=mail46\">\n    <span>客户端下载</span>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </li>\n    </ul>\n    </div>\n    </div>\n    </div>\n    </div>\n    <script src=\"//static.ws.126.net/163/f2e/commonnav2019/js/commonnav_headjs-2f356198e6.js\"></script>\n    </div>\n    <!-- 节日背景 -->\n    <div class=\"ns-bg-wrap\">\n    <div class=\"N-nav-channel JS_NTES_LOG_FE\" data-module-name=\"xwwzy_11_headdaohang\">\n    <a class=\"first\" href=\"https://news.163.com/\">新闻</a><a href=\"http://sports.163.com/\">体育</a><a href=\"http://sports.163.com/nba/\">NBA</a><a href=\"http://ent.163.com/\">娱乐</a><a href=\"http://money.163.com/\">财经</a><a href=\"http://money.163.com/stock/\">股票</a><a href=\"http://auto.163.com/\" id=\"_link_auto\">汽车</a><a href=\"http://tech.163.com/\">科技</a><a href=\"http://mobile.163.com/\">手机</a><a href=\"http://digi.163.com/\">数码</a><a href=\"http://lady.163.com/\">女人</a><a href=\"http://v.163.com/\">直播</a><a href=\"http://v.163.com/special/video/#tuijian\">视频</a><a href=\"http://travel.163.com/\">旅游</a><a href=\"http://house.163.com/\" id=\"houseUrl\">房产</a><a href=\"http://home.163.com/\" id=\"homeUrl\">家居</a><a href=\"http://edu.163.com/\">教育</a><a href=\"http://book.163.com/\">读书</a><a href=\"https://news.163.com/\" id=\"_link_game\">本地</a><a href=\"http://jiankang.163.com/\">健康</a><a href=\"http://rd.da.netease.com/redirect?t=5802fb18cf033c80&amp;p=e17af55c&amp;proId=1024&amp;target=https%3A%2F%2Fwww.kaola.com%2F%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">海淘</a><a class=\"last\" href=\"http://art.163.com/\">艺术</a>\n    </div>\n    <!-- 游戏替换为本地，并定向 0310-->\n    <!-- 配置定向城市 -->\n    <script _keep=\"true\" type=\"text/javascript\">\n    var HouseNavBendiTxt = {\n        \"province\": [\n            {\n                \"name\": \"北京市\",\n                \"shortName\": \"北京\",\n                \"url\":\"http://bj.news.163.com/\"\n            },\n            {\n                \"name\": \"上海市\",\n                \"shortName\": \"上海\",\n                \"url\":\"http://sh.news.163.com/\"\n            },\n            {\n                \"name\": \"天津市\",\n                \"shortName\": \"天津\",\n                \"url\":\"http://tj.news.163.com/\"\n            },\n            {\n                \"name\": \"广东省\",\n                \"shortName\": \"广东\",\n                \"url\":\"http://gd.news.163.com/\"\n            },\n            {\n                \"name\": \"江苏省\",\n                \"shortName\": \"江苏\",\n                \"url\":\"http://js.news.163.com/\"\n            },\n            {\n                \"name\": \"浙江省\",\n                \"shortName\": \"浙江\",\n                \"url\":\"http://zj.news.163.com/\"\n            },\n            {\n                \"name\": \"四川省\",\n                \"shortName\": \"四川\",\n                \"url\":\"http://sc.news.163.com/\"\n            },\n            {\n                \"name\": \"黑龙江省\",\n                \"shortName\": \"黑龙江\",\n                \"url\":\"http://hlj.news.163.com/\"\n            },\n            {\n                \"name\": \"吉林省\",\n                \"shortName\": \"吉林\",\n                \"url\":\"http://jl.news.163.com/\"\n            },\n            {\n                \"name\": \"辽宁省\",\n                \"shortName\": \"辽宁\",\n                \"url\":\"http://liaoning.news.163.com/\"\n            },\n            {\n                \"name\": \"内蒙古自治区\",\n                \"shortName\": \"内蒙古\",\n                \"url\":\"http://hhht.news.163.com/\"\n            },\n            {\n                \"name\": \"河北省\",\n                \"shortName\": \"河北\",\n                \"url\":\"http://hebei.news.163.com/\"\n            },\n            {\n                \"name\": \"河南省\",\n                \"shortName\": \"河南\",\n                \"url\":\"http://henan.163.com/\"\n            },\n            {\n                \"name\": \"山东省\",\n                \"shortName\": \"山东\",\n                \"url\":\"http://sd.news.163.com/\"\n            },\n            {\n                \"name\": \"陕西省\",\n                \"shortName\": \"陕西\",\n                \"url\":\"http://shanxi.news.163.com/\"\n            },\n            {\n                \"name\": \"甘肃省\",\n                \"shortName\": \"甘肃\",\n                \"url\":\"http://gs.news.163.com/\"\n            },\n            {\n                \"name\": \"宁夏回族自治区\",\n                \"shortName\": \"宁夏\",\n                \"url\":\"http://ningxia.news.163.com/\"\n            },\n            {\n                \"name\": \"新疆维吾尔自治区\",\n                \"shortName\": \"新疆\",\n                \"url\":\"http://xj.news.163.com/\"\n            },\n            {\n                \"name\": \"安徽省\",\n                \"shortName\": \"安徽\",\n                \"url\":\"http://ah.news.163.com/\"\n            },\n            {\n                \"name\": \"福建省\",\n                \"shortName\": \"福建\",\n                \"url\":\"http://fj.news.163.com/\"\n            },\n            {\n                \"name\": \"广西壮族自治区\",\n                \"shortName\": \"广西\",\n                \"url\":\"http://gx.news.163.com/\"\n            },\n            {\n                \"name\": \"重庆市\",\n                \"shortName\": \"重庆\",\n                \"url\":\"http://chongqing.163.com/\"\n            },\n            {\n                \"name\": \"湖北省\",\n                \"shortName\": \"湖北\",\n                \"url\":\"http://hb.news.163.com/\"\n            },\n            {\n                \"name\": \"江西省\",\n                \"shortName\": \"江西\",\n                \"url\":\"http://jx.news.163.com/\"\n            },\n            {\n                \"name\": \"海南省\",\n                \"shortName\": \"海南\",\n                \"url\":\"http://hn.news.163.com/\"\n            },\n            {\n                \"name\": \"贵州省\",\n                \"shortName\": \"贵州\",\n                \"url\":\"http://gz.news.163.com/\"\n            },\n            {\n                \"name\": \"云南省\",\n                \"shortName\": \"云南\",\n                \"url\":\"http://yn.news.163.com/\"\n            },\n            {\n                \"name\": \"湖南省\",\n                \"shortName\": \"上海\",\n                \"url\":\"http://sh.news.163.com/\"\n            },\n            {\n                \"name\": \"山西省\",\n                \"shortName\": \"山西\",\n                \"url\":\"http://sx.news.163.com\"\n            },\n            {\n                \"name\": \"西藏自治区\",\n                \"shortName\": \"北京\",\n                \"url\":\"http://bj.news.163.com/\"\n            },\n            {\n                \"name\": \"香港特别行政区\",\n                \"shortName\": \"广东\",\n                \"url\":\"http://gd.news.163.com/\"\n            },\n            {\n                \"name\": \"澳门特别行政区\",\n                \"shortName\": \"广东\",\n                \"url\":\"http://gd.news.163.com/\"\n            },\n            {\n                \"name\": \"台湾省\",\n                \"shortName\": \"广东\",\n                \"url\":\"http://gd.news.163.com/\"\n            },\n            {\n                \"name\": \"天津市\",\n                \"shortName\": \"北京\",\n                \"url\":\"http://bj.news.163.com/\"\n            },\n            {\n                \"name\": \"青海省\",\n                \"shortName\": \"北京\",\n                \"url\":\"http://bj.news.163.com/\"\n            }\n        ],\n        \"city\": [\n            {\n                \"name\": \"大连市\",\n                \"shortName\": \"大连\",\n                \"url\":\"http://dl.news.163.com\"\n            },\n            {\n                \"name\": \"青岛市\",\n                \"shortName\": \"青岛\",\n                \"url\":\"http://qingdao.news.163.com\"\n            },\n            {\n                \"name\": \"宁波市\",\n                \"shortName\": \"宁波\",\n                \"url\":\"http://ningbo.news.163.com\"\n            },\n            {\n                \"name\": \"厦门市\",\n                \"shortName\": \"厦门\",\n                \"url\":\"http://xiamen.news.163.com\"\n            },\n            {\n                \"name\": \"深圳市\",\n                \"shortName\": \"深圳\",\n                \"url\":\"http://shenzhen.news.163.com/\"\n            }\n        ],\n        \"defalt\": {\n                \"name\": \"\",\n                \"shortName\": \"本地\",\n                \"url\":\"http://news.163.com/\"\n            }\n    };\n    </script>\n    <script _keep=\"true\" type=\"text/javascript\">\n        //本地设置定向省份\n        function setBendiName(){\n            var js_nav_bendi = document.getElementById(\"_link_game\");\n            var cityname = \"\";\n            var cityurl = \"\";\n            var _loc = window.localAddress;\n            if(!js_nav_bendi)\n                return;\n            if(HouseNavBendiTxt.city && _loc){\n                var citylist = HouseNavBendiTxt.city;\n                var localcity = _loc.city;\n                for(var i=0;i<citylist.length;i++){\n                    if(citylist[i].name == localcity){\n                        cityname = citylist[i].shortName;\n                        cityurl = citylist[i].url;\n                        break;\n                    }\n                }\n            }\n            if(cityname == \"\" && cityurl == \"\" && HouseNavBendiTxt.province && _loc){\n                var provincelist = HouseNavBendiTxt.province;\n                var localprovince = _loc.province;\n                for(var i=0;i<provincelist.length;i++){\n                    if(provincelist[i].name == localprovince){\n                        cityname = provincelist[i].shortName;\n                        cityurl = provincelist[i].url;\n                        break;\n                    }\n                }\n            }\n            if(js_nav_bendi && cityname != \"\" && cityurl != \"\"){\n                js_nav_bendi.innerHTML = cityname;\n                js_nav_bendi.href = cityurl;\n            }\n            if(js_nav_bendi && cityname == \"\" && cityurl == \"\"){\n                js_nav_bendi.innerHTML = \"本地\";\n                js_nav_bendi.href = \"http://news.163.com\";\n            }\n        }\n        function BENDI_NAV_CALLBACK(data){\n           if(data && data.result){\n                if(window.HouseNavBendiTxt){\n                    window.localAddress = data.result;\n                    setBendiName();\n                } \n           }\n        };\n        \n        if(window.localAddress){\n            if(window.HouseNavBendiTxt){\n                setBendiName();\n            } \n        }else{\n            var url = \"//ipservice.163.com/locate/api/getLocByIp?key=C6E22B7D480E3312C74EC7EF013E50C5&callback=BENDI_NAV_CALLBACK\";\n            var script = document.createElement('script');\n            script.setAttribute('src', url);\n            document.getElementsByTagName('head')[0].appendChild(script);\n        }\n    </script>\n    <div class=\"index2016_content\">\n    <!-- 头部广告 开始-->\n    <div class=\"ns_area index_top_ad channel_relative_2016\">\n    <!--16新闻首页顶通-->\n    <div adtype=\"topColumnAd\" class=\"at_item common_ad_item top_ad_column\" requesturl=\"https://nex.163.com/q?app=7BE0FC82&amp;c=news&amp;l=11&amp;site=netease&amp;affiliate=news&amp;cat=homepage&amp;type=column1200x125_960x100&amp;location=10\"></div>\n    <span class=\"channel_ad_2016\">广告</span>\n    </div>\n    <!-- 头部广告 结束-->\n    <!-- 头部导航 开始-->\n    <div class=\"index_head\">\n    <div ne-module=\"/news/index2016_rmd/modules/head/head.js\">\n    <div class=\"ns_area hd\">\n    <h1>\n    <a class=\"channel2019_logo channel2019_news_logo\" href=\"https://news.163.com/\">网易新闻有态度</a>\n    </h1>\n    <!-- <div class=\"top-search\">\n            <form action=\"http://news.yodao.com/search\" method=\"get\" name=\"nisearch_top\" id=\"formtop\" target=\"_blank\">\n                <input type=\"hidden\" name=\"keyfrom\" value=\"sports.163\">\n                <input type=\"hidden\" name=\"suser\" value=\"user163\">\n                <input type=\"hidden\" name=\"ue\" value=\"gbk\">\n                <div class=\"search-input\"> <span class=\"hidden\">搜索</span>\n                    <input type=\"text\" name=\"q\" id=\"searchInput_top\" onfocus=\"this.value=''\" value=\"输入关键字\" class=\"text-box \">\n                    <input type=\"submit\" name=\"Submit\" value=\"\" tabindex=\"0\" title=\"搜索\" class=\"search-submit\" id=\"sb_form_go\">\n                </div>\n            </form>\n        </div> -->\n    <!-- 天气 -->\n    <div class=\"ns-lid-weather\" id=\"nsWeatherTop\">\n    <div class=\"ns-weather\" id=\"nsWeather\">\n    <a href=\"http://news.163.com/weather/\">\n    <script ne-repeat=\"weather in weatherInfo\" type=\"text/template\">\n                    <img class=\"ns-weather-icon\" ne-src=\"http://static.ws.126.net/f2e/news/index2015/img/weather/<%=weather.icon%>\">\n                    <div class=\"ns-weather-text\"><%=weather.weather%></div>\n                    <div class=\"ns-weather-info\"><%=weather.temp2%>°~<%=weather.temp1%>°</div>\n                    <div class=\"ns-weather-city\"><%=weather.city%></div>\n                </script>\n    </a>\n    </div>\n    </div>\n    </div>\n    </div>\n    <div class=\"bd\">\n    <div class=\"ns_area list\">\n    <ul>\n    <li class=\"first\"><a href=\"http://www.163.com/\">首页</a></li>\n    <li><a href=\"http://news.163.com/rank/\">排行</a></li>\n    <li><a href=\"http://news.163.com/photo/#Current\">图片</a></li>\n    <li class=\"menu_guonei\"><a href=\"http://news.163.com/domestic/\">国内</a></li>\n    <li class=\"menu_guoji\"><a href=\"http://news.163.com/world/\">国际</a></li>\n    <!--<li class=\"menu_shehui\"><a href=\"http://news.163.com/shehui/\">社会</a></li>-->\n    <li><a href=\"http://data.163.com/special/datablog/\">数读</a></li>\n    <li class=\"menu_war\"><a href=\"http://war.163.com/\">军事</a></li>\n    <li class=\"menu_hangkong\"><a href=\"http://news.163.com/air/\">航空</a></li>\n    <li class=\"menu_wurenji\"><a href=\"http://news.163.com/uav/\">无人机</a></li>\n    <li><a href=\"http://news.163.com/college\">新闻学院</a></li>\n    <li><a href=\"http://gov.163.com/\">政务</a></li>\n    <li><a href=\"http://gongyi.163.com/\">公益</a></li>\n    <li><a href=\"http://media.163.com/\">媒体</a></li>\n    <li class=\"last\"><a href=\"http://news.163.com/special/wangsansanhome/\">王三三</a></li>\n    </ul>\n    </div>\n    </div>\n    </div>\n    <!-- 头部导航 结束-->\n    <!-- 内容区域 开始 -->\n    <div class=\"ns_area clearfix index_main\">\n    <!-- 原创栏目 开始 -->\n    <div class=\"main_origina_column\" id=\"js_origina_column\">\n    <div ne-module=\"/news/index2016_rmd/modules/originacolumn/originacolumn.js\">\n    <div class=\"origina_column_warp\">\n    <h2>\n    <span>新闻各有态度</span>\n    </h2>\n    <div class=\"scroll_bd\" ne-role=\"scroll_bd\">\n    <div class=\"scroll_column_bd\">\n    <ul class=\"scroll_ul\">\n    <!-- 回声 开始 -->\n    <!-- 回声 结束 -->\n    <!-- 数读 开始 -->\n    <li class=\"cell cell_sd cell_hover\">\n    <p class=\"tag_line\">\n    <a class=\"tags tag_sd\" href=\"http://data.163.com/special/datablog/\">数读</a>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://data.163.com/19/0626/14/EIJQJG9L000181IU.html\" ne-role=\"detail\">\n    <h3>\n                                    中国哪里的地铁最拥挤？\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"中国哪里的地铁最拥挤？\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/26/30e8760df3044e29a18fac3514dd22b1.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://data.163.com/19/0625/11/EIH0CQEK00019GOE.html\">娶一个潮汕老婆到底是什么体验</a></li>\n    <li class=\"twoli\"><a href=\"http://data.163.com/19/0621/17/EI7BLS3600019GOE.html\">不瞒你说，成都早餐好吃到爆</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 数读 结束 -->\n    <!-- 人间 开始 -->\n    <li class=\"cell cell_rj\">\n    <p class=\"tag_line\">\n    <a class=\"tags tag_rj\" href=\"http://renjian.163.com/\">人间</a>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://renjian.163.com/19/0628/14/EIP21K41000181RV.html\" ne-role=\"detail\">\n    <h3>\n                                    小白作者的变现之路\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"小白作者的变现之路\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/27f33fcbfcec4b42b6837807b7a0883f.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://renjian.163.com/19/0627/16/EIML2HJO000181RV.html\">被毒虫男友拖下水的女大学生</a></li>\n    <li class=\"twoli\"><a href=\"http://renjian.163.com/19/0626/13/EIJPJMCH000181RV.html\">领导，求你让我加班吧</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 人间 结束 -->\n    <!-- 大国小民 开始 -->\n    <li class=\"cell cell_dgxm\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_dgxm\">大国小民</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://renjian.163.com/19/0624/14/EIEOBNCB000181RK.html\" ne-role=\"detail\">\n    <h3>\n                                    当不了官发不了财的读书人\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"当不了官发不了财的读书人\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/24/b77e119ffeca477fa4bd2144b1fcb86c.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://renjian.163.com/19/0620/16/EI4JRNO7000181RK.html\">四个博士，一地鸡毛</a></li>\n    <li class=\"twoli\"><a href=\"http://renjian.163.com/19/0618/12/EHV0QRVG000181RK.html\">医闹得逞后，伤害的到底是谁</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 大国小民 结束 -->\n    <!-- 三三有梗 开始 -->\n    <li class=\"cell cell_dada\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_dada\">三三有梗</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://news.163.com/19/0627/11/EIM57O490001885B.html\" ne-role=\"detail\">\n    <h3>\n                                    据说99%的人在图书馆一定会碰上......\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"据说99%的人在图书馆一定会碰上......\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/27/06eb8f4a3d4647bf9360ff5e71f003b8.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://news.163.com/19/0626/15/EIK0IJT40001885B.html\">我可能，得了种，前任病</a></li>\n    <li class=\"twoli\"><a href=\"https://news.163.com/19/0617/09/EHS57H4L0001885B.html\">那些KO不掉我的,最终成了我的OK</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 三三有梗 结束 -->\n    <!-- 三三映画 开始 -->\n    <!-- 三三映画 结束 -->\n    <!-- 我去1990 开始 -->\n    <li class=\"cell cell_wq1990\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_wq1990\">我去1990</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://news.163.com/19/0628/11/EIOL94760001885B.html\" ne-role=\"detail\">\n    <h3>\n                                    直男幼稚行为大赏\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"直男幼稚行为大赏\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/0b3890cd2f4b473fa0127b5e33ae6ccf.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://news.163.com/19/0624/12/EIEFGMVL0001885B.html\">打个赌，爱情友情你分不清楚</a></li>\n    <li class=\"twoli\"><a href=\"https://news.163.com/19/0621/12/EI6NKDTU0001885B.html\">不会唱歌的人进 KTV 以后有多惨</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 我去1990 结束 -->\n    <!-- 轻松一刻 开始 -->\n    <li class=\"cell cell_qsyk\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_qsyk\">轻松一刻</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://news.163.com/19/0628/19/EIPIQT4O000181BR.html\" ne-role=\"detail\">\n    <h3>\n                                    彩票一直都不中，我却忍不住要买\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"彩票一直都不中，我却忍不住要买\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/f44265c5b4ef4a11a99eedbde7c49833.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://news.163.com/19/0627/17/EIMPGJAU000181BR.html\">原来\"神仙眷侣\"离婚,也是一地鸡毛</a></li>\n    <li class=\"twoli\"><a href=\"https://news.163.com/19/0626/18/EIK95RV0000181BR.html\">我宣布，北大清华这对CP锁死了！</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 轻松一刻 结束 -->\n    <!-- 槽值 开始 -->\n    <li class=\"cell cell_caozhi\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_caozhi\">槽值</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://caozhi.news.163.com/19/0623/22/EID0CBIH000181TI.html\" ne-role=\"detail\">\n    <h3>\n                                    佟丽娅，这次你赢了\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"佟丽娅，这次你赢了\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/23/67d24242d479451ea705e26296187f78.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://caozhi.news.163.com/19/0623/15/EIC9LGSP000181TI.html\">千万别在深夜点开这神作</a></li>\n    <li class=\"twoli\"><a href=\"http://caozhi.news.163.com/19/0618/19/EHVRID7G000181TI.html\">那个发“嗯”的人，已被踢出群聊</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 槽值 结束 -->\n    <!-- 谈心社 开始 -->\n    <li class=\"cell cell_tanxinshe\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_tanxinshe\">谈心社</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://news.163.com/19/0628/17/EIPCOKEA0001982T.html\" ne-role=\"detail\">\n    <h3>\n                                    王宝强母亲去世：来日方长是人生的错觉\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"王宝强母亲去世：来日方长是人生的错觉\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/ecd0de8b8dc0402da72d814bde76f06e.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://news.163.com/19/0627/13/EIMC0EDH0001982T.html\">宋仲基宋慧乔离婚：再美的爱情也会过期</a></li>\n    <li class=\"twoli\"><a href=\"https://news.163.com/19/0626/17/EIK6AD550001982T.html\">杨紫冰箱藏药，戳穿最怂瞬间</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 谈心社 结束 -->\n    <!-- 看客 开始 -->\n    <li class=\"cell cell_kanke\">\n    <p class=\"tag_line\">\n    <a class=\"tags tag_kanke\" href=\"http://renjian.163.com/special/renjian_kanke/\">看客</a>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://renjian.163.com/19/0628/11/EIOMK185000199ET.html\" ne-role=\"detail\">\n    <h3>\n                                    我奶茶都戒了，日本人才知道它的好\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"我奶茶都戒了，日本人才知道它的好\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/f35eceb8d111496693e8f77a71a49cba.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://renjian.163.com/19/0620/11/EI43PM8Q000199ET.html\">美国堕胎残酷物语</a></li>\n    <li class=\"twoli\"><a href=\"http://renjian.163.com/19/0613/11/EHI39FML000199ET.html\">跑腿小哥提供的十万种服务</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 看客 结束 -->\n    <!-- 身体密码 开始 -->\n    <li class=\"cell cell_stpwd\">\n    <p class=\"tag_line\">\n    <a class=\"tags tag_stpwd\" href=\"http://jiankang.163.com/special/zhutierji/?type=3\">身体密码</a>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://jiankang.163.com/19/0625/11/EIH061CM0038804G.html\" ne-role=\"detail\">\n    <h3>\n                                    防晒，99%的人都做错了……\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"防晒，99%的人都做错了……\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/25/f260b6843fca4702bb5e4e316600f113.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://jiankang.163.com/19/0617/14/EHSN7PPV0038804G.html\">当代人减肥：迈不过25岁这道坎</a></li>\n    <li class=\"twoli\"><a href=\"https://jiankang.163.com/19/0608/15/EH5J9IGA00388AD5.html\">多年后 无数中年人仍会被高考吓醒</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 身体密码 结束 -->\n    <!-- 哒哒 开始 -->\n    <!-- 哒哒 结束 -->\n    </ul>\n    </div>\n    <div id=\"js_baseline\"></div>\n    <span class=\"white_bg\" id=\"js_white_bg\"></span>\n    </div>\n    </div>\n    </div>\n    </div>\n    <!-- 原创栏目 结束 -->\n    <!-- 中间新闻 开始 -->\n    <div class=\"main_center_news\">\n    <!-- 头条新闻 -->\n    <div class=\"mod_top_news2\" id=\"js_top_news\">\n    <h2>\n    <a href=\"https://news.163.com/19/0628/16/EIP8R4SV000189FH.html\">央视独家：习近平会见日本首相</a>\n    </h2>\n    <ul class=\"top_news_ul\">\n    <li><a href=\"https://news.163.com/19/0628/16/EIP8N52U0001875N.html\">外交部回应中美元首会面</a>|<a href=\"https://news.163.com/19/0628/14/EIOVIP2500018AP1.html\" target=\"_blank\">特朗普会见普京 笑称:不要干预美国大选哦</a></li>\n    <li><a href=\"https://news.163.com/19/0628/16/EIP7KOH70001875P.html\">住建部:加快垃圾分类处理设施建设</a>|<a href=\"https://news.163.com/19/0628/16/EIP8F9QQ0001875P.html\" target=\"_blank\">袁仁国被公诉:受贿数额特别巨大</a></li>\n    <li><a href=\"https://news.163.com/19/0628/13/EIOSPGLJ0001899O.html\">湖南耒阳人大常委会原主任携子主动投案</a>|<a href=\"https://news.163.com/19/0628/13/EIOUHOB70001875P.html\" target=\"_blank\">美的48小时内被骗10亿资金</a></li>\n    </ul>\n    <h2 class=\"top_news_title\">\n    <a href=\"https://news.163.com/19/0628/19/EIPH3F1V0001875P.html\">垃圾分类逼疯上海人？别笑！马上轮到这46个城市</a>\n    </h2>\n    <ul class=\"top_news_ul\">\n    <li><a href=\"https://news.163.com/19/0628/19/EIPILCJ70001875P.html\">女子酒后澡堂一打六被刑拘</a>|<a href=\"https://news.163.com/19/0628/18/EIPFI0KN0001875P.html\" target=\"_blank\">杀人案嫌犯向警察开枪拒捕 被当场击毙</a></li>\n    <li><a href=\"https://news.163.com/19/0628/16/EIP8RHM70001875P.html\">95后飙摩托车追高铁发抖音被刑拘</a>|<a href=\"https://news.163.com/19/0628/16/EIP7B7RP0001899O.html\" target=\"_blank\">母亲担心儿子粗心在其手背\"刺\"字</a></li>\n    <li><a href=\"https://news.163.com/19/0628/15/EIP4Q6BQ0001899O.html\">女子高铁上劝老人看好小孩被骂</a>|<a href=\"https://news.163.com/19/0628/16/EIP8QO5Q0001875P.html\" target=\"_blank\">南京杀妻案死者姑妈：侄女生前要强</a></li>\n    </ul>\n    </div>\n    <!-- 广告 开始 -->\n    <div class=\"mod_top_news_ad\">\n    <!-- 16新闻首页01小通栏 -->\n    <a class=\"ad_hover_href\" href=\"http://gb.corp.163.com/gb/legal.html\"></a>\n    <iframe border=\"0\" frameborder=\"no\" height=\"50\" marginheight=\"0\" marginwidth=\"0\" scrolling=\"no\" src=\"https://g.163.com/r?site=netease&amp;affiliate=news&amp;cat=homepage&amp;type=logo600x50&amp;location=1\" width=\"600\"></iframe>\n    </div>\n    <!-- 广告 结束 -->\n    <!-- 特别报道 开始 -->\n    <div class=\"mod_important_news none\">\n    <h5><label>特别报道</label></h5>\n    <h2>\n    <a href=\"http://news.163.com/16/0721/19/BSH7V8QF00014JB6.html\">辽宁遭暴雨侵袭致城市内涝 紧急转移12万人</a>\n    </h2>\n    <ul class=\"top_news_ul\">\n    <li><a href=\"http://news.163.com/16/0721/10/BSG7HOH20001124J.html\">民政部:北方暴雨75人死亡失踪</a>|<a href=\"http://news.163.com/16/0721/12/BSGG5VK300011229.html\" target=\"_blank\">北京发生山洪灾害 铲车翻倒4人被困</a></li>\n    <li><a href=\"http://news.163.com/16/0721/12/BSGHHVLK00011229.html\">搜救犬水灾救援22天殉职 主人:它太累了</a>|<a href=\"http://news.163.com/16/0721/07/BSFUFFP800014AED.html\" target=\"_blank\">姐妹被洪水卷走警方拒立案</a></li>\n    </ul>\n    <div class=\"mod_important_pic\">\n    <ul class=\"clearfix\">\n    <li>\n    <a href=\"http://news.163.com/photoview/00AN0001/2189402.html?from=ph_ss#p=BSG716GE00AN0001\">\n    <img height=\"120\" src=\"http://img3.cache.netease.com/news/2016/7/21/20160721131401d35e2.jpg\" width=\"190\"/>\n    <span class=\"bg\"></span>\n    <h3>河南遇强降雨 9.8万人转移</h3>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/photoview/00AP0001/2189377.html?from=ph_ss#p=BSFTQ99H00AP0001\">\n    <img height=\"120\" src=\"http://img3.cache.netease.com/news/2016/7/21/201607211319466e84e.jpg\" width=\"190\"/>\n    <span class=\"bg\"></span>\n    <h3>女主播直播暴雨 浑身湿透</h3>\n    </a>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/photoview/00AP0001/2189389.html?from=ph_ss#p=BSG1S9AM00AP0001\">\n    <img height=\"120\" src=\"http://img5.cache.netease.com/news/2016/7/21/20160721132119ef59b.jpg\" width=\"190\"/>\n    <span class=\"bg\"></span>\n    <h3>湖北民众省道上趟水摸鱼</h3>\n    </a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    <!-- 特别报道 结束 -->\n    <!-- 网易公开课 开始-->\n    <div class=\"mod_netes_origina\" ne-module=\"/news/index2016_rmd/modules/slide/slide.js\">\n    <script _keep=\"true\" type=\"text/javascript\">\n        window.GGKSLIDEDATA = [\n                                                                             {\n                \"title\":\"你多久没读完一本书了？带你克服读书拖延症\",\n                \"imgsrc\":\"https://cms-bucket.ws.126.net/2019/06/26/225c40fe7f9141a8852f70d20c381f8b.jpeg?imageView&thumbnail=600y250\",\n                \"link\":\"https://vip.open.163.com/courses/2531?p=xs_zt04\"\n            }\n                                                             ,\n                    {\n                \"title\":\"曾国藩：普通人怎样通过自我努力改写命运？\",\n                \"imgsrc\":\"https://cms-bucket.ws.126.net/2019/05/16/b0ba21dfb7ef4716a1275a2c1914832a.jpeg?imageView&thumbnail=600y250\",\n                \"link\":\"https://vip.open.163.com/courses/1047?p=xs_zt03\"\n            }\n                                                             ,\n                    {\n                \"title\":\"你单一的收入模式，拖垮的是你财富积累速度\",\n                \"imgsrc\":\"https://cms-bucket.ws.126.net/2019/03/21/fe5cf147142b414793a6326f654b41ce.jpeg?imageView&thumbnail=600y250\",\n                \"link\":\"https://vip.open.163.com/courses/3547?p=xs_zt04\"\n            }\n                                                             ,\n                    {\n                \"title\":\"健身VS不健身，完全是两种不同的人生\",\n                \"imgsrc\":\"https://cms-bucket.nosdn.127.net/2018/11/12/94fbcf460348460f9b73300aa1948cb3.jpeg?imageView&thumbnail=600y250\",\n                \"link\":\"https://vip.open.163.com/courses/192?p=xs_zt02\"\n            }\n                ];\n    </script>\n    <div class=\"mod_idx_focus\" ne-module=\"/modules/slide/slide.js\" ne-props=\"events:mouseover;interval:4000;topicid=000501EP;listnum=8;pointstart=80;pointend=100;\" ne-state=\"slideMethod:left;events=mouseover;interval=4000\">\n    <div class=\"hd\">\n    <h2><a href=\"https://open.163.com/\">网易公开课</a></h2>\n    <div class=\"focus_ctrl\">\n    <span ne-role=\"slide-nav\"></span>\n    <span ne-role=\"slide-nav\"></span>\n    <span ne-role=\"slide-nav\"></span>\n    <span ne-role=\"slide-nav\"></span>\n    </div>\n    </div>\n    <a class=\"focus_prev\" ne-role=\"slide-prev\"></a>\n    <a class=\"focus_next\" ne-role=\"slide-next\"></a>\n    <div class=\"focus_body\" ne-role=\"slide-body\">\n    <ul ne-role=\"slide-scroll\">\n    <script ne-foreach=\"gkkdatalist\" type=\"text/template\">\n                <li <%if(__i == 0){%>class=\"current\"<%}%> ne-role=\"slide-page\">\n                    <a href=\"<%=link%>\" title=\"<%=title%>\" class=\"photo\"><img src=\"<%=imgsrc%>\" width=\"600\" height=\"250\" alt=\"<%=title%>\"/></a>\n                    <span class=\"bg\"></span>\n                    <h3>\n                        <a href=\"<%=link%>\"><%=title%></a>\n                    </h3>\n                </li>\n                </script>\n    </ul>\n    <span class=\"ad_hover_pic\">广告</span>\n    </div>\n    </div>\n    </div>\n    <!-- 网易公开课 结束-->\n    <!-- 信息流 开始-->\n    <div class=\"mod_datalist\" ne-extend=\"/news/index2016_rmd/modules/datalist2016/config.js\" ne-module=\"/news/index2016_rmd/modules/datalist2016/datalist2016.js\">\n    <div class=\"newsdata_wrap\" ne-module=\"/modules/tabs/tabs.js\" ne-on=\"showed:changepanel\" ne-state=\"showhide:true;delay:400;\">\n    <div class=\"newsdata_nav\" ne-class=\"{{myState.fixedTop ? 'fixed_top':''}}\">\n    <ul class=\"clearfix\">\n    <li class=\"nav_item\">\n    <a class=\"nav_name no_cursor\" href=\"javascript:;\" ne-role=\"tab-nav\" target=\"_self\">\n                        要闻\n                        <span class=\"nav_item_ink\"></span>\n    </a>\n    </li>\n    <li class=\"nav_item\">\n    <a class=\"nav_name no_cursor\" href=\"{{myState.channelbendiurl}}\" ne-class=\"{{myState.bendiTstyle ? 'bendistyle' : ''}}\" ne-role=\"tab-nav\" target=\"{{myState.channelbendiurl == 'javascript:;' ? '_self' : '_blank'}}\">\n    <strong ne-text=\"{{myState.bendiCity}}\"></strong>\n    <span class=\"nav_item_ink\"></span>\n    </a>\n    </li>\n    <!-- <li class=\"nav_item\">\n                    <a class=\"nav_name\" ne-role=\"tab-nav\" href=\"http://news.163.com/shehui/\">\n                        社会\n                        <span class=\"nav_item_ink\"></span>\n                    </a>\n                </li> -->\n    <li class=\"nav_item\">\n    <a class=\"nav_name\" href=\"http://news.163.com/domestic/\" ne-role=\"tab-nav\">\n                        国内\n                        <span class=\"nav_item_ink\"></span>\n    </a>\n    </li>\n    <li class=\"nav_item\">\n    <a class=\"nav_name\" href=\"http://news.163.com/world/\" ne-role=\"tab-nav\">\n                        国际\n                        <span class=\"nav_item_ink\"></span>\n    </a>\n    </li>\n    <li class=\"nav_item\">\n    <a class=\"nav_name no_cursor\" href=\"javascript:;\" ne-role=\"tab-nav\" target=\"_self\">\n                        独家\n                        <span class=\"nav_item_ink\"></span>\n    </a>\n    </li>\n    <li class=\"nav_item\">\n    <a class=\"nav_name\" href=\"http://war.163.com/\" ne-role=\"tab-nav\">\n                        军事\n                        <span class=\"nav_item_ink\"></span>\n    </a>\n    </li>\n    <li class=\"nav_item\">\n    <a class=\"nav_name\" href=\"http://money.163.com/\" ne-role=\"tab-nav\">\n                        财经\n                        <span class=\"nav_item_ink\"></span>\n    </a>\n    </li>\n    <li class=\"nav_item\">\n    <a class=\"nav_name\" href=\"http://tech.163.com/\" ne-role=\"tab-nav\">\n                        科技\n                        <span class=\"nav_item_ink\"></span>\n    </a>\n    </li>\n    </ul>\n    <a class=\"more\" href=\"javascript:;\" ne-class=\"{{myState.morechannel ? 'more_hover': ''}}\" ne-mouseout=\"morehideChannel()\" ne-mouseover=\"moreShowChannel()\" ne-role=\"morebtn\" target=\"_self\">更多</a>\n    <div class=\"more_list\" ne-click=\"moreList($event)\" ne-role=\"more_list\" ne-show=\"{{myState.morechannel}}\">\n    <!-- <a ne-role=\"tab-nav\" href=\"http://tech.163.com/\">科技</a> -->\n    <a href=\"http://sports.163.com/\" ne-role=\"tab-nav\">体育</a>\n    <a href=\"http://ent.163.com/\" ne-role=\"tab-nav\">娱乐</a>\n    <a href=\"http://lady.163.com/\" ne-role=\"tab-nav\">时尚</a>\n    <a href=\"http://auto.163.com/\" ne-role=\"tab-nav\">汽车</a>\n    <a href=\"{{myState.channelhouseurl}}\" ne-role=\"tab-nav\">房产</a>\n    <a href=\"http://news.163.com/air/\" ne-role=\"tab-nav\">航空</a>\n    <a href=\"http://jiankang.163.com/\" ne-role=\"tab-nav\">健康</a>\n    </div>\n    </div>\n    <a class=\"newsdata_prev\" href=\"#prev\" ne-class=\"{{myState.fixedTop ? 'fixed_data_show': ''}}\" ne-click=\"tabPrevFn($event);\" ne-hide=\"{{myState.iPad}}\">\n    <span></span>\n    <div class=\"newsdata_btn_name\">{{myState.preBtnName}}</div>\n    </a>\n    <a class=\"newsdata_next\" href=\"#next\" ne-class=\"{{myState.fixedTop ? 'fixed_data_show': ''}}\" ne-click=\"tabNextFn($event);\" ne-hide=\"{{myState.iPad}}\">\n    <span></span>\n    <div class=\"newsdata_btn_name\">{{myState.nextBtnName}}</div>\n    </a>\n    <ul class=\"newsdata_list\" ne-class=\"{{myState.fixedTop ? 'fixed_bar_padding': ''}} {{myState.bgLoading ? 'bgloading': 'noloading'}}\">\n    <li class=\"newsdata_item\" ne-repeat=\"body in navList\" ne-role=\"tab-body\">\n    <div class=\"ndi_main\" ne-class=\"{{myState.message &gt; 0 ? 'show_message':''}}\">\n    <script ne-repeat=\"newrow in datalist[__i]\" type=\"text/template\">\n                    <%if(newrow.style == \"iframe\"){%>\n                        <div class=\"at_item info_ad_item news_iframe_ad\" adType=\"infoAd\" ne-click=\"adClickTracker(<%=newrow.infoAdIdx%>,'infoAd')\">\n                            <iframe src=\"<%=newrow.iframe[0].link%>\" width=\"<%=newrow.iframe[0].iframewidth || 600 %>\" height=\"<%=newrow.iframe[0].iframeheight || 100 %>\" frameborder=\"0\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe>\n                        </div>\n                    <%}else if(newrow.style == \"docAD\"){%>\n                        <div class=\"at_item info_ad_item news_article clearfix\" adType=\"infoAd\" ne-click=\"adClickTracker(<%=newrow.infoAdIdx%>,'infoAd')\">\n                            <a href=\"<%=newrow.relatedActionLinks[0].url%>\" class=\"na_pic\">\n                                <img src=\"<%=newrow.resources[0].urls[0]%>\" width=\"140\" height=\"88\">\n                            </a>\n                            <div class=\"na_detail clearfix\">\n                                <div class=\"news_title\">\n                                    <h3><strong><a href=\"<%=newrow.relatedActionLinks[0].url%>\"><%=newrow.title%></a>\n                                    </strong></h3>\n                                </div>\n                            </div>\n                            <div class=\"ad_detail clearfix\">\n                                <span class=\"tg_tag\"><%=newrow.source%></span>\n                                <span class=\"keywords\" ne-html=\"<%=newrow.content%>\"></span>\n                            </div>\n                        </div>\n                    <%} else if(newrow.style == \"photosetAD\"){%>\n                        <div class=\"at_item info_ad_item news_photoview clearfix news_ad_photoview\" adType=\"infoAd\" ne-click=\"adClickTracker(<%=newrow.infoAdIdx%>,'infoAd')\">\n                            <div class=\"news_title\">\n                                <h3><strong><a href=\"<%=newrow.relatedActionLinks[0].url%>\"><%=newrow.title%></a></strong></h3>\n                            </div>\n                            <div class=\"np_pic\">\n                                <a href=\"<%=newrow.relatedActionLinks[0].url%>\">\n                                    <span class=\"p_img3\">\n                                        <img src=\"<%=newrow.resources[0].urls[0]%>\" width=\"190\" height=\"120\">\n                                    </span>\n                                    <span class=\"p_img3\">\n                                        <img src=\"<%=newrow.resources[0].urls[1]%>\" width=\"190\" height=\"120\">\n                                    </span>\n                                    <span class=\"p_img3\">\n                                        <img src=\"<%=newrow.resources[0].urls[2]%>\" width=\"190\" height=\"120\" class=\"pic_last\">\n                                    </span>\n                                </a>\n                            </div>\n                            <div class=\"ad_detail clearfix\">\n                                <span class=\"tg_tag\"><%=newrow.source%></span>\n                                <span class=\"keywords\" ne-html=\"<%=newrow.content%>\"></span>\n                            </div>\n                        </div>\n                    <%} else if(newrow.style == \"columsAD\"){%>\n                        <div class=\"at_item info_ad_item news_special clearfix news_ad_special\" adType=\"infoAd\" ne-click=\"adClickTracker(<%=newrow.infoAdIdx%>,'infoAd')\">\n                            <div class=\"news_title\">\n                                <h3><strong><a href=\"<%=newrow.relatedActionLinks[0].url%>\"><%=newrow.title%></a></strong></h3>\n                            </div>\n                            <a href=\"<%=newrow.relatedActionLinks[0].url%>\" class=\"ns_pic\"><img src=\"<%=newrow.resources[0].urls[0]%>\" width=\"600\" height=\"200\"></a>\n                            <div class=\"ad_detail clearfix\">\n                                <span class=\"tg_tag\"><%=newrow.source%></span>\n                                <span class=\"keywords\" ne-html=\"<%=newrow.content%>\"></span>\n                            </div>\n                        </div>\n                    <%} else if(newrow.imgurl && newrow.add1 && newrow.add2 && /\\.jpg$|\\.png$|\\.jpeg$|\\.gif$/.test(newrow.imgurl) && /\\.jpg$|\\.png$|\\.jpeg$|\\.gif$/.test(newrow.add1) && /\\.jpg$|\\.png$|\\.jpeg$|\\.gif$/.test(newrow.add2)){%>\n                        <div class=\"data_row news_photoview clearfix <%if(__i == 0){%>news_first <%}%>\">\n                            <div class=\"news_title\">\n                                <h3><a href=\"<%=newrow.docurl%>\"><%=newrow.title%></a></h3>\n                            </div>\n                            <div class=\"np_pic\">\n                                <a href=\"<%=newrow.docurl%>\">\n                                    <span class=\"p_img3\">\n                                    <%if(newrow.imgurl.indexOf('gif') != -1){%>\n                                    <img src=\"<%=newrow.imgurl%>\" width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\">\n                                    <%} else {%> \n                                    <img src=\"<%=newrow.imgurl%>?imageView&thumbnail=190y120&quality=85\" width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\">\n                                    <%}%> \n                                    </span>\n                                    <span class=\"p_img3\">\n                                    <%if(newrow.add1.indexOf('gif') != -1){%>\n                                    <img src=\"<%=newrow.add1%>\" width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\">\n                                    <%} else {%> \n                                    <img src=\"<%=newrow.add1%>?imageView&thumbnail=190y120&quality=85\" width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/index2016_rmd/images/pic3_error0106.jpg';\">\n                                    <%}%> \n                                    </span>\n                                    <span class=\"p_img3\">\n                                    <%if(newrow.add2.indexOf('gif') != -1){%>\n                                    <img src=\"<%=newrow.add2%>\" width=\"190\" height=\"120\" class=\"pic_last\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\">\n                                    <%} else {%> \n                                    <img src=\"<%=newrow.add2%>?imageView&thumbnail=190y120&quality=85\" width=\"190\" height=\"120\" class=\"pic_last\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\">\n                                    <%}%> \n                                    </span>\n                                </a>\n                            </div>\n                            <div class=\"np_detail clearfix\">\n                                <div class=\"news_tag\">\n                                    <%if(newrow.channelname && newrow.channelname != \"shehui\" && newrow.channelname != \"guonei\" && newrow.channelname != \"guoji\" && newrow.channelname != \"dada\" && newrow.channelname != \"war\" && newrow.channelname != \"hangkong\"){%>\n                                        <%if(newrow.tlastid != \"\"){%>\n                                            <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                        <%}else if(newrow.label != \"\"){%>\n                                            <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                            <em><%=newrow.label%></em></a>\n                                        <%}%> \n                                    <%}%>\n                                    <%if(newrow.keywords.length > 0){%>\n                                        <div class=\"keywords\">\n                                        <%bowlder.each(newrow.keywords,function(k){%>\n                                            <a href=\"<%=k.akey_link%>\"><%=k.keyname%></a>\n                                        <%})%> \n                                        </div>\n                                    <%}%> \n                                    <%if(newrow.time){%>\n                                        <span class=\"time\"><%=formatTime(newrow.time)%></span>\n                                    <%}%> \n                                </div>\n                                <div class=\"share-join clearfix\">\n                                    <%if(newrow.tienum != \"\"){%>\n                                    <a class=\"post_recommend_tie right\" href=\"<%=newrow.commenturl%>\" >\n                                        <div class=\"post_recommend_tie_wrap\">\n                                            <span class=\"post_recommend_tie_icon icons\"><%=newrow.tienum%></span> \n                                            <span class=\"post_recommend_tie_text\"><i>跟贴</i><%=newrow.tienum%></span>\n                                        </div>\n                                    </a>\n                                    <%}%>\n                                    <div class=\"ne-shares-parent right\">\n                                        <span href=\"#share\" title=\"分享\" class=\"ne-shares-arr\"></span>\n                                        <div class=\"share-join-item\" ne-module=\"/modules/shares/shares.js\" ne-state=\"cls.hover:ne-shares-open;title:<%=newrow.title%>;url:<%=newrow.docurl%>;pic:<%=newrow.imgurl%>\" >\n    <div class=\"ne-shares-pop6x1wrap\" ne-role=\"share-wrap\">\n    <ul class=\"ne-shares-pop6x1\">\n        <li>\n            <a ne-click=\"share('yixin')\" href=\"http://yixin.im/#f=www\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-yixin\"></i>\n                    <span class=\"ep-share-name\">易信</span>\n                </span>\n            </a>\n        </li>\n        <li>\n            <a ne-mouseover=\"initWeixin()\" href=\"javascript:\" target=\"_self\" class=\"ne-shares-weixin\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-weixin\"></i>\n                    <span class=\"ep-share-name\">微信</span>\n                </span>\n            </a>\n        </li>\n        <li>\n            <a ne-click=\"share('sina')\" href=\"javascript:\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-sina\"></i>\n                    <span class=\"ep-share-name\">微博</span>\n                </span>\n            </a>\n        </li>\n        <li class=\"last\">\n            <a ne-click=\"share('qzone')\" href=\"javascript:\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-qzone\"></i>\n                    <span class=\"ep-share-name\">QQ空间</span>\n                </span>\n            </a>\n        </li>\n    </ul>\n    </div>\n    <div class=\"ne-shares-qrwrap\">\n      <div class=\"ne-shares-qrarr\"></div>\n      <div ne-role=\"qrcode\" class=\"ne-shares-qrcode\"></div>\n      <p>用微信扫码二维码</p><p>分享至好友和朋友圈</p>\n    </div>\n    </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    <%} else if(newrow.add1 && /\\.jpg$|\\.png$|\\.jpeg$|\\.gif$/.test(newrow.add1)){%>\n                        <div class=\"data_row news_special clearfix <%if(__i == 0){%>news_first <%}%>\">\n                            <div class=\"news_title\">\n                                <h3><a href=\"<%=newrow.docurl%>\"><%=newrow.title%></a></h3>\n                                <%if(newrow.channelname && newrow.channelname != \"shehui\" && newrow.channelname != \"guonei\" && newrow.channelname != \"guoji\" && newrow.channelname != \"dada\" && newrow.channelname != \"war\" && newrow.channelname != \"hangkong\"){%>\n                                    <%if(newrow.tlastid != \"\"){%>\n                                        <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                    <%}else if(newrow.label != \"\"){%>\n                                        <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                        <em><%=newrow.label%></em></a>\n                                    <%}%> \n                                <%}%>\n                            </div>\n                            <a href=\"<%=newrow.docurl%>\" class=\"ns_pic\">\n                                <%if(newrow.add1.indexOf('gif') != -1){%>\n                                <img src=\"<%=newrow.add1%>\" alt=\"<%=newrow.title%>\" width=\"600\" height=\"300\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/special_error0106.jpg';\">\n                                <%} else {%> \n                                <img src=\"<%=newrow.add1%>?imageView&thumbnail=600y300&quality=85\" alt=\"<%=newrow.title%>\" width=\"600\" height=\"300\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/special_error0106.jpg';\">\n                                <%}%> \n                            </a>\n                        </div>\n                    <%} else if(newrow.imgurl && newrow.imgurl != \"\"){%>\n                        <div class=\"data_row news_article clearfix <%if(__i == 0){%>news_first<%}%>\">\n                            <%if(newrow.imgurl != \"\"){%>\n                                <a href=\"<%=newrow.docurl%>\" class=\"na_pic\">\n                                    <%if(newrow.imgurl.indexOf('gif') != -1){%>\n                                    <img src=\"<%=newrow.imgurl%>\" alt=\"<%=newrow.title%>\" width=\"140\" height=\"88\" onerror=\"imgError(this)\">\n                                    <%} else {%> \n                                    <img src=\"<%=newrow.imgurl%>?imageView&thumbnail=140y88&quality=85\" alt=\"<%=newrow.title%>\" width=\"140\" height=\"88\" onerror=\"imgError(this)\">\n                                    <%}%> \n                                </a>\n                            <%}%> \n                            <div class=\"na_detail clearfix <%if(newrow.imgurl == \"\"){%>no_pic<%}%>\">\n                                <div class=\"news_title\">\n                                    <h3><a href=\"<%=newrow.docurl%>\"><%=newrow.title%></a></h3>\n                                </div>\n                                <div class=\"news_tag\">\n                                    <%if(newrow.channelname && newrow.channelname != \"shehui\" && newrow.channelname != \"guonei\" && newrow.channelname != \"guoji\" && newrow.channelname != \"dada\" && newrow.channelname != \"war\" && newrow.channelname != \"hangkong\"){%>\n                                        <%if(newrow.tlastid != \"\"){%>\n                                            <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                        <%}else if(newrow.label != \"\"){%>\n                                            <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                            <em><%=newrow.label%></em></a>\n                                        <%}%> \n                                    <%}%>\n                                    <%if(newrow.keywords && newrow.keywords.length > 0){%>\n                                        <div class=\"keywords\">\n                                        <%bowlder.each(newrow.keywords,function(k){%>\n                                            <a href=\"<%=k.akey_link%>\"><%=k.keyname%></a>\n                                        <%})%> \n                                        </div>\n                                    <%}%> \n                                    <%if(newrow.time){%>\n                                        <span class=\"time\"><%=formatTime(newrow.time)%></span>\n                                    <%}%> \n                                </div>\n                                <div class=\"share-join clearfix\">\n                                    <a class=\"post_recommend_tie right\" href=\"<%=newrow.commenturl%>\" >\n                                        <div class=\"post_recommend_tie_wrap\">\n                                            <span class=\"post_recommend_tie_icon icons\"><%=newrow.tienum ? newrow.tienum : 0%></span> \n                                            <span class=\"post_recommend_tie_text\"><i>跟贴</i><%=newrow.tienum%></span>\n                                        </div>\n                                    </a>\n                                    <div class=\"ne-shares-parent right\">\n                                        <span href=\"#share\" title=\"分享\" class=\"ne-shares-arr\"></span>\n                                        <div class=\"share-join-item\" ne-module=\"/modules/shares/shares.js\" ne-state=\"cls.hover:ne-shares-open;title:<%=newrow.title%>;url:<%=newrow.docurl%>;pic:<%=newrow.imgurl%>\" >\n    <div class=\"ne-shares-pop6x1wrap\" ne-role=\"share-wrap\">\n    <ul class=\"ne-shares-pop6x1\">\n        <li>\n            <a ne-click=\"share('yixin')\" href=\"http://yixin.im/#f=www\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-yixin\"></i>\n                    <span class=\"ep-share-name\">易信</span>\n                </span>\n            </a>\n        </li>\n        <li>\n            <a ne-mouseover=\"initWeixin()\" href=\"javascript:\" target=\"_self\" class=\"ne-shares-weixin\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-weixin\"></i>\n                    <span class=\"ep-share-name\">微信</span>\n                </span>\n            </a>\n        </li>\n        <li>\n            <a ne-click=\"share('sina')\" href=\"javascript:\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-sina\"></i>\n                    <span class=\"ep-share-name\">微博</span>\n                </span>\n            </a>\n        </li>\n        <li class=\"last\">\n            <a ne-click=\"share('qzone')\" href=\"javascript:\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-qzone\"></i>\n                    <span class=\"ep-share-name\">QQ空间</span>\n                </span>\n            </a>\n        </li>\n    </ul>\n    </div>\n    <div class=\"ne-shares-qrwrap\">\n      <div class=\"ne-shares-qrarr\"></div>\n      <div ne-role=\"qrcode\" class=\"ne-shares-qrcode\"></div>\n      <p>用微信扫码二维码</p><p>分享至好友和朋友圈</p>\n    </div>\n    </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    <%} else if(newrow.pics3 && newrow.pics3.length >= 3){%>\n                        <div class=\"data_row news_photoview clearfix <%if(__i == 0){%>news_first <%}%>\">\n                            <div class=\"news_title\">\n                                <h3><a href=\"<%=newrow.docurl%>\"><%=newrow.title%></a></h3>\n                            </div>\n                            <div class=\"np_pic\">\n                                <a href=\"<%=newrow.docurl%>\">\n                                    <%bowlder.each(newrow.pics3,function(n){%>\n                                        <span class=\"p_img3\">\n                                        <img src=\"<%=n.pic%>\" width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\">\n                                        </span>\n                                    <%})%> \n                                </a>\n                            </div>\n                            <div class=\"np_detail clearfix\">\n                                <div class=\"news_tag\">\n                                    <%if(newrow.channelname && newrow.channelname != \"shehui\" && newrow.channelname != \"guonei\" && newrow.channelname != \"guoji\" && newrow.channelname != \"dada\" && newrow.channelname != \"war\" && newrow.channelname != \"hangkong\"){%>\n                                        <%if(newrow.tlastid != \"\"){%>\n                                            <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                        <%}else if(newrow.label != \"\"){%>\n                                            <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                            <em><%=newrow.label%></em></a>\n                                        <%}%> \n                                    <%}%>\n                                    <%if(newrow.keywords && newrow.keywords.length > 0){%>\n                                        <div class=\"keywords\">\n                                        <%bowlder.each(newrow.keywords,function(k){%>\n                                            <a href=\"<%=k.akey_link%>\"><%=k.keyname%></a>\n                                        <%})%> \n                                        </div>\n                                    <%}%> \n                                    <%if(newrow.time){%>\n                                        <span class=\"time\"><%=formatTime(newrow.time)%></span>\n                                    <%}%> \n                                </div>\n                                <div class=\"share-join clearfix\">\n                                    <a class=\"post_recommend_tie right\" href=\"<%=newrow.commenturl%>\" >\n                                        <div class=\"post_recommend_tie_wrap\">\n                                            <span class=\"post_recommend_tie_icon icons\"><%=newrow.tienum%></span> \n                                            <span class=\"post_recommend_tie_text\"><i>跟贴</i><%=newrow.tienum%></span>\n                                        </div>\n                                    </a>\n                                    <div class=\"ne-shares-parent right\">\n                                        <span href=\"#share\" title=\"分享\" class=\"ne-shares-arr\"></span>\n                                        <div class=\"share-join-item\" ne-module=\"/modules/shares/shares.js\" ne-state=\"cls.hover:ne-shares-open;title:<%=newrow.title%>;url:<%=newrow.docurl%>;pic:<%=newrow.imgurl%>\" >\n    <div class=\"ne-shares-pop6x1wrap\" ne-role=\"share-wrap\">\n    <ul class=\"ne-shares-pop6x1\">\n        <li>\n            <a ne-click=\"share('yixin')\" href=\"http://yixin.im/#f=www\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-yixin\"></i>\n                    <span class=\"ep-share-name\">易信</span>\n                </span>\n            </a>\n        </li>\n        <li>\n            <a ne-mouseover=\"initWeixin()\" href=\"javascript:\" target=\"_self\" class=\"ne-shares-weixin\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-weixin\"></i>\n                    <span class=\"ep-share-name\">微信</span>\n                </span>\n            </a>\n        </li>\n        <li>\n            <a ne-click=\"share('sina')\" href=\"javascript:\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-sina\"></i>\n                    <span class=\"ep-share-name\">微博</span>\n                </span>\n            </a>\n        </li>\n        <li class=\"last\">\n            <a ne-click=\"share('qzone')\" href=\"javascript:\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-qzone\"></i>\n                    <span class=\"ep-share-name\">QQ空间</span>\n                </span>\n            </a>\n        </li>\n    </ul>\n    </div>\n    <div class=\"ne-shares-qrwrap\">\n      <div class=\"ne-shares-qrarr\"></div>\n      <div ne-role=\"qrcode\" class=\"ne-shares-qrcode\"></div>\n      <p>用微信扫码二维码</p><p>分享至好友和朋友圈</p>\n    </div>\n    </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    <%} else {%>\n                        <div class=\"data_row news_article clearfix <%if(__i == 0){%>news_first<%}%>\" i={{__i}}>\n                            <div class=\"na_detail clearfix no_pic\">\n                                <div class=\"news_title\">\n                                    <h3><a href=\"<%=newrow.docurl%>\"><%=newrow.title%></a></h3>\n                                </div>\n                                <div class=\"news_tag\">\n                                    <%if(newrow.channelname && newrow.channelname != \"shehui\" && newrow.channelname != \"guonei\" && newrow.channelname != \"guoji\" && newrow.channelname != \"dada\" && newrow.channelname != \"war\" && newrow.channelname != \"hangkong\"){%>\n                                        <%if(newrow.tlastid != \"\"){%>\n                                            <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                        <%}else if(newrow.label != \"\"){%>\n                                            <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                            <em><%=newrow.label%></em></a>\n                                        <%}%> \n                                    <%}%>\n                                    <%if(newrow.keywords && newrow.keywords.length > 0){%>\n                                        <div class=\"keywords\">\n                                        <%bowlder.each(newrow.keywords,function(k){%>\n                                            <a href=\"<%=k.akey_link%>\"><%=k.keyname%></a>\n                                        <%})%> \n                                        </div>\n                                    <%}%> \n                                    <%if(newrow.time){%>\n                                        <span class=\"time\"><%=formatTime(newrow.time)%></span>\n                                    <%}%> \n                                </div>\n                                <div class=\"share-join clearfix\">\n                                    <a class=\"post_recommend_tie right\" href=\"<%=newrow.commenturl%>\" >\n                                        <div class=\"post_recommend_tie_wrap\">\n                                            <span class=\"post_recommend_tie_icon icons\"><%=newrow.tienum ? newrow.tienum : 0%></span> \n                                            <span class=\"post_recommend_tie_text\"><i>跟贴</i><%=newrow.tienum%></span>\n                                        </div>\n                                    </a>\n                                    <div class=\"ne-shares-parent right\">\n                                        <span href=\"#share\" title=\"分享\" class=\"ne-shares-arr\"></span>\n                                        <div class=\"share-join-item\" ne-module=\"/modules/shares/shares.js\" ne-state=\"cls.hover:ne-shares-open;title:<%=newrow.title%>;url:<%=newrow.docurl%>;pic:<%=newrow.imgurl%>\" >\n    <div class=\"ne-shares-pop6x1wrap\" ne-role=\"share-wrap\">\n    <ul class=\"ne-shares-pop6x1\">\n        <li>\n            <a ne-click=\"share('yixin')\" href=\"http://yixin.im/#f=www\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-yixin\"></i>\n                    <span class=\"ep-share-name\">易信</span>\n                </span>\n            </a>\n        </li>\n        <li>\n            <a ne-mouseover=\"initWeixin()\" href=\"javascript:\" target=\"_self\" class=\"ne-shares-weixin\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-weixin\"></i>\n                    <span class=\"ep-share-name\">微信</span>\n                </span>\n            </a>\n        </li>\n        <li>\n            <a ne-click=\"share('sina')\" href=\"javascript:\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-sina\"></i>\n                    <span class=\"ep-share-name\">微博</span>\n                </span>\n            </a>\n        </li>\n        <li class=\"last\">\n            <a ne-click=\"share('qzone')\" href=\"javascript:\">\n                <span class=\"inner\">\n                    <i class=\"ep-share-icon ep-share-qzone\"></i>\n                    <span class=\"ep-share-name\">QQ空间</span>\n                </span>\n            </a>\n        </li>\n    </ul>\n    </div>\n    <div class=\"ne-shares-qrwrap\">\n      <div class=\"ne-shares-qrarr\"></div>\n      <div ne-role=\"qrcode\" class=\"ne-shares-qrcode\"></div>\n      <p>用微信扫码二维码</p><p>分享至好友和朋友圈</p>\n    </div>\n    </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    <%}%>\n                    </script>\n    </div>\n    </li>\n    </ul>\n    <div class=\"load_more_foot\" id=\"load_more_foot\"></div>\n    <a class=\"load_more_btn\" ne-click=\"clickLoadMore();\" ne-hide=\"{{myState.counter &gt;= navList[myState.ndNavIndex].totalPage || myState.counter == 0}}\" target=\"_self\">\n    <div class=\"post_addmore\" ne-visible=\"{{myState.counter &lt; navList[myState.ndNavIndex].totalPage &amp;&amp; !myState.loading}}\">\n    <i>+</i>\n    <span>加载更多</span>\n    </div>\n    <div class=\"post_adding\" ne-show=\"{{myState.loading}}\">\n    <i>+</i>\n    <span>加载中...</span>\n    </div>\n    </a>\n    <div class=\"load_more_tip\" ne-show=\"{{myState.counter &gt;= navList[myState.ndNavIndex].totalPage}}\">:-)已经到最后啦~</div>\n    </div>\n    </div>\n    <!-- 信息流 结束 -->\n    </div>\n    <!-- 中间新闻 结束 -->\n    <!-- 右侧栏目 开始 -->\n    <div class=\"main_right_channel\">\n    <!-- 广告 -->\n    <!-- 300*30 -->\n    <!-- 新闻首页焦点图上方L特殊标识广告 开始-->\n    <!-- <div class=\"mod_newsr_ad1\">\n    <a href=\"http://g.163.com/a?CID=45744&Values=2901173312&Redirect=http://clickc.admaster.com.cn/c/a73960,b1279435,c369,i0,m101,8a1,8b2,h\"><img class=\"block mb10\" width=\"300\" height=\"30\" src=\"http://img1.126.net/channel11/024018300301009.jpg\" alt=\"广告\"></a>\n    </div> -->\n    <!--新闻首页焦点图上方L特殊标识广告 结束-->\n    <!-- 焦点图 开始-->\n    <div class=\"mod_right_focus\">\n    <div ne-module=\"\">\n    <div class=\"mod_focus\" ne-module=\"/modules/slide/slide.js\" ne-state=\"slideMethod:left;events=mouseover;interval=4000;loop=true;\">\n    <div class=\"f_body\" ne-role=\"slide-body\">\n    <ul class=\"f_main clearfix\" ne-role=\"slide-scroll\">\n    <li ne-role=\"slide-page\">\n    <a href=\"http://g.163.com/a?CID=68685&amp;Values=1366894002&amp;Redirect=http://clk.gentags.net/clk/iv-10648/st-31/cr-2/oi-1303641/or-7535/adv-158/pcon-0/https%253A%252F%252Fent.163.com%252F19%252F0625%252F16%252FEIHG8HLF000398QL.html\">\n    <img height=\"400\" src=\"http://nimg.ws.126.net/?url=https://yt-adp.ws.126.net/channel21/037408_300400_axry_20190626.jpg&amp;thumbnail=300x2147483647&amp;quality=75&amp;type=jpg\" width=\"300\"/>\n    <span class=\"bg\"></span>\n    <h3>三金西瓜霜独家冠名网易封面故事</h3>\n    </a>\n    </li>\n    <li ne-role=\"slide-page\">\n    <a href=\"http://news.163.com/photoview/00AP0001/2302561.html\">\n    <img height=\"400\" src=\"https://cms-bucket.ws.126.net/2019/06/28/e5b070c1f96349b0829da88b41105903.jpeg?imageView&amp;thumbnail=300y400\" width=\"300\"/>\n    <span class=\"bg\"></span>\n    <h3>浒苔绿潮开始在山东沿海登陆</h3>\n    </a>\n    </li>\n    <li ne-role=\"slide-page\">\n    <a href=\"http://news.163.com/photoview/00AP0001/2302559.html\">\n    <img height=\"400\" src=\"https://cms-bucket.ws.126.net/2019/06/28/2792654fe66f4985879a8cc30a89a6cc.jpeg?imageView&amp;thumbnail=300y400\" width=\"300\"/>\n    <span class=\"bg\"></span>\n    <h3>广西南宁抓获涉传人员286名</h3>\n    </a>\n    </li>\n    <li ne-role=\"slide-page\">\n    <a href=\"http://news.163.com/photoview/00AO0001/2302560.html\">\n    <img height=\"400\" src=\"https://cms-bucket.ws.126.net/2019/06/28/202e20527525474cac861ba7e56a2dde.jpeg?imageView&amp;thumbnail=300y400\" width=\"300\"/>\n    <span class=\"bg\"></span>\n    <h3>民主党初选辩论次日:拜登现身</h3>\n    </a>\n    </li>\n    </ul>\n    </div>\n    <div class=\"f_title\">\n    <span class=\"current\" ne-role=\"slide-nav\">1</span>\n    <span class=\"\" ne-role=\"slide-nav\">2</span>\n    <span class=\"\" ne-role=\"slide-nav\">3</span>\n    <span class=\"\" ne-role=\"slide-nav\">4</span>\n    </div>\n    <a class=\"f_prev\" ne-role=\"slide-prev\">&lt;</a>\n    <a class=\"f_next\" ne-role=\"slide-next\">&gt;</a>\n    </div>\n    </div>\n    </div>\n    <!-- 焦点图 结束-->\n    <!-- 广告 开始-->\n    <div class=\"mod_ad_toutu channel_relative_2016\">\n    <ul class=\"clearfix\">\n    <li><a href=\"http://baoxian.163.com/activity/act1605/index.html?from=mhds1605\">免费领取iPhone6s</a></li>\n    <li><a href=\"http://mall.163.com/mobile/fill.jsp?from=wwwtext\">手机费快充超低折扣</a></li>\n    <li><a href=\"http://baoxian.163.com/car/activitylist.html?from=mhdstbl\">免费送现金红包！</a></li>\n    <li><a href=\"http://piao.163.com/movie/47080.html?from=newsword\">镜中多奇境依旧爱丽丝</a></li>\n    </ul>\n    <span class=\"channel_ad_text_2016\">广告</span>\n    </div>\n    <!-- 广告 结束-->\n    <!-- 右侧960原创栏目 开始 -->\n    <div class=\"origina_column_960\" id=\"js_origina_column_960\">\n    <div ne-module=\"/news/index2016_rmd/modules/originacolumn/originacolumn.js\">\n    <div class=\"origina_column_warp\">\n    <h2>\n    <span>新闻各有态度</span>\n    </h2>\n    <div class=\"scroll_bd\" ne-role=\"scroll_bd\">\n    <div class=\"scroll_column_bd\">\n    <ul class=\"scroll_ul\">\n    <!-- 回声 开始 -->\n    <!-- 回声 结束 -->\n    <!-- 数读 开始 -->\n    <li class=\"cell cell_sd cell_hover\">\n    <p class=\"tag_line\">\n    <a class=\"tags tag_sd\" href=\"http://data.163.com/special/datablog/\">数读</a>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://data.163.com/19/0626/14/EIJQJG9L000181IU.html\" ne-role=\"detail\">\n    <h3>\n                                    中国哪里的地铁最拥挤？\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"中国哪里的地铁最拥挤？\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/26/30e8760df3044e29a18fac3514dd22b1.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://data.163.com/19/0625/11/EIH0CQEK00019GOE.html\">娶一个潮汕老婆到底是什么体验</a></li>\n    <li class=\"twoli\"><a href=\"http://data.163.com/19/0621/17/EI7BLS3600019GOE.html\">不瞒你说，成都早餐好吃到爆</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 数读 结束 -->\n    <!-- 人间 开始 -->\n    <li class=\"cell cell_rj\">\n    <p class=\"tag_line\">\n    <a class=\"tags tag_rj\" href=\"http://renjian.163.com/\">人间</a>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://renjian.163.com/19/0628/14/EIP21K41000181RV.html\" ne-role=\"detail\">\n    <h3>\n                                    小白作者的变现之路\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"小白作者的变现之路\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/27f33fcbfcec4b42b6837807b7a0883f.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://renjian.163.com/19/0627/16/EIML2HJO000181RV.html\">被毒虫男友拖下水的女大学生</a></li>\n    <li class=\"twoli\"><a href=\"http://renjian.163.com/19/0626/13/EIJPJMCH000181RV.html\">领导，求你让我加班吧</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 人间 结束 -->\n    <!-- 大国小民 开始 -->\n    <li class=\"cell cell_dgxm\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_dgxm\">大国小民</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://renjian.163.com/19/0624/14/EIEOBNCB000181RK.html\" ne-role=\"detail\">\n    <h3>\n                                    当不了官发不了财的读书人\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"当不了官发不了财的读书人\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/24/b77e119ffeca477fa4bd2144b1fcb86c.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://renjian.163.com/19/0620/16/EI4JRNO7000181RK.html\">四个博士，一地鸡毛</a></li>\n    <li class=\"twoli\"><a href=\"http://renjian.163.com/19/0618/12/EHV0QRVG000181RK.html\">医闹得逞后，伤害的到底是谁</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 大国小民 结束 -->\n    <!-- 三三有梗 开始 -->\n    <li class=\"cell cell_dada\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_dada\">三三有梗</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://news.163.com/19/0627/11/EIM57O490001885B.html\" ne-role=\"detail\">\n    <h3>\n                                    据说99%的人在图书馆一定会碰上......\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"据说99%的人在图书馆一定会碰上......\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/27/06eb8f4a3d4647bf9360ff5e71f003b8.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://news.163.com/19/0626/15/EIK0IJT40001885B.html\">我可能，得了种，前任病</a></li>\n    <li class=\"twoli\"><a href=\"https://news.163.com/19/0617/09/EHS57H4L0001885B.html\">那些KO不掉我的,最终成了我的OK</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 三三有梗 结束 -->\n    <!-- 三三映画 开始 -->\n    <!-- 三三映画 结束 -->\n    <!-- 我去1990 开始 -->\n    <li class=\"cell cell_wq1990\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_wq1990\">我去1990</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://news.163.com/19/0628/11/EIOL94760001885B.html\" ne-role=\"detail\">\n    <h3>\n                                    直男幼稚行为大赏\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"直男幼稚行为大赏\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/0b3890cd2f4b473fa0127b5e33ae6ccf.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://news.163.com/19/0624/12/EIEFGMVL0001885B.html\">打个赌，爱情友情你分不清楚</a></li>\n    <li class=\"twoli\"><a href=\"https://news.163.com/19/0621/12/EI6NKDTU0001885B.html\">不会唱歌的人进 KTV 以后有多惨</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 我去1990 结束 -->\n    <!-- 轻松一刻 开始 -->\n    <li class=\"cell cell_qsyk\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_qsyk\">轻松一刻</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://news.163.com/19/0628/19/EIPIQT4O000181BR.html\" ne-role=\"detail\">\n    <h3>\n                                    彩票一直都不中，我却忍不住要买\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"彩票一直都不中，我却忍不住要买\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/f44265c5b4ef4a11a99eedbde7c49833.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://news.163.com/19/0627/17/EIMPGJAU000181BR.html\">原来\"神仙眷侣\"离婚,也是一地鸡毛</a></li>\n    <li class=\"twoli\"><a href=\"https://news.163.com/19/0626/18/EIK95RV0000181BR.html\">我宣布，北大清华这对CP锁死了！</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 轻松一刻 结束 -->\n    <!-- 槽值 开始 -->\n    <li class=\"cell cell_caozhi\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_caozhi\">槽值</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://caozhi.news.163.com/19/0623/22/EID0CBIH000181TI.html\" ne-role=\"detail\">\n    <h3>\n                                    佟丽娅，这次你赢了\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"佟丽娅，这次你赢了\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/23/67d24242d479451ea705e26296187f78.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://caozhi.news.163.com/19/0623/15/EIC9LGSP000181TI.html\">千万别在深夜点开这神作</a></li>\n    <li class=\"twoli\"><a href=\"http://caozhi.news.163.com/19/0618/19/EHVRID7G000181TI.html\">那个发“嗯”的人，已被踢出群聊</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 槽值 结束 -->\n    <!-- 谈心社 开始 -->\n    <li class=\"cell cell_tanxinshe\">\n    <p class=\"tag_line\">\n    <span class=\"tags tag_tanxinshe\">谈心社</span>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://news.163.com/19/0628/17/EIPCOKEA0001982T.html\" ne-role=\"detail\">\n    <h3>\n                                    王宝强母亲去世：来日方长是人生的错觉\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"王宝强母亲去世：来日方长是人生的错觉\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/ecd0de8b8dc0402da72d814bde76f06e.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://news.163.com/19/0627/13/EIMC0EDH0001982T.html\">宋仲基宋慧乔离婚：再美的爱情也会过期</a></li>\n    <li class=\"twoli\"><a href=\"https://news.163.com/19/0626/17/EIK6AD550001982T.html\">杨紫冰箱藏药，戳穿最怂瞬间</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 谈心社 结束 -->\n    <!-- 看客 开始 -->\n    <li class=\"cell cell_kanke\">\n    <p class=\"tag_line\">\n    <a class=\"tags tag_kanke\" href=\"http://renjian.163.com/special/renjian_kanke/\">看客</a>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"http://renjian.163.com/19/0628/11/EIOMK185000199ET.html\" ne-role=\"detail\">\n    <h3>\n                                    我奶茶都戒了，日本人才知道它的好\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"我奶茶都戒了，日本人才知道它的好\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/f35eceb8d111496693e8f77a71a49cba.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"http://renjian.163.com/19/0620/11/EI43PM8Q000199ET.html\">美国堕胎残酷物语</a></li>\n    <li class=\"twoli\"><a href=\"http://renjian.163.com/19/0613/11/EHI39FML000199ET.html\">跑腿小哥提供的十万种服务</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 看客 结束 -->\n    <!-- 身体密码 开始 -->\n    <li class=\"cell cell_stpwd\">\n    <p class=\"tag_line\">\n    <a class=\"tags tag_stpwd\" href=\"http://jiankang.163.com/special/zhutierji/?type=3\">身体密码</a>\n    </p>\n    <div class=\"column_main\">\n    <a class=\"detail\" href=\"https://jiankang.163.com/19/0625/11/EIH061CM0038804G.html\" ne-role=\"detail\">\n    <h3>\n                                    防晒，99%的人都做错了……\n                                </h3>\n    <div class=\"photo\">\n    <img alt=\"防晒，99%的人都做错了……\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/25/f260b6843fca4702bb5e4e316600f113.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n    </div>\n    </a>\n    <ul>\n    <li class=\"\"><a href=\"https://jiankang.163.com/19/0617/14/EHSN7PPV0038804G.html\">当代人减肥：迈不过25岁这道坎</a></li>\n    <li class=\"twoli\"><a href=\"https://jiankang.163.com/19/0608/15/EH5J9IGA00388AD5.html\">多年后 无数中年人仍会被高考吓醒</a></li>\n    </ul>\n    </div>\n    </li>\n    <!-- 身体密码 结束 -->\n    <!-- 哒哒 开始 -->\n    <!-- 哒哒 结束 -->\n    </ul>\n    </div>\n    <div id=\"js_baseline\"></div>\n    <span class=\"white_bg\" id=\"js_white_bg\"></span>\n    </div>\n    </div>\n    </div>\n    </div>\n    <!-- 右侧960原创栏目 结束 -->\n    <div class=\"mt12 mod_ad_1 mod_ad_r\">\n    <!-- 300*250 -->\n    <div adtype=\"rightAd\" class=\"at_item right_ad_item\" requesturl=\"https://nex.163.com/q?app=7BE0FC82&amp;c=news&amp;l=31&amp;site=netease&amp;affiliate=news&amp;cat=homepage&amp;type=logo300x250&amp;location=1\"></div>\n    <a class=\"ad_hover_href\" href=\"javascript:;\" target=\"_self\"></a>\n    </div>\n    <!-- 新闻策划 开始 -->\n    <div class=\"mt35 mod_pageh5\">\n    <div ne-module=\"/news/index2016_rmd/modules/modh5/modh5.js\">\n    <div class=\"idx_cm_title\">\n    <a class=\"title\" href=\"https://open.163.com/\">网易公开课</a>\n    </div>\n    <div class=\"wrap\" ne-module=\"/modules/slide/slide.js\" ne-state=\"slideMethod:left;events=mouseover;interval=4000;loop=true;\">\n    <div class=\"h5_bg h5_border\">\n    <div class=\"h5_body\" ne-role=\"slide-body\">\n    <div class=\"h5_main clearfix\" ne-role=\"slide-scroll\">\n    <div class=\"h5_item\" ne-role=\"slide-page\">\n    <div class=\"h5_item_poster\">\n    <a href=\"https://vip.open.163.com/courses/2698?p=xs_yt01\">\n    <img height=\"436\" src=\"https://cms-bucket.ws.126.net/2019/06/26/b2ef8c1d0fed49078cb104f94c9f253e.jpeg\" width=\"280\"/>\n    <span class=\"bg\"></span>\n    <h3>他凭什么甩开同龄人，做职场前5%？</h3>\n    </a>\n    </div>\n    </div>\n    <div class=\"h5_item\" ne-role=\"slide-page\">\n    <div class=\"h5_item_poster\">\n    <a href=\"https://vip.open.163.com/courses/2249?p=xs_yt02\">\n    <img height=\"436\" src=\"https://cms-bucket.ws.126.net/2019/06/27/ffa8db82492446c88efe2d540ed64d6a.jpeg\" width=\"280\"/>\n    <span class=\"bg\"></span>\n    <h3>一个人成熟的标志：与负面情绪和解</h3>\n    </a>\n    </div>\n    </div>\n    <div class=\"h5_item\" ne-role=\"slide-page\">\n    <div class=\"h5_item_poster\">\n    <a href=\"https://vip.open.163.com/courses/1078?p=xs_yt03\">\n    <img height=\"436\" src=\"https://cms-bucket.ws.126.net/2019/06/26/893a6ecab816408cb5971de6ec236dde.jpeg\" width=\"280\"/>\n    <span class=\"bg\"></span>\n    <h3>情商高的人，走到哪儿都大受欢迎</h3>\n    </a>\n    </div>\n    </div>\n    <div class=\"h5_item\" ne-role=\"slide-page\">\n    <div class=\"h5_item_poster\">\n    <a href=\"https://vip.open.163.com/courses/2019?p=xs_yt04\">\n    <img height=\"436\" src=\"https://cms-bucket.ws.126.net/2019/06/26/f48048d211e44c889e241e545b29a000.jpeg\" width=\"280\"/>\n    <span class=\"bg\"></span>\n    <h3>每天5分钟，告别办公室综合症</h3>\n    </a>\n    </div>\n    </div>\n    </div>\n    <span class=\"ad_hover_pic\">广告</span>\n    </div>\n    <!-- <div class=\"scrollbtn scrollbtl\" ne-role=\"scrollbtn\"><a ne-role=\"slide-prev\" class=\"f_prev\">&lt;</a></div>\n    \t\t<div class=\"scrollbtn scrollbtnr\" ne-role=\"scrollbtn\"><a ne-role=\"slide-next\" class=\"f_next\">&gt;</a></div> -->\n    <div class=\"nav clearfix\">\n    <span ne-repeat=\"1..state.total\" ne-role=\"slide-nav\"></span>\n    </div>\n    </div>\n    <!-- <div class=\"nav clearfix\">\n    \t\t<span ne-role=\"slide-nav\" ne-repeat=\"1..state.total\"></span>\n    \t</div> -->\n    </div></div>\n    </div>\n    <!-- 新闻策划 结束 -->\n    <!-- 新闻专题 开始 -->\n    <div class=\"mt30 mod_news_special\">\n    <div class=\"idx_cm_title\">\n    <h2 class=\"title\"><a href=\"http://news.163.com/special/\">新闻专题</a></h2>\n    </div>\n    <div class=\"bd\">\n    <div class=\"photo\">\n    <a href=\"http://news.163.com/special/2019qglh/\">\n    <img alt=\"2019年全国两会\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/03/07/c8134391d38245dc849b99fbf1ce33b0.png?imageView&amp;thumbnail=300y90\" width=\"300\"/>\n    </a>\n    </div>\n    <h3>\n    <span>HOT</span>\n    <strong><a href=\"http://news.163.com/special/2019qglh/\">2019年全国两会</a></strong>\n    </h3>\n    <ul class=\"idx_cm_list\">\n    <li>\n    <a href=\"http://news.163.com/special/zghj70/\">海军成立70周年</a>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/special/chunyun_2019/\">2019年春运春节</a>\n    </li>\n    <li>\n    <a href=\"http://news.163.com/special/chang_e4/\">嫦娥四号登月</a>\n    </li>\n    <li>\n    <a href=\"http://cms-bucket.ws.126.net/2019/06/26/080a0e9f8b014dd5b261f9e988f7f7f9.jpeg\">声明</a>\n    </li>\n    </ul>\n    </div>\n    </div>\n    <!-- 新闻专题 结束 -->\n    <!-- 高层动态 开始-->\n    <div class=\"mt27 mod_high_dynamic\">\n    <div class=\"idx_cm_title\">\n    <h2 class=\"title\"><a href=\"http://news.163.com/special/00011269/gdmore.html\">高层动态</a></h2>\n    </div>\n    <ul class=\"idx_cm_list idx_cm_list_h\">\n    <li>\n    <a href=\"https://news.163.com/19/0628/11/EIOL0214000189FH.html\">习近平会见联合国秘书长古特雷斯</a>\n    </li>\n    <li>\n    <a href=\"https://news.163.com/19/0620/14/EI4ESVV9000189FH.html\">习近平抵达平壤 开始对朝鲜进行国事访问</a>\n    </li>\n    </ul>\n    </div>\n    <!-- 高层动态 结束-->\n    <div class=\"mt25 mod_ad_2 mod_ad_r\">\n    <!-- 300*250 -->\n    <div adtype=\"rightAd\" class=\"at_item right_ad_item\" requesturl=\"https://nex.163.com/q?app=7BE0FC82&amp;c=news&amp;l=32&amp;site=netease&amp;affiliate=news&amp;cat=homepage&amp;type=logo300x250&amp;location=2\"></div>\n    <a class=\"ad_hover_href\" href=\"javascript:;\" target=\"_self\"></a>\n    </div>\n    <!-- 军事 航空  开始 -->\n    <div class=\"mt35 mod_war\">\n    <div class=\"idx_cm_title\">\n    <h2 class=\"title\">\n    <a href=\"http://war.163.com/\">军事</a>\n    <i>・</i>\n    <a href=\"http://news.163.com/air/\">航空</a>\n    </h2>\n    </div>\n    <div class=\"idx_cm_img\">\n    <a href=\"http://war.163.com/photoview/4T8E0001/2301528.html\">\n    </a></div></div></div></div></div></div></div></div></body></html>\n\n\n\n```python\nsamples = soup.find_all(\"a\")\nsamples\n```\n\n\n\n\n    [<a class=\"ntes-nav-index-title ntes-nav-entry-wide c-fl\" href=\"http://www.163.com/\" title=\"网易首页\">网易首页</a>,\n     <a class=\"ntes-nav-select-title ntes-nav-entry-bgblack JS_NTES_LOG_FE\" href=\"http://www.163.com/#f=topnav\">应用\n                 <em class=\"ntes-nav-select-arr\"></em>\n     </a>,\n     <a href=\"http://m.163.com/newsapp/#f=topnav\">\n     <span>\n     <em class=\"ntes-nav-app-newsapp\">网易新闻</em>\n     </span>\n     </a>,\n     <a href=\"http://open.163.com/#f=topnav\">\n     <span>\n     <em class=\"ntes-nav-app-open\">网易公开课</em>\n     </span>\n     </a>,\n     <a href=\"https://hongcai.163.com/?from=pcsy-button\">\n     <span>\n     <em class=\"ntes-nav-app-hongcai\">网易红彩</em>\n     </span>\n     </a>,\n     <a href=\"http://u.163.com/aosoutbdbd8\">\n     <span>\n     <em class=\"ntes-nav-app-yanxuan\">网易严选</em>\n     </span>\n     </a>,\n     <a href=\"http://mail.163.com/client/dl.html?from=mail46\">\n     <span>\n     <em class=\"ntes-nav-app-mail\">邮箱大师</em>\n     </span>\n     </a>,\n     <a href=\"http://study.163.com/client/download.htm?from=163app&amp;utm_source=163.com&amp;utm_medium=web_app&amp;utm_campaign=business\">\n     <span>\n     <em class=\"ntes-nav-app-study\">网易云课堂</em>\n     </span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece47f92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=6b69bfbfac0db5f335232faa957a27bb&amp;target=https%3A%2F%2Fapp.kaola.com%2F%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>\n     <em class=\"ntes-nav-app-kaola-hg\">网易考拉</em>\n     </span>\n     </a>,\n     <a class=\"ntes-nav-quick-navigation-btn\" href=\"javascript:void(0);\" id=\"js_N_ntes_nav_quick_navigation_btn\" target=\"_self\">\n     <em>快速导航\n                   <span class=\"menu1\"></span>\n     <span class=\"menu2\"></span>\n     <span class=\"menu3\"></span>\n     </em>\n     </a>,\n     <a href=\"https://news.163.com\">新闻</a>,\n     <a href=\"http://news.163.com/domestic\">国内</a>,\n     <a href=\"http://news.163.com/world\">国际</a>,\n     <a href=\"http://news.163.com/photo\">图片</a>,\n     <a href=\"http://view.163.com\">评论</a>,\n     <a href=\"http://discovery.163.com\">探索</a>,\n     <a href=\"http://war.163.com\">军事</a>,\n     <a href=\"http://news.163.com/localnews/\">本地新闻</a>,\n     <a href=\"http://news.163.com/special/wangsansanhome/\">王三三</a>,\n     <a href=\"http://sports.163.com\">体育</a>,\n     <a href=\"http://sports.163.com/nba\">NBA</a>,\n     <a href=\"http://sports.163.com/cba\">CBA</a>,\n     <a href=\"http://sports.163.com/allsports\">综合</a>,\n     <a href=\"http://sports.163.com/zc\">中超</a>,\n     <a href=\"http://sports.163.com/world\">国际足球</a>,\n     <a href=\"http://sports.163.com/yc\">英超</a>,\n     <a href=\"http://sports.163.com/xj\">西甲</a>,\n     <a href=\"http://sports.163.com/yj\">意甲</a>,\n     <a href=\"http://ent.163.com\">娱乐</a>,\n     <a href=\"http://ent.163.com/star\">明星</a>,\n     <a href=\"http://ent.163.com/photo\">图片</a>,\n     <a href=\"http://ent.163.com/movie\">电影</a>,\n     <a href=\"http://ent.163.com/tv\">电视</a>,\n     <a href=\"http://ent.163.com/music\">音乐</a>,\n     <a href=\"http://ent.163.com/special/gsbjb/\">稿事编辑部</a>,\n     <a href=\"http://ent.163.com/special/focus_ent/\">娱乐FOCUS</a>,\n     <a href=\"http://ent.163.com/special/xbkhz/\">星捕快</a>,\n     <a href=\"http://money.163.com\">财经</a>,\n     <a href=\"http://money.163.com/stock\">股票</a>,\n     <a href=\"http://quotes.money.163.com/stock\">行情</a>,\n     <a href=\"http://money.163.com/chanjing\">产经</a>,\n     <a href=\"http://money.163.com/ipo\">新股</a>,\n     <a href=\"http://money.163.com/finance\">金融</a>,\n     <a href=\"http://money.163.com/fund\">基金</a>,\n     <a href=\"http://biz.163.com\">商业</a>,\n     <a href=\"http://money.163.com/licai\">理财</a>,\n     <a href=\"http://auto.163.com\">汽车</a>,\n     <a href=\"http://auto.163.com/buy\">购车</a>,\n     <a href=\"http://auto.163.com/depreciate\">行情</a>,\n     <a href=\"http://product.auto.163.com/finder\">选车</a>,\n     <a href=\"http://product.auto.163.com\">车型库</a>,\n     <a href=\"http://auto.163.com/news\">行业</a>,\n     <a href=\"http://auto.163.com/chezhu\">用车</a>,\n     <a href=\"http://auto.163.com/photo\">汽车图片</a>,\n     <a href=\"http://tech.163.com\">科技</a>,\n     <a href=\"http://tech.163.com/telecom/\">通信</a>,\n     <a href=\"http://tech.163.com/it\">IT</a>,\n     <a href=\"http://tech.163.com/internet\">互联网</a>,\n     <a href=\"http://tech.163.com/special/ydhlw\">移动互联网</a>,\n     <a href=\"http://tech.163.com/special/chzt\">特别策划</a>,\n     <a href=\"http://tech.163.com/special/wudaokou\">五道口沙龙</a>,\n     <a href=\"http://tech.163.com/special/yyzd\">易语中的</a>,\n     <a href=\"http://tech.163.com/special\">专题</a>,\n     <a href=\"http://lady.163.com\">女人</a>,\n     <a href=\"http://baby.163.com\">亲子</a>,\n     <a href=\"http://fashion.163.com/art\">艺术</a>,\n     <a href=\"http://fashion.163.com\">时尚</a>,\n     <a href=\"http://shoucang.163.com\">收藏</a>,\n     <a href=\"http://lady.163.com/sense\">情感</a>,\n     <a href=\"http://lady.163.com/astro\">星座</a>,\n     <a href=\"http://lady.163.com/beauty\">美容</a>,\n     <a href=\"http://cosmetic.lady.163.com/trial\">免费试用</a>,\n     <a href=\"http://mobile.163.com\">手机</a>,\n     <a href=\"http://digi.163.com/\">数码</a>,\n     <a href=\"http://mobile.163.com/mi\">移动</a>,\n     <a href=\"http://digi.163.com/pc\">电脑</a>,\n     <a href=\"http://product.mobile.163.com\">手机库</a>,\n     <a href=\"http://hea.163.com/\">家电</a>,\n     <a href=\"http://digi.163.com/smart\">智能硬件</a>,\n     <a href=\"http://digi.163.com/dc\">相机</a>,\n     <a href=\"http://v.mobile.163.com\">手机视频</a>,\n     <a href=\"http://house.163.com\">房产</a>,\n     <a href=\"http://home.163.com\">家居</a>,\n     <a href=\"http://bj.house.163.com\">北京房产</a>,\n     <a href=\"http://sh.house.163.com\">上海房产</a>,\n     <a href=\"http://gz.house.163.com\">广州房产</a>,\n     <a href=\"http://house.163.com/city\">全部分站</a>,\n     <a href=\"http://xf.house.163.com\">楼盘库</a>,\n     <a href=\"http://home.163.com/jiaju/\">家具</a>,\n     <a href=\"http://home.163.com/weiyu/\">卫浴</a>,\n     <a href=\"http://home.163.com/special/jiajuyigui\">衣柜</a>,\n     <a href=\"http://travel.163.com\">旅游</a>,\n     <a href=\"http://travel.163.com/outdoor\">户外</a>,\n     <a href=\"http://guizhou.travel.163.com\">贵州</a>,\n     <a href=\"http://travel.163.com/food\">美食</a>,\n     <a href=\"http://jingdian.travel.163.com/domestic/1000066937\">四川</a>,\n     <a href=\"http://jingdian.travel.163.com\">景点</a>,\n     <a href=\"http://jingdian.travel.163.com/domestic/1000066944\">新疆</a>,\n     <a href=\"http://travel.163.com/special/travellist/#f=endnav\">专题</a>,\n     <a href=\"http://jingdian.travel.163.com/domestic/1000066926/#f=endnav\">西藏</a>,\n     <a href=\"http://edu.163.com\">教育</a>,\n     <a href=\"http://edu.163.com/yimin\">移民</a>,\n     <a href=\"http://edu.163.com/kaoyan\">考研</a>,\n     <a href=\"http://edu.163.com/liuxue\">留学</a>,\n     <a href=\"http://edu.163.com/special/official\">公务员</a>,\n     <a href=\"http://edu.163.com/en\">外语</a>,\n     <a href=\"http://kids.163.com\">中小学</a>,\n     <a href=\"http://edu.163.com/gaokao\">高考</a>,\n     <a href=\"http://daxue.163.com\">校园</a>,\n     <a href=\"http://sitemap.163.com/\"><i></i>查看网易地图</a>,\n     <a class=\"ntes-nav-login-title\" href=\"http://reg.163.com/\" id=\"js_N_nav_login_title\">登录</a>,\n     <a class=\"ntes-nav-select-title ntes-nav-select-title-register\" href=\"http://reg.email.163.com/mailregAll/reg0.jsp?from=163navi&amp;regPage=163\">注册免费邮箱\n                     <em class=\"ntes-nav-select-arr\"></em>\n     </a>,\n     <a href=\"http://reg.vip.163.com/register.m?from=topnav\">\n     <span style=\"width:190px;\">注册VIP邮箱（特权邮箱，付费）</span>\n     </a>,\n     <a href=\"http://mail.163.com/client/dl.html?from=mail46\">\n     <span style=\"width:190px;\">免费下载网易官方手机邮箱应用</span>\n     </a>,\n     <a class=\"ntes-nav-entry-wide c-fl\" id=\"js_N_navLogout\" target=\"_self\">安全退出</a>,\n     <a class=\"ntes-nav-mobile-title ntes-nav-entry-bgblack\" href=\"http://www.163.com/newsapp/#f=163nav\">\n     <em class=\"ntes-nav-entry-mobile\">移动端</em>\n     </a>,\n     <a href=\"http://www.163.com/newsapp/#f=163nav\">\n     <img src=\"//static.ws.126.net/f2e/include/common_nav/images/topapp.jpg\"/>\n     </a>,\n     <a class=\"ntes-nav-select-title ntes-nav-select-title-huatian ntes-nav-entry-bgblack\" href=\"https://open.163.com/\" id=\"js_love_url\">\n     <em class=\"ntes-nav-entry-huatian\">网易公开课</em>\n     <em class=\"ntes-nav-select-arr\"></em>\n     <span class=\"ntes-nav-msg\">\n     <em class=\"ntes-nav-msg-num\"></em>\n     </span>\n     </a>,\n     <a href=\"https://vip.open.163.com\">\n     <span>付费精品</span>\n     </a>,\n     <a href=\"https://open.163.com/ted/\">\n     <span>TED</span>\n     </a>,\n     <a href=\"https://open.163.com/ocw/\">\n     <span>国际名校公开课</span>\n     </a>,\n     <a href=\"http://open.163.com/cuvocw/\">\n     <span>中国大学视频公开课</span>\n     </a>,\n     <a href=\"https://open.163.com/appreciation\">\n     <span>赏课</span>\n     </a>,\n     <a href=\"https://open.163.com/khan/\">\n     <span>可汗学院</span>\n     </a>,\n     <a href=\"http://open.163.com/special/appdownload_pc/\">\n     <span>下载公开课</span>\n     </a>,\n     <a class=\"ntes-nav-select-title ntes-nav-select-title-kaola ntes-nav-entry-bgblack\" href=\"http://da.kaola.com/redirect?t=5aaebece48792c00&amp;p=c901ea7c&amp;proId=1024&amp;code=d638f275b1755320e845734e53e897ee&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\" id=\"js_kaola_url\">\n     <em class=\"ntes-nav-entry-kaola\">网易考拉</em>\n     <em class=\"ntes-nav-select-arr\"></em>\n     <span class=\"ntes-nav-msg ntes-nav-kaola-msg\" id=\"js_N_navKaolaMsg\">\n     <em class=\"ntes-nav-msg-num\"></em>\n     </span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece48f92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=b3e224752b2cad85e9831e8c6cf7fbbd&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fbimaibangdan.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>1000元新人大礼包</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece49392c00&amp;p=c901ea7c&amp;proId=1024&amp;code=fd8e43f4a20a26fbe60f7e7de1f17efe&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>新人专享进口好货</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece49392c01&amp;p=c901ea7c&amp;proId=1024&amp;code=21bcd5b595fc235cfd11e3e1cff14177&amp;target=https%3A%2F%2Factivity.kaola.com%2Factivity%2FflashSaleIndex%2Fshow.html%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>今日限时抢购</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece49792c00&amp;p=c901ea7c&amp;proId=1024&amp;code=ecc40777cb2d68a3d9fb078b232f081d&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfyrzolcpagerz.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>营养保健</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece49b92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=0cdd5a920c768340ffc12eccd659341d&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fnewpc.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>个人洗护</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece4a392c00&amp;p=c901ea7c&amp;proId=1024&amp;code=ee49a3a793f22e648ac616f5dab061dd&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjpwmb9zcpagesl.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>美容彩妆</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece4a792c00&amp;p=c901ea7c&amp;proId=1024&amp;code=6eb2598fd20963efc203a4e3fe88f4e2&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fmyxrq.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>母婴儿童</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece4ab92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=3946ce460ba655c11afac69855dfc02b&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Ffoodnewcustomers.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>环球美食</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece4af92c00&amp;p=c901ea7c&amp;proId=1024&amp;code=2eee7290051863737a434d44f3c0d46f&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fnewtalent.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>家居生活</span>\n     </a>,\n     <a class=\"ntes-nav-select-title ntes-nav-select-title-lofter ntes-nav-entry-bgblack\" href=\"http://you.163.com/?from=web_fc_menhu_xinrukou_1\" id=\"js_lofter_icon_url\">\n     <em class=\"ntes-nav-entry-lofter\">网易严选</em>\n     <em class=\"ntes-nav-select-arr\"></em>\n     <span class=\"ntes-nav-msg\" id=\"js_N_navLofterMsg\">\n     <em class=\"ntes-nav-msg-num\"></em>\n     </span>\n     </a>,\n     <a href=\"http://you.163.com/act/static/Fb2d1OZ714.html?from=web_fc_menhu_xinrukou_1\">\n     <span>888元现金券</span>\n     </a>,\n     <a href=\"http://you.163.com/manufacturer/list?from=web_fc_menhu_xinrukou_3\">\n     <span>品牌制造商爆款</span>\n     </a>,\n     <a href=\"http://you.163.com/item/recommend?from=web_fc_menhu_xinrukou_4\">\n     <span>999+人气好评品</span>\n     </a>,\n     <a href=\"http://you.163.com/flashSale/index?from=web_fc_menhu_xinrukou_5\">\n     <span>限时特惠</span>\n     </a>,\n     <a href=\"http://you.163.com/item/list?categoryId=1005000&amp;from=web_fc_menhu_xinrukou_7\">\n     <span>居家床品</span>\n     </a>,\n     <a href=\"http://you.163.com/item/list?categoryId=1005001&amp;from=web_fc_menhu_xinrukou_8\">\n     <span>精致餐厨</span>\n     </a>,\n     <a href=\"http://you.163.com/item/list?categoryId=1008000&amp;from=web_fc_menhu_xinrukou_9\">\n     <span>箱包鞋类</span>\n     </a>,\n     <a href=\"http://you.163.com/item/list?categoryId=1010000&amp;from=web_fc_menhu_xinrukou_10\">\n     <span>经典服饰</span>\n     </a>,\n     <a href=\"http://you.163.com/item/list?categoryId=1005002&amp;from=web_fc_menhu_xinrukou_11\">\n     <span>健康美食</span>\n     </a>,\n     <a class=\"ntes-nav-select-title ntes-nav-select-title-money ntes-nav-entry-bgblack\" href=\"http://pay.163.com/\">\n     <em class=\"ntes-nav-entry-money\">支付</em>\n     <em class=\"ntes-nav-select-arr\"></em>\n     </a>,\n     <a href=\"http://pay.163.com/#f=topnav\">\n     <span>一卡通充值</span>\n     </a>,\n     <a href=\"http://ecard.163.com/script/index#f=topnav\">\n     <span>一卡通购买</span>\n     </a>,\n     <a href=\"https://k.163.com/?product=163&amp;trackid=01\">\n     <span>网易白金卡</span>\n     </a>,\n     <a href=\"https://epay.163.com/\">\n     <span>我的网易支付</span>\n     </a>,\n     <a href=\"https://3c.163.com/?from=wangyimenhu16\">\n     <span>网易智造</span>\n     </a>,\n     <a href=\"http://lq.163.com?from=neteasemoney\">\n     <span>网易来钱-借现金</span>\n     </a>,\n     <a class=\"ntes-nav-select-title ntes-nav-select-title-cart ntes-nav-entry-bgblack\" href=\"http://baoxian.163.com/car/?from=mhgwc\">\n     <em class=\"ntes-nav-entry-cart\">电商</em>\n     <em class=\"ntes-nav-select-arr\"></em>\n     </a>,\n     <a href=\"http://you.163.com?from=web_in_wydaohang\">\n     <span>严选</span>\n     </a>,\n     <a href=\"http://lq.163.com?from=neteasebuy\">\n     <span>我要借钱</span>\n     </a>,\n     <a href=\"http://da.kaola.com/redirect?t=5aaebece4b392c00&amp;p=c901ea7c&amp;proId=1024&amp;code=d15f8f9d72ccc507aeefda91b43c0cd2&amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">\n     <span>网易考拉</span>\n     </a>,\n     <a class=\"ntes-nav-select-title ntes-nav-select-title-mail ntes-nav-entry-bgblack\" id=\"js_mail_url\">\n     <em class=\"ntes-nav-entry-mail\">邮箱</em>\n     <em class=\"ntes-nav-select-arr\"></em>\n     <span class=\"ntes-nav-msg\" id=\"js_N_navMailMsg\">\n     <em class=\"ntes-nav-msg-num\" id=\"js_N_navMailMsgNum\"></em>\n     </span>\n     </a>,\n     <a href=\"http://email.163.com/#f=topnav\">\n     <span>免费邮箱</span>\n     </a>,\n     <a href=\"http://vipmail.163.com/#f=topnav\">\n     <span>VIP邮箱</span>\n     </a>,\n     <a href=\"http://qiye.163.com/#f=topnav\">\n     <span>企业邮箱</span>\n     </a>,\n     <a href=\"http://reg.email.163.com/mailregAll/reg0.jsp?from=ntes_nav&amp;regPage=163\">\n     <span>免费注册</span>\n     </a>,\n     <a href=\"http://reg.email.163.com/unireg/call.do?cmd=register.entrance&amp;flow=mobile&amp;from=ntes_nav\">\n     <span>快速注册</span>\n     </a>,\n     <a href=\"http://mail.163.com/dashi/dlpro.html?from=mail46\">\n     <span>客户端下载</span>\n     </a>,\n     <a class=\"first\" href=\"https://news.163.com/\">新闻</a>,\n     <a href=\"http://sports.163.com/\">体育</a>,\n     <a href=\"http://sports.163.com/nba/\">NBA</a>,\n     <a href=\"http://ent.163.com/\">娱乐</a>,\n     <a href=\"http://money.163.com/\">财经</a>,\n     <a href=\"http://money.163.com/stock/\">股票</a>,\n     <a href=\"http://auto.163.com/\" id=\"_link_auto\">汽车</a>,\n     <a href=\"http://tech.163.com/\">科技</a>,\n     <a href=\"http://mobile.163.com/\">手机</a>,\n     <a href=\"http://digi.163.com/\">数码</a>,\n     <a href=\"http://lady.163.com/\">女人</a>,\n     <a href=\"http://v.163.com/\">直播</a>,\n     <a href=\"http://v.163.com/special/video/#tuijian\">视频</a>,\n     <a href=\"http://travel.163.com/\">旅游</a>,\n     <a href=\"http://house.163.com/\" id=\"houseUrl\">房产</a>,\n     <a href=\"http://home.163.com/\" id=\"homeUrl\">家居</a>,\n     <a href=\"http://edu.163.com/\">教育</a>,\n     <a href=\"http://book.163.com/\">读书</a>,\n     <a href=\"https://news.163.com/\" id=\"_link_game\">本地</a>,\n     <a href=\"http://jiankang.163.com/\">健康</a>,\n     <a href=\"http://rd.da.netease.com/redirect?t=5802fb18cf033c80&amp;p=e17af55c&amp;proId=1024&amp;target=https%3A%2F%2Fwww.kaola.com%2F%3Ftag%3Dbe3d8d027a530881037ef01d304eb505\">海淘</a>,\n     <a class=\"last\" href=\"http://art.163.com/\">艺术</a>,\n     <a class=\"channel2019_logo channel2019_news_logo\" href=\"https://news.163.com/\">网易新闻有态度</a>,\n     <a href=\"http://news.163.com/weather/\">\n     <script ne-repeat=\"weather in weatherInfo\" type=\"text/template\">\n                     <img class=\"ns-weather-icon\" ne-src=\"http://static.ws.126.net/f2e/news/index2015/img/weather/<%=weather.icon%>\">\n                     <div class=\"ns-weather-text\"><%=weather.weather%></div>\n                     <div class=\"ns-weather-info\"><%=weather.temp2%>°~<%=weather.temp1%>°</div>\n                     <div class=\"ns-weather-city\"><%=weather.city%></div>\n                 </script>\n     </a>,\n     <a href=\"http://www.163.com/\">首页</a>,\n     <a href=\"http://news.163.com/rank/\">排行</a>,\n     <a href=\"http://news.163.com/photo/#Current\">图片</a>,\n     <a href=\"http://news.163.com/domestic/\">国内</a>,\n     <a href=\"http://news.163.com/world/\">国际</a>,\n     <a href=\"http://data.163.com/special/datablog/\">数读</a>,\n     <a href=\"http://war.163.com/\">军事</a>,\n     <a href=\"http://news.163.com/air/\">航空</a>,\n     <a href=\"http://news.163.com/uav/\">无人机</a>,\n     <a href=\"http://news.163.com/college\">新闻学院</a>,\n     <a href=\"http://gov.163.com/\">政务</a>,\n     <a href=\"http://gongyi.163.com/\">公益</a>,\n     <a href=\"http://media.163.com/\">媒体</a>,\n     <a href=\"http://news.163.com/special/wangsansanhome/\">王三三</a>,\n     <a class=\"tags tag_sd\" href=\"http://data.163.com/special/datablog/\">数读</a>,\n     <a class=\"detail\" href=\"http://data.163.com/19/0626/14/EIJQJG9L000181IU.html\" ne-role=\"detail\">\n     <h3>\n                                     中国哪里的地铁最拥挤？\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"中国哪里的地铁最拥挤？\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/26/30e8760df3044e29a18fac3514dd22b1.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://data.163.com/19/0625/11/EIH0CQEK00019GOE.html\">娶一个潮汕老婆到底是什么体验</a>,\n     <a href=\"http://data.163.com/19/0621/17/EI7BLS3600019GOE.html\">不瞒你说，成都早餐好吃到爆</a>,\n     <a class=\"tags tag_rj\" href=\"http://renjian.163.com/\">人间</a>,\n     <a class=\"detail\" href=\"http://renjian.163.com/19/0628/14/EIP21K41000181RV.html\" ne-role=\"detail\">\n     <h3>\n                                     小白作者的变现之路\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"小白作者的变现之路\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/27f33fcbfcec4b42b6837807b7a0883f.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://renjian.163.com/19/0627/16/EIML2HJO000181RV.html\">被毒虫男友拖下水的女大学生</a>,\n     <a href=\"http://renjian.163.com/19/0626/13/EIJPJMCH000181RV.html\">领导，求你让我加班吧</a>,\n     <a class=\"detail\" href=\"http://renjian.163.com/19/0624/14/EIEOBNCB000181RK.html\" ne-role=\"detail\">\n     <h3>\n                                     当不了官发不了财的读书人\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"当不了官发不了财的读书人\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/24/b77e119ffeca477fa4bd2144b1fcb86c.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://renjian.163.com/19/0620/16/EI4JRNO7000181RK.html\">四个博士，一地鸡毛</a>,\n     <a href=\"http://renjian.163.com/19/0618/12/EHV0QRVG000181RK.html\">医闹得逞后，伤害的到底是谁</a>,\n     <a class=\"detail\" href=\"https://news.163.com/19/0627/11/EIM57O490001885B.html\" ne-role=\"detail\">\n     <h3>\n                                     据说99%的人在图书馆一定会碰上......\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"据说99%的人在图书馆一定会碰上......\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/27/06eb8f4a3d4647bf9360ff5e71f003b8.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://news.163.com/19/0626/15/EIK0IJT40001885B.html\">我可能，得了种，前任病</a>,\n     <a href=\"https://news.163.com/19/0617/09/EHS57H4L0001885B.html\">那些KO不掉我的,最终成了我的OK</a>,\n     <a class=\"detail\" href=\"https://news.163.com/19/0628/11/EIOL94760001885B.html\" ne-role=\"detail\">\n     <h3>\n                                     直男幼稚行为大赏\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"直男幼稚行为大赏\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/0b3890cd2f4b473fa0127b5e33ae6ccf.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://news.163.com/19/0624/12/EIEFGMVL0001885B.html\">打个赌，爱情友情你分不清楚</a>,\n     <a href=\"https://news.163.com/19/0621/12/EI6NKDTU0001885B.html\">不会唱歌的人进 KTV 以后有多惨</a>,\n     <a class=\"detail\" href=\"https://news.163.com/19/0628/19/EIPIQT4O000181BR.html\" ne-role=\"detail\">\n     <h3>\n                                     彩票一直都不中，我却忍不住要买\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"彩票一直都不中，我却忍不住要买\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/f44265c5b4ef4a11a99eedbde7c49833.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://news.163.com/19/0627/17/EIMPGJAU000181BR.html\">原来\"神仙眷侣\"离婚,也是一地鸡毛</a>,\n     <a href=\"https://news.163.com/19/0626/18/EIK95RV0000181BR.html\">我宣布，北大清华这对CP锁死了！</a>,\n     <a class=\"detail\" href=\"http://caozhi.news.163.com/19/0623/22/EID0CBIH000181TI.html\" ne-role=\"detail\">\n     <h3>\n                                     佟丽娅，这次你赢了\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"佟丽娅，这次你赢了\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/23/67d24242d479451ea705e26296187f78.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://caozhi.news.163.com/19/0623/15/EIC9LGSP000181TI.html\">千万别在深夜点开这神作</a>,\n     <a href=\"http://caozhi.news.163.com/19/0618/19/EHVRID7G000181TI.html\">那个发“嗯”的人，已被踢出群聊</a>,\n     <a class=\"detail\" href=\"https://news.163.com/19/0628/17/EIPCOKEA0001982T.html\" ne-role=\"detail\">\n     <h3>\n                                     王宝强母亲去世：来日方长是人生的错觉\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"王宝强母亲去世：来日方长是人生的错觉\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/ecd0de8b8dc0402da72d814bde76f06e.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://news.163.com/19/0627/13/EIMC0EDH0001982T.html\">宋仲基宋慧乔离婚：再美的爱情也会过期</a>,\n     <a href=\"https://news.163.com/19/0626/17/EIK6AD550001982T.html\">杨紫冰箱藏药，戳穿最怂瞬间</a>,\n     <a class=\"tags tag_kanke\" href=\"http://renjian.163.com/special/renjian_kanke/\">看客</a>,\n     <a class=\"detail\" href=\"http://renjian.163.com/19/0628/11/EIOMK185000199ET.html\" ne-role=\"detail\">\n     <h3>\n                                     我奶茶都戒了，日本人才知道它的好\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"我奶茶都戒了，日本人才知道它的好\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/f35eceb8d111496693e8f77a71a49cba.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://renjian.163.com/19/0620/11/EI43PM8Q000199ET.html\">美国堕胎残酷物语</a>,\n     <a href=\"http://renjian.163.com/19/0613/11/EHI39FML000199ET.html\">跑腿小哥提供的十万种服务</a>,\n     <a class=\"tags tag_stpwd\" href=\"http://jiankang.163.com/special/zhutierji/?type=3\">身体密码</a>,\n     <a class=\"detail\" href=\"https://jiankang.163.com/19/0625/11/EIH061CM0038804G.html\" ne-role=\"detail\">\n     <h3>\n                                     防晒，99%的人都做错了……\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"防晒，99%的人都做错了……\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/25/f260b6843fca4702bb5e4e316600f113.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://jiankang.163.com/19/0617/14/EHSN7PPV0038804G.html\">当代人减肥：迈不过25岁这道坎</a>,\n     <a href=\"https://jiankang.163.com/19/0608/15/EH5J9IGA00388AD5.html\">多年后 无数中年人仍会被高考吓醒</a>,\n     <a href=\"https://news.163.com/19/0628/16/EIP8R4SV000189FH.html\">央视独家：习近平会见日本首相</a>,\n     <a href=\"https://news.163.com/19/0628/16/EIP8N52U0001875N.html\">外交部回应中美元首会面</a>,\n     <a href=\"https://news.163.com/19/0628/14/EIOVIP2500018AP1.html\" target=\"_blank\">特朗普会见普京 笑称:不要干预美国大选哦</a>,\n     <a href=\"https://news.163.com/19/0628/16/EIP7KOH70001875P.html\">住建部:加快垃圾分类处理设施建设</a>,\n     <a href=\"https://news.163.com/19/0628/16/EIP8F9QQ0001875P.html\" target=\"_blank\">袁仁国被公诉:受贿数额特别巨大</a>,\n     <a href=\"https://news.163.com/19/0628/13/EIOSPGLJ0001899O.html\">湖南耒阳人大常委会原主任携子主动投案</a>,\n     <a href=\"https://news.163.com/19/0628/13/EIOUHOB70001875P.html\" target=\"_blank\">美的48小时内被骗10亿资金</a>,\n     <a href=\"https://news.163.com/19/0628/19/EIPH3F1V0001875P.html\">垃圾分类逼疯上海人？别笑！马上轮到这46个城市</a>,\n     <a href=\"https://news.163.com/19/0628/19/EIPILCJ70001875P.html\">女子酒后澡堂一打六被刑拘</a>,\n     <a href=\"https://news.163.com/19/0628/18/EIPFI0KN0001875P.html\" target=\"_blank\">杀人案嫌犯向警察开枪拒捕 被当场击毙</a>,\n     <a href=\"https://news.163.com/19/0628/16/EIP8RHM70001875P.html\">95后飙摩托车追高铁发抖音被刑拘</a>,\n     <a href=\"https://news.163.com/19/0628/16/EIP7B7RP0001899O.html\" target=\"_blank\">母亲担心儿子粗心在其手背\"刺\"字</a>,\n     <a href=\"https://news.163.com/19/0628/15/EIP4Q6BQ0001899O.html\">女子高铁上劝老人看好小孩被骂</a>,\n     <a href=\"https://news.163.com/19/0628/16/EIP8QO5Q0001875P.html\" target=\"_blank\">南京杀妻案死者姑妈：侄女生前要强</a>,\n     <a class=\"ad_hover_href\" href=\"http://gb.corp.163.com/gb/legal.html\"></a>,\n     <a href=\"http://news.163.com/16/0721/19/BSH7V8QF00014JB6.html\">辽宁遭暴雨侵袭致城市内涝 紧急转移12万人</a>,\n     <a href=\"http://news.163.com/16/0721/10/BSG7HOH20001124J.html\">民政部:北方暴雨75人死亡失踪</a>,\n     <a href=\"http://news.163.com/16/0721/12/BSGG5VK300011229.html\" target=\"_blank\">北京发生山洪灾害 铲车翻倒4人被困</a>,\n     <a href=\"http://news.163.com/16/0721/12/BSGHHVLK00011229.html\">搜救犬水灾救援22天殉职 主人:它太累了</a>,\n     <a href=\"http://news.163.com/16/0721/07/BSFUFFP800014AED.html\" target=\"_blank\">姐妹被洪水卷走警方拒立案</a>,\n     <a href=\"http://news.163.com/photoview/00AN0001/2189402.html?from=ph_ss#p=BSG716GE00AN0001\">\n     <img height=\"120\" src=\"http://img3.cache.netease.com/news/2016/7/21/20160721131401d35e2.jpg\" width=\"190\"/>\n     <span class=\"bg\"></span>\n     <h3>河南遇强降雨 9.8万人转移</h3>\n     </a>,\n     <a href=\"http://news.163.com/photoview/00AP0001/2189377.html?from=ph_ss#p=BSFTQ99H00AP0001\">\n     <img height=\"120\" src=\"http://img3.cache.netease.com/news/2016/7/21/201607211319466e84e.jpg\" width=\"190\"/>\n     <span class=\"bg\"></span>\n     <h3>女主播直播暴雨 浑身湿透</h3>\n     </a>,\n     <a href=\"http://news.163.com/photoview/00AP0001/2189389.html?from=ph_ss#p=BSG1S9AM00AP0001\">\n     <img height=\"120\" src=\"http://img5.cache.netease.com/news/2016/7/21/20160721132119ef59b.jpg\" width=\"190\"/>\n     <span class=\"bg\"></span>\n     <h3>湖北民众省道上趟水摸鱼</h3>\n     </a>,\n     <a href=\"https://open.163.com/\">网易公开课</a>,\n     <a class=\"focus_prev\" ne-role=\"slide-prev\"></a>,\n     <a class=\"focus_next\" ne-role=\"slide-next\"></a>,\n     <a class=\"nav_name no_cursor\" href=\"javascript:;\" ne-role=\"tab-nav\" target=\"_self\">\n                         要闻\n                         <span class=\"nav_item_ink\"></span>\n     </a>,\n     <a class=\"nav_name no_cursor\" href=\"{{myState.channelbendiurl}}\" ne-class=\"{{myState.bendiTstyle ? 'bendistyle' : ''}}\" ne-role=\"tab-nav\" target=\"{{myState.channelbendiurl == 'javascript:;' ? '_self' : '_blank'}}\">\n     <strong ne-text=\"{{myState.bendiCity}}\"></strong>\n     <span class=\"nav_item_ink\"></span>\n     </a>,\n     <a class=\"nav_name\" href=\"http://news.163.com/domestic/\" ne-role=\"tab-nav\">\n                         国内\n                         <span class=\"nav_item_ink\"></span>\n     </a>,\n     <a class=\"nav_name\" href=\"http://news.163.com/world/\" ne-role=\"tab-nav\">\n                         国际\n                         <span class=\"nav_item_ink\"></span>\n     </a>,\n     <a class=\"nav_name no_cursor\" href=\"javascript:;\" ne-role=\"tab-nav\" target=\"_self\">\n                         独家\n                         <span class=\"nav_item_ink\"></span>\n     </a>,\n     <a class=\"nav_name\" href=\"http://war.163.com/\" ne-role=\"tab-nav\">\n                         军事\n                         <span class=\"nav_item_ink\"></span>\n     </a>,\n     <a class=\"nav_name\" href=\"http://money.163.com/\" ne-role=\"tab-nav\">\n                         财经\n                         <span class=\"nav_item_ink\"></span>\n     </a>,\n     <a class=\"nav_name\" href=\"http://tech.163.com/\" ne-role=\"tab-nav\">\n                         科技\n                         <span class=\"nav_item_ink\"></span>\n     </a>,\n     <a class=\"more\" href=\"javascript:;\" ne-class=\"{{myState.morechannel ? 'more_hover': ''}}\" ne-mouseout=\"morehideChannel()\" ne-mouseover=\"moreShowChannel()\" ne-role=\"morebtn\" target=\"_self\">更多</a>,\n     <a href=\"http://sports.163.com/\" ne-role=\"tab-nav\">体育</a>,\n     <a href=\"http://ent.163.com/\" ne-role=\"tab-nav\">娱乐</a>,\n     <a href=\"http://lady.163.com/\" ne-role=\"tab-nav\">时尚</a>,\n     <a href=\"http://auto.163.com/\" ne-role=\"tab-nav\">汽车</a>,\n     <a href=\"{{myState.channelhouseurl}}\" ne-role=\"tab-nav\">房产</a>,\n     <a href=\"http://news.163.com/air/\" ne-role=\"tab-nav\">航空</a>,\n     <a href=\"http://jiankang.163.com/\" ne-role=\"tab-nav\">健康</a>,\n     <a class=\"newsdata_prev\" href=\"#prev\" ne-class=\"{{myState.fixedTop ? 'fixed_data_show': ''}}\" ne-click=\"tabPrevFn($event);\" ne-hide=\"{{myState.iPad}}\">\n     <span></span>\n     <div class=\"newsdata_btn_name\">{{myState.preBtnName}}</div>\n     </a>,\n     <a class=\"newsdata_next\" href=\"#next\" ne-class=\"{{myState.fixedTop ? 'fixed_data_show': ''}}\" ne-click=\"tabNextFn($event);\" ne-hide=\"{{myState.iPad}}\">\n     <span></span>\n     <div class=\"newsdata_btn_name\">{{myState.nextBtnName}}</div>\n     </a>,\n     <a class=\"load_more_btn\" ne-click=\"clickLoadMore();\" ne-hide=\"{{myState.counter &gt;= navList[myState.ndNavIndex].totalPage || myState.counter == 0}}\" target=\"_self\">\n     <div class=\"post_addmore\" ne-visible=\"{{myState.counter &lt; navList[myState.ndNavIndex].totalPage &amp;&amp; !myState.loading}}\">\n     <i>+</i>\n     <span>加载更多</span>\n     </div>\n     <div class=\"post_adding\" ne-show=\"{{myState.loading}}\">\n     <i>+</i>\n     <span>加载中...</span>\n     </div>\n     </a>,\n     <a href=\"http://g.163.com/a?CID=68685&amp;Values=1366894002&amp;Redirect=http://clk.gentags.net/clk/iv-10648/st-31/cr-2/oi-1303641/or-7535/adv-158/pcon-0/https%253A%252F%252Fent.163.com%252F19%252F0625%252F16%252FEIHG8HLF000398QL.html\">\n     <img height=\"400\" src=\"http://nimg.ws.126.net/?url=https://yt-adp.ws.126.net/channel21/037408_300400_axry_20190626.jpg&amp;thumbnail=300x2147483647&amp;quality=75&amp;type=jpg\" width=\"300\"/>\n     <span class=\"bg\"></span>\n     <h3>三金西瓜霜独家冠名网易封面故事</h3>\n     </a>,\n     <a href=\"http://news.163.com/photoview/00AP0001/2302561.html\">\n     <img height=\"400\" src=\"https://cms-bucket.ws.126.net/2019/06/28/e5b070c1f96349b0829da88b41105903.jpeg?imageView&amp;thumbnail=300y400\" width=\"300\"/>\n     <span class=\"bg\"></span>\n     <h3>浒苔绿潮开始在山东沿海登陆</h3>\n     </a>,\n     <a href=\"http://news.163.com/photoview/00AP0001/2302559.html\">\n     <img height=\"400\" src=\"https://cms-bucket.ws.126.net/2019/06/28/2792654fe66f4985879a8cc30a89a6cc.jpeg?imageView&amp;thumbnail=300y400\" width=\"300\"/>\n     <span class=\"bg\"></span>\n     <h3>广西南宁抓获涉传人员286名</h3>\n     </a>,\n     <a href=\"http://news.163.com/photoview/00AO0001/2302560.html\">\n     <img height=\"400\" src=\"https://cms-bucket.ws.126.net/2019/06/28/202e20527525474cac861ba7e56a2dde.jpeg?imageView&amp;thumbnail=300y400\" width=\"300\"/>\n     <span class=\"bg\"></span>\n     <h3>民主党初选辩论次日:拜登现身</h3>\n     </a>,\n     <a class=\"f_prev\" ne-role=\"slide-prev\">&lt;</a>,\n     <a class=\"f_next\" ne-role=\"slide-next\">&gt;</a>,\n     <a href=\"http://baoxian.163.com/activity/act1605/index.html?from=mhds1605\">免费领取iPhone6s</a>,\n     <a href=\"http://mall.163.com/mobile/fill.jsp?from=wwwtext\">手机费快充超低折扣</a>,\n     <a href=\"http://baoxian.163.com/car/activitylist.html?from=mhdstbl\">免费送现金红包！</a>,\n     <a href=\"http://piao.163.com/movie/47080.html?from=newsword\">镜中多奇境依旧爱丽丝</a>,\n     <a class=\"tags tag_sd\" href=\"http://data.163.com/special/datablog/\">数读</a>,\n     <a class=\"detail\" href=\"http://data.163.com/19/0626/14/EIJQJG9L000181IU.html\" ne-role=\"detail\">\n     <h3>\n                                     中国哪里的地铁最拥挤？\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"中国哪里的地铁最拥挤？\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/26/30e8760df3044e29a18fac3514dd22b1.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://data.163.com/19/0625/11/EIH0CQEK00019GOE.html\">娶一个潮汕老婆到底是什么体验</a>,\n     <a href=\"http://data.163.com/19/0621/17/EI7BLS3600019GOE.html\">不瞒你说，成都早餐好吃到爆</a>,\n     <a class=\"tags tag_rj\" href=\"http://renjian.163.com/\">人间</a>,\n     <a class=\"detail\" href=\"http://renjian.163.com/19/0628/14/EIP21K41000181RV.html\" ne-role=\"detail\">\n     <h3>\n                                     小白作者的变现之路\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"小白作者的变现之路\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/27f33fcbfcec4b42b6837807b7a0883f.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://renjian.163.com/19/0627/16/EIML2HJO000181RV.html\">被毒虫男友拖下水的女大学生</a>,\n     <a href=\"http://renjian.163.com/19/0626/13/EIJPJMCH000181RV.html\">领导，求你让我加班吧</a>,\n     <a class=\"detail\" href=\"http://renjian.163.com/19/0624/14/EIEOBNCB000181RK.html\" ne-role=\"detail\">\n     <h3>\n                                     当不了官发不了财的读书人\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"当不了官发不了财的读书人\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/24/b77e119ffeca477fa4bd2144b1fcb86c.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://renjian.163.com/19/0620/16/EI4JRNO7000181RK.html\">四个博士，一地鸡毛</a>,\n     <a href=\"http://renjian.163.com/19/0618/12/EHV0QRVG000181RK.html\">医闹得逞后，伤害的到底是谁</a>,\n     <a class=\"detail\" href=\"https://news.163.com/19/0627/11/EIM57O490001885B.html\" ne-role=\"detail\">\n     <h3>\n                                     据说99%的人在图书馆一定会碰上......\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"据说99%的人在图书馆一定会碰上......\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/27/06eb8f4a3d4647bf9360ff5e71f003b8.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://news.163.com/19/0626/15/EIK0IJT40001885B.html\">我可能，得了种，前任病</a>,\n     <a href=\"https://news.163.com/19/0617/09/EHS57H4L0001885B.html\">那些KO不掉我的,最终成了我的OK</a>,\n     <a class=\"detail\" href=\"https://news.163.com/19/0628/11/EIOL94760001885B.html\" ne-role=\"detail\">\n     <h3>\n                                     直男幼稚行为大赏\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"直男幼稚行为大赏\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/0b3890cd2f4b473fa0127b5e33ae6ccf.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://news.163.com/19/0624/12/EIEFGMVL0001885B.html\">打个赌，爱情友情你分不清楚</a>,\n     <a href=\"https://news.163.com/19/0621/12/EI6NKDTU0001885B.html\">不会唱歌的人进 KTV 以后有多惨</a>,\n     <a class=\"detail\" href=\"https://news.163.com/19/0628/19/EIPIQT4O000181BR.html\" ne-role=\"detail\">\n     <h3>\n                                     彩票一直都不中，我却忍不住要买\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"彩票一直都不中，我却忍不住要买\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/f44265c5b4ef4a11a99eedbde7c49833.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://news.163.com/19/0627/17/EIMPGJAU000181BR.html\">原来\"神仙眷侣\"离婚,也是一地鸡毛</a>,\n     <a href=\"https://news.163.com/19/0626/18/EIK95RV0000181BR.html\">我宣布，北大清华这对CP锁死了！</a>,\n     <a class=\"detail\" href=\"http://caozhi.news.163.com/19/0623/22/EID0CBIH000181TI.html\" ne-role=\"detail\">\n     <h3>\n                                     佟丽娅，这次你赢了\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"佟丽娅，这次你赢了\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/23/67d24242d479451ea705e26296187f78.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://caozhi.news.163.com/19/0623/15/EIC9LGSP000181TI.html\">千万别在深夜点开这神作</a>,\n     <a href=\"http://caozhi.news.163.com/19/0618/19/EHVRID7G000181TI.html\">那个发“嗯”的人，已被踢出群聊</a>,\n     <a class=\"detail\" href=\"https://news.163.com/19/0628/17/EIPCOKEA0001982T.html\" ne-role=\"detail\">\n     <h3>\n                                     王宝强母亲去世：来日方长是人生的错觉\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"王宝强母亲去世：来日方长是人生的错觉\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/ecd0de8b8dc0402da72d814bde76f06e.jpeg?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://news.163.com/19/0627/13/EIMC0EDH0001982T.html\">宋仲基宋慧乔离婚：再美的爱情也会过期</a>,\n     <a href=\"https://news.163.com/19/0626/17/EIK6AD550001982T.html\">杨紫冰箱藏药，戳穿最怂瞬间</a>,\n     <a class=\"tags tag_kanke\" href=\"http://renjian.163.com/special/renjian_kanke/\">看客</a>,\n     <a class=\"detail\" href=\"http://renjian.163.com/19/0628/11/EIOMK185000199ET.html\" ne-role=\"detail\">\n     <h3>\n                                     我奶茶都戒了，日本人才知道它的好\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"我奶茶都戒了，日本人才知道它的好\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/28/f35eceb8d111496693e8f77a71a49cba.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"http://renjian.163.com/19/0620/11/EI43PM8Q000199ET.html\">美国堕胎残酷物语</a>,\n     <a href=\"http://renjian.163.com/19/0613/11/EHI39FML000199ET.html\">跑腿小哥提供的十万种服务</a>,\n     <a class=\"tags tag_stpwd\" href=\"http://jiankang.163.com/special/zhutierji/?type=3\">身体密码</a>,\n     <a class=\"detail\" href=\"https://jiankang.163.com/19/0625/11/EIH061CM0038804G.html\" ne-role=\"detail\">\n     <h3>\n                                     防晒，99%的人都做错了……\n                                 </h3>\n     <div class=\"photo\">\n     <img alt=\"防晒，99%的人都做错了……\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/06/25/f260b6843fca4702bb5e4e316600f113.png?imageView&amp;thumbnail=200y90\" width=\"200\"/>\n     </div>\n     </a>,\n     <a href=\"https://jiankang.163.com/19/0617/14/EHSN7PPV0038804G.html\">当代人减肥：迈不过25岁这道坎</a>,\n     <a href=\"https://jiankang.163.com/19/0608/15/EH5J9IGA00388AD5.html\">多年后 无数中年人仍会被高考吓醒</a>,\n     <a class=\"ad_hover_href\" href=\"javascript:;\" target=\"_self\"></a>,\n     <a class=\"title\" href=\"https://open.163.com/\">网易公开课</a>,\n     <a href=\"https://vip.open.163.com/courses/2698?p=xs_yt01\">\n     <img height=\"436\" src=\"https://cms-bucket.ws.126.net/2019/06/26/b2ef8c1d0fed49078cb104f94c9f253e.jpeg\" width=\"280\"/>\n     <span class=\"bg\"></span>\n     <h3>他凭什么甩开同龄人，做职场前5%？</h3>\n     </a>,\n     <a href=\"https://vip.open.163.com/courses/2249?p=xs_yt02\">\n     <img height=\"436\" src=\"https://cms-bucket.ws.126.net/2019/06/27/ffa8db82492446c88efe2d540ed64d6a.jpeg\" width=\"280\"/>\n     <span class=\"bg\"></span>\n     <h3>一个人成熟的标志：与负面情绪和解</h3>\n     </a>,\n     <a href=\"https://vip.open.163.com/courses/1078?p=xs_yt03\">\n     <img height=\"436\" src=\"https://cms-bucket.ws.126.net/2019/06/26/893a6ecab816408cb5971de6ec236dde.jpeg\" width=\"280\"/>\n     <span class=\"bg\"></span>\n     <h3>情商高的人，走到哪儿都大受欢迎</h3>\n     </a>,\n     <a href=\"https://vip.open.163.com/courses/2019?p=xs_yt04\">\n     <img height=\"436\" src=\"https://cms-bucket.ws.126.net/2019/06/26/f48048d211e44c889e241e545b29a000.jpeg\" width=\"280\"/>\n     <span class=\"bg\"></span>\n     <h3>每天5分钟，告别办公室综合症</h3>\n     </a>,\n     <a href=\"http://news.163.com/special/\">新闻专题</a>,\n     <a href=\"http://news.163.com/special/2019qglh/\">\n     <img alt=\"2019年全国两会\" height=\"90\" src=\"https://cms-bucket.ws.126.net/2019/03/07/c8134391d38245dc849b99fbf1ce33b0.png?imageView&amp;thumbnail=300y90\" width=\"300\"/>\n     </a>,\n     <a href=\"http://news.163.com/special/2019qglh/\">2019年全国两会</a>,\n     <a href=\"http://news.163.com/special/zghj70/\">海军成立70周年</a>,\n     <a href=\"http://news.163.com/special/chunyun_2019/\">2019年春运春节</a>,\n     <a href=\"http://news.163.com/special/chang_e4/\">嫦娥四号登月</a>,\n     <a href=\"http://cms-bucket.ws.126.net/2019/06/26/080a0e9f8b014dd5b261f9e988f7f7f9.jpeg\">声明</a>,\n     <a href=\"http://news.163.com/special/00011269/gdmore.html\">高层动态</a>,\n     <a href=\"https://news.163.com/19/0628/11/EIOL0214000189FH.html\">习近平会见联合国秘书长古特雷斯</a>,\n     <a href=\"https://news.163.com/19/0620/14/EI4ESVV9000189FH.html\">习近平抵达平壤 开始对朝鲜进行国事访问</a>,\n     <a class=\"ad_hover_href\" href=\"javascript:;\" target=\"_self\"></a>,\n     <a href=\"http://war.163.com/\">军事</a>,\n     <a href=\"http://news.163.com/air/\">航空</a>,\n     <a href=\"http://war.163.com/photoview/4T8E0001/2301528.html\">\n     </a>]\n\n\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n","slug":"2019-07-02_BeautifulSoup","published":1,"updated":"2021-04-06T13:57:40.677Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckn6zi5s000349ohz5f3ac2us","content":"<h2 id=\"请求\"><a href=\"#请求\" class=\"headerlink\" title=\"请求\"></a>请求</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">result = requests.get(<span class=\"string\">&quot;https://news.163.com/&quot;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从返回result的状态码中，了解到是否请求成功</span></span><br><span class=\"line\">result.status_code</span><br></pre></td></tr></table></figure>\n<pre><code>200\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result.encoding</span><br></pre></td></tr></table></figure>\n<pre><code>&#39;GBK&#39;\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">content = result.content</span><br><span class=\"line\"><span class=\"built_in\">print</span> (content[:<span class=\"number\">1000</span>]) <span class=\"comment\">#前1000个字符</span></span><br></pre></td></tr></table></figure>\n<pre><code>b&#39; &lt;!DOCTYPE HTML&gt;\\n&lt;!--[if IE 6 ]&gt; &lt;html id=&quot;ne_wrap&quot; class=&quot;ne_ua_ie6 ne_ua_ielte8&quot;&gt; &lt;![endif]--&gt;\\n&lt;!--[if IE 7 ]&gt; &lt;html id=&quot;ne_wrap&quot; class=&quot;ne_ua_ie7 ne_ua_ielte8&quot;&gt; &lt;![endif]--&gt;\\n&lt;!--[if IE 8 ]&gt; &lt;html id=&quot;ne_wrap&quot; class=&quot;ne_ua_ie8 ne_ua_ielte8&quot;&gt; &lt;![endif]--&gt;\\n&lt;!--[if IE 9 ]&gt; &lt;html id=&quot;ne_wrap&quot; class=&quot;ne_ua_ie9&quot;&gt; &lt;![endif]--&gt;\\n&lt;!--[if (gte IE 10)|!(IE)]&gt;&lt;!--&gt; &lt;html id=&quot;ne_wrap&quot; phone=&quot;1&quot;&gt; &lt;!--&lt;![endif]--&gt;\\n&lt;head&gt;\\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;\\n&lt;meta name=&quot;model_url&quot; content=&quot;http://news.163.com/special/index2015/&quot; /&gt;\\n&lt;title&gt;\\xcd\\xf8\\xd2\\xd7\\xd0\\xc2\\xce\\xc5&lt;/title&gt;\\n&lt;base target=&quot;_blank&quot; /&gt;\\n&lt;meta name=&quot;keywords&quot; content=&quot;\\xd0\\xc2\\xce\\xc5,\\xd0\\xc2\\xce\\xc5\\xd6\\xd0\\xd0\\xc4,\\xd0\\xc2\\xce\\xc5\\xc6\\xb5\\xb5\\xc0,\\xca\\xb1\\xca\\xc2\\xb1\\xa8\\xb5\\xc0&quot; /&gt;\\n&lt;meta name=&quot;description&quot; content=&quot;\\xd0\\xc2\\xce\\xc5,\\xd0\\xc2\\xce\\xc5\\xd6\\xd0\\xd0\\xc4,\\xb0\\xfc\\xba\\xac\\xd3\\xd0\\xca\\xb1\\xd5\\xfe\\xd0\\xc2\\xce\\xc5,\\xb9\\xfa\\xc4\\xda\\xd0\\xc2\\xce\\xc5,\\xb9\\xfa\\xbc\\xca\\xd0\\xc2\\xce\\xc5,\\xc9\\xe7\\xbb\\xe1\\xd0\\xc2\\xce\\xc5,\\xca\\xb1\\xca\\xc2\\xc6\\xc0\\xc2\\xdb,\\xd0\\xc2\\xce\\xc5\\xcd\\xbc\\xc6\\xac,\\xd0\\xc2\\xce\\xc5\\xd7\\xa8\\xcc\\xe2,\\xd0\\xc2\\xce\\xc5\\xc2\\xdb\\xcc\\xb3,\\xbe\\xfc\\xca\\xc2,\\xc0\\xfa\\xca\\xb7,\\xb5\\xc4\\xd7\\xa8\\xd2\\xb5\\xca\\xb1\\xca\\xc2\\xb1\\xa8\\xb5\\xc0\\xc3\\xc5\\xbb\\xa7\\xcd\\xf8\\xd5\\xbe&quot; /&gt;\\n  &lt;script type=&quot;text/javascript&quot; _keep=&quot;true&quot;&gt;\\n    var matchStr =window.location.href;\\n    var reURL = /^(https):\\\\/\\\\/.+$/;\\n    if(!reURL.test(matchStr))&#123;\\n        windo&#39;\n</code></pre><h2 id=\"模拟登入\"><a href=\"#模拟登入\" class=\"headerlink\" title=\"模拟登入\"></a>模拟登入</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s = requests.session()</span><br><span class=\"line\">data = &#123;<span class=\"string\">&#x27;user&#x27;</span>:<span class=\"string\">&#x27;用户名&#x27;</span>,<span class=\"string\">&#x27;passdw&#x27;</span>:<span class=\"string\">&#x27;密码&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">#post 换成登录的地址，</span></span><br><span class=\"line\">res=s.post(<span class=\"string\">&#x27;http://www.xxx.net/index.php?action=login&#x27;</span>,data);</span><br><span class=\"line\"><span class=\"comment\">#换成抓取的地址</span></span><br><span class=\"line\">s.get(<span class=\"string\">&#x27;http://www.xxx.net/archives/155/&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"BeautifulSoup\"><a href=\"#BeautifulSoup\" class=\"headerlink\" title=\"BeautifulSoup\"></a>BeautifulSoup</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> warnings</span><br><span class=\"line\">warnings.filterwarnings(<span class=\"string\">&quot;ignore&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\">soup = BeautifulSoup(content, fromEncoding=<span class=\"string\">&quot;GB2312&quot;</span>) <span class=\"comment\">#注意这个地方</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(soup)</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;!DOCTYPE HTML&gt;\n&lt;!--[if IE 6 ]&gt; &lt;html id=&quot;ne_wrap&quot; class=&quot;ne_ua_ie6 ne_ua_ielte8&quot;&gt; &lt;![endif]--&gt;&lt;!--[if IE 7 ]&gt; &lt;html id=&quot;ne_wrap&quot; class=&quot;ne_ua_ie7 ne_ua_ielte8&quot;&gt; &lt;![endif]--&gt;&lt;!--[if IE 8 ]&gt; &lt;html id=&quot;ne_wrap&quot; class=&quot;ne_ua_ie8 ne_ua_ielte8&quot;&gt; &lt;![endif]--&gt;&lt;!--[if IE 9 ]&gt; &lt;html id=&quot;ne_wrap&quot; class=&quot;ne_ua_ie9&quot;&gt; &lt;![endif]--&gt;&lt;!--[if (gte IE 10)|!(IE)]&gt;&lt;!--&gt;&lt;html id=&quot;ne_wrap&quot; phone=&quot;1&quot;&gt; &lt;!--&lt;![endif]--&gt;\n&lt;head&gt;\n&lt;meta content=&quot;text/html; charset=utf-8&quot; http-equiv=&quot;Content-Type&quot;/&gt;\n&lt;meta content=&quot;http://news.163.com/special/index2015/&quot; name=&quot;model_url&quot;/&gt;\n&lt;title&gt;网易新闻&lt;/title&gt;\n&lt;base target=&quot;_blank&quot;/&gt;\n&lt;meta content=&quot;新闻,新闻中心,新闻频道,时事报道&quot; name=&quot;keywords&quot;/&gt;\n&lt;meta content=&quot;新闻,新闻中心,包含有时政新闻,国内新闻,国际新闻,社会新闻,时事评论,新闻图片,新闻专题,新闻论坛,军事,历史,的专业时事报道门户网站&quot; name=&quot;description&quot;/&gt;\n&lt;script _keep=&quot;true&quot; type=&quot;text/javascript&quot;&gt;\n    var matchStr =window.location.href;\n    var reURL = /^(https):\\/\\/.+$/;\n    if(!reURL.test(matchStr))&#123;\n        window.location.href = &quot;https://news.163.com/&quot;;\n    &#125;\n  &lt;/script&gt;\n&lt;!-- 适配3g ie8bug--&gt;\n&lt;!-- 广告样式 --&gt;\n&lt;style&gt;\n.channel_relative_2016&#123;\n    position:relative;\n    line-height: 0px;\n&#125;\n.channel_relative_2016_lh&#123;\n    line-height: 0px;\n&#125;\n.channel_ad_2016&#123;\n    height: 17px;\n    display:none;\n    background: rgba(0,0,0,0.6);\n    background: #000\\9;\n    color: #fff;\n    border-radius: 0 8px 0px 0px;\n    line-height: 17px;\n    width: 30px;\n    text-align: left;\n    overflow: hidden;\n    font-size: 12px;\n    font-family: Arial;\n    position:absolute;\n    left:0;\n    bottom:0;\n    z-index:3;\n&#125;\n.channel_ad_text_2016&#123;\n    position: absolute;\n    right: 1px;\n    bottom: -2px;\n    color: #999999;\n    z-index:3;\n    font-size: 12px;\n    font-family: Arial;\n   display:none;\n  line-height: 18px;\n&#125;\n.channel_relative_2016 .channel_ad_2016,.channel_relative_2016 .channel_ad_text_2016&#123;\n    display: inline-block;\n&#125;\n&lt;/style&gt;\n&lt;!-- channel2019_logo样式 --&gt;\n&lt;style type=&quot;text/css&quot;&gt;\n    .channel2019_logo&#123;\n        background: url(http://cms-bucket.ws.126.net/2019/04/25/09e37a6a4dd349468cd38dd79a3b15b7.png) no-repeat !important;\n        width: 152px !important;\n        height: 37px !important;\n        display: block !important;\n        float: left!important;\n    &#125;\n    /*新闻*/\n    .channel2019_news_logo&#123;\n        background-position: 0px 4px !important;\n    &#125;\n    /*科技*/\n    .channel2019_tech_logo&#123;\n        background-position: 0px -96px !important;\n\n    &#125;\n    /*手机*/\n    .channel2019_mobile_logo&#123;\n        background-position: 0px -196px !important;\n\n    &#125;\n    /*数码*/\n    .channel2019_digi_logo&#123;\n        background-position: 0px -296px !important;\n\n    &#125;\n    /*新闻学院*/\n    .channel2019_college_logo&#123;\n        background-position: 0px -396px !important;\n        width: 213px !important;\n    &#125;\n    /*政务*/\n    .channel2019_gov_logo&#123;\n        background-position: 0px -496px !important;\n    &#125;\n    /*军事*/\n    .channel2019_war_logo&#123;\n        background-position: 0px 0px !important;\n        height: 33px !important;\n    &#125;\n    /*航空*/\n    .channel2019_air_logo&#123;\n        background-position: 0px 0px !important;\n        height: 33px !important;\n    &#125;\n   /*新闻排行榜*/\n    .channel2019_newsrank_logo&#123;\n        background-position: 0px 0px !important;\n        height: 33px !important;\n    &#125;\n      /*新闻图片*/\n    .channel2019_newsphoto_logo&#123;\n        background-position: 0px -2200px !important;\n          width: 213px !important;\n        height: 33px !important;\n    &#125;\n    /*体育*/\n    .channel2019_sports_logo&#123;\n        background-position: 0px -796px !important;\n    &#125;\n      /*体育二级页*/\n    .channel2019_sportssub_logo&#123;\n        height: 33px !important;\n        background-position: 0px -800px !important;\n    &#125;\n    /*娱乐*/\n    .channel2019_ent_logo&#123;\n        background-position: 0px -896px !important;\n    &#125;\n    /*音乐*/\n    .channel2019_music_logo&#123;\n        background-position: 0px -900px !important;\n        height: 32px !important;\n    &#125;\n    /*时尚*/\n    .channel2019_fashion_logo&#123;\n        background-position: 0px -1100px !important;\n        height: 32px !important;\n    &#125;\n    /*女人*/\n    .channel2019_lady_logo&#123;\n        background-position: 0px -1196px !important;\n    &#125;\n    /*财经*/\n    .channel2019_money_logo&#123;\n        background-position: 0px -1300px !important;\n    &#125;\n    /*手机图片*/\n    .channel2019_mobilephoto_logo&#123;\n        background-position: 0px -2300px !important;\n        width: 213px !important;\n        height: 33px !important;\n    &#125;\n    /*汽车*/\n    .channel2019_auto_logo&#123;\n        background-position: 0px -1396px !important;\n    &#125;\n    /*旅游*/\n    .channel2019_travel_logo&#123;\n        background-position: 0px -1496px !important;\n    &#125;\n    /*健康*/\n    .channel2019_jiankang_logo&#123;\n        background-position: 0px -1596px !important;\n    &#125;\n    /*教育*/\n    .channel2019_edu_logo&#123;\n        background-position: 0px -1696px !important;\n    &#125;\n    /*艺术*/\n    .channel2019_art_logo&#123;\n        background-position: 0px -1796px !important;\n    &#125;\n    /*亲子*/\n    .channel2019_baby_logo&#123;\n        background-position: 0px -1896px !important;\n    &#125;\n    /*双创*/\n    .channel2019_shuangchuang_logo&#123;\n        background-position: 0px -1996px !important;\n    &#125;\n    /*酒香*/\n    .channel2019_jiu_logo&#123;\n        background-position: 0px -2096px !important;\n    &#125;\n      /*游戏*/\n    .channel2019_game_logo&#123;\n        background-position: 0px -2400px !important;\n    &#125;\n    &lt;/style&gt;\n&lt;script _keep=&quot;true&quot; type=&quot;text/javascript&quot;&gt;\n(function() &#123;\n    if(/s=noRedirect/i.test(location.search)) return; \n    if(/AppleWebKit.*Mobile/i.test(navigator.userAgent) || (/MIDP|SymbianOS|NOKIA|SAMSUNG|LG|NEC|TCL|Alcatel|BIRD|DBTEL|Dopod|PHILIPS|HAIER|LENOVO|MOT-|Nokia|SonyEricsson|SIE-|Amoi|ZTE/.test(navigator.userAgent))) &#123;\n        try &#123;\n            if(/Android|Windows Phone|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent)) &#123;\n                 window.location.href = &quot;https://3g.163.com/touch/news/&quot;;\n            &#125; else if(/iPad/i.test(navigator.userAgent)) &#123;\n                window.location.href = &quot;https://news.163.com/pad/&quot;\n            &#125;\n        &#125; catch(e) &#123;&#125;\n    &#125;   \n&#125;)();\n&lt;/script&gt;\n&lt;script _keep=&quot;true&quot; charset=&quot;gbk&quot; src=&quot;//news.163.com/special/00015CJL/xw_news_data.js&quot;&gt;&lt;/script&gt;\n&lt;!-- 社交传播统计 --&gt;\n&lt;script src=&quot;//static.ws.126.net/163/frontend/libs/antanalysis.min.js&quot;&gt;&lt;/script&gt;\n&lt;script _keep=&quot;true&quot; src=&quot;//static.ws.126.net/163/frontend/antnest/NTM-KFGT6I8U-38.js&quot;&gt;&lt;/script&gt;\n&lt;script crossorigin=&quot;anonymous&quot; src=&quot;https://static.ws.126.net/163/frontend/libs/raven-3.26.2.min.js&quot;&gt;&lt;/script&gt;\n&lt;link href=&quot;https://static.ws.126.net/163/f2e/news/index2016_rmd/css/head~a2a2093f5d52d.css&quot; rel=&quot;stylesheet&quot;/&gt;\n&lt;/head&gt;\n&lt;body class=&quot;news_pc&quot; ne-class=&quot;&#123;&#123;myState.isNs9 ? 'ns9' : 'ns12'&#125;&#125;&quot; ne-module=&quot;/news/index2016_rmd/index2016.js&quot;&gt;\n&lt;div class=&quot;index2016_wrap&quot; id=&quot;index2016_wrap&quot;&gt;\n&lt;div&gt;\n&lt;!-- 节日动画 start --&gt;\n&lt;!-- 节日动画 end --&gt;\n&lt;div class=&quot;common_nav&quot;&gt;\n&lt;link href=&quot;//static.ws.126.net/163/f2e/commonnav2019/css/commonnav_headcss-61ce66f60e.css&quot; rel=&quot;stylesheet&quot;/&gt;\n&lt;!-- urs --&gt;\n&lt;script _keep=&quot;true&quot; src=&quot;//urswebzj.nosdn.127.net/webzj_cdn101/message.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\n&lt;div class=&quot;ntes_nav_wrap&quot; id=&quot;js_N_NTES_wrap&quot;&gt;\n&lt;div class=&quot;ntes-nav&quot; id=&quot;js_N_nav&quot;&gt;\n&lt;div class=&quot;ntes-nav-main clearfix&quot;&gt;\n&lt;div class=&quot;c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-index-title ntes-nav-entry-wide c-fl&quot; href=&quot;http://www.163.com/&quot; title=&quot;网易首页&quot;&gt;网易首页&lt;/a&gt;\n&lt;!-- 应用 --&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select ntes-nav-select-wide ntes-nav-app c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-select-title ntes-nav-entry-bgblack JS_NTES_LOG_FE&quot; href=&quot;http://www.163.com/#f=topnav&quot;&gt;应用\n            &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-select-pop&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://m.163.com/newsapp/#f=topnav&quot;&gt;\n&lt;span&gt;\n&lt;em class=&quot;ntes-nav-app-newsapp&quot;&gt;网易新闻&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://open.163.com/#f=topnav&quot;&gt;\n&lt;span&gt;\n&lt;em class=&quot;ntes-nav-app-open&quot;&gt;网易公开课&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://hongcai.163.com/?from=pcsy-button&quot;&gt;\n&lt;span&gt;\n&lt;em class=&quot;ntes-nav-app-hongcai&quot;&gt;网易红彩&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://u.163.com/aosoutbdbd8&quot;&gt;\n&lt;span&gt;\n&lt;em class=&quot;ntes-nav-app-yanxuan&quot;&gt;网易严选&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://mail.163.com/client/dl.html?from=mail46&quot;&gt;\n&lt;span&gt;\n&lt;em class=&quot;ntes-nav-app-mail&quot;&gt;邮箱大师&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://study.163.com/client/download.htm?from=163app&amp;amp;utm_source=163.com&amp;amp;utm_medium=web_app&amp;amp;utm_campaign=business&quot;&gt;\n&lt;span&gt;\n&lt;em class=&quot;ntes-nav-app-study&quot;&gt;网易云课堂&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;last&quot;&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece47f92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=6b69bfbfac0db5f335232faa957a27bb&amp;amp;target=https%3A%2F%2Fapp.kaola.com%2F%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;\n&lt;em class=&quot;ntes-nav-app-kaola-hg&quot;&gt;网易考拉&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=&quot;c-fr&quot;&gt;\n&lt;!-- 片段开始 --&gt;\n&lt;div class=&quot;ntes-nav-quick-navigation&quot;&gt;\n&lt;a class=&quot;ntes-nav-quick-navigation-btn&quot; href=&quot;javascript:void(0);&quot; id=&quot;js_N_ntes_nav_quick_navigation_btn&quot; target=&quot;_self&quot;&gt;\n&lt;em&gt;快速导航\n              &lt;span class=&quot;menu1&quot;&gt;&lt;/span&gt;\n&lt;span class=&quot;menu2&quot;&gt;&lt;/span&gt;\n&lt;span class=&quot;menu3&quot;&gt;&lt;/span&gt;\n&lt;/em&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-quicknav-pop&quot; id=&quot;js_N_ntes_quicknav_pop&quot;&gt;\n&lt;div class=&quot;ntes-quicknav-list&quot;&gt;\n&lt;div class=&quot;ntes-quicknav-content&quot;&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-1&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;https://news.163.com&quot;&gt;新闻&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/domestic&quot;&gt;国内&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/world&quot;&gt;国际&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/photo&quot;&gt;图片&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://view.163.com&quot;&gt;评论&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://discovery.163.com&quot;&gt;探索&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://war.163.com&quot;&gt;军事&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/localnews/&quot;&gt;本地新闻&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/special/wangsansanhome/&quot;&gt;王三三&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-2&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://sports.163.com&quot;&gt;体育&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sports.163.com/nba&quot;&gt;NBA&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sports.163.com/cba&quot;&gt;CBA&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sports.163.com/allsports&quot;&gt;综合&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sports.163.com/zc&quot;&gt;中超&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sports.163.com/world&quot;&gt;国际足球&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sports.163.com/yc&quot;&gt;英超&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sports.163.com/xj&quot;&gt;西甲&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sports.163.com/yj&quot;&gt;意甲&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-3&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://ent.163.com&quot;&gt;娱乐&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://ent.163.com/star&quot;&gt;明星&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://ent.163.com/photo&quot;&gt;图片&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://ent.163.com/movie&quot;&gt;电影&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://ent.163.com/tv&quot;&gt;电视&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://ent.163.com/music&quot;&gt;音乐&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://ent.163.com/special/gsbjb/&quot;&gt;稿事编辑部&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://ent.163.com/special/focus_ent/&quot;&gt;娱乐FOCUS&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://ent.163.com/special/xbkhz/&quot;&gt;星捕快&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-4&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://money.163.com&quot;&gt;财经&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://money.163.com/stock&quot;&gt;股票&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://quotes.money.163.com/stock&quot;&gt;行情&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://money.163.com/chanjing&quot;&gt;产经&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://money.163.com/ipo&quot;&gt;新股&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://money.163.com/finance&quot;&gt;金融&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://money.163.com/fund&quot;&gt;基金&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://biz.163.com&quot;&gt;商业&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://money.163.com/licai&quot;&gt;理财&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-5&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://auto.163.com&quot;&gt;汽车&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://auto.163.com/buy&quot;&gt;购车&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://auto.163.com/depreciate&quot;&gt;行情&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://product.auto.163.com/finder&quot;&gt;选车&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://product.auto.163.com&quot;&gt;车型库&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://auto.163.com/news&quot;&gt;行业&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://auto.163.com/chezhu&quot;&gt;用车&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://auto.163.com/photo&quot;&gt;汽车图片&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n\n                  &lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-6&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://tech.163.com&quot;&gt;科技&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://tech.163.com/telecom/&quot;&gt;通信&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://tech.163.com/it&quot;&gt;IT&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://tech.163.com/internet&quot;&gt;互联网&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://tech.163.com/special/ydhlw&quot;&gt;移动互联网&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://tech.163.com/special/chzt&quot;&gt;特别策划&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://tech.163.com/special/wudaokou&quot;&gt;五道口沙龙&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://tech.163.com/special/yyzd&quot;&gt;易语中的&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://tech.163.com/special&quot;&gt;专题&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-7&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://lady.163.com&quot;&gt;女人&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://baby.163.com&quot;&gt;亲子&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://fashion.163.com/art&quot;&gt;艺术&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://fashion.163.com&quot;&gt;时尚&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://shoucang.163.com&quot;&gt;收藏&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://lady.163.com/sense&quot;&gt;情感&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://lady.163.com/astro&quot;&gt;星座&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://lady.163.com/beauty&quot;&gt;美容&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://cosmetic.lady.163.com/trial&quot;&gt;免费试用&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-8&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://mobile.163.com&quot;&gt;手机&lt;/a&gt;&lt;span&gt;/&lt;/span&gt;&lt;a href=&quot;http://digi.163.com/&quot;&gt;数码&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://mobile.163.com/mi&quot;&gt;移动&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://digi.163.com/pc&quot;&gt;电脑&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://product.mobile.163.com&quot;&gt;手机库&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://hea.163.com/&quot;&gt;家电&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://digi.163.com/smart&quot;&gt;智能硬件&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://digi.163.com/dc&quot;&gt;相机&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://v.mobile.163.com&quot;&gt;手机视频&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n\n                  &lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-9&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://house.163.com&quot;&gt;房产&lt;/a&gt;&lt;span&gt;/&lt;/span&gt;&lt;a href=&quot;http://home.163.com&quot;&gt;家居&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://bj.house.163.com&quot;&gt;北京房产&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sh.house.163.com&quot;&gt;上海房产&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://gz.house.163.com&quot;&gt;广州房产&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://house.163.com/city&quot;&gt;全部分站&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://xf.house.163.com&quot;&gt;楼盘库&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://home.163.com/jiaju/&quot;&gt;家具&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://home.163.com/weiyu/&quot;&gt;卫浴&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://home.163.com/special/jiajuyigui&quot;&gt;衣柜&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-10&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://travel.163.com&quot;&gt;旅游&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://travel.163.com/outdoor&quot;&gt;户外&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://guizhou.travel.163.com&quot;&gt;贵州&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://travel.163.com/food&quot;&gt;美食&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://jingdian.travel.163.com/domestic/1000066937&quot;&gt;四川&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://jingdian.travel.163.com&quot;&gt;景点&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://jingdian.travel.163.com/domestic/1000066944&quot;&gt;新疆&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://travel.163.com/special/travellist/#f=endnav&quot;&gt;专题&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://jingdian.travel.163.com/domestic/1000066926/#f=endnav&quot;&gt;西藏&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-11&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://edu.163.com&quot;&gt;教育&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://edu.163.com/yimin&quot;&gt;移民&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://edu.163.com/kaoyan&quot;&gt;考研&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://edu.163.com/liuxue&quot;&gt;留学&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://edu.163.com/special/official&quot;&gt;公务员&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://edu.163.com/en&quot;&gt;外语&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://kids.163.com&quot;&gt;中小学&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://edu.163.com/gaokao&quot;&gt;高考&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://daxue.163.com&quot;&gt;校园&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;div class=&quot;ntes-nav-sitemap&quot;&gt;&lt;a href=&quot;http://sitemap.163.com/&quot;&gt;&lt;i&gt;&lt;/i&gt;查看网易地图&lt;/a&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=&quot;c-fr&quot;&gt;\n&lt;div class=&quot;c-fl&quot; id=&quot;js_N_navLoginBefore&quot;&gt;\n&lt;div class=&quot;js_loginframe ntes-nav-login ntes-nav-login-normal&quot; id=&quot;js_N_navHighlight&quot;&gt;\n&lt;a class=&quot;ntes-nav-login-title&quot; href=&quot;http://reg.163.com/&quot; id=&quot;js_N_nav_login_title&quot;&gt;登录&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-loginframe-pop&quot; id=&quot;js_N_login_wrap&quot;&gt;\n&lt;!--加载登陆组件--&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select ntes-nav-select-wide JS_NTES_LOG_FE c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-register&quot; href=&quot;http://reg.email.163.com/mailregAll/reg0.jsp?from=163navi&amp;amp;regPage=163&quot;&gt;注册免费邮箱\n                &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-select-pop&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot; style=&quot;width:210px;&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://reg.vip.163.com/register.m?from=topnav&quot;&gt;\n&lt;span style=&quot;width:190px;&quot;&gt;注册VIP邮箱（特权邮箱，付费）&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;last JS_NTES_LOG_FE&quot;&gt;\n&lt;a href=&quot;http://mail.163.com/client/dl.html?from=mail46&quot;&gt;\n&lt;span style=&quot;width:190px;&quot;&gt;免费下载网易官方手机邮箱应用&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=&quot;c-fl&quot; id=&quot;js_N_navLoginAfter&quot; style=&quot;display:none&quot;&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select ntes-nav-logined JS_NTES_LOG_FE&quot; id=&quot;js_N_logined_warp&quot;&gt;\n&lt;span class=&quot;ntes-nav-select-title ntes-nav-logined-userinfo&quot;&gt;\n&lt;span class=&quot;ntes-nav-logined-username&quot; id=&quot;js_N_navUsername&quot;&gt;&lt;/span&gt;\n&lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;/span&gt;\n&lt;div class=&quot;ntes-nav-select-pop&quot; id=&quot;js_login_suggest_wrap&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot; id=&quot;js_logined_suggest&quot;&gt;&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;a class=&quot;ntes-nav-entry-wide c-fl&quot; id=&quot;js_N_navLogout&quot; target=&quot;_self&quot;&gt;安全退出&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;ul class=&quot;ntes-nav-inside&quot;&gt;\n&lt;li&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-mobile-title ntes-nav-entry-bgblack&quot; href=&quot;http://www.163.com/newsapp/#f=163nav&quot;&gt;\n&lt;em class=&quot;ntes-nav-entry-mobile&quot;&gt;移动端&lt;/em&gt;\n&lt;/a&gt;\n&lt;div class=&quot;qrcode-img&quot;&gt;\n&lt;a href=&quot;http://www.163.com/newsapp/#f=163nav&quot;&gt;\n&lt;img src=&quot;//static.ws.126.net/f2e/include/common_nav/images/topapp.jpg&quot;/&gt;\n&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-huatian ntes-nav-entry-bgblack&quot; href=&quot;https://open.163.com/&quot; id=&quot;js_love_url&quot;&gt;\n&lt;em class=&quot;ntes-nav-entry-huatian&quot;&gt;网易公开课&lt;/em&gt;\n&lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;span class=&quot;ntes-nav-msg&quot;&gt;\n&lt;em class=&quot;ntes-nav-msg-num&quot;&gt;&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-select-pop ntes-nav-select-pop-huatian&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://vip.open.163.com&quot;&gt;\n&lt;span&gt;付费精品&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://open.163.com/ted/&quot;&gt;\n&lt;span&gt;TED&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://open.163.com/ocw/&quot;&gt;\n&lt;span&gt;国际名校公开课&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://open.163.com/cuvocw/&quot;&gt;\n&lt;span&gt;中国大学视频公开课&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://open.163.com/appreciation&quot;&gt;\n&lt;span&gt;赏课&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://open.163.com/khan/&quot;&gt;\n&lt;span&gt;可汗学院&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;last&quot;&gt;\n&lt;a href=&quot;http://open.163.com/special/appdownload_pc/&quot;&gt;\n&lt;span&gt;下载公开课&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-kaola ntes-nav-entry-bgblack&quot; href=&quot;http://da.kaola.com/redirect?t=5aaebece48792c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=d638f275b1755320e845734e53e897ee&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot; id=&quot;js_kaola_url&quot;&gt;\n&lt;em class=&quot;ntes-nav-entry-kaola&quot;&gt;网易考拉&lt;/em&gt;\n&lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;span class=&quot;ntes-nav-msg ntes-nav-kaola-msg&quot; id=&quot;js_N_navKaolaMsg&quot;&gt;\n&lt;em class=&quot;ntes-nav-msg-num&quot;&gt;&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-select-pop ntes-nav-select-pop-kaola&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece48f92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=b3e224752b2cad85e9831e8c6cf7fbbd&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fbimaibangdan.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;1000元新人大礼包&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece49392c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=fd8e43f4a20a26fbe60f7e7de1f17efe&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;新人专享进口好货&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece49392c01&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=21bcd5b595fc235cfd11e3e1cff14177&amp;amp;target=https%3A%2F%2Factivity.kaola.com%2Factivity%2FflashSaleIndex%2Fshow.html%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;今日限时抢购&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece49792c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=ecc40777cb2d68a3d9fb078b232f081d&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfyrzolcpagerz.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;营养保健&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece49b92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=0cdd5a920c768340ffc12eccd659341d&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fnewpc.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;个人洗护&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4a392c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=ee49a3a793f22e648ac616f5dab061dd&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjpwmb9zcpagesl.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;美容彩妆&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4a792c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=6eb2598fd20963efc203a4e3fe88f4e2&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fmyxrq.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;母婴儿童&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4ab92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=3946ce460ba655c11afac69855dfc02b&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Ffoodnewcustomers.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;环球美食&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;last&quot;&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4af92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=2eee7290051863737a434d44f3c0d46f&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fnewtalent.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;家居生活&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-lofter ntes-nav-entry-bgblack&quot; href=&quot;http://you.163.com/?from=web_fc_menhu_xinrukou_1&quot; id=&quot;js_lofter_icon_url&quot;&gt;\n&lt;em class=&quot;ntes-nav-entry-lofter&quot;&gt;网易严选&lt;/em&gt;\n&lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;span class=&quot;ntes-nav-msg&quot; id=&quot;js_N_navLofterMsg&quot;&gt;\n&lt;em class=&quot;ntes-nav-msg-num&quot;&gt;&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-select-pop ntes-nav-select-pop-lofter&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot; id=&quot;js_lofter_pop_url&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com/act/static/Fb2d1OZ714.html?from=web_fc_menhu_xinrukou_1&quot;&gt;\n&lt;span&gt;888元现金券&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com/manufacturer/list?from=web_fc_menhu_xinrukou_3&quot;&gt;\n&lt;span&gt;品牌制造商爆款&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com/item/recommend?from=web_fc_menhu_xinrukou_4&quot;&gt;\n&lt;span&gt;999+人气好评品&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com/flashSale/index?from=web_fc_menhu_xinrukou_5&quot;&gt;\n&lt;span&gt;限时特惠&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com/item/list?categoryId=1005000&amp;amp;from=web_fc_menhu_xinrukou_7&quot;&gt;\n&lt;span&gt;居家床品&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com/item/list?categoryId=1005001&amp;amp;from=web_fc_menhu_xinrukou_8&quot;&gt;\n&lt;span&gt;精致餐厨&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com/item/list?categoryId=1008000&amp;amp;from=web_fc_menhu_xinrukou_9&quot;&gt;\n&lt;span&gt;箱包鞋类&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com/item/list?categoryId=1010000&amp;amp;from=web_fc_menhu_xinrukou_10&quot;&gt;\n&lt;span&gt;经典服饰&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;last&quot;&gt;\n&lt;a href=&quot;http://you.163.com/item/list?categoryId=1005002&amp;amp;from=web_fc_menhu_xinrukou_11&quot;&gt;\n&lt;span&gt;健康美食&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-money ntes-nav-entry-bgblack&quot; href=&quot;http://pay.163.com/&quot;&gt;\n&lt;em class=&quot;ntes-nav-entry-money&quot;&gt;支付&lt;/em&gt;\n&lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-select-pop ntes-nav-select-pop-temp&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://pay.163.com/#f=topnav&quot;&gt;\n&lt;span&gt;一卡通充值&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://ecard.163.com/script/index#f=topnav&quot;&gt;\n&lt;span&gt;一卡通购买&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://k.163.com/?product=163&amp;amp;trackid=01&quot;&gt;\n&lt;span&gt;网易白金卡&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://epay.163.com/&quot;&gt;\n&lt;span&gt;我的网易支付&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://3c.163.com/?from=wangyimenhu16&quot;&gt;\n&lt;span&gt;网易智造&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;last&quot;&gt;\n&lt;a href=&quot;http://lq.163.com?from=neteasemoney&quot;&gt;\n&lt;span&gt;网易来钱-借现金&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-cart ntes-nav-entry-bgblack&quot; href=&quot;http://baoxian.163.com/car/?from=mhgwc&quot;&gt;\n&lt;em class=&quot;ntes-nav-entry-cart&quot;&gt;电商&lt;/em&gt;\n&lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-select-pop ntes-nav-select-pop-temp&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com?from=web_in_wydaohang&quot;&gt;\n&lt;span&gt;严选&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://lq.163.com?from=neteasebuy&quot;&gt;\n&lt;span&gt;我要借钱&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;last&quot;&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4b392c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=d15f8f9d72ccc507aeefda91b43c0cd2&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;网易考拉&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-mail ntes-nav-entry-bgblack&quot; id=&quot;js_mail_url&quot;&gt;\n&lt;em class=&quot;ntes-nav-entry-mail&quot;&gt;邮箱&lt;/em&gt;\n&lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;span class=&quot;ntes-nav-msg&quot; id=&quot;js_N_navMailMsg&quot;&gt;\n&lt;em class=&quot;ntes-nav-msg-num&quot; id=&quot;js_N_navMailMsgNum&quot;&gt;&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-select-pop ntes-nav-select-pop-mail&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://email.163.com/#f=topnav&quot;&gt;\n&lt;span&gt;免费邮箱&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://vipmail.163.com/#f=topnav&quot;&gt;\n&lt;span&gt;VIP邮箱&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://qiye.163.com/#f=topnav&quot;&gt;\n&lt;span&gt;企业邮箱&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://reg.email.163.com/mailregAll/reg0.jsp?from=ntes_nav&amp;amp;regPage=163&quot;&gt;\n&lt;span&gt;免费注册&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://reg.email.163.com/unireg/call.do?cmd=register.entrance&amp;amp;flow=mobile&amp;amp;from=ntes_nav&quot;&gt;\n&lt;span&gt;快速注册&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;last&quot;&gt;\n&lt;a href=&quot;http://mail.163.com/dashi/dlpro.html?from=mail46&quot;&gt;\n&lt;span&gt;客户端下载&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;script src=&quot;//static.ws.126.net/163/f2e/commonnav2019/js/commonnav_headjs-2f356198e6.js&quot;&gt;&lt;/script&gt;\n&lt;/div&gt;\n&lt;!-- 节日背景 --&gt;\n&lt;div class=&quot;ns-bg-wrap&quot;&gt;\n&lt;div class=&quot;N-nav-channel JS_NTES_LOG_FE&quot; data-module-name=&quot;xwwzy_11_headdaohang&quot;&gt;\n&lt;a class=&quot;first&quot; href=&quot;https://news.163.com/&quot;&gt;新闻&lt;/a&gt;&lt;a href=&quot;http://sports.163.com/&quot;&gt;体育&lt;/a&gt;&lt;a href=&quot;http://sports.163.com/nba/&quot;&gt;NBA&lt;/a&gt;&lt;a href=&quot;http://ent.163.com/&quot;&gt;娱乐&lt;/a&gt;&lt;a href=&quot;http://money.163.com/&quot;&gt;财经&lt;/a&gt;&lt;a href=&quot;http://money.163.com/stock/&quot;&gt;股票&lt;/a&gt;&lt;a href=&quot;http://auto.163.com/&quot; id=&quot;_link_auto&quot;&gt;汽车&lt;/a&gt;&lt;a href=&quot;http://tech.163.com/&quot;&gt;科技&lt;/a&gt;&lt;a href=&quot;http://mobile.163.com/&quot;&gt;手机&lt;/a&gt;&lt;a href=&quot;http://digi.163.com/&quot;&gt;数码&lt;/a&gt;&lt;a href=&quot;http://lady.163.com/&quot;&gt;女人&lt;/a&gt;&lt;a href=&quot;http://v.163.com/&quot;&gt;直播&lt;/a&gt;&lt;a href=&quot;http://v.163.com/special/video/#tuijian&quot;&gt;视频&lt;/a&gt;&lt;a href=&quot;http://travel.163.com/&quot;&gt;旅游&lt;/a&gt;&lt;a href=&quot;http://house.163.com/&quot; id=&quot;houseUrl&quot;&gt;房产&lt;/a&gt;&lt;a href=&quot;http://home.163.com/&quot; id=&quot;homeUrl&quot;&gt;家居&lt;/a&gt;&lt;a href=&quot;http://edu.163.com/&quot;&gt;教育&lt;/a&gt;&lt;a href=&quot;http://book.163.com/&quot;&gt;读书&lt;/a&gt;&lt;a href=&quot;https://news.163.com/&quot; id=&quot;_link_game&quot;&gt;本地&lt;/a&gt;&lt;a href=&quot;http://jiankang.163.com/&quot;&gt;健康&lt;/a&gt;&lt;a href=&quot;http://rd.da.netease.com/redirect?t=5802fb18cf033c80&amp;amp;p=e17af55c&amp;amp;proId=1024&amp;amp;target=https%3A%2F%2Fwww.kaola.com%2F%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;海淘&lt;/a&gt;&lt;a class=&quot;last&quot; href=&quot;http://art.163.com/&quot;&gt;艺术&lt;/a&gt;\n&lt;/div&gt;\n&lt;!-- 游戏替换为本地，并定向 0310--&gt;\n&lt;!-- 配置定向城市 --&gt;\n&lt;script _keep=&quot;true&quot; type=&quot;text/javascript&quot;&gt;\nvar HouseNavBendiTxt = &#123;\n    &quot;province&quot;: [\n        &#123;\n            &quot;name&quot;: &quot;北京市&quot;,\n            &quot;shortName&quot;: &quot;北京&quot;,\n            &quot;url&quot;:&quot;http://bj.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;上海市&quot;,\n            &quot;shortName&quot;: &quot;上海&quot;,\n            &quot;url&quot;:&quot;http://sh.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;天津市&quot;,\n            &quot;shortName&quot;: &quot;天津&quot;,\n            &quot;url&quot;:&quot;http://tj.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;广东省&quot;,\n            &quot;shortName&quot;: &quot;广东&quot;,\n            &quot;url&quot;:&quot;http://gd.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;江苏省&quot;,\n            &quot;shortName&quot;: &quot;江苏&quot;,\n            &quot;url&quot;:&quot;http://js.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;浙江省&quot;,\n            &quot;shortName&quot;: &quot;浙江&quot;,\n            &quot;url&quot;:&quot;http://zj.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;四川省&quot;,\n            &quot;shortName&quot;: &quot;四川&quot;,\n            &quot;url&quot;:&quot;http://sc.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;黑龙江省&quot;,\n            &quot;shortName&quot;: &quot;黑龙江&quot;,\n            &quot;url&quot;:&quot;http://hlj.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;吉林省&quot;,\n            &quot;shortName&quot;: &quot;吉林&quot;,\n            &quot;url&quot;:&quot;http://jl.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;辽宁省&quot;,\n            &quot;shortName&quot;: &quot;辽宁&quot;,\n            &quot;url&quot;:&quot;http://liaoning.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;内蒙古自治区&quot;,\n            &quot;shortName&quot;: &quot;内蒙古&quot;,\n            &quot;url&quot;:&quot;http://hhht.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;河北省&quot;,\n            &quot;shortName&quot;: &quot;河北&quot;,\n            &quot;url&quot;:&quot;http://hebei.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;河南省&quot;,\n            &quot;shortName&quot;: &quot;河南&quot;,\n            &quot;url&quot;:&quot;http://henan.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;山东省&quot;,\n            &quot;shortName&quot;: &quot;山东&quot;,\n            &quot;url&quot;:&quot;http://sd.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;陕西省&quot;,\n            &quot;shortName&quot;: &quot;陕西&quot;,\n            &quot;url&quot;:&quot;http://shanxi.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;甘肃省&quot;,\n            &quot;shortName&quot;: &quot;甘肃&quot;,\n            &quot;url&quot;:&quot;http://gs.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;宁夏回族自治区&quot;,\n            &quot;shortName&quot;: &quot;宁夏&quot;,\n            &quot;url&quot;:&quot;http://ningxia.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;新疆维吾尔自治区&quot;,\n            &quot;shortName&quot;: &quot;新疆&quot;,\n            &quot;url&quot;:&quot;http://xj.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;安徽省&quot;,\n            &quot;shortName&quot;: &quot;安徽&quot;,\n            &quot;url&quot;:&quot;http://ah.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;福建省&quot;,\n            &quot;shortName&quot;: &quot;福建&quot;,\n            &quot;url&quot;:&quot;http://fj.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;广西壮族自治区&quot;,\n            &quot;shortName&quot;: &quot;广西&quot;,\n            &quot;url&quot;:&quot;http://gx.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;重庆市&quot;,\n            &quot;shortName&quot;: &quot;重庆&quot;,\n            &quot;url&quot;:&quot;http://chongqing.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;湖北省&quot;,\n            &quot;shortName&quot;: &quot;湖北&quot;,\n            &quot;url&quot;:&quot;http://hb.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;江西省&quot;,\n            &quot;shortName&quot;: &quot;江西&quot;,\n            &quot;url&quot;:&quot;http://jx.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;海南省&quot;,\n            &quot;shortName&quot;: &quot;海南&quot;,\n            &quot;url&quot;:&quot;http://hn.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;贵州省&quot;,\n            &quot;shortName&quot;: &quot;贵州&quot;,\n            &quot;url&quot;:&quot;http://gz.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;云南省&quot;,\n            &quot;shortName&quot;: &quot;云南&quot;,\n            &quot;url&quot;:&quot;http://yn.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;湖南省&quot;,\n            &quot;shortName&quot;: &quot;上海&quot;,\n            &quot;url&quot;:&quot;http://sh.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;山西省&quot;,\n            &quot;shortName&quot;: &quot;山西&quot;,\n            &quot;url&quot;:&quot;http://sx.news.163.com&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;西藏自治区&quot;,\n            &quot;shortName&quot;: &quot;北京&quot;,\n            &quot;url&quot;:&quot;http://bj.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;香港特别行政区&quot;,\n            &quot;shortName&quot;: &quot;广东&quot;,\n            &quot;url&quot;:&quot;http://gd.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;澳门特别行政区&quot;,\n            &quot;shortName&quot;: &quot;广东&quot;,\n            &quot;url&quot;:&quot;http://gd.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;台湾省&quot;,\n            &quot;shortName&quot;: &quot;广东&quot;,\n            &quot;url&quot;:&quot;http://gd.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;天津市&quot;,\n            &quot;shortName&quot;: &quot;北京&quot;,\n            &quot;url&quot;:&quot;http://bj.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;青海省&quot;,\n            &quot;shortName&quot;: &quot;北京&quot;,\n            &quot;url&quot;:&quot;http://bj.news.163.com/&quot;\n        &#125;\n    ],\n    &quot;city&quot;: [\n        &#123;\n            &quot;name&quot;: &quot;大连市&quot;,\n            &quot;shortName&quot;: &quot;大连&quot;,\n            &quot;url&quot;:&quot;http://dl.news.163.com&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;青岛市&quot;,\n            &quot;shortName&quot;: &quot;青岛&quot;,\n            &quot;url&quot;:&quot;http://qingdao.news.163.com&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;宁波市&quot;,\n            &quot;shortName&quot;: &quot;宁波&quot;,\n            &quot;url&quot;:&quot;http://ningbo.news.163.com&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;厦门市&quot;,\n            &quot;shortName&quot;: &quot;厦门&quot;,\n            &quot;url&quot;:&quot;http://xiamen.news.163.com&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;深圳市&quot;,\n            &quot;shortName&quot;: &quot;深圳&quot;,\n            &quot;url&quot;:&quot;http://shenzhen.news.163.com/&quot;\n        &#125;\n    ],\n    &quot;defalt&quot;: &#123;\n            &quot;name&quot;: &quot;&quot;,\n            &quot;shortName&quot;: &quot;本地&quot;,\n            &quot;url&quot;:&quot;http://news.163.com/&quot;\n        &#125;\n&#125;;\n&lt;/script&gt;\n&lt;script _keep=&quot;true&quot; type=&quot;text/javascript&quot;&gt;\n    //本地设置定向省份\n    function setBendiName()&#123;\n        var js_nav_bendi = document.getElementById(&quot;_link_game&quot;);\n        var cityname = &quot;&quot;;\n        var cityurl = &quot;&quot;;\n        var _loc = window.localAddress;\n        if(!js_nav_bendi)\n            return;\n        if(HouseNavBendiTxt.city &amp;&amp; _loc)&#123;\n            var citylist = HouseNavBendiTxt.city;\n            var localcity = _loc.city;\n            for(var i=0;i&lt;citylist.length;i++)&#123;\n                if(citylist[i].name == localcity)&#123;\n                    cityname = citylist[i].shortName;\n                    cityurl = citylist[i].url;\n                    break;\n                &#125;\n            &#125;\n        &#125;\n        if(cityname == &quot;&quot; &amp;&amp; cityurl == &quot;&quot; &amp;&amp; HouseNavBendiTxt.province &amp;&amp; _loc)&#123;\n            var provincelist = HouseNavBendiTxt.province;\n            var localprovince = _loc.province;\n            for(var i=0;i&lt;provincelist.length;i++)&#123;\n                if(provincelist[i].name == localprovince)&#123;\n                    cityname = provincelist[i].shortName;\n                    cityurl = provincelist[i].url;\n                    break;\n                &#125;\n            &#125;\n        &#125;\n        if(js_nav_bendi &amp;&amp; cityname != &quot;&quot; &amp;&amp; cityurl != &quot;&quot;)&#123;\n            js_nav_bendi.innerHTML = cityname;\n            js_nav_bendi.href = cityurl;\n        &#125;\n        if(js_nav_bendi &amp;&amp; cityname == &quot;&quot; &amp;&amp; cityurl == &quot;&quot;)&#123;\n            js_nav_bendi.innerHTML = &quot;本地&quot;;\n            js_nav_bendi.href = &quot;http://news.163.com&quot;;\n        &#125;\n    &#125;\n    function BENDI_NAV_CALLBACK(data)&#123;\n       if(data &amp;&amp; data.result)&#123;\n            if(window.HouseNavBendiTxt)&#123;\n                window.localAddress = data.result;\n                setBendiName();\n            &#125; \n       &#125;\n    &#125;;\n\n    if(window.localAddress)&#123;\n        if(window.HouseNavBendiTxt)&#123;\n            setBendiName();\n        &#125; \n    &#125;else&#123;\n        var url = &quot;//ipservice.163.com/locate/api/getLocByIp?key=C6E22B7D480E3312C74EC7EF013E50C5&amp;callback=BENDI_NAV_CALLBACK&quot;;\n        var script = document.createElement(&#39;script&#39;);\n        script.setAttribute(&#39;src&#39;, url);\n        document.getElementsByTagName(&#39;head&#39;)[0].appendChild(script);\n    &#125;\n&lt;/script&gt;\n&lt;div class=&quot;index2016_content&quot;&gt;\n&lt;!-- 头部广告 开始--&gt;\n&lt;div class=&quot;ns_area index_top_ad channel_relative_2016&quot;&gt;\n&lt;!--16新闻首页顶通--&gt;\n&lt;div adtype=&quot;topColumnAd&quot; class=&quot;at_item common_ad_item top_ad_column&quot; requesturl=&quot;https://nex.163.com/q?app=7BE0FC82&amp;amp;c=news&amp;amp;l=11&amp;amp;site=netease&amp;amp;affiliate=news&amp;amp;cat=homepage&amp;amp;type=column1200x125_960x100&amp;amp;location=10&quot;&gt;&lt;/div&gt;\n&lt;span class=&quot;channel_ad_2016&quot;&gt;广告&lt;/span&gt;\n&lt;/div&gt;\n&lt;!-- 头部广告 结束--&gt;\n&lt;!-- 头部导航 开始--&gt;\n&lt;div class=&quot;index_head&quot;&gt;\n&lt;div ne-module=&quot;/news/index2016_rmd/modules/head/head.js&quot;&gt;\n&lt;div class=&quot;ns_area hd&quot;&gt;\n&lt;h1&gt;\n&lt;a class=&quot;channel2019_logo channel2019_news_logo&quot; href=&quot;https://news.163.com/&quot;&gt;网易新闻有态度&lt;/a&gt;\n&lt;/h1&gt;\n&lt;!-- &lt;div class=&quot;top-search&quot;&gt;\n        &lt;form action=&quot;http://news.yodao.com/search&quot; method=&quot;get&quot; name=&quot;nisearch_top&quot; id=&quot;formtop&quot; target=&quot;_blank&quot;&gt;\n            &lt;input type=&quot;hidden&quot; name=&quot;keyfrom&quot; value=&quot;sports.163&quot;&gt;\n            &lt;input type=&quot;hidden&quot; name=&quot;suser&quot; value=&quot;user163&quot;&gt;\n            &lt;input type=&quot;hidden&quot; name=&quot;ue&quot; value=&quot;gbk&quot;&gt;\n            &lt;div class=&quot;search-input&quot;&gt; &lt;span class=&quot;hidden&quot;&gt;搜索&lt;/span&gt;\n                &lt;input type=&quot;text&quot; name=&quot;q&quot; id=&quot;searchInput_top&quot; onfocus=&quot;this.value=&#39;&#39;&quot; value=&quot;输入关键字&quot; class=&quot;text-box &quot;&gt;\n                &lt;input type=&quot;submit&quot; name=&quot;Submit&quot; value=&quot;&quot; tabindex=&quot;0&quot; title=&quot;搜索&quot; class=&quot;search-submit&quot; id=&quot;sb_form_go&quot;&gt;\n            &lt;/div&gt;\n        &lt;/form&gt;\n    &lt;/div&gt; --&gt;\n&lt;!-- 天气 --&gt;\n&lt;div class=&quot;ns-lid-weather&quot; id=&quot;nsWeatherTop&quot;&gt;\n&lt;div class=&quot;ns-weather&quot; id=&quot;nsWeather&quot;&gt;\n&lt;a href=&quot;http://news.163.com/weather/&quot;&gt;\n&lt;script ne-repeat=&quot;weather in weatherInfo&quot; type=&quot;text/template&quot;&gt;\n                &lt;img class=&quot;ns-weather-icon&quot; ne-src=&quot;http://static.ws.126.net/f2e/news/index2015/img/weather/&lt;%=weather.icon%&gt;&quot;&gt;\n                &lt;div class=&quot;ns-weather-text&quot;&gt;&lt;%=weather.weather%&gt;&lt;/div&gt;\n                &lt;div class=&quot;ns-weather-info&quot;&gt;&lt;%=weather.temp2%&gt;°~&lt;%=weather.temp1%&gt;°&lt;/div&gt;\n                &lt;div class=&quot;ns-weather-city&quot;&gt;&lt;%=weather.city%&gt;&lt;/div&gt;\n            &lt;/script&gt;\n&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=&quot;bd&quot;&gt;\n&lt;div class=&quot;ns_area list&quot;&gt;\n&lt;ul&gt;\n&lt;li class=&quot;first&quot;&gt;&lt;a href=&quot;http://www.163.com/&quot;&gt;首页&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://news.163.com/rank/&quot;&gt;排行&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://news.163.com/photo/#Current&quot;&gt;图片&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;menu_guonei&quot;&gt;&lt;a href=&quot;http://news.163.com/domestic/&quot;&gt;国内&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;menu_guoji&quot;&gt;&lt;a href=&quot;http://news.163.com/world/&quot;&gt;国际&lt;/a&gt;&lt;/li&gt;\n&lt;!--&lt;li class=&quot;menu_shehui&quot;&gt;&lt;a href=&quot;http://news.163.com/shehui/&quot;&gt;社会&lt;/a&gt;&lt;/li&gt;--&gt;\n&lt;li&gt;&lt;a href=&quot;http://data.163.com/special/datablog/&quot;&gt;数读&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;menu_war&quot;&gt;&lt;a href=&quot;http://war.163.com/&quot;&gt;军事&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;menu_hangkong&quot;&gt;&lt;a href=&quot;http://news.163.com/air/&quot;&gt;航空&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;menu_wurenji&quot;&gt;&lt;a href=&quot;http://news.163.com/uav/&quot;&gt;无人机&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://news.163.com/college&quot;&gt;新闻学院&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://gov.163.com/&quot;&gt;政务&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://gongyi.163.com/&quot;&gt;公益&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://media.163.com/&quot;&gt;媒体&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;last&quot;&gt;&lt;a href=&quot;http://news.163.com/special/wangsansanhome/&quot;&gt;王三三&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 头部导航 结束--&gt;\n&lt;!-- 内容区域 开始 --&gt;\n&lt;div class=&quot;ns_area clearfix index_main&quot;&gt;\n&lt;!-- 原创栏目 开始 --&gt;\n&lt;div class=&quot;main_origina_column&quot; id=&quot;js_origina_column&quot;&gt;\n&lt;div ne-module=&quot;/news/index2016_rmd/modules/originacolumn/originacolumn.js&quot;&gt;\n&lt;div class=&quot;origina_column_warp&quot;&gt;\n&lt;h2&gt;\n&lt;span&gt;新闻各有态度&lt;/span&gt;\n&lt;/h2&gt;\n&lt;div class=&quot;scroll_bd&quot; ne-role=&quot;scroll_bd&quot;&gt;\n&lt;div class=&quot;scroll_column_bd&quot;&gt;\n&lt;ul class=&quot;scroll_ul&quot;&gt;\n&lt;!-- 回声 开始 --&gt;\n&lt;!-- 回声 结束 --&gt;\n&lt;!-- 数读 开始 --&gt;\n&lt;li class=&quot;cell cell_sd cell_hover&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;a class=&quot;tags tag_sd&quot; href=&quot;http://data.163.com/special/datablog/&quot;&gt;数读&lt;/a&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://data.163.com/19/0626/14/EIJQJG9L000181IU.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                中国哪里的地铁最拥挤？\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;中国哪里的地铁最拥挤？&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/30e8760df3044e29a18fac3514dd22b1.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://data.163.com/19/0625/11/EIH0CQEK00019GOE.html&quot;&gt;娶一个潮汕老婆到底是什么体验&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://data.163.com/19/0621/17/EI7BLS3600019GOE.html&quot;&gt;不瞒你说，成都早餐好吃到爆&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 数读 结束 --&gt;\n&lt;!-- 人间 开始 --&gt;\n&lt;li class=&quot;cell cell_rj&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;a class=&quot;tags tag_rj&quot; href=&quot;http://renjian.163.com/&quot;&gt;人间&lt;/a&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0628/14/EIP21K41000181RV.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                小白作者的变现之路\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;小白作者的变现之路&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/27f33fcbfcec4b42b6837807b7a0883f.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0627/16/EIML2HJO000181RV.html&quot;&gt;被毒虫男友拖下水的女大学生&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0626/13/EIJPJMCH000181RV.html&quot;&gt;领导，求你让我加班吧&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 人间 结束 --&gt;\n&lt;!-- 大国小民 开始 --&gt;\n&lt;li class=&quot;cell cell_dgxm&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_dgxm&quot;&gt;大国小民&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0624/14/EIEOBNCB000181RK.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                当不了官发不了财的读书人\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;当不了官发不了财的读书人&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/24/b77e119ffeca477fa4bd2144b1fcb86c.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0620/16/EI4JRNO7000181RK.html&quot;&gt;四个博士，一地鸡毛&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0618/12/EHV0QRVG000181RK.html&quot;&gt;医闹得逞后，伤害的到底是谁&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 大国小民 结束 --&gt;\n&lt;!-- 三三有梗 开始 --&gt;\n&lt;li class=&quot;cell cell_dada&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_dada&quot;&gt;三三有梗&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0627/11/EIM57O490001885B.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                据说99%的人在图书馆一定会碰上......\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;据说99%的人在图书馆一定会碰上......&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/27/06eb8f4a3d4647bf9360ff5e71f003b8.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0626/15/EIK0IJT40001885B.html&quot;&gt;我可能，得了种，前任病&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0617/09/EHS57H4L0001885B.html&quot;&gt;那些KO不掉我的,最终成了我的OK&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 三三有梗 结束 --&gt;\n&lt;!-- 三三映画 开始 --&gt;\n&lt;!-- 三三映画 结束 --&gt;\n&lt;!-- 我去1990 开始 --&gt;\n&lt;li class=&quot;cell cell_wq1990&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_wq1990&quot;&gt;我去1990&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/11/EIOL94760001885B.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                直男幼稚行为大赏\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;直男幼稚行为大赏&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/0b3890cd2f4b473fa0127b5e33ae6ccf.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0624/12/EIEFGMVL0001885B.html&quot;&gt;打个赌，爱情友情你分不清楚&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0621/12/EI6NKDTU0001885B.html&quot;&gt;不会唱歌的人进 KTV 以后有多惨&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 我去1990 结束 --&gt;\n&lt;!-- 轻松一刻 开始 --&gt;\n&lt;li class=&quot;cell cell_qsyk&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_qsyk&quot;&gt;轻松一刻&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/19/EIPIQT4O000181BR.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                彩票一直都不中，我却忍不住要买\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;彩票一直都不中，我却忍不住要买&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/f44265c5b4ef4a11a99eedbde7c49833.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0627/17/EIMPGJAU000181BR.html&quot;&gt;原来&quot;神仙眷侣&quot;离婚,也是一地鸡毛&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0626/18/EIK95RV0000181BR.html&quot;&gt;我宣布，北大清华这对CP锁死了！&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 轻松一刻 结束 --&gt;\n&lt;!-- 槽值 开始 --&gt;\n&lt;li class=&quot;cell cell_caozhi&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_caozhi&quot;&gt;槽值&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://caozhi.news.163.com/19/0623/22/EID0CBIH000181TI.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                佟丽娅，这次你赢了\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;佟丽娅，这次你赢了&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/23/67d24242d479451ea705e26296187f78.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://caozhi.news.163.com/19/0623/15/EIC9LGSP000181TI.html&quot;&gt;千万别在深夜点开这神作&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://caozhi.news.163.com/19/0618/19/EHVRID7G000181TI.html&quot;&gt;那个发“嗯”的人，已被踢出群聊&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 槽值 结束 --&gt;\n&lt;!-- 谈心社 开始 --&gt;\n&lt;li class=&quot;cell cell_tanxinshe&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_tanxinshe&quot;&gt;谈心社&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/17/EIPCOKEA0001982T.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                王宝强母亲去世：来日方长是人生的错觉\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;王宝强母亲去世：来日方长是人生的错觉&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/ecd0de8b8dc0402da72d814bde76f06e.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0627/13/EIMC0EDH0001982T.html&quot;&gt;宋仲基宋慧乔离婚：再美的爱情也会过期&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0626/17/EIK6AD550001982T.html&quot;&gt;杨紫冰箱藏药，戳穿最怂瞬间&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 谈心社 结束 --&gt;\n&lt;!-- 看客 开始 --&gt;\n&lt;li class=&quot;cell cell_kanke&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;a class=&quot;tags tag_kanke&quot; href=&quot;http://renjian.163.com/special/renjian_kanke/&quot;&gt;看客&lt;/a&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0628/11/EIOMK185000199ET.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                我奶茶都戒了，日本人才知道它的好\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;我奶茶都戒了，日本人才知道它的好&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/f35eceb8d111496693e8f77a71a49cba.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0620/11/EI43PM8Q000199ET.html&quot;&gt;美国堕胎残酷物语&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0613/11/EHI39FML000199ET.html&quot;&gt;跑腿小哥提供的十万种服务&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 看客 结束 --&gt;\n&lt;!-- 身体密码 开始 --&gt;\n&lt;li class=&quot;cell cell_stpwd&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;a class=&quot;tags tag_stpwd&quot; href=&quot;http://jiankang.163.com/special/zhutierji/?type=3&quot;&gt;身体密码&lt;/a&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://jiankang.163.com/19/0625/11/EIH061CM0038804G.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                防晒，99%的人都做错了……\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;防晒，99%的人都做错了……&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/25/f260b6843fca4702bb5e4e316600f113.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://jiankang.163.com/19/0617/14/EHSN7PPV0038804G.html&quot;&gt;当代人减肥：迈不过25岁这道坎&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://jiankang.163.com/19/0608/15/EH5J9IGA00388AD5.html&quot;&gt;多年后 无数中年人仍会被高考吓醒&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 身体密码 结束 --&gt;\n&lt;!-- 哒哒 开始 --&gt;\n&lt;!-- 哒哒 结束 --&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div id=&quot;js_baseline&quot;&gt;&lt;/div&gt;\n&lt;span class=&quot;white_bg&quot; id=&quot;js_white_bg&quot;&gt;&lt;/span&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 原创栏目 结束 --&gt;\n&lt;!-- 中间新闻 开始 --&gt;\n&lt;div class=&quot;main_center_news&quot;&gt;\n&lt;!-- 头条新闻 --&gt;\n&lt;div class=&quot;mod_top_news2&quot; id=&quot;js_top_news&quot;&gt;\n&lt;h2&gt;\n&lt;a href=&quot;https://news.163.com/19/0628/16/EIP8R4SV000189FH.html&quot;&gt;央视独家：习近平会见日本首相&lt;/a&gt;\n&lt;/h2&gt;\n&lt;ul class=&quot;top_news_ul&quot;&gt;\n&lt;li&gt;&lt;a href=&quot;https://news.163.com/19/0628/16/EIP8N52U0001875N.html&quot;&gt;外交部回应中美元首会面&lt;/a&gt;|&lt;a href=&quot;https://news.163.com/19/0628/14/EIOVIP2500018AP1.html&quot; target=&quot;_blank&quot;&gt;特朗普会见普京 笑称:不要干预美国大选哦&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://news.163.com/19/0628/16/EIP7KOH70001875P.html&quot;&gt;住建部:加快垃圾分类处理设施建设&lt;/a&gt;|&lt;a href=&quot;https://news.163.com/19/0628/16/EIP8F9QQ0001875P.html&quot; target=&quot;_blank&quot;&gt;袁仁国被公诉:受贿数额特别巨大&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://news.163.com/19/0628/13/EIOSPGLJ0001899O.html&quot;&gt;湖南耒阳人大常委会原主任携子主动投案&lt;/a&gt;|&lt;a href=&quot;https://news.163.com/19/0628/13/EIOUHOB70001875P.html&quot; target=&quot;_blank&quot;&gt;美的48小时内被骗10亿资金&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2 class=&quot;top_news_title&quot;&gt;\n&lt;a href=&quot;https://news.163.com/19/0628/19/EIPH3F1V0001875P.html&quot;&gt;垃圾分类逼疯上海人？别笑！马上轮到这46个城市&lt;/a&gt;\n&lt;/h2&gt;\n&lt;ul class=&quot;top_news_ul&quot;&gt;\n&lt;li&gt;&lt;a href=&quot;https://news.163.com/19/0628/19/EIPILCJ70001875P.html&quot;&gt;女子酒后澡堂一打六被刑拘&lt;/a&gt;|&lt;a href=&quot;https://news.163.com/19/0628/18/EIPFI0KN0001875P.html&quot; target=&quot;_blank&quot;&gt;杀人案嫌犯向警察开枪拒捕 被当场击毙&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://news.163.com/19/0628/16/EIP8RHM70001875P.html&quot;&gt;95后飙摩托车追高铁发抖音被刑拘&lt;/a&gt;|&lt;a href=&quot;https://news.163.com/19/0628/16/EIP7B7RP0001899O.html&quot; target=&quot;_blank&quot;&gt;母亲担心儿子粗心在其手背&quot;刺&quot;字&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://news.163.com/19/0628/15/EIP4Q6BQ0001899O.html&quot;&gt;女子高铁上劝老人看好小孩被骂&lt;/a&gt;|&lt;a href=&quot;https://news.163.com/19/0628/16/EIP8QO5Q0001875P.html&quot; target=&quot;_blank&quot;&gt;南京杀妻案死者姑妈：侄女生前要强&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;!-- 广告 开始 --&gt;\n&lt;div class=&quot;mod_top_news_ad&quot;&gt;\n&lt;!-- 16新闻首页01小通栏 --&gt;\n&lt;a class=&quot;ad_hover_href&quot; href=&quot;http://gb.corp.163.com/gb/legal.html&quot;&gt;&lt;/a&gt;\n&lt;iframe border=&quot;0&quot; frameborder=&quot;no&quot; height=&quot;50&quot; marginheight=&quot;0&quot; marginwidth=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;https://g.163.com/r?site=netease&amp;amp;affiliate=news&amp;amp;cat=homepage&amp;amp;type=logo600x50&amp;amp;location=1&quot; width=&quot;600&quot;&gt;&lt;/iframe&gt;\n&lt;/div&gt;\n&lt;!-- 广告 结束 --&gt;\n&lt;!-- 特别报道 开始 --&gt;\n&lt;div class=&quot;mod_important_news none&quot;&gt;\n&lt;h5&gt;&lt;label&gt;特别报道&lt;/label&gt;&lt;/h5&gt;\n&lt;h2&gt;\n&lt;a href=&quot;http://news.163.com/16/0721/19/BSH7V8QF00014JB6.html&quot;&gt;辽宁遭暴雨侵袭致城市内涝 紧急转移12万人&lt;/a&gt;\n&lt;/h2&gt;\n&lt;ul class=&quot;top_news_ul&quot;&gt;\n&lt;li&gt;&lt;a href=&quot;http://news.163.com/16/0721/10/BSG7HOH20001124J.html&quot;&gt;民政部:北方暴雨75人死亡失踪&lt;/a&gt;|&lt;a href=&quot;http://news.163.com/16/0721/12/BSGG5VK300011229.html&quot; target=&quot;_blank&quot;&gt;北京发生山洪灾害 铲车翻倒4人被困&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://news.163.com/16/0721/12/BSGHHVLK00011229.html&quot;&gt;搜救犬水灾救援22天殉职 主人:它太累了&lt;/a&gt;|&lt;a href=&quot;http://news.163.com/16/0721/07/BSFUFFP800014AED.html&quot; target=&quot;_blank&quot;&gt;姐妹被洪水卷走警方拒立案&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;div class=&quot;mod_important_pic&quot;&gt;\n&lt;ul class=&quot;clearfix&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/photoview/00AN0001/2189402.html?from=ph_ss#p=BSG716GE00AN0001&quot;&gt;\n&lt;img height=&quot;120&quot; src=&quot;http://img3.cache.netease.com/news/2016/7/21/20160721131401d35e2.jpg&quot; width=&quot;190&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;河南遇强降雨 9.8万人转移&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/photoview/00AP0001/2189377.html?from=ph_ss#p=BSFTQ99H00AP0001&quot;&gt;\n&lt;img height=&quot;120&quot; src=&quot;http://img3.cache.netease.com/news/2016/7/21/201607211319466e84e.jpg&quot; width=&quot;190&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;女主播直播暴雨 浑身湿透&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/photoview/00AP0001/2189389.html?from=ph_ss#p=BSG1S9AM00AP0001&quot;&gt;\n&lt;img height=&quot;120&quot; src=&quot;http://img5.cache.netease.com/news/2016/7/21/20160721132119ef59b.jpg&quot; width=&quot;190&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;湖北民众省道上趟水摸鱼&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 特别报道 结束 --&gt;\n&lt;!-- 网易公开课 开始--&gt;\n&lt;div class=&quot;mod_netes_origina&quot; ne-module=&quot;/news/index2016_rmd/modules/slide/slide.js&quot;&gt;\n&lt;script _keep=&quot;true&quot; type=&quot;text/javascript&quot;&gt;\n    window.GGKSLIDEDATA = [\n                                                                         &#123;\n            &quot;title&quot;:&quot;你多久没读完一本书了？带你克服读书拖延症&quot;,\n            &quot;imgsrc&quot;:&quot;https://cms-bucket.ws.126.net/2019/06/26/225c40fe7f9141a8852f70d20c381f8b.jpeg?imageView&amp;thumbnail=600y250&quot;,\n            &quot;link&quot;:&quot;https://vip.open.163.com/courses/2531?p=xs_zt04&quot;\n        &#125;\n                                                         ,\n                &#123;\n            &quot;title&quot;:&quot;曾国藩：普通人怎样通过自我努力改写命运？&quot;,\n            &quot;imgsrc&quot;:&quot;https://cms-bucket.ws.126.net/2019/05/16/b0ba21dfb7ef4716a1275a2c1914832a.jpeg?imageView&amp;thumbnail=600y250&quot;,\n            &quot;link&quot;:&quot;https://vip.open.163.com/courses/1047?p=xs_zt03&quot;\n        &#125;\n                                                         ,\n                &#123;\n            &quot;title&quot;:&quot;你单一的收入模式，拖垮的是你财富积累速度&quot;,\n            &quot;imgsrc&quot;:&quot;https://cms-bucket.ws.126.net/2019/03/21/fe5cf147142b414793a6326f654b41ce.jpeg?imageView&amp;thumbnail=600y250&quot;,\n            &quot;link&quot;:&quot;https://vip.open.163.com/courses/3547?p=xs_zt04&quot;\n        &#125;\n                                                         ,\n                &#123;\n            &quot;title&quot;:&quot;健身VS不健身，完全是两种不同的人生&quot;,\n            &quot;imgsrc&quot;:&quot;https://cms-bucket.nosdn.127.net/2018/11/12/94fbcf460348460f9b73300aa1948cb3.jpeg?imageView&amp;thumbnail=600y250&quot;,\n            &quot;link&quot;:&quot;https://vip.open.163.com/courses/192?p=xs_zt02&quot;\n        &#125;\n            ];\n&lt;/script&gt;\n&lt;div class=&quot;mod_idx_focus&quot; ne-module=&quot;/modules/slide/slide.js&quot; ne-props=&quot;events:mouseover;interval:4000;topicid=000501EP;listnum=8;pointstart=80;pointend=100;&quot; ne-state=&quot;slideMethod:left;events=mouseover;interval=4000&quot;&gt;\n&lt;div class=&quot;hd&quot;&gt;\n&lt;h2&gt;&lt;a href=&quot;https://open.163.com/&quot;&gt;网易公开课&lt;/a&gt;&lt;/h2&gt;\n&lt;div class=&quot;focus_ctrl&quot;&gt;\n&lt;span ne-role=&quot;slide-nav&quot;&gt;&lt;/span&gt;\n&lt;span ne-role=&quot;slide-nav&quot;&gt;&lt;/span&gt;\n&lt;span ne-role=&quot;slide-nav&quot;&gt;&lt;/span&gt;\n&lt;span ne-role=&quot;slide-nav&quot;&gt;&lt;/span&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;a class=&quot;focus_prev&quot; ne-role=&quot;slide-prev&quot;&gt;&lt;/a&gt;\n&lt;a class=&quot;focus_next&quot; ne-role=&quot;slide-next&quot;&gt;&lt;/a&gt;\n&lt;div class=&quot;focus_body&quot; ne-role=&quot;slide-body&quot;&gt;\n&lt;ul ne-role=&quot;slide-scroll&quot;&gt;\n&lt;script ne-foreach=&quot;gkkdatalist&quot; type=&quot;text/template&quot;&gt;\n            &lt;li &lt;%if(__i == 0)&#123;%>class=\"current\"<%&#125;%&gt; ne-role=&quot;slide-page&quot;&gt;\n                &lt;a href=&quot;&lt;%=link%&gt;&quot; title=&quot;&lt;%=title%&gt;&quot; class=&quot;photo&quot;&gt;&lt;img src=&quot;&lt;%=imgsrc%&gt;&quot; width=&quot;600&quot; height=&quot;250&quot; alt=&quot;&lt;%=title%&gt;&quot;/&gt;&lt;/a&gt;\n                &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n                &lt;h3&gt;\n                    &lt;a href=&quot;&lt;%=link%&gt;&quot;&gt;&lt;%=title%&gt;&lt;/a&gt;\n                &lt;/h3&gt;\n            &lt;/li&gt;\n            &lt;/script&gt;\n&lt;/ul&gt;\n&lt;span class=&quot;ad_hover_pic&quot;&gt;广告&lt;/span&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 网易公开课 结束--&gt;\n&lt;!-- 信息流 开始--&gt;\n&lt;div class=&quot;mod_datalist&quot; ne-extend=&quot;/news/index2016_rmd/modules/datalist2016/config.js&quot; ne-module=&quot;/news/index2016_rmd/modules/datalist2016/datalist2016.js&quot;&gt;\n&lt;div class=&quot;newsdata_wrap&quot; ne-module=&quot;/modules/tabs/tabs.js&quot; ne-on=&quot;showed:changepanel&quot; ne-state=&quot;showhide:true;delay:400;&quot;&gt;\n&lt;div class=&quot;newsdata_nav&quot; ne-class=&quot;&#123;&#123;myState.fixedTop ? 'fixed_top':''&#125;&#125;&quot;&gt;\n&lt;ul class=&quot;clearfix&quot;&gt;\n&lt;li class=&quot;nav_item&quot;&gt;\n&lt;a class=&quot;nav_name no_cursor&quot; href=&quot;javascript:;&quot; ne-role=&quot;tab-nav&quot; target=&quot;_self&quot;&gt;\n                    要闻\n                    &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;nav_item&quot;&gt;\n&lt;a class=&quot;nav_name no_cursor&quot; href=&quot;&#123;&#123;myState.channelbendiurl&#125;&#125;&quot; ne-class=&quot;&#123;&#123;myState.bendiTstyle ? 'bendistyle' : ''&#125;&#125;&quot; ne-role=&quot;tab-nav&quot; target=&quot;&#123;&#123;myState.channelbendiurl == 'javascript:;' ? '_self' : '_blank'&#125;&#125;&quot;&gt;\n&lt;strong ne-text=&quot;&#123;&#123;myState.bendiCity&#125;&#125;&quot;&gt;&lt;/strong&gt;\n&lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;!-- &lt;li class=&quot;nav_item&quot;&gt;\n                &lt;a class=&quot;nav_name&quot; ne-role=&quot;tab-nav&quot; href=&quot;http://news.163.com/shehui/&quot;&gt;\n                    社会\n                    &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n                &lt;/a&gt;\n            &lt;/li&gt; --&gt;\n&lt;li class=&quot;nav_item&quot;&gt;\n&lt;a class=&quot;nav_name&quot; href=&quot;http://news.163.com/domestic/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                    国内\n                    &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;nav_item&quot;&gt;\n&lt;a class=&quot;nav_name&quot; href=&quot;http://news.163.com/world/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                    国际\n                    &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;nav_item&quot;&gt;\n&lt;a class=&quot;nav_name no_cursor&quot; href=&quot;javascript:;&quot; ne-role=&quot;tab-nav&quot; target=&quot;_self&quot;&gt;\n                    独家\n                    &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;nav_item&quot;&gt;\n&lt;a class=&quot;nav_name&quot; href=&quot;http://war.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                    军事\n                    &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;nav_item&quot;&gt;\n&lt;a class=&quot;nav_name&quot; href=&quot;http://money.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                    财经\n                    &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;nav_item&quot;&gt;\n&lt;a class=&quot;nav_name&quot; href=&quot;http://tech.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                    科技\n                    &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;a class=&quot;more&quot; href=&quot;javascript:;&quot; ne-class=&quot;&#123;&#123;myState.morechannel ? 'more_hover': ''&#125;&#125;&quot; ne-mouseout=&quot;morehideChannel()&quot; ne-mouseover=&quot;moreShowChannel()&quot; ne-role=&quot;morebtn&quot; target=&quot;_self&quot;&gt;更多&lt;/a&gt;\n&lt;div class=&quot;more_list&quot; ne-click=&quot;moreList($event)&quot; ne-role=&quot;more_list&quot; ne-show=&quot;&#123;&#123;myState.morechannel&#125;&#125;&quot;&gt;\n&lt;!-- &lt;a ne-role=&quot;tab-nav&quot; href=&quot;http://tech.163.com/&quot;&gt;科技&lt;/a&gt; --&gt;\n&lt;a href=&quot;http://sports.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;体育&lt;/a&gt;\n&lt;a href=&quot;http://ent.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;娱乐&lt;/a&gt;\n&lt;a href=&quot;http://lady.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;时尚&lt;/a&gt;\n&lt;a href=&quot;http://auto.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;汽车&lt;/a&gt;\n&lt;a href=&quot;&#123;&#123;myState.channelhouseurl&#125;&#125;&quot; ne-role=&quot;tab-nav&quot;&gt;房产&lt;/a&gt;\n&lt;a href=&quot;http://news.163.com/air/&quot; ne-role=&quot;tab-nav&quot;&gt;航空&lt;/a&gt;\n&lt;a href=&quot;http://jiankang.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;健康&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;a class=&quot;newsdata_prev&quot; href=&quot;#prev&quot; ne-class=&quot;&#123;&#123;myState.fixedTop ? 'fixed_data_show': ''&#125;&#125;&quot; ne-click=&quot;tabPrevFn($event);&quot; ne-hide=&quot;&#123;&#123;myState.iPad&#125;&#125;&quot;&gt;\n&lt;span&gt;&lt;/span&gt;\n&lt;div class=&quot;newsdata_btn_name&quot;&gt;&#123;&#123;myState.preBtnName&#125;&#125;&lt;/div&gt;\n&lt;/a&gt;\n&lt;a class=&quot;newsdata_next&quot; href=&quot;#next&quot; ne-class=&quot;&#123;&#123;myState.fixedTop ? 'fixed_data_show': ''&#125;&#125;&quot; ne-click=&quot;tabNextFn($event);&quot; ne-hide=&quot;&#123;&#123;myState.iPad&#125;&#125;&quot;&gt;\n&lt;span&gt;&lt;/span&gt;\n&lt;div class=&quot;newsdata_btn_name&quot;&gt;&#123;&#123;myState.nextBtnName&#125;&#125;&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul class=&quot;newsdata_list&quot; ne-class=&quot;&#123;&#123;myState.fixedTop ? 'fixed_bar_padding': ''&#125;&#125; &#123;&#123;myState.bgLoading ? 'bgloading': 'noloading'&#125;&#125;&quot;&gt;\n&lt;li class=&quot;newsdata_item&quot; ne-repeat=&quot;body in navList&quot; ne-role=&quot;tab-body&quot;&gt;\n&lt;div class=&quot;ndi_main&quot; ne-class=&quot;&#123;&#123;myState.message &gt; 0 ? 'show_message':''&#125;&#125;&quot;&gt;\n&lt;script ne-repeat=&quot;newrow in datalist[__i]&quot; type=&quot;text/template&quot;&gt;\n                &lt;%if(newrow.style == &quot;iframe&quot;)&#123;%>\n                        <div class=\"at_item info_ad_item news_iframe_ad\" adType=\"infoAd\" ne-click=\"adClickTracker(<%=newrow.infoAdIdx%>,'infoAd')\">\n                            <iframe src=\"<%=newrow.iframe[0].link%>\" width=\"<%=newrow.iframe[0].iframewidth || 600 %>\" height=\"<%=newrow.iframe[0].iframeheight || 100 %>\" frameborder=\"0\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe>\n                        </div>\n                    <%&#125;else if(newrow.style == &quot;docAD&quot;)&#123;%>\n                        <div class=\"at_item info_ad_item news_article clearfix\" adType=\"infoAd\" ne-click=\"adClickTracker(<%=newrow.infoAdIdx%>,'infoAd')\">\n                            <a href=\"<%=newrow.relatedActionLinks[0].url%>\" class=\"na_pic\">\n                                <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.resources[0].urls[0]%>\"\n                      width=\"140\" height=\"88\"\n                >\n                            </a>\n                            <div class=\"na_detail clearfix\">\n                                <div class=\"news_title\">\n                                    <h3><strong><a href=\"<%=newrow.relatedActionLinks[0].url%>\"><%=newrow.title%></a>\n                                    </strong></h3>\n                                </div>\n                            </div>\n                            <div class=\"ad_detail clearfix\">\n                                <span class=\"tg_tag\"><%=newrow.source%></span>\n                                <span class=\"keywords\" ne-html=\"<%=newrow.content%>\"></span>\n                            </div>\n                        </div>\n                    <%&#125; else if(newrow.style == &quot;photosetAD&quot;)&#123;%>\n                        <div class=\"at_item info_ad_item news_photoview clearfix news_ad_photoview\" adType=\"infoAd\" ne-click=\"adClickTracker(<%=newrow.infoAdIdx%>,'infoAd')\">\n                            <div class=\"news_title\">\n                                <h3><strong><a href=\"<%=newrow.relatedActionLinks[0].url%>\"><%=newrow.title%></a></strong></h3>\n                            </div>\n                            <div class=\"np_pic\">\n                                <a href=\"<%=newrow.relatedActionLinks[0].url%>\">\n                                    <span class=\"p_img3\">\n                                        <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.resources[0].urls[0]%>\"\n                      width=\"190\" height=\"120\"\n                >\n                                    </span>\n                                    <span class=\"p_img3\">\n                                        <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.resources[0].urls[1]%>\"\n                      width=\"190\" height=\"120\"\n                >\n                                    </span>\n                                    <span class=\"p_img3\">\n                                        <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.resources[0].urls[2]%>\"\n                      width=\"190\" height=\"120\" class=\"pic_last\"\n                >\n                                    </span>\n                                </a>\n                            </div>\n                            <div class=\"ad_detail clearfix\">\n                                <span class=\"tg_tag\"><%=newrow.source%></span>\n                                <span class=\"keywords\" ne-html=\"<%=newrow.content%>\"></span>\n                            </div>\n                        </div>\n                    <%&#125; else if(newrow.style == &quot;columsAD&quot;)&#123;%>\n                        <div class=\"at_item info_ad_item news_special clearfix news_ad_special\" adType=\"infoAd\" ne-click=\"adClickTracker(<%=newrow.infoAdIdx%>,'infoAd')\">\n                            <div class=\"news_title\">\n                                <h3><strong><a href=\"<%=newrow.relatedActionLinks[0].url%>\"><%=newrow.title%></a></strong></h3>\n                            </div>\n                            <a href=\"<%=newrow.relatedActionLinks[0].url%>\" class=\"ns_pic\"><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.resources[0].urls[0]%>\"\n                      width=\"600\" height=\"200\"\n                ></a>\n                            <div class=\"ad_detail clearfix\">\n                                <span class=\"tg_tag\"><%=newrow.source%></span>\n                                <span class=\"keywords\" ne-html=\"<%=newrow.content%>\"></span>\n                            </div>\n                        </div>\n                    <%&#125; else if(newrow.imgurl &amp;&amp; newrow.add1 &amp;&amp; newrow.add2 &amp;&amp; /\\.jpg$|\\.png$|\\.jpeg$|\\.gif$/.test(newrow.imgurl) &amp;&amp; /\\.jpg$|\\.png$|\\.jpeg$|\\.gif$/.test(newrow.add1) &amp;&amp; /\\.jpg$|\\.png$|\\.jpeg$|\\.gif$/.test(newrow.add2))&#123;%>\n                        <div class=\"data_row news_photoview clearfix <%if(__i == 0)&#123;%>news_first <%&#125;%&gt;&quot;&gt;\n                        &lt;div class=&quot;news_title&quot;&gt;\n                            &lt;h3&gt;&lt;a href=&quot;&lt;%=newrow.docurl%&gt;&quot;&gt;&lt;%=newrow.title%&gt;&lt;/a&gt;&lt;/h3&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;np_pic&quot;&gt;\n                            &lt;a href=&quot;&lt;%=newrow.docurl%&gt;&quot;&gt;\n                                &lt;span class=&quot;p_img3&quot;&gt;\n                                &lt;%if(newrow.imgurl.indexOf(&#39;gif&#39;) != -1)&#123;%>\n                                    <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.imgurl%>\"\n                      width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\"\n                >\n                                    <%&#125; else &#123;%> \n                                    <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.imgurl%>?imageView&thumbnail=190y120&quality=85\"\n                      width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\"\n                >\n                                    <%&#125;%&gt; \n                                &lt;/span&gt;\n                                &lt;span class=&quot;p_img3&quot;&gt;\n                                &lt;%if(newrow.add1.indexOf(&#39;gif&#39;) != -1)&#123;%>\n                                    <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.add1%>\"\n                      width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\"\n                >\n                                    <%&#125; else &#123;%> \n                                    <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.add1%>?imageView&thumbnail=190y120&quality=85\"\n                      width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/index2016_rmd/images/pic3_error0106.jpg';\"\n                >\n                                    <%&#125;%&gt; \n                                &lt;/span&gt;\n                                &lt;span class=&quot;p_img3&quot;&gt;\n                                &lt;%if(newrow.add2.indexOf(&#39;gif&#39;) != -1)&#123;%>\n                                    <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.add2%>\"\n                      width=\"190\" height=\"120\" class=\"pic_last\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\"\n                >\n                                    <%&#125; else &#123;%> \n                                    <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.add2%>?imageView&thumbnail=190y120&quality=85\"\n                      width=\"190\" height=\"120\" class=\"pic_last\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\"\n                >\n                                    <%&#125;%&gt; \n                                &lt;/span&gt;\n                            &lt;/a&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;np_detail clearfix&quot;&gt;\n                            &lt;div class=&quot;news_tag&quot;&gt;\n                                &lt;%if(newrow.channelname &amp;&amp; newrow.channelname != &quot;shehui&quot; &amp;&amp; newrow.channelname != &quot;guonei&quot; &amp;&amp; newrow.channelname != &quot;guoji&quot; &amp;&amp; newrow.channelname != &quot;dada&quot; &amp;&amp; newrow.channelname != &quot;war&quot; &amp;&amp; newrow.channelname != &quot;hangkong&quot;)&#123;%>\n                                        <%if(newrow.tlastid != \"\")&#123;%>\n                                            <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                        <%&#125;else if(newrow.label != &quot;&quot;)&#123;%>\n                                            <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                            <em><%=newrow.label%></em></a>\n                                        <%&#125;%&gt; \n                                &lt;%&#125;%&gt;\n                                &lt;%if(newrow.keywords.length &gt; 0)&#123;%>\n                                        <div class=\"keywords\">\n                                        <%bowlder.each(newrow.keywords,function(k)&#123;%>\n                                            <a href=\"<%=k.akey_link%>\"><%=k.keyname%></a>\n                                        <%&#125;)%&gt; \n                                    &lt;/div&gt;\n                                &lt;%&#125;%&gt; \n                                &lt;%if(newrow.time)&#123;%>\n                                        <span class=\"time\"><%=formatTime(newrow.time)%></span>\n                                    <%&#125;%&gt; \n                            &lt;/div&gt;\n                            &lt;div class=&quot;share-join clearfix&quot;&gt;\n                                &lt;%if(newrow.tienum != &quot;&quot;)&#123;%>\n                                    <a class=\"post_recommend_tie right\" href=\"<%=newrow.commenturl%>\" >\n                                        <div class=\"post_recommend_tie_wrap\">\n                                            <span class=\"post_recommend_tie_icon icons\"><%=newrow.tienum%></span> \n                                            <span class=\"post_recommend_tie_text\"><i>跟贴</i><%=newrow.tienum%></span>\n                                        </div>\n                                    </a>\n                                    <%&#125;%&gt;\n                                &lt;div class=&quot;ne-shares-parent right&quot;&gt;\n                                    &lt;span href=&quot;#share&quot; title=&quot;分享&quot; class=&quot;ne-shares-arr&quot;&gt;&lt;/span&gt;\n                                    &lt;div class=&quot;share-join-item&quot; ne-module=&quot;/modules/shares/shares.js&quot; ne-state=&quot;cls.hover:ne-shares-open;title:&lt;%=newrow.title%&gt;;url:&lt;%=newrow.docurl%&gt;;pic:&lt;%=newrow.imgurl%&gt;&quot; &gt;\n&lt;div class=&quot;ne-shares-pop6x1wrap&quot; ne-role=&quot;share-wrap&quot;&gt;\n&lt;ul class=&quot;ne-shares-pop6x1&quot;&gt;\n    &lt;li&gt;\n        &lt;a ne-click=&quot;share(&#39;yixin&#39;)&quot; href=&quot;http://yixin.im/#f=www&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-yixin&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;易信&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a ne-mouseover=&quot;initWeixin()&quot; href=&quot;javascript:&quot; target=&quot;_self&quot; class=&quot;ne-shares-weixin&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-weixin&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;微信&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a ne-click=&quot;share(&#39;sina&#39;)&quot; href=&quot;javascript:&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-sina&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;微博&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li class=&quot;last&quot;&gt;\n        &lt;a ne-click=&quot;share(&#39;qzone&#39;)&quot; href=&quot;javascript:&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-qzone&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;QQ空间&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div class=&quot;ne-shares-qrwrap&quot;&gt;\n  &lt;div class=&quot;ne-shares-qrarr&quot;&gt;&lt;/div&gt;\n  &lt;div ne-role=&quot;qrcode&quot; class=&quot;ne-shares-qrcode&quot;&gt;&lt;/div&gt;\n  &lt;p&gt;用微信扫码二维码&lt;/p&gt;&lt;p&gt;分享至好友和朋友圈&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n                                &lt;/div&gt;\n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;%&#125; else if(newrow.add1 &amp;&amp; /\\.jpg$|\\.png$|\\.jpeg$|\\.gif$/.test(newrow.add1))&#123;%>\n                        <div class=\"data_row news_special clearfix <%if(__i == 0)&#123;%>news_first <%&#125;%&gt;&quot;&gt;\n                        &lt;div class=&quot;news_title&quot;&gt;\n                            &lt;h3&gt;&lt;a href=&quot;&lt;%=newrow.docurl%&gt;&quot;&gt;&lt;%=newrow.title%&gt;&lt;/a&gt;&lt;/h3&gt;\n                            &lt;%if(newrow.channelname &amp;&amp; newrow.channelname != &quot;shehui&quot; &amp;&amp; newrow.channelname != &quot;guonei&quot; &amp;&amp; newrow.channelname != &quot;guoji&quot; &amp;&amp; newrow.channelname != &quot;dada&quot; &amp;&amp; newrow.channelname != &quot;war&quot; &amp;&amp; newrow.channelname != &quot;hangkong&quot;)&#123;%>\n                                    <%if(newrow.tlastid != \"\")&#123;%>\n                                        <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                    <%&#125;else if(newrow.label != &quot;&quot;)&#123;%>\n                                        <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                        <em><%=newrow.label%></em></a>\n                                    <%&#125;%&gt; \n                            &lt;%&#125;%&gt;\n                        &lt;/div&gt;\n                        &lt;a href=&quot;&lt;%=newrow.docurl%&gt;&quot; class=&quot;ns_pic&quot;&gt;\n                            &lt;%if(newrow.add1.indexOf(&#39;gif&#39;) != -1)&#123;%>\n                                <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.add1%>\"\n                      alt=\"<%=newrow.title%\n                >\" width=\"600\" height=\"300\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/special_error0106.jpg';\">\n                                <%&#125; else &#123;%> \n                                <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.add1%>?imageView&thumbnail=600y300&quality=85\"\n                      alt=\"<%=newrow.title%\n                >\" width=\"600\" height=\"300\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/special_error0106.jpg';\">\n                                <%&#125;%&gt; \n                        &lt;/a&gt;\n                    &lt;/div&gt;\n                &lt;%&#125; else if(newrow.imgurl &amp;&amp; newrow.imgurl != &quot;&quot;)&#123;%>\n                        <div class=\"data_row news_article clearfix <%if(__i == 0)&#123;%>news_first<%&#125;%&gt;&quot;&gt;\n                        &lt;%if(newrow.imgurl != &quot;&quot;)&#123;%>\n                                <a href=\"<%=newrow.docurl%>\" class=\"na_pic\">\n                                    <%if(newrow.imgurl.indexOf('gif') != -1)&#123;%>\n                                    <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.imgurl%>\"\n                      alt=\"<%=newrow.title%\n                >\" width=\"140\" height=\"88\" onerror=\"imgError(this)\">\n                                    <%&#125; else &#123;%> \n                                    <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.imgurl%>?imageView&thumbnail=140y88&quality=85\"\n                      alt=\"<%=newrow.title%\n                >\" width=\"140\" height=\"88\" onerror=\"imgError(this)\">\n                                    <%&#125;%&gt; \n                            &lt;/a&gt;\n                        &lt;%&#125;%&gt; \n                        &lt;div class=&quot;na_detail clearfix &lt;%if(newrow.imgurl == &quot;&quot;)&#123;%>no_pic<%&#125;%&gt;&quot;&gt;\n                            &lt;div class=&quot;news_title&quot;&gt;\n                                &lt;h3&gt;&lt;a href=&quot;&lt;%=newrow.docurl%&gt;&quot;&gt;&lt;%=newrow.title%&gt;&lt;/a&gt;&lt;/h3&gt;\n                            &lt;/div&gt;\n                            &lt;div class=&quot;news_tag&quot;&gt;\n                                &lt;%if(newrow.channelname &amp;&amp; newrow.channelname != &quot;shehui&quot; &amp;&amp; newrow.channelname != &quot;guonei&quot; &amp;&amp; newrow.channelname != &quot;guoji&quot; &amp;&amp; newrow.channelname != &quot;dada&quot; &amp;&amp; newrow.channelname != &quot;war&quot; &amp;&amp; newrow.channelname != &quot;hangkong&quot;)&#123;%>\n                                        <%if(newrow.tlastid != \"\")&#123;%>\n                                            <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                        <%&#125;else if(newrow.label != &quot;&quot;)&#123;%>\n                                            <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                            <em><%=newrow.label%></em></a>\n                                        <%&#125;%&gt; \n                                &lt;%&#125;%&gt;\n                                &lt;%if(newrow.keywords &amp;&amp; newrow.keywords.length &gt; 0)&#123;%>\n                                        <div class=\"keywords\">\n                                        <%bowlder.each(newrow.keywords,function(k)&#123;%>\n                                            <a href=\"<%=k.akey_link%>\"><%=k.keyname%></a>\n                                        <%&#125;)%&gt; \n                                    &lt;/div&gt;\n                                &lt;%&#125;%&gt; \n                                &lt;%if(newrow.time)&#123;%>\n                                        <span class=\"time\"><%=formatTime(newrow.time)%></span>\n                                    <%&#125;%&gt; \n                            &lt;/div&gt;\n                            &lt;div class=&quot;share-join clearfix&quot;&gt;\n                                &lt;a class=&quot;post_recommend_tie right&quot; href=&quot;&lt;%=newrow.commenturl%&gt;&quot; &gt;\n                                    &lt;div class=&quot;post_recommend_tie_wrap&quot;&gt;\n                                        &lt;span class=&quot;post_recommend_tie_icon icons&quot;&gt;&lt;%=newrow.tienum ? newrow.tienum : 0%&gt;&lt;/span&gt; \n                                        &lt;span class=&quot;post_recommend_tie_text&quot;&gt;&lt;i&gt;跟贴&lt;/i&gt;&lt;%=newrow.tienum%&gt;&lt;/span&gt;\n                                    &lt;/div&gt;\n                                &lt;/a&gt;\n                                &lt;div class=&quot;ne-shares-parent right&quot;&gt;\n                                    &lt;span href=&quot;#share&quot; title=&quot;分享&quot; class=&quot;ne-shares-arr&quot;&gt;&lt;/span&gt;\n                                    &lt;div class=&quot;share-join-item&quot; ne-module=&quot;/modules/shares/shares.js&quot; ne-state=&quot;cls.hover:ne-shares-open;title:&lt;%=newrow.title%&gt;;url:&lt;%=newrow.docurl%&gt;;pic:&lt;%=newrow.imgurl%&gt;&quot; &gt;\n&lt;div class=&quot;ne-shares-pop6x1wrap&quot; ne-role=&quot;share-wrap&quot;&gt;\n&lt;ul class=&quot;ne-shares-pop6x1&quot;&gt;\n    &lt;li&gt;\n        &lt;a ne-click=&quot;share(&#39;yixin&#39;)&quot; href=&quot;http://yixin.im/#f=www&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-yixin&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;易信&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a ne-mouseover=&quot;initWeixin()&quot; href=&quot;javascript:&quot; target=&quot;_self&quot; class=&quot;ne-shares-weixin&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-weixin&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;微信&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a ne-click=&quot;share(&#39;sina&#39;)&quot; href=&quot;javascript:&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-sina&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;微博&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li class=&quot;last&quot;&gt;\n        &lt;a ne-click=&quot;share(&#39;qzone&#39;)&quot; href=&quot;javascript:&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-qzone&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;QQ空间&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div class=&quot;ne-shares-qrwrap&quot;&gt;\n  &lt;div class=&quot;ne-shares-qrarr&quot;&gt;&lt;/div&gt;\n  &lt;div ne-role=&quot;qrcode&quot; class=&quot;ne-shares-qrcode&quot;&gt;&lt;/div&gt;\n  &lt;p&gt;用微信扫码二维码&lt;/p&gt;&lt;p&gt;分享至好友和朋友圈&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n                                &lt;/div&gt;\n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;%&#125; else if(newrow.pics3 &amp;&amp; newrow.pics3.length &gt;= 3)&#123;%>\n                        <div class=\"data_row news_photoview clearfix <%if(__i == 0)&#123;%>news_first <%&#125;%&gt;&quot;&gt;\n                        &lt;div class=&quot;news_title&quot;&gt;\n                            &lt;h3&gt;&lt;a href=&quot;&lt;%=newrow.docurl%&gt;&quot;&gt;&lt;%=newrow.title%&gt;&lt;/a&gt;&lt;/h3&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;np_pic&quot;&gt;\n                            &lt;a href=&quot;&lt;%=newrow.docurl%&gt;&quot;&gt;\n                                &lt;%bowlder.each(newrow.pics3,function(n)&#123;%>\n                                        <span class=\"p_img3\">\n                                        <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=n.pic%>\"\n                      width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\"\n                >\n                                        </span>\n                                    <%&#125;)%&gt; \n                            &lt;/a&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;np_detail clearfix&quot;&gt;\n                            &lt;div class=&quot;news_tag&quot;&gt;\n                                &lt;%if(newrow.channelname &amp;&amp; newrow.channelname != &quot;shehui&quot; &amp;&amp; newrow.channelname != &quot;guonei&quot; &amp;&amp; newrow.channelname != &quot;guoji&quot; &amp;&amp; newrow.channelname != &quot;dada&quot; &amp;&amp; newrow.channelname != &quot;war&quot; &amp;&amp; newrow.channelname != &quot;hangkong&quot;)&#123;%>\n                                        <%if(newrow.tlastid != \"\")&#123;%>\n                                            <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                        <%&#125;else if(newrow.label != &quot;&quot;)&#123;%>\n                                            <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                            <em><%=newrow.label%></em></a>\n                                        <%&#125;%&gt; \n                                &lt;%&#125;%&gt;\n                                &lt;%if(newrow.keywords &amp;&amp; newrow.keywords.length &gt; 0)&#123;%>\n                                        <div class=\"keywords\">\n                                        <%bowlder.each(newrow.keywords,function(k)&#123;%>\n                                            <a href=\"<%=k.akey_link%>\"><%=k.keyname%></a>\n                                        <%&#125;)%&gt; \n                                    &lt;/div&gt;\n                                &lt;%&#125;%&gt; \n                                &lt;%if(newrow.time)&#123;%>\n                                        <span class=\"time\"><%=formatTime(newrow.time)%></span>\n                                    <%&#125;%&gt; \n                            &lt;/div&gt;\n                            &lt;div class=&quot;share-join clearfix&quot;&gt;\n                                &lt;a class=&quot;post_recommend_tie right&quot; href=&quot;&lt;%=newrow.commenturl%&gt;&quot; &gt;\n                                    &lt;div class=&quot;post_recommend_tie_wrap&quot;&gt;\n                                        &lt;span class=&quot;post_recommend_tie_icon icons&quot;&gt;&lt;%=newrow.tienum%&gt;&lt;/span&gt; \n                                        &lt;span class=&quot;post_recommend_tie_text&quot;&gt;&lt;i&gt;跟贴&lt;/i&gt;&lt;%=newrow.tienum%&gt;&lt;/span&gt;\n                                    &lt;/div&gt;\n                                &lt;/a&gt;\n                                &lt;div class=&quot;ne-shares-parent right&quot;&gt;\n                                    &lt;span href=&quot;#share&quot; title=&quot;分享&quot; class=&quot;ne-shares-arr&quot;&gt;&lt;/span&gt;\n                                    &lt;div class=&quot;share-join-item&quot; ne-module=&quot;/modules/shares/shares.js&quot; ne-state=&quot;cls.hover:ne-shares-open;title:&lt;%=newrow.title%&gt;;url:&lt;%=newrow.docurl%&gt;;pic:&lt;%=newrow.imgurl%&gt;&quot; &gt;\n&lt;div class=&quot;ne-shares-pop6x1wrap&quot; ne-role=&quot;share-wrap&quot;&gt;\n&lt;ul class=&quot;ne-shares-pop6x1&quot;&gt;\n    &lt;li&gt;\n        &lt;a ne-click=&quot;share(&#39;yixin&#39;)&quot; href=&quot;http://yixin.im/#f=www&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-yixin&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;易信&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a ne-mouseover=&quot;initWeixin()&quot; href=&quot;javascript:&quot; target=&quot;_self&quot; class=&quot;ne-shares-weixin&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-weixin&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;微信&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a ne-click=&quot;share(&#39;sina&#39;)&quot; href=&quot;javascript:&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-sina&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;微博&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li class=&quot;last&quot;&gt;\n        &lt;a ne-click=&quot;share(&#39;qzone&#39;)&quot; href=&quot;javascript:&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-qzone&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;QQ空间&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div class=&quot;ne-shares-qrwrap&quot;&gt;\n  &lt;div class=&quot;ne-shares-qrarr&quot;&gt;&lt;/div&gt;\n  &lt;div ne-role=&quot;qrcode&quot; class=&quot;ne-shares-qrcode&quot;&gt;&lt;/div&gt;\n  &lt;p&gt;用微信扫码二维码&lt;/p&gt;&lt;p&gt;分享至好友和朋友圈&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n                                &lt;/div&gt;\n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;%&#125; else &#123;%>\n                        <div class=\"data_row news_article clearfix <%if(__i == 0)&#123;%>news_first<%&#125;%&gt;&quot; i=&#123;&#123;__i&#125;&#125;&gt;\n                        &lt;div class=&quot;na_detail clearfix no_pic&quot;&gt;\n                            &lt;div class=&quot;news_title&quot;&gt;\n                                &lt;h3&gt;&lt;a href=&quot;&lt;%=newrow.docurl%&gt;&quot;&gt;&lt;%=newrow.title%&gt;&lt;/a&gt;&lt;/h3&gt;\n                            &lt;/div&gt;\n                            &lt;div class=&quot;news_tag&quot;&gt;\n                                &lt;%if(newrow.channelname &amp;&amp; newrow.channelname != &quot;shehui&quot; &amp;&amp; newrow.channelname != &quot;guonei&quot; &amp;&amp; newrow.channelname != &quot;guoji&quot; &amp;&amp; newrow.channelname != &quot;dada&quot; &amp;&amp; newrow.channelname != &quot;war&quot; &amp;&amp; newrow.channelname != &quot;hangkong&quot;)&#123;%>\n                                        <%if(newrow.tlastid != \"\")&#123;%>\n                                            <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                        <%&#125;else if(newrow.label != &quot;&quot;)&#123;%>\n                                            <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                            <em><%=newrow.label%></em></a>\n                                        <%&#125;%&gt; \n                                &lt;%&#125;%&gt;\n                                &lt;%if(newrow.keywords &amp;&amp; newrow.keywords.length &gt; 0)&#123;%>\n                                        <div class=\"keywords\">\n                                        <%bowlder.each(newrow.keywords,function(k)&#123;%>\n                                            <a href=\"<%=k.akey_link%>\"><%=k.keyname%></a>\n                                        <%&#125;)%&gt; \n                                    &lt;/div&gt;\n                                &lt;%&#125;%&gt; \n                                &lt;%if(newrow.time)&#123;%>\n                                        <span class=\"time\"><%=formatTime(newrow.time)%></span>\n                                    <%&#125;%&gt; \n                            &lt;/div&gt;\n                            &lt;div class=&quot;share-join clearfix&quot;&gt;\n                                &lt;a class=&quot;post_recommend_tie right&quot; href=&quot;&lt;%=newrow.commenturl%&gt;&quot; &gt;\n                                    &lt;div class=&quot;post_recommend_tie_wrap&quot;&gt;\n                                        &lt;span class=&quot;post_recommend_tie_icon icons&quot;&gt;&lt;%=newrow.tienum ? newrow.tienum : 0%&gt;&lt;/span&gt; \n                                        &lt;span class=&quot;post_recommend_tie_text&quot;&gt;&lt;i&gt;跟贴&lt;/i&gt;&lt;%=newrow.tienum%&gt;&lt;/span&gt;\n                                    &lt;/div&gt;\n                                &lt;/a&gt;\n                                &lt;div class=&quot;ne-shares-parent right&quot;&gt;\n                                    &lt;span href=&quot;#share&quot; title=&quot;分享&quot; class=&quot;ne-shares-arr&quot;&gt;&lt;/span&gt;\n                                    &lt;div class=&quot;share-join-item&quot; ne-module=&quot;/modules/shares/shares.js&quot; ne-state=&quot;cls.hover:ne-shares-open;title:&lt;%=newrow.title%&gt;;url:&lt;%=newrow.docurl%&gt;;pic:&lt;%=newrow.imgurl%&gt;&quot; &gt;\n&lt;div class=&quot;ne-shares-pop6x1wrap&quot; ne-role=&quot;share-wrap&quot;&gt;\n&lt;ul class=&quot;ne-shares-pop6x1&quot;&gt;\n    &lt;li&gt;\n        &lt;a ne-click=&quot;share(&#39;yixin&#39;)&quot; href=&quot;http://yixin.im/#f=www&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-yixin&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;易信&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a ne-mouseover=&quot;initWeixin()&quot; href=&quot;javascript:&quot; target=&quot;_self&quot; class=&quot;ne-shares-weixin&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-weixin&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;微信&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a ne-click=&quot;share(&#39;sina&#39;)&quot; href=&quot;javascript:&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-sina&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;微博&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li class=&quot;last&quot;&gt;\n        &lt;a ne-click=&quot;share(&#39;qzone&#39;)&quot; href=&quot;javascript:&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-qzone&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;QQ空间&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div class=&quot;ne-shares-qrwrap&quot;&gt;\n  &lt;div class=&quot;ne-shares-qrarr&quot;&gt;&lt;/div&gt;\n  &lt;div ne-role=&quot;qrcode&quot; class=&quot;ne-shares-qrcode&quot;&gt;&lt;/div&gt;\n  &lt;p&gt;用微信扫码二维码&lt;/p&gt;&lt;p&gt;分享至好友和朋友圈&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n                                &lt;/div&gt;\n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;%&#125;%&gt;\n                &lt;/script&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;div class=&quot;load_more_foot&quot; id=&quot;load_more_foot&quot;&gt;&lt;/div&gt;\n&lt;a class=&quot;load_more_btn&quot; ne-click=&quot;clickLoadMore();&quot; ne-hide=&quot;&#123;&#123;myState.counter &gt;= navList[myState.ndNavIndex].totalPage || myState.counter == 0&#125;&#125;&quot; target=&quot;_self&quot;&gt;\n&lt;div class=&quot;post_addmore&quot; ne-visible=&quot;&#123;&#123;myState.counter &lt; navList[myState.ndNavIndex].totalPage &amp;&amp; !myState.loading&#125;&#125;&quot;&gt;\n&lt;i&gt;+&lt;/i&gt;\n&lt;span&gt;加载更多&lt;/span&gt;\n&lt;/div&gt;\n&lt;div class=&quot;post_adding&quot; ne-show=&quot;&#123;&#123;myState.loading&#125;&#125;&quot;&gt;\n&lt;i&gt;+&lt;/i&gt;\n&lt;span&gt;加载中...&lt;/span&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;div class=&quot;load_more_tip&quot; ne-show=&quot;&#123;&#123;myState.counter &gt;= navList[myState.ndNavIndex].totalPage&#125;&#125;&quot;&gt;:-)已经到最后啦~&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 信息流 结束 --&gt;\n&lt;/div&gt;\n&lt;!-- 中间新闻 结束 --&gt;\n&lt;!-- 右侧栏目 开始 --&gt;\n&lt;div class=&quot;main_right_channel&quot;&gt;\n&lt;!-- 广告 --&gt;\n&lt;!-- 300*30 --&gt;\n&lt;!-- 新闻首页焦点图上方L特殊标识广告 开始--&gt;\n&lt;!-- &lt;div class=&quot;mod_newsr_ad1&quot;&gt;\n&lt;a href=&quot;http://g.163.com/a?CID=45744&amp;Values=2901173312&amp;Redirect=http://clickc.admaster.com.cn/c/a73960,b1279435,c369,i0,m101,8a1,8b2,h&quot;&gt;&lt;img class=&quot;block mb10&quot; width=&quot;300&quot; height=&quot;30&quot; src=&quot;http://img1.126.net/channel11/024018300301009.jpg&quot; alt=&quot;广告&quot;&gt;&lt;/a&gt;\n&lt;/div&gt; --&gt;\n&lt;!--新闻首页焦点图上方L特殊标识广告 结束--&gt;\n&lt;!-- 焦点图 开始--&gt;\n&lt;div class=&quot;mod_right_focus&quot;&gt;\n&lt;div ne-module=&quot;&quot;&gt;\n&lt;div class=&quot;mod_focus&quot; ne-module=&quot;/modules/slide/slide.js&quot; ne-state=&quot;slideMethod:left;events=mouseover;interval=4000;loop=true;&quot;&gt;\n&lt;div class=&quot;f_body&quot; ne-role=&quot;slide-body&quot;&gt;\n&lt;ul class=&quot;f_main clearfix&quot; ne-role=&quot;slide-scroll&quot;&gt;\n&lt;li ne-role=&quot;slide-page&quot;&gt;\n&lt;a href=&quot;http://g.163.com/a?CID=68685&amp;amp;Values=1366894002&amp;amp;Redirect=http://clk.gentags.net/clk/iv-10648/st-31/cr-2/oi-1303641/or-7535/adv-158/pcon-0/https%253A%252F%252Fent.163.com%252F19%252F0625%252F16%252FEIHG8HLF000398QL.html&quot;&gt;\n&lt;img height=&quot;400&quot; src=&quot;http://nimg.ws.126.net/?url=https://yt-adp.ws.126.net/channel21/037408_300400_axry_20190626.jpg&amp;amp;thumbnail=300x2147483647&amp;amp;quality=75&amp;amp;type=jpg&quot; width=&quot;300&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;三金西瓜霜独家冠名网易封面故事&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li ne-role=&quot;slide-page&quot;&gt;\n&lt;a href=&quot;http://news.163.com/photoview/00AP0001/2302561.html&quot;&gt;\n&lt;img height=&quot;400&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/e5b070c1f96349b0829da88b41105903.jpeg?imageView&amp;amp;thumbnail=300y400&quot; width=&quot;300&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;浒苔绿潮开始在山东沿海登陆&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li ne-role=&quot;slide-page&quot;&gt;\n&lt;a href=&quot;http://news.163.com/photoview/00AP0001/2302559.html&quot;&gt;\n&lt;img height=&quot;400&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/2792654fe66f4985879a8cc30a89a6cc.jpeg?imageView&amp;amp;thumbnail=300y400&quot; width=&quot;300&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;广西南宁抓获涉传人员286名&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li ne-role=&quot;slide-page&quot;&gt;\n&lt;a href=&quot;http://news.163.com/photoview/00AO0001/2302560.html&quot;&gt;\n&lt;img height=&quot;400&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/202e20527525474cac861ba7e56a2dde.jpeg?imageView&amp;amp;thumbnail=300y400&quot; width=&quot;300&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;民主党初选辩论次日:拜登现身&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div class=&quot;f_title&quot;&gt;\n&lt;span class=&quot;current&quot; ne-role=&quot;slide-nav&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;&quot; ne-role=&quot;slide-nav&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;&quot; ne-role=&quot;slide-nav&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;&quot; ne-role=&quot;slide-nav&quot;&gt;4&lt;/span&gt;\n&lt;/div&gt;\n&lt;a class=&quot;f_prev&quot; ne-role=&quot;slide-prev&quot;&gt;&amp;lt;&lt;/a&gt;\n&lt;a class=&quot;f_next&quot; ne-role=&quot;slide-next&quot;&gt;&amp;gt;&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 焦点图 结束--&gt;\n&lt;!-- 广告 开始--&gt;\n&lt;div class=&quot;mod_ad_toutu channel_relative_2016&quot;&gt;\n&lt;ul class=&quot;clearfix&quot;&gt;\n&lt;li&gt;&lt;a href=&quot;http://baoxian.163.com/activity/act1605/index.html?from=mhds1605&quot;&gt;免费领取iPhone6s&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://mall.163.com/mobile/fill.jsp?from=wwwtext&quot;&gt;手机费快充超低折扣&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://baoxian.163.com/car/activitylist.html?from=mhdstbl&quot;&gt;免费送现金红包！&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://piao.163.com/movie/47080.html?from=newsword&quot;&gt;镜中多奇境依旧爱丽丝&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;span class=&quot;channel_ad_text_2016&quot;&gt;广告&lt;/span&gt;\n&lt;/div&gt;\n&lt;!-- 广告 结束--&gt;\n&lt;!-- 右侧960原创栏目 开始 --&gt;\n&lt;div class=&quot;origina_column_960&quot; id=&quot;js_origina_column_960&quot;&gt;\n&lt;div ne-module=&quot;/news/index2016_rmd/modules/originacolumn/originacolumn.js&quot;&gt;\n&lt;div class=&quot;origina_column_warp&quot;&gt;\n&lt;h2&gt;\n&lt;span&gt;新闻各有态度&lt;/span&gt;\n&lt;/h2&gt;\n&lt;div class=&quot;scroll_bd&quot; ne-role=&quot;scroll_bd&quot;&gt;\n&lt;div class=&quot;scroll_column_bd&quot;&gt;\n&lt;ul class=&quot;scroll_ul&quot;&gt;\n&lt;!-- 回声 开始 --&gt;\n&lt;!-- 回声 结束 --&gt;\n&lt;!-- 数读 开始 --&gt;\n&lt;li class=&quot;cell cell_sd cell_hover&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;a class=&quot;tags tag_sd&quot; href=&quot;http://data.163.com/special/datablog/&quot;&gt;数读&lt;/a&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://data.163.com/19/0626/14/EIJQJG9L000181IU.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                中国哪里的地铁最拥挤？\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;中国哪里的地铁最拥挤？&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/30e8760df3044e29a18fac3514dd22b1.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://data.163.com/19/0625/11/EIH0CQEK00019GOE.html&quot;&gt;娶一个潮汕老婆到底是什么体验&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://data.163.com/19/0621/17/EI7BLS3600019GOE.html&quot;&gt;不瞒你说，成都早餐好吃到爆&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 数读 结束 --&gt;\n&lt;!-- 人间 开始 --&gt;\n&lt;li class=&quot;cell cell_rj&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;a class=&quot;tags tag_rj&quot; href=&quot;http://renjian.163.com/&quot;&gt;人间&lt;/a&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0628/14/EIP21K41000181RV.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                小白作者的变现之路\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;小白作者的变现之路&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/27f33fcbfcec4b42b6837807b7a0883f.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0627/16/EIML2HJO000181RV.html&quot;&gt;被毒虫男友拖下水的女大学生&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0626/13/EIJPJMCH000181RV.html&quot;&gt;领导，求你让我加班吧&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 人间 结束 --&gt;\n&lt;!-- 大国小民 开始 --&gt;\n&lt;li class=&quot;cell cell_dgxm&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_dgxm&quot;&gt;大国小民&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0624/14/EIEOBNCB000181RK.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                当不了官发不了财的读书人\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;当不了官发不了财的读书人&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/24/b77e119ffeca477fa4bd2144b1fcb86c.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0620/16/EI4JRNO7000181RK.html&quot;&gt;四个博士，一地鸡毛&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0618/12/EHV0QRVG000181RK.html&quot;&gt;医闹得逞后，伤害的到底是谁&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 大国小民 结束 --&gt;\n&lt;!-- 三三有梗 开始 --&gt;\n&lt;li class=&quot;cell cell_dada&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_dada&quot;&gt;三三有梗&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0627/11/EIM57O490001885B.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                据说99%的人在图书馆一定会碰上......\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;据说99%的人在图书馆一定会碰上......&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/27/06eb8f4a3d4647bf9360ff5e71f003b8.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0626/15/EIK0IJT40001885B.html&quot;&gt;我可能，得了种，前任病&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0617/09/EHS57H4L0001885B.html&quot;&gt;那些KO不掉我的,最终成了我的OK&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 三三有梗 结束 --&gt;\n&lt;!-- 三三映画 开始 --&gt;\n&lt;!-- 三三映画 结束 --&gt;\n&lt;!-- 我去1990 开始 --&gt;\n&lt;li class=&quot;cell cell_wq1990&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_wq1990&quot;&gt;我去1990&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/11/EIOL94760001885B.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                直男幼稚行为大赏\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;直男幼稚行为大赏&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/0b3890cd2f4b473fa0127b5e33ae6ccf.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0624/12/EIEFGMVL0001885B.html&quot;&gt;打个赌，爱情友情你分不清楚&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0621/12/EI6NKDTU0001885B.html&quot;&gt;不会唱歌的人进 KTV 以后有多惨&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 我去1990 结束 --&gt;\n&lt;!-- 轻松一刻 开始 --&gt;\n&lt;li class=&quot;cell cell_qsyk&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_qsyk&quot;&gt;轻松一刻&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/19/EIPIQT4O000181BR.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                彩票一直都不中，我却忍不住要买\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;彩票一直都不中，我却忍不住要买&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/f44265c5b4ef4a11a99eedbde7c49833.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0627/17/EIMPGJAU000181BR.html&quot;&gt;原来&quot;神仙眷侣&quot;离婚,也是一地鸡毛&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0626/18/EIK95RV0000181BR.html&quot;&gt;我宣布，北大清华这对CP锁死了！&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 轻松一刻 结束 --&gt;\n&lt;!-- 槽值 开始 --&gt;\n&lt;li class=&quot;cell cell_caozhi&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_caozhi&quot;&gt;槽值&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://caozhi.news.163.com/19/0623/22/EID0CBIH000181TI.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                佟丽娅，这次你赢了\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;佟丽娅，这次你赢了&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/23/67d24242d479451ea705e26296187f78.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://caozhi.news.163.com/19/0623/15/EIC9LGSP000181TI.html&quot;&gt;千万别在深夜点开这神作&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://caozhi.news.163.com/19/0618/19/EHVRID7G000181TI.html&quot;&gt;那个发“嗯”的人，已被踢出群聊&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 槽值 结束 --&gt;\n&lt;!-- 谈心社 开始 --&gt;\n&lt;li class=&quot;cell cell_tanxinshe&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_tanxinshe&quot;&gt;谈心社&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/17/EIPCOKEA0001982T.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                王宝强母亲去世：来日方长是人生的错觉\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;王宝强母亲去世：来日方长是人生的错觉&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/ecd0de8b8dc0402da72d814bde76f06e.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0627/13/EIMC0EDH0001982T.html&quot;&gt;宋仲基宋慧乔离婚：再美的爱情也会过期&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0626/17/EIK6AD550001982T.html&quot;&gt;杨紫冰箱藏药，戳穿最怂瞬间&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 谈心社 结束 --&gt;\n&lt;!-- 看客 开始 --&gt;\n&lt;li class=&quot;cell cell_kanke&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;a class=&quot;tags tag_kanke&quot; href=&quot;http://renjian.163.com/special/renjian_kanke/&quot;&gt;看客&lt;/a&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0628/11/EIOMK185000199ET.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                我奶茶都戒了，日本人才知道它的好\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;我奶茶都戒了，日本人才知道它的好&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/f35eceb8d111496693e8f77a71a49cba.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0620/11/EI43PM8Q000199ET.html&quot;&gt;美国堕胎残酷物语&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0613/11/EHI39FML000199ET.html&quot;&gt;跑腿小哥提供的十万种服务&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 看客 结束 --&gt;\n&lt;!-- 身体密码 开始 --&gt;\n&lt;li class=&quot;cell cell_stpwd&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;a class=&quot;tags tag_stpwd&quot; href=&quot;http://jiankang.163.com/special/zhutierji/?type=3&quot;&gt;身体密码&lt;/a&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://jiankang.163.com/19/0625/11/EIH061CM0038804G.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                防晒，99%的人都做错了……\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;防晒，99%的人都做错了……&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/25/f260b6843fca4702bb5e4e316600f113.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://jiankang.163.com/19/0617/14/EHSN7PPV0038804G.html&quot;&gt;当代人减肥：迈不过25岁这道坎&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://jiankang.163.com/19/0608/15/EH5J9IGA00388AD5.html&quot;&gt;多年后 无数中年人仍会被高考吓醒&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 身体密码 结束 --&gt;\n&lt;!-- 哒哒 开始 --&gt;\n&lt;!-- 哒哒 结束 --&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div id=&quot;js_baseline&quot;&gt;&lt;/div&gt;\n&lt;span class=&quot;white_bg&quot; id=&quot;js_white_bg&quot;&gt;&lt;/span&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 右侧960原创栏目 结束 --&gt;\n&lt;div class=&quot;mt12 mod_ad_1 mod_ad_r&quot;&gt;\n&lt;!-- 300*250 --&gt;\n&lt;div adtype=&quot;rightAd&quot; class=&quot;at_item right_ad_item&quot; requesturl=&quot;https://nex.163.com/q?app=7BE0FC82&amp;amp;c=news&amp;amp;l=31&amp;amp;site=netease&amp;amp;affiliate=news&amp;amp;cat=homepage&amp;amp;type=logo300x250&amp;amp;location=1&quot;&gt;&lt;/div&gt;\n&lt;a class=&quot;ad_hover_href&quot; href=&quot;javascript:;&quot; target=&quot;_self&quot;&gt;&lt;/a&gt;\n&lt;/div&gt;\n&lt;!-- 新闻策划 开始 --&gt;\n&lt;div class=&quot;mt35 mod_pageh5&quot;&gt;\n&lt;div ne-module=&quot;/news/index2016_rmd/modules/modh5/modh5.js&quot;&gt;\n&lt;div class=&quot;idx_cm_title&quot;&gt;\n&lt;a class=&quot;title&quot; href=&quot;https://open.163.com/&quot;&gt;网易公开课&lt;/a&gt;\n&lt;/div&gt;\n&lt;div class=&quot;wrap&quot; ne-module=&quot;/modules/slide/slide.js&quot; ne-state=&quot;slideMethod:left;events=mouseover;interval=4000;loop=true;&quot;&gt;\n&lt;div class=&quot;h5_bg h5_border&quot;&gt;\n&lt;div class=&quot;h5_body&quot; ne-role=&quot;slide-body&quot;&gt;\n&lt;div class=&quot;h5_main clearfix&quot; ne-role=&quot;slide-scroll&quot;&gt;\n&lt;div class=&quot;h5_item&quot; ne-role=&quot;slide-page&quot;&gt;\n&lt;div class=&quot;h5_item_poster&quot;&gt;\n&lt;a href=&quot;https://vip.open.163.com/courses/2698?p=xs_yt01&quot;&gt;\n&lt;img height=&quot;436&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/b2ef8c1d0fed49078cb104f94c9f253e.jpeg&quot; width=&quot;280&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;他凭什么甩开同龄人，做职场前5%？&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=&quot;h5_item&quot; ne-role=&quot;slide-page&quot;&gt;\n&lt;div class=&quot;h5_item_poster&quot;&gt;\n&lt;a href=&quot;https://vip.open.163.com/courses/2249?p=xs_yt02&quot;&gt;\n&lt;img height=&quot;436&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/27/ffa8db82492446c88efe2d540ed64d6a.jpeg&quot; width=&quot;280&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;一个人成熟的标志：与负面情绪和解&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=&quot;h5_item&quot; ne-role=&quot;slide-page&quot;&gt;\n&lt;div class=&quot;h5_item_poster&quot;&gt;\n&lt;a href=&quot;https://vip.open.163.com/courses/1078?p=xs_yt03&quot;&gt;\n&lt;img height=&quot;436&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/893a6ecab816408cb5971de6ec236dde.jpeg&quot; width=&quot;280&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;情商高的人，走到哪儿都大受欢迎&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=&quot;h5_item&quot; ne-role=&quot;slide-page&quot;&gt;\n&lt;div class=&quot;h5_item_poster&quot;&gt;\n&lt;a href=&quot;https://vip.open.163.com/courses/2019?p=xs_yt04&quot;&gt;\n&lt;img height=&quot;436&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/f48048d211e44c889e241e545b29a000.jpeg&quot; width=&quot;280&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;每天5分钟，告别办公室综合症&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;span class=&quot;ad_hover_pic&quot;&gt;广告&lt;/span&gt;\n&lt;/div&gt;\n&lt;!-- &lt;div class=&quot;scrollbtn scrollbtl&quot; ne-role=&quot;scrollbtn&quot;&gt;&lt;a ne-role=&quot;slide-prev&quot; class=&quot;f_prev&quot;&gt;&amp;lt;&lt;/a&gt;&lt;/div&gt;\n        &lt;div class=&quot;scrollbtn scrollbtnr&quot; ne-role=&quot;scrollbtn&quot;&gt;&lt;a ne-role=&quot;slide-next&quot; class=&quot;f_next&quot;&gt;&amp;gt;&lt;/a&gt;&lt;/div&gt; --&gt;\n&lt;div class=&quot;nav clearfix&quot;&gt;\n&lt;span ne-repeat=&quot;1..state.total&quot; ne-role=&quot;slide-nav&quot;&gt;&lt;/span&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- &lt;div class=&quot;nav clearfix&quot;&gt;\n        &lt;span ne-role=&quot;slide-nav&quot; ne-repeat=&quot;1..state.total&quot;&gt;&lt;/span&gt;\n    &lt;/div&gt; --&gt;\n&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 新闻策划 结束 --&gt;\n&lt;!-- 新闻专题 开始 --&gt;\n&lt;div class=&quot;mt30 mod_news_special&quot;&gt;\n&lt;div class=&quot;idx_cm_title&quot;&gt;\n&lt;h2 class=&quot;title&quot;&gt;&lt;a href=&quot;http://news.163.com/special/&quot;&gt;新闻专题&lt;/a&gt;&lt;/h2&gt;\n&lt;/div&gt;\n&lt;div class=&quot;bd&quot;&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;a href=&quot;http://news.163.com/special/2019qglh/&quot;&gt;\n&lt;img alt=&quot;2019年全国两会&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/03/07/c8134391d38245dc849b99fbf1ce33b0.png?imageView&amp;amp;thumbnail=300y90&quot; width=&quot;300&quot;/&gt;\n&lt;/a&gt;\n&lt;/div&gt;\n&lt;h3&gt;\n&lt;span&gt;HOT&lt;/span&gt;\n&lt;strong&gt;&lt;a href=&quot;http://news.163.com/special/2019qglh/&quot;&gt;2019年全国两会&lt;/a&gt;&lt;/strong&gt;\n&lt;/h3&gt;\n&lt;ul class=&quot;idx_cm_list&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/special/zghj70/&quot;&gt;海军成立70周年&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/special/chunyun_2019/&quot;&gt;2019年春运春节&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/special/chang_e4/&quot;&gt;嫦娥四号登月&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://cms-bucket.ws.126.net/2019/06/26/080a0e9f8b014dd5b261f9e988f7f7f9.jpeg&quot;&gt;声明&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 新闻专题 结束 --&gt;\n&lt;!-- 高层动态 开始--&gt;\n&lt;div class=&quot;mt27 mod_high_dynamic&quot;&gt;\n&lt;div class=&quot;idx_cm_title&quot;&gt;\n&lt;h2 class=&quot;title&quot;&gt;&lt;a href=&quot;http://news.163.com/special/00011269/gdmore.html&quot;&gt;高层动态&lt;/a&gt;&lt;/h2&gt;\n&lt;/div&gt;\n&lt;ul class=&quot;idx_cm_list idx_cm_list_h&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://news.163.com/19/0628/11/EIOL0214000189FH.html&quot;&gt;习近平会见联合国秘书长古特雷斯&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://news.163.com/19/0620/14/EI4ESVV9000189FH.html&quot;&gt;习近平抵达平壤 开始对朝鲜进行国事访问&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;!-- 高层动态 结束--&gt;\n&lt;div class=&quot;mt25 mod_ad_2 mod_ad_r&quot;&gt;\n&lt;!-- 300*250 --&gt;\n&lt;div adtype=&quot;rightAd&quot; class=&quot;at_item right_ad_item&quot; requesturl=&quot;https://nex.163.com/q?app=7BE0FC82&amp;amp;c=news&amp;amp;l=32&amp;amp;site=netease&amp;amp;affiliate=news&amp;amp;cat=homepage&amp;amp;type=logo300x250&amp;amp;location=2&quot;&gt;&lt;/div&gt;\n&lt;a class=&quot;ad_hover_href&quot; href=&quot;javascript:;&quot; target=&quot;_self&quot;&gt;&lt;/a&gt;\n&lt;/div&gt;\n&lt;!-- 军事 航空  开始 --&gt;\n&lt;div class=&quot;mt35 mod_war&quot;&gt;\n&lt;div class=&quot;idx_cm_title&quot;&gt;\n&lt;h2 class=&quot;title&quot;&gt;\n&lt;a href=&quot;http://war.163.com/&quot;&gt;军事&lt;/a&gt;\n&lt;i&gt;・&lt;/i&gt;\n&lt;a href=&quot;http://news.163.com/air/&quot;&gt;航空&lt;/a&gt;\n&lt;/h2&gt;\n&lt;/div&gt;\n&lt;div class=&quot;idx_cm_img&quot;&gt;\n&lt;a href=&quot;http://war.163.com/photoview/4T8E0001/2301528.html&quot;&gt;\n&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">samples = soup.find_all(<span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\">samples</span><br></pre></td></tr></table></figure>\n<pre><code>[&lt;a class=&quot;ntes-nav-index-title ntes-nav-entry-wide c-fl&quot; href=&quot;http://www.163.com/&quot; title=&quot;网易首页&quot;&gt;网易首页&lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-select-title ntes-nav-entry-bgblack JS_NTES_LOG_FE&quot; href=&quot;http://www.163.com/#f=topnav&quot;&gt;应用\n             &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://m.163.com/newsapp/#f=topnav&quot;&gt;\n &lt;span&gt;\n &lt;em class=&quot;ntes-nav-app-newsapp&quot;&gt;网易新闻&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://open.163.com/#f=topnav&quot;&gt;\n &lt;span&gt;\n &lt;em class=&quot;ntes-nav-app-open&quot;&gt;网易公开课&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://hongcai.163.com/?from=pcsy-button&quot;&gt;\n &lt;span&gt;\n &lt;em class=&quot;ntes-nav-app-hongcai&quot;&gt;网易红彩&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://u.163.com/aosoutbdbd8&quot;&gt;\n &lt;span&gt;\n &lt;em class=&quot;ntes-nav-app-yanxuan&quot;&gt;网易严选&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://mail.163.com/client/dl.html?from=mail46&quot;&gt;\n &lt;span&gt;\n &lt;em class=&quot;ntes-nav-app-mail&quot;&gt;邮箱大师&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://study.163.com/client/download.htm?from=163app&amp;amp;utm_source=163.com&amp;amp;utm_medium=web_app&amp;amp;utm_campaign=business&quot;&gt;\n &lt;span&gt;\n &lt;em class=&quot;ntes-nav-app-study&quot;&gt;网易云课堂&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece47f92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=6b69bfbfac0db5f335232faa957a27bb&amp;amp;target=https%3A%2F%2Fapp.kaola.com%2F%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;\n &lt;em class=&quot;ntes-nav-app-kaola-hg&quot;&gt;网易考拉&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-quick-navigation-btn&quot; href=&quot;javascript:void(0);&quot; id=&quot;js_N_ntes_nav_quick_navigation_btn&quot; target=&quot;_self&quot;&gt;\n &lt;em&gt;快速导航\n               &lt;span class=&quot;menu1&quot;&gt;&lt;/span&gt;\n &lt;span class=&quot;menu2&quot;&gt;&lt;/span&gt;\n &lt;span class=&quot;menu3&quot;&gt;&lt;/span&gt;\n &lt;/em&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com&quot;&gt;新闻&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/domestic&quot;&gt;国内&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/world&quot;&gt;国际&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/photo&quot;&gt;图片&lt;/a&gt;,\n &lt;a href=&quot;http://view.163.com&quot;&gt;评论&lt;/a&gt;,\n &lt;a href=&quot;http://discovery.163.com&quot;&gt;探索&lt;/a&gt;,\n &lt;a href=&quot;http://war.163.com&quot;&gt;军事&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/localnews/&quot;&gt;本地新闻&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/wangsansanhome/&quot;&gt;王三三&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com&quot;&gt;体育&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/nba&quot;&gt;NBA&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/cba&quot;&gt;CBA&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/allsports&quot;&gt;综合&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/zc&quot;&gt;中超&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/world&quot;&gt;国际足球&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/yc&quot;&gt;英超&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/xj&quot;&gt;西甲&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/yj&quot;&gt;意甲&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com&quot;&gt;娱乐&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/star&quot;&gt;明星&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/photo&quot;&gt;图片&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/movie&quot;&gt;电影&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/tv&quot;&gt;电视&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/music&quot;&gt;音乐&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/special/gsbjb/&quot;&gt;稿事编辑部&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/special/focus_ent/&quot;&gt;娱乐FOCUS&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/special/xbkhz/&quot;&gt;星捕快&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com&quot;&gt;财经&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com/stock&quot;&gt;股票&lt;/a&gt;,\n &lt;a href=&quot;http://quotes.money.163.com/stock&quot;&gt;行情&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com/chanjing&quot;&gt;产经&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com/ipo&quot;&gt;新股&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com/finance&quot;&gt;金融&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com/fund&quot;&gt;基金&lt;/a&gt;,\n &lt;a href=&quot;http://biz.163.com&quot;&gt;商业&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com/licai&quot;&gt;理财&lt;/a&gt;,\n &lt;a href=&quot;http://auto.163.com&quot;&gt;汽车&lt;/a&gt;,\n &lt;a href=&quot;http://auto.163.com/buy&quot;&gt;购车&lt;/a&gt;,\n &lt;a href=&quot;http://auto.163.com/depreciate&quot;&gt;行情&lt;/a&gt;,\n &lt;a href=&quot;http://product.auto.163.com/finder&quot;&gt;选车&lt;/a&gt;,\n &lt;a href=&quot;http://product.auto.163.com&quot;&gt;车型库&lt;/a&gt;,\n &lt;a href=&quot;http://auto.163.com/news&quot;&gt;行业&lt;/a&gt;,\n &lt;a href=&quot;http://auto.163.com/chezhu&quot;&gt;用车&lt;/a&gt;,\n &lt;a href=&quot;http://auto.163.com/photo&quot;&gt;汽车图片&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com&quot;&gt;科技&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/telecom/&quot;&gt;通信&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/it&quot;&gt;IT&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/internet&quot;&gt;互联网&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/special/ydhlw&quot;&gt;移动互联网&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/special/chzt&quot;&gt;特别策划&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/special/wudaokou&quot;&gt;五道口沙龙&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/special/yyzd&quot;&gt;易语中的&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/special&quot;&gt;专题&lt;/a&gt;,\n &lt;a href=&quot;http://lady.163.com&quot;&gt;女人&lt;/a&gt;,\n &lt;a href=&quot;http://baby.163.com&quot;&gt;亲子&lt;/a&gt;,\n &lt;a href=&quot;http://fashion.163.com/art&quot;&gt;艺术&lt;/a&gt;,\n &lt;a href=&quot;http://fashion.163.com&quot;&gt;时尚&lt;/a&gt;,\n &lt;a href=&quot;http://shoucang.163.com&quot;&gt;收藏&lt;/a&gt;,\n &lt;a href=&quot;http://lady.163.com/sense&quot;&gt;情感&lt;/a&gt;,\n &lt;a href=&quot;http://lady.163.com/astro&quot;&gt;星座&lt;/a&gt;,\n &lt;a href=&quot;http://lady.163.com/beauty&quot;&gt;美容&lt;/a&gt;,\n &lt;a href=&quot;http://cosmetic.lady.163.com/trial&quot;&gt;免费试用&lt;/a&gt;,\n &lt;a href=&quot;http://mobile.163.com&quot;&gt;手机&lt;/a&gt;,\n &lt;a href=&quot;http://digi.163.com/&quot;&gt;数码&lt;/a&gt;,\n &lt;a href=&quot;http://mobile.163.com/mi&quot;&gt;移动&lt;/a&gt;,\n &lt;a href=&quot;http://digi.163.com/pc&quot;&gt;电脑&lt;/a&gt;,\n &lt;a href=&quot;http://product.mobile.163.com&quot;&gt;手机库&lt;/a&gt;,\n &lt;a href=&quot;http://hea.163.com/&quot;&gt;家电&lt;/a&gt;,\n &lt;a href=&quot;http://digi.163.com/smart&quot;&gt;智能硬件&lt;/a&gt;,\n &lt;a href=&quot;http://digi.163.com/dc&quot;&gt;相机&lt;/a&gt;,\n &lt;a href=&quot;http://v.mobile.163.com&quot;&gt;手机视频&lt;/a&gt;,\n &lt;a href=&quot;http://house.163.com&quot;&gt;房产&lt;/a&gt;,\n &lt;a href=&quot;http://home.163.com&quot;&gt;家居&lt;/a&gt;,\n &lt;a href=&quot;http://bj.house.163.com&quot;&gt;北京房产&lt;/a&gt;,\n &lt;a href=&quot;http://sh.house.163.com&quot;&gt;上海房产&lt;/a&gt;,\n &lt;a href=&quot;http://gz.house.163.com&quot;&gt;广州房产&lt;/a&gt;,\n &lt;a href=&quot;http://house.163.com/city&quot;&gt;全部分站&lt;/a&gt;,\n &lt;a href=&quot;http://xf.house.163.com&quot;&gt;楼盘库&lt;/a&gt;,\n &lt;a href=&quot;http://home.163.com/jiaju/&quot;&gt;家具&lt;/a&gt;,\n &lt;a href=&quot;http://home.163.com/weiyu/&quot;&gt;卫浴&lt;/a&gt;,\n &lt;a href=&quot;http://home.163.com/special/jiajuyigui&quot;&gt;衣柜&lt;/a&gt;,\n &lt;a href=&quot;http://travel.163.com&quot;&gt;旅游&lt;/a&gt;,\n &lt;a href=&quot;http://travel.163.com/outdoor&quot;&gt;户外&lt;/a&gt;,\n &lt;a href=&quot;http://guizhou.travel.163.com&quot;&gt;贵州&lt;/a&gt;,\n &lt;a href=&quot;http://travel.163.com/food&quot;&gt;美食&lt;/a&gt;,\n &lt;a href=&quot;http://jingdian.travel.163.com/domestic/1000066937&quot;&gt;四川&lt;/a&gt;,\n &lt;a href=&quot;http://jingdian.travel.163.com&quot;&gt;景点&lt;/a&gt;,\n &lt;a href=&quot;http://jingdian.travel.163.com/domestic/1000066944&quot;&gt;新疆&lt;/a&gt;,\n &lt;a href=&quot;http://travel.163.com/special/travellist/#f=endnav&quot;&gt;专题&lt;/a&gt;,\n &lt;a href=&quot;http://jingdian.travel.163.com/domestic/1000066926/#f=endnav&quot;&gt;西藏&lt;/a&gt;,\n &lt;a href=&quot;http://edu.163.com&quot;&gt;教育&lt;/a&gt;,\n &lt;a href=&quot;http://edu.163.com/yimin&quot;&gt;移民&lt;/a&gt;,\n &lt;a href=&quot;http://edu.163.com/kaoyan&quot;&gt;考研&lt;/a&gt;,\n &lt;a href=&quot;http://edu.163.com/liuxue&quot;&gt;留学&lt;/a&gt;,\n &lt;a href=&quot;http://edu.163.com/special/official&quot;&gt;公务员&lt;/a&gt;,\n &lt;a href=&quot;http://edu.163.com/en&quot;&gt;外语&lt;/a&gt;,\n &lt;a href=&quot;http://kids.163.com&quot;&gt;中小学&lt;/a&gt;,\n &lt;a href=&quot;http://edu.163.com/gaokao&quot;&gt;高考&lt;/a&gt;,\n &lt;a href=&quot;http://daxue.163.com&quot;&gt;校园&lt;/a&gt;,\n &lt;a href=&quot;http://sitemap.163.com/&quot;&gt;&lt;i&gt;&lt;/i&gt;查看网易地图&lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-login-title&quot; href=&quot;http://reg.163.com/&quot; id=&quot;js_N_nav_login_title&quot;&gt;登录&lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-register&quot; href=&quot;http://reg.email.163.com/mailregAll/reg0.jsp?from=163navi&amp;amp;regPage=163&quot;&gt;注册免费邮箱\n                 &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://reg.vip.163.com/register.m?from=topnav&quot;&gt;\n &lt;span style=&quot;width:190px;&quot;&gt;注册VIP邮箱（特权邮箱，付费）&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://mail.163.com/client/dl.html?from=mail46&quot;&gt;\n &lt;span style=&quot;width:190px;&quot;&gt;免费下载网易官方手机邮箱应用&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-entry-wide c-fl&quot; id=&quot;js_N_navLogout&quot; target=&quot;_self&quot;&gt;安全退出&lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-mobile-title ntes-nav-entry-bgblack&quot; href=&quot;http://www.163.com/newsapp/#f=163nav&quot;&gt;\n &lt;em class=&quot;ntes-nav-entry-mobile&quot;&gt;移动端&lt;/em&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://www.163.com/newsapp/#f=163nav&quot;&gt;\n &lt;img src=&quot;//static.ws.126.net/f2e/include/common_nav/images/topapp.jpg&quot;/&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-huatian ntes-nav-entry-bgblack&quot; href=&quot;https://open.163.com/&quot; id=&quot;js_love_url&quot;&gt;\n &lt;em class=&quot;ntes-nav-entry-huatian&quot;&gt;网易公开课&lt;/em&gt;\n &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n &lt;span class=&quot;ntes-nav-msg&quot;&gt;\n &lt;em class=&quot;ntes-nav-msg-num&quot;&gt;&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://vip.open.163.com&quot;&gt;\n &lt;span&gt;付费精品&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://open.163.com/ted/&quot;&gt;\n &lt;span&gt;TED&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://open.163.com/ocw/&quot;&gt;\n &lt;span&gt;国际名校公开课&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://open.163.com/cuvocw/&quot;&gt;\n &lt;span&gt;中国大学视频公开课&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://open.163.com/appreciation&quot;&gt;\n &lt;span&gt;赏课&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://open.163.com/khan/&quot;&gt;\n &lt;span&gt;可汗学院&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://open.163.com/special/appdownload_pc/&quot;&gt;\n &lt;span&gt;下载公开课&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-kaola ntes-nav-entry-bgblack&quot; href=&quot;http://da.kaola.com/redirect?t=5aaebece48792c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=d638f275b1755320e845734e53e897ee&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot; id=&quot;js_kaola_url&quot;&gt;\n &lt;em class=&quot;ntes-nav-entry-kaola&quot;&gt;网易考拉&lt;/em&gt;\n &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n &lt;span class=&quot;ntes-nav-msg ntes-nav-kaola-msg&quot; id=&quot;js_N_navKaolaMsg&quot;&gt;\n &lt;em class=&quot;ntes-nav-msg-num&quot;&gt;&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece48f92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=b3e224752b2cad85e9831e8c6cf7fbbd&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fbimaibangdan.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;1000元新人大礼包&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece49392c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=fd8e43f4a20a26fbe60f7e7de1f17efe&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;新人专享进口好货&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece49392c01&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=21bcd5b595fc235cfd11e3e1cff14177&amp;amp;target=https%3A%2F%2Factivity.kaola.com%2Factivity%2FflashSaleIndex%2Fshow.html%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;今日限时抢购&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece49792c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=ecc40777cb2d68a3d9fb078b232f081d&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfyrzolcpagerz.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;营养保健&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece49b92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=0cdd5a920c768340ffc12eccd659341d&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fnewpc.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;个人洗护&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4a392c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=ee49a3a793f22e648ac616f5dab061dd&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjpwmb9zcpagesl.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;美容彩妆&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4a792c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=6eb2598fd20963efc203a4e3fe88f4e2&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fmyxrq.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;母婴儿童&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4ab92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=3946ce460ba655c11afac69855dfc02b&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Ffoodnewcustomers.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;环球美食&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4af92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=2eee7290051863737a434d44f3c0d46f&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fnewtalent.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;家居生活&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-lofter ntes-nav-entry-bgblack&quot; href=&quot;http://you.163.com/?from=web_fc_menhu_xinrukou_1&quot; id=&quot;js_lofter_icon_url&quot;&gt;\n &lt;em class=&quot;ntes-nav-entry-lofter&quot;&gt;网易严选&lt;/em&gt;\n &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n &lt;span class=&quot;ntes-nav-msg&quot; id=&quot;js_N_navLofterMsg&quot;&gt;\n &lt;em class=&quot;ntes-nav-msg-num&quot;&gt;&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/act/static/Fb2d1OZ714.html?from=web_fc_menhu_xinrukou_1&quot;&gt;\n &lt;span&gt;888元现金券&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/manufacturer/list?from=web_fc_menhu_xinrukou_3&quot;&gt;\n &lt;span&gt;品牌制造商爆款&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/item/recommend?from=web_fc_menhu_xinrukou_4&quot;&gt;\n &lt;span&gt;999+人气好评品&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/flashSale/index?from=web_fc_menhu_xinrukou_5&quot;&gt;\n &lt;span&gt;限时特惠&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/item/list?categoryId=1005000&amp;amp;from=web_fc_menhu_xinrukou_7&quot;&gt;\n &lt;span&gt;居家床品&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/item/list?categoryId=1005001&amp;amp;from=web_fc_menhu_xinrukou_8&quot;&gt;\n &lt;span&gt;精致餐厨&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/item/list?categoryId=1008000&amp;amp;from=web_fc_menhu_xinrukou_9&quot;&gt;\n &lt;span&gt;箱包鞋类&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/item/list?categoryId=1010000&amp;amp;from=web_fc_menhu_xinrukou_10&quot;&gt;\n &lt;span&gt;经典服饰&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/item/list?categoryId=1005002&amp;amp;from=web_fc_menhu_xinrukou_11&quot;&gt;\n &lt;span&gt;健康美食&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-money ntes-nav-entry-bgblack&quot; href=&quot;http://pay.163.com/&quot;&gt;\n &lt;em class=&quot;ntes-nav-entry-money&quot;&gt;支付&lt;/em&gt;\n &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://pay.163.com/#f=topnav&quot;&gt;\n &lt;span&gt;一卡通充值&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://ecard.163.com/script/index#f=topnav&quot;&gt;\n &lt;span&gt;一卡通购买&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://k.163.com/?product=163&amp;amp;trackid=01&quot;&gt;\n &lt;span&gt;网易白金卡&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://epay.163.com/&quot;&gt;\n &lt;span&gt;我的网易支付&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://3c.163.com/?from=wangyimenhu16&quot;&gt;\n &lt;span&gt;网易智造&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://lq.163.com?from=neteasemoney&quot;&gt;\n &lt;span&gt;网易来钱-借现金&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-cart ntes-nav-entry-bgblack&quot; href=&quot;http://baoxian.163.com/car/?from=mhgwc&quot;&gt;\n &lt;em class=&quot;ntes-nav-entry-cart&quot;&gt;电商&lt;/em&gt;\n &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com?from=web_in_wydaohang&quot;&gt;\n &lt;span&gt;严选&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://lq.163.com?from=neteasebuy&quot;&gt;\n &lt;span&gt;我要借钱&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4b392c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=d15f8f9d72ccc507aeefda91b43c0cd2&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;网易考拉&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-mail ntes-nav-entry-bgblack&quot; id=&quot;js_mail_url&quot;&gt;\n &lt;em class=&quot;ntes-nav-entry-mail&quot;&gt;邮箱&lt;/em&gt;\n &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n &lt;span class=&quot;ntes-nav-msg&quot; id=&quot;js_N_navMailMsg&quot;&gt;\n &lt;em class=&quot;ntes-nav-msg-num&quot; id=&quot;js_N_navMailMsgNum&quot;&gt;&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://email.163.com/#f=topnav&quot;&gt;\n &lt;span&gt;免费邮箱&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://vipmail.163.com/#f=topnav&quot;&gt;\n &lt;span&gt;VIP邮箱&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://qiye.163.com/#f=topnav&quot;&gt;\n &lt;span&gt;企业邮箱&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://reg.email.163.com/mailregAll/reg0.jsp?from=ntes_nav&amp;amp;regPage=163&quot;&gt;\n &lt;span&gt;免费注册&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://reg.email.163.com/unireg/call.do?cmd=register.entrance&amp;amp;flow=mobile&amp;amp;from=ntes_nav&quot;&gt;\n &lt;span&gt;快速注册&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://mail.163.com/dashi/dlpro.html?from=mail46&quot;&gt;\n &lt;span&gt;客户端下载&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;first&quot; href=&quot;https://news.163.com/&quot;&gt;新闻&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/&quot;&gt;体育&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/nba/&quot;&gt;NBA&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/&quot;&gt;娱乐&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com/&quot;&gt;财经&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com/stock/&quot;&gt;股票&lt;/a&gt;,\n &lt;a href=&quot;http://auto.163.com/&quot; id=&quot;_link_auto&quot;&gt;汽车&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/&quot;&gt;科技&lt;/a&gt;,\n &lt;a href=&quot;http://mobile.163.com/&quot;&gt;手机&lt;/a&gt;,\n &lt;a href=&quot;http://digi.163.com/&quot;&gt;数码&lt;/a&gt;,\n &lt;a href=&quot;http://lady.163.com/&quot;&gt;女人&lt;/a&gt;,\n &lt;a href=&quot;http://v.163.com/&quot;&gt;直播&lt;/a&gt;,\n &lt;a href=&quot;http://v.163.com/special/video/#tuijian&quot;&gt;视频&lt;/a&gt;,\n &lt;a href=&quot;http://travel.163.com/&quot;&gt;旅游&lt;/a&gt;,\n &lt;a href=&quot;http://house.163.com/&quot; id=&quot;houseUrl&quot;&gt;房产&lt;/a&gt;,\n &lt;a href=&quot;http://home.163.com/&quot; id=&quot;homeUrl&quot;&gt;家居&lt;/a&gt;,\n &lt;a href=&quot;http://edu.163.com/&quot;&gt;教育&lt;/a&gt;,\n &lt;a href=&quot;http://book.163.com/&quot;&gt;读书&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/&quot; id=&quot;_link_game&quot;&gt;本地&lt;/a&gt;,\n &lt;a href=&quot;http://jiankang.163.com/&quot;&gt;健康&lt;/a&gt;,\n &lt;a href=&quot;http://rd.da.netease.com/redirect?t=5802fb18cf033c80&amp;amp;p=e17af55c&amp;amp;proId=1024&amp;amp;target=https%3A%2F%2Fwww.kaola.com%2F%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;海淘&lt;/a&gt;,\n &lt;a class=&quot;last&quot; href=&quot;http://art.163.com/&quot;&gt;艺术&lt;/a&gt;,\n &lt;a class=&quot;channel2019_logo channel2019_news_logo&quot; href=&quot;https://news.163.com/&quot;&gt;网易新闻有态度&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/weather/&quot;&gt;\n &lt;script ne-repeat=&quot;weather in weatherInfo&quot; type=&quot;text/template&quot;&gt;\n                 &lt;img class=&quot;ns-weather-icon&quot; ne-src=&quot;http://static.ws.126.net/f2e/news/index2015/img/weather/&lt;%=weather.icon%&gt;&quot;&gt;\n                 &lt;div class=&quot;ns-weather-text&quot;&gt;&lt;%=weather.weather%&gt;&lt;/div&gt;\n                 &lt;div class=&quot;ns-weather-info&quot;&gt;&lt;%=weather.temp2%&gt;°~&lt;%=weather.temp1%&gt;°&lt;/div&gt;\n                 &lt;div class=&quot;ns-weather-city&quot;&gt;&lt;%=weather.city%&gt;&lt;/div&gt;\n             &lt;/script&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://www.163.com/&quot;&gt;首页&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/rank/&quot;&gt;排行&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/photo/#Current&quot;&gt;图片&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/domestic/&quot;&gt;国内&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/world/&quot;&gt;国际&lt;/a&gt;,\n &lt;a href=&quot;http://data.163.com/special/datablog/&quot;&gt;数读&lt;/a&gt;,\n &lt;a href=&quot;http://war.163.com/&quot;&gt;军事&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/air/&quot;&gt;航空&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/uav/&quot;&gt;无人机&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/college&quot;&gt;新闻学院&lt;/a&gt;,\n &lt;a href=&quot;http://gov.163.com/&quot;&gt;政务&lt;/a&gt;,\n &lt;a href=&quot;http://gongyi.163.com/&quot;&gt;公益&lt;/a&gt;,\n &lt;a href=&quot;http://media.163.com/&quot;&gt;媒体&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/wangsansanhome/&quot;&gt;王三三&lt;/a&gt;,\n &lt;a class=&quot;tags tag_sd&quot; href=&quot;http://data.163.com/special/datablog/&quot;&gt;数读&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://data.163.com/19/0626/14/EIJQJG9L000181IU.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 中国哪里的地铁最拥挤？\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;中国哪里的地铁最拥挤？&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/30e8760df3044e29a18fac3514dd22b1.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://data.163.com/19/0625/11/EIH0CQEK00019GOE.html&quot;&gt;娶一个潮汕老婆到底是什么体验&lt;/a&gt;,\n &lt;a href=&quot;http://data.163.com/19/0621/17/EI7BLS3600019GOE.html&quot;&gt;不瞒你说，成都早餐好吃到爆&lt;/a&gt;,\n &lt;a class=&quot;tags tag_rj&quot; href=&quot;http://renjian.163.com/&quot;&gt;人间&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0628/14/EIP21K41000181RV.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 小白作者的变现之路\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;小白作者的变现之路&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/27f33fcbfcec4b42b6837807b7a0883f.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0627/16/EIML2HJO000181RV.html&quot;&gt;被毒虫男友拖下水的女大学生&lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0626/13/EIJPJMCH000181RV.html&quot;&gt;领导，求你让我加班吧&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0624/14/EIEOBNCB000181RK.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 当不了官发不了财的读书人\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;当不了官发不了财的读书人&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/24/b77e119ffeca477fa4bd2144b1fcb86c.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0620/16/EI4JRNO7000181RK.html&quot;&gt;四个博士，一地鸡毛&lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0618/12/EHV0QRVG000181RK.html&quot;&gt;医闹得逞后，伤害的到底是谁&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0627/11/EIM57O490001885B.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 据说99%的人在图书馆一定会碰上......\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;据说99%的人在图书馆一定会碰上......&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/27/06eb8f4a3d4647bf9360ff5e71f003b8.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0626/15/EIK0IJT40001885B.html&quot;&gt;我可能，得了种，前任病&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0617/09/EHS57H4L0001885B.html&quot;&gt;那些KO不掉我的,最终成了我的OK&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/11/EIOL94760001885B.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 直男幼稚行为大赏\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;直男幼稚行为大赏&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/0b3890cd2f4b473fa0127b5e33ae6ccf.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0624/12/EIEFGMVL0001885B.html&quot;&gt;打个赌，爱情友情你分不清楚&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0621/12/EI6NKDTU0001885B.html&quot;&gt;不会唱歌的人进 KTV 以后有多惨&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/19/EIPIQT4O000181BR.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 彩票一直都不中，我却忍不住要买\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;彩票一直都不中，我却忍不住要买&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/f44265c5b4ef4a11a99eedbde7c49833.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0627/17/EIMPGJAU000181BR.html&quot;&gt;原来&quot;神仙眷侣&quot;离婚,也是一地鸡毛&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0626/18/EIK95RV0000181BR.html&quot;&gt;我宣布，北大清华这对CP锁死了！&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://caozhi.news.163.com/19/0623/22/EID0CBIH000181TI.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 佟丽娅，这次你赢了\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;佟丽娅，这次你赢了&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/23/67d24242d479451ea705e26296187f78.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://caozhi.news.163.com/19/0623/15/EIC9LGSP000181TI.html&quot;&gt;千万别在深夜点开这神作&lt;/a&gt;,\n &lt;a href=&quot;http://caozhi.news.163.com/19/0618/19/EHVRID7G000181TI.html&quot;&gt;那个发“嗯”的人，已被踢出群聊&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/17/EIPCOKEA0001982T.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 王宝强母亲去世：来日方长是人生的错觉\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;王宝强母亲去世：来日方长是人生的错觉&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/ecd0de8b8dc0402da72d814bde76f06e.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0627/13/EIMC0EDH0001982T.html&quot;&gt;宋仲基宋慧乔离婚：再美的爱情也会过期&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0626/17/EIK6AD550001982T.html&quot;&gt;杨紫冰箱藏药，戳穿最怂瞬间&lt;/a&gt;,\n &lt;a class=&quot;tags tag_kanke&quot; href=&quot;http://renjian.163.com/special/renjian_kanke/&quot;&gt;看客&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0628/11/EIOMK185000199ET.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 我奶茶都戒了，日本人才知道它的好\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;我奶茶都戒了，日本人才知道它的好&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/f35eceb8d111496693e8f77a71a49cba.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0620/11/EI43PM8Q000199ET.html&quot;&gt;美国堕胎残酷物语&lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0613/11/EHI39FML000199ET.html&quot;&gt;跑腿小哥提供的十万种服务&lt;/a&gt;,\n &lt;a class=&quot;tags tag_stpwd&quot; href=&quot;http://jiankang.163.com/special/zhutierji/?type=3&quot;&gt;身体密码&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://jiankang.163.com/19/0625/11/EIH061CM0038804G.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 防晒，99%的人都做错了……\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;防晒，99%的人都做错了……&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/25/f260b6843fca4702bb5e4e316600f113.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://jiankang.163.com/19/0617/14/EHSN7PPV0038804G.html&quot;&gt;当代人减肥：迈不过25岁这道坎&lt;/a&gt;,\n &lt;a href=&quot;https://jiankang.163.com/19/0608/15/EH5J9IGA00388AD5.html&quot;&gt;多年后 无数中年人仍会被高考吓醒&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/16/EIP8R4SV000189FH.html&quot;&gt;央视独家：习近平会见日本首相&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/16/EIP8N52U0001875N.html&quot;&gt;外交部回应中美元首会面&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/14/EIOVIP2500018AP1.html&quot; target=&quot;_blank&quot;&gt;特朗普会见普京 笑称:不要干预美国大选哦&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/16/EIP7KOH70001875P.html&quot;&gt;住建部:加快垃圾分类处理设施建设&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/16/EIP8F9QQ0001875P.html&quot; target=&quot;_blank&quot;&gt;袁仁国被公诉:受贿数额特别巨大&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/13/EIOSPGLJ0001899O.html&quot;&gt;湖南耒阳人大常委会原主任携子主动投案&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/13/EIOUHOB70001875P.html&quot; target=&quot;_blank&quot;&gt;美的48小时内被骗10亿资金&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/19/EIPH3F1V0001875P.html&quot;&gt;垃圾分类逼疯上海人？别笑！马上轮到这46个城市&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/19/EIPILCJ70001875P.html&quot;&gt;女子酒后澡堂一打六被刑拘&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/18/EIPFI0KN0001875P.html&quot; target=&quot;_blank&quot;&gt;杀人案嫌犯向警察开枪拒捕 被当场击毙&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/16/EIP8RHM70001875P.html&quot;&gt;95后飙摩托车追高铁发抖音被刑拘&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/16/EIP7B7RP0001899O.html&quot; target=&quot;_blank&quot;&gt;母亲担心儿子粗心在其手背&quot;刺&quot;字&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/15/EIP4Q6BQ0001899O.html&quot;&gt;女子高铁上劝老人看好小孩被骂&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/16/EIP8QO5Q0001875P.html&quot; target=&quot;_blank&quot;&gt;南京杀妻案死者姑妈：侄女生前要强&lt;/a&gt;,\n &lt;a class=&quot;ad_hover_href&quot; href=&quot;http://gb.corp.163.com/gb/legal.html&quot;&gt;&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/16/0721/19/BSH7V8QF00014JB6.html&quot;&gt;辽宁遭暴雨侵袭致城市内涝 紧急转移12万人&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/16/0721/10/BSG7HOH20001124J.html&quot;&gt;民政部:北方暴雨75人死亡失踪&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/16/0721/12/BSGG5VK300011229.html&quot; target=&quot;_blank&quot;&gt;北京发生山洪灾害 铲车翻倒4人被困&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/16/0721/12/BSGHHVLK00011229.html&quot;&gt;搜救犬水灾救援22天殉职 主人:它太累了&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/16/0721/07/BSFUFFP800014AED.html&quot; target=&quot;_blank&quot;&gt;姐妹被洪水卷走警方拒立案&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/photoview/00AN0001/2189402.html?from=ph_ss#p=BSG716GE00AN0001&quot;&gt;\n &lt;img height=&quot;120&quot; src=&quot;http://img3.cache.netease.com/news/2016/7/21/20160721131401d35e2.jpg&quot; width=&quot;190&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;河南遇强降雨 9.8万人转移&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/photoview/00AP0001/2189377.html?from=ph_ss#p=BSFTQ99H00AP0001&quot;&gt;\n &lt;img height=&quot;120&quot; src=&quot;http://img3.cache.netease.com/news/2016/7/21/201607211319466e84e.jpg&quot; width=&quot;190&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;女主播直播暴雨 浑身湿透&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/photoview/00AP0001/2189389.html?from=ph_ss#p=BSG1S9AM00AP0001&quot;&gt;\n &lt;img height=&quot;120&quot; src=&quot;http://img5.cache.netease.com/news/2016/7/21/20160721132119ef59b.jpg&quot; width=&quot;190&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;湖北民众省道上趟水摸鱼&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://open.163.com/&quot;&gt;网易公开课&lt;/a&gt;,\n &lt;a class=&quot;focus_prev&quot; ne-role=&quot;slide-prev&quot;&gt;&lt;/a&gt;,\n &lt;a class=&quot;focus_next&quot; ne-role=&quot;slide-next&quot;&gt;&lt;/a&gt;,\n &lt;a class=&quot;nav_name no_cursor&quot; href=&quot;javascript:;&quot; ne-role=&quot;tab-nav&quot; target=&quot;_self&quot;&gt;\n                     要闻\n                     &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;nav_name no_cursor&quot; href=&quot;&#123;&#123;myState.channelbendiurl&#125;&#125;&quot; ne-class=&quot;&#123;&#123;myState.bendiTstyle ? 'bendistyle' : ''&#125;&#125;&quot; ne-role=&quot;tab-nav&quot; target=&quot;&#123;&#123;myState.channelbendiurl == 'javascript:;' ? '_self' : '_blank'&#125;&#125;&quot;&gt;\n &lt;strong ne-text=&quot;&#123;&#123;myState.bendiCity&#125;&#125;&quot;&gt;&lt;/strong&gt;\n &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;nav_name&quot; href=&quot;http://news.163.com/domestic/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                     国内\n                     &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;nav_name&quot; href=&quot;http://news.163.com/world/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                     国际\n                     &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;nav_name no_cursor&quot; href=&quot;javascript:;&quot; ne-role=&quot;tab-nav&quot; target=&quot;_self&quot;&gt;\n                     独家\n                     &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;nav_name&quot; href=&quot;http://war.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                     军事\n                     &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;nav_name&quot; href=&quot;http://money.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                     财经\n                     &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;nav_name&quot; href=&quot;http://tech.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                     科技\n                     &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;more&quot; href=&quot;javascript:;&quot; ne-class=&quot;&#123;&#123;myState.morechannel ? 'more_hover': ''&#125;&#125;&quot; ne-mouseout=&quot;morehideChannel()&quot; ne-mouseover=&quot;moreShowChannel()&quot; ne-role=&quot;morebtn&quot; target=&quot;_self&quot;&gt;更多&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;体育&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;娱乐&lt;/a&gt;,\n &lt;a href=&quot;http://lady.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;时尚&lt;/a&gt;,\n &lt;a href=&quot;http://auto.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;汽车&lt;/a&gt;,\n &lt;a href=&quot;&#123;&#123;myState.channelhouseurl&#125;&#125;&quot; ne-role=&quot;tab-nav&quot;&gt;房产&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/air/&quot; ne-role=&quot;tab-nav&quot;&gt;航空&lt;/a&gt;,\n &lt;a href=&quot;http://jiankang.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;健康&lt;/a&gt;,\n &lt;a class=&quot;newsdata_prev&quot; href=&quot;#prev&quot; ne-class=&quot;&#123;&#123;myState.fixedTop ? 'fixed_data_show': ''&#125;&#125;&quot; ne-click=&quot;tabPrevFn($event);&quot; ne-hide=&quot;&#123;&#123;myState.iPad&#125;&#125;&quot;&gt;\n &lt;span&gt;&lt;/span&gt;\n &lt;div class=&quot;newsdata_btn_name&quot;&gt;&#123;&#123;myState.preBtnName&#125;&#125;&lt;/div&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;newsdata_next&quot; href=&quot;#next&quot; ne-class=&quot;&#123;&#123;myState.fixedTop ? 'fixed_data_show': ''&#125;&#125;&quot; ne-click=&quot;tabNextFn($event);&quot; ne-hide=&quot;&#123;&#123;myState.iPad&#125;&#125;&quot;&gt;\n &lt;span&gt;&lt;/span&gt;\n &lt;div class=&quot;newsdata_btn_name&quot;&gt;&#123;&#123;myState.nextBtnName&#125;&#125;&lt;/div&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;load_more_btn&quot; ne-click=&quot;clickLoadMore();&quot; ne-hide=&quot;&#123;&#123;myState.counter &gt;= navList[myState.ndNavIndex].totalPage || myState.counter == 0&#125;&#125;&quot; target=&quot;_self&quot;&gt;\n &lt;div class=&quot;post_addmore&quot; ne-visible=&quot;&#123;&#123;myState.counter &lt; navList[myState.ndNavIndex].totalPage &amp;&amp; !myState.loading&#125;&#125;&quot;&gt;\n &lt;i&gt;+&lt;/i&gt;\n &lt;span&gt;加载更多&lt;/span&gt;\n &lt;/div&gt;\n &lt;div class=&quot;post_adding&quot; ne-show=&quot;&#123;&#123;myState.loading&#125;&#125;&quot;&gt;\n &lt;i&gt;+&lt;/i&gt;\n &lt;span&gt;加载中...&lt;/span&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://g.163.com/a?CID=68685&amp;amp;Values=1366894002&amp;amp;Redirect=http://clk.gentags.net/clk/iv-10648/st-31/cr-2/oi-1303641/or-7535/adv-158/pcon-0/https%253A%252F%252Fent.163.com%252F19%252F0625%252F16%252FEIHG8HLF000398QL.html&quot;&gt;\n &lt;img height=&quot;400&quot; src=&quot;http://nimg.ws.126.net/?url=https://yt-adp.ws.126.net/channel21/037408_300400_axry_20190626.jpg&amp;amp;thumbnail=300x2147483647&amp;amp;quality=75&amp;amp;type=jpg&quot; width=&quot;300&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;三金西瓜霜独家冠名网易封面故事&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/photoview/00AP0001/2302561.html&quot;&gt;\n &lt;img height=&quot;400&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/e5b070c1f96349b0829da88b41105903.jpeg?imageView&amp;amp;thumbnail=300y400&quot; width=&quot;300&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;浒苔绿潮开始在山东沿海登陆&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/photoview/00AP0001/2302559.html&quot;&gt;\n &lt;img height=&quot;400&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/2792654fe66f4985879a8cc30a89a6cc.jpeg?imageView&amp;amp;thumbnail=300y400&quot; width=&quot;300&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;广西南宁抓获涉传人员286名&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/photoview/00AO0001/2302560.html&quot;&gt;\n &lt;img height=&quot;400&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/202e20527525474cac861ba7e56a2dde.jpeg?imageView&amp;amp;thumbnail=300y400&quot; width=&quot;300&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;民主党初选辩论次日:拜登现身&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;f_prev&quot; ne-role=&quot;slide-prev&quot;&gt;&amp;lt;&lt;/a&gt;,\n &lt;a class=&quot;f_next&quot; ne-role=&quot;slide-next&quot;&gt;&amp;gt;&lt;/a&gt;,\n &lt;a href=&quot;http://baoxian.163.com/activity/act1605/index.html?from=mhds1605&quot;&gt;免费领取iPhone6s&lt;/a&gt;,\n &lt;a href=&quot;http://mall.163.com/mobile/fill.jsp?from=wwwtext&quot;&gt;手机费快充超低折扣&lt;/a&gt;,\n &lt;a href=&quot;http://baoxian.163.com/car/activitylist.html?from=mhdstbl&quot;&gt;免费送现金红包！&lt;/a&gt;,\n &lt;a href=&quot;http://piao.163.com/movie/47080.html?from=newsword&quot;&gt;镜中多奇境依旧爱丽丝&lt;/a&gt;,\n &lt;a class=&quot;tags tag_sd&quot; href=&quot;http://data.163.com/special/datablog/&quot;&gt;数读&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://data.163.com/19/0626/14/EIJQJG9L000181IU.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 中国哪里的地铁最拥挤？\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;中国哪里的地铁最拥挤？&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/30e8760df3044e29a18fac3514dd22b1.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://data.163.com/19/0625/11/EIH0CQEK00019GOE.html&quot;&gt;娶一个潮汕老婆到底是什么体验&lt;/a&gt;,\n &lt;a href=&quot;http://data.163.com/19/0621/17/EI7BLS3600019GOE.html&quot;&gt;不瞒你说，成都早餐好吃到爆&lt;/a&gt;,\n &lt;a class=&quot;tags tag_rj&quot; href=&quot;http://renjian.163.com/&quot;&gt;人间&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0628/14/EIP21K41000181RV.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 小白作者的变现之路\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;小白作者的变现之路&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/27f33fcbfcec4b42b6837807b7a0883f.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0627/16/EIML2HJO000181RV.html&quot;&gt;被毒虫男友拖下水的女大学生&lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0626/13/EIJPJMCH000181RV.html&quot;&gt;领导，求你让我加班吧&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0624/14/EIEOBNCB000181RK.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 当不了官发不了财的读书人\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;当不了官发不了财的读书人&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/24/b77e119ffeca477fa4bd2144b1fcb86c.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0620/16/EI4JRNO7000181RK.html&quot;&gt;四个博士，一地鸡毛&lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0618/12/EHV0QRVG000181RK.html&quot;&gt;医闹得逞后，伤害的到底是谁&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0627/11/EIM57O490001885B.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 据说99%的人在图书馆一定会碰上......\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;据说99%的人在图书馆一定会碰上......&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/27/06eb8f4a3d4647bf9360ff5e71f003b8.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0626/15/EIK0IJT40001885B.html&quot;&gt;我可能，得了种，前任病&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0617/09/EHS57H4L0001885B.html&quot;&gt;那些KO不掉我的,最终成了我的OK&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/11/EIOL94760001885B.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 直男幼稚行为大赏\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;直男幼稚行为大赏&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/0b3890cd2f4b473fa0127b5e33ae6ccf.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0624/12/EIEFGMVL0001885B.html&quot;&gt;打个赌，爱情友情你分不清楚&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0621/12/EI6NKDTU0001885B.html&quot;&gt;不会唱歌的人进 KTV 以后有多惨&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/19/EIPIQT4O000181BR.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 彩票一直都不中，我却忍不住要买\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;彩票一直都不中，我却忍不住要买&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/f44265c5b4ef4a11a99eedbde7c49833.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0627/17/EIMPGJAU000181BR.html&quot;&gt;原来&quot;神仙眷侣&quot;离婚,也是一地鸡毛&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0626/18/EIK95RV0000181BR.html&quot;&gt;我宣布，北大清华这对CP锁死了！&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://caozhi.news.163.com/19/0623/22/EID0CBIH000181TI.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 佟丽娅，这次你赢了\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;佟丽娅，这次你赢了&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/23/67d24242d479451ea705e26296187f78.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://caozhi.news.163.com/19/0623/15/EIC9LGSP000181TI.html&quot;&gt;千万别在深夜点开这神作&lt;/a&gt;,\n &lt;a href=&quot;http://caozhi.news.163.com/19/0618/19/EHVRID7G000181TI.html&quot;&gt;那个发“嗯”的人，已被踢出群聊&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/17/EIPCOKEA0001982T.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 王宝强母亲去世：来日方长是人生的错觉\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;王宝强母亲去世：来日方长是人生的错觉&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/ecd0de8b8dc0402da72d814bde76f06e.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0627/13/EIMC0EDH0001982T.html&quot;&gt;宋仲基宋慧乔离婚：再美的爱情也会过期&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0626/17/EIK6AD550001982T.html&quot;&gt;杨紫冰箱藏药，戳穿最怂瞬间&lt;/a&gt;,\n &lt;a class=&quot;tags tag_kanke&quot; href=&quot;http://renjian.163.com/special/renjian_kanke/&quot;&gt;看客&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0628/11/EIOMK185000199ET.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 我奶茶都戒了，日本人才知道它的好\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;我奶茶都戒了，日本人才知道它的好&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/f35eceb8d111496693e8f77a71a49cba.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0620/11/EI43PM8Q000199ET.html&quot;&gt;美国堕胎残酷物语&lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0613/11/EHI39FML000199ET.html&quot;&gt;跑腿小哥提供的十万种服务&lt;/a&gt;,\n &lt;a class=&quot;tags tag_stpwd&quot; href=&quot;http://jiankang.163.com/special/zhutierji/?type=3&quot;&gt;身体密码&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://jiankang.163.com/19/0625/11/EIH061CM0038804G.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 防晒，99%的人都做错了……\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;防晒，99%的人都做错了……&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/25/f260b6843fca4702bb5e4e316600f113.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://jiankang.163.com/19/0617/14/EHSN7PPV0038804G.html&quot;&gt;当代人减肥：迈不过25岁这道坎&lt;/a&gt;,\n &lt;a href=&quot;https://jiankang.163.com/19/0608/15/EH5J9IGA00388AD5.html&quot;&gt;多年后 无数中年人仍会被高考吓醒&lt;/a&gt;,\n &lt;a class=&quot;ad_hover_href&quot; href=&quot;javascript:;&quot; target=&quot;_self&quot;&gt;&lt;/a&gt;,\n &lt;a class=&quot;title&quot; href=&quot;https://open.163.com/&quot;&gt;网易公开课&lt;/a&gt;,\n &lt;a href=&quot;https://vip.open.163.com/courses/2698?p=xs_yt01&quot;&gt;\n &lt;img height=&quot;436&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/b2ef8c1d0fed49078cb104f94c9f253e.jpeg&quot; width=&quot;280&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;他凭什么甩开同龄人，做职场前5%？&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://vip.open.163.com/courses/2249?p=xs_yt02&quot;&gt;\n &lt;img height=&quot;436&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/27/ffa8db82492446c88efe2d540ed64d6a.jpeg&quot; width=&quot;280&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;一个人成熟的标志：与负面情绪和解&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://vip.open.163.com/courses/1078?p=xs_yt03&quot;&gt;\n &lt;img height=&quot;436&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/893a6ecab816408cb5971de6ec236dde.jpeg&quot; width=&quot;280&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;情商高的人，走到哪儿都大受欢迎&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://vip.open.163.com/courses/2019?p=xs_yt04&quot;&gt;\n &lt;img height=&quot;436&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/f48048d211e44c889e241e545b29a000.jpeg&quot; width=&quot;280&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;每天5分钟，告别办公室综合症&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/&quot;&gt;新闻专题&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/2019qglh/&quot;&gt;\n &lt;img alt=&quot;2019年全国两会&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/03/07/c8134391d38245dc849b99fbf1ce33b0.png?imageView&amp;amp;thumbnail=300y90&quot; width=&quot;300&quot;/&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/2019qglh/&quot;&gt;2019年全国两会&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/zghj70/&quot;&gt;海军成立70周年&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/chunyun_2019/&quot;&gt;2019年春运春节&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/chang_e4/&quot;&gt;嫦娥四号登月&lt;/a&gt;,\n &lt;a href=&quot;http://cms-bucket.ws.126.net/2019/06/26/080a0e9f8b014dd5b261f9e988f7f7f9.jpeg&quot;&gt;声明&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/00011269/gdmore.html&quot;&gt;高层动态&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/11/EIOL0214000189FH.html&quot;&gt;习近平会见联合国秘书长古特雷斯&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0620/14/EI4ESVV9000189FH.html&quot;&gt;习近平抵达平壤 开始对朝鲜进行国事访问&lt;/a&gt;,\n &lt;a class=&quot;ad_hover_href&quot; href=&quot;javascript:;&quot; target=&quot;_self&quot;&gt;&lt;/a&gt;,\n &lt;a href=&quot;http://war.163.com/&quot;&gt;军事&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/air/&quot;&gt;航空&lt;/a&gt;,\n &lt;a href=&quot;http://war.163.com/photoview/4T8E0001/2301528.html&quot;&gt;\n &lt;/a&gt;]\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.julyedu.com/course/getDetail/66/\" >廖雪峰Python数据分析<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"请求\"><a href=\"#请求\" class=\"headerlink\" title=\"请求\"></a>请求</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\">result = requests.get(<span class=\"string\">&quot;https://news.163.com/&quot;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从返回result的状态码中，了解到是否请求成功</span></span><br><span class=\"line\">result.status_code</span><br></pre></td></tr></table></figure>\n<pre><code>200\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result.encoding</span><br></pre></td></tr></table></figure>\n<pre><code>&#39;GBK&#39;\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">content = result.content</span><br><span class=\"line\"><span class=\"built_in\">print</span> (content[:<span class=\"number\">1000</span>]) <span class=\"comment\">#前1000个字符</span></span><br></pre></td></tr></table></figure>\n<pre><code>b&#39; &lt;!DOCTYPE HTML&gt;\\n&lt;!--[if IE 6 ]&gt; &lt;html id=&quot;ne_wrap&quot; class=&quot;ne_ua_ie6 ne_ua_ielte8&quot;&gt; &lt;![endif]--&gt;\\n&lt;!--[if IE 7 ]&gt; &lt;html id=&quot;ne_wrap&quot; class=&quot;ne_ua_ie7 ne_ua_ielte8&quot;&gt; &lt;![endif]--&gt;\\n&lt;!--[if IE 8 ]&gt; &lt;html id=&quot;ne_wrap&quot; class=&quot;ne_ua_ie8 ne_ua_ielte8&quot;&gt; &lt;![endif]--&gt;\\n&lt;!--[if IE 9 ]&gt; &lt;html id=&quot;ne_wrap&quot; class=&quot;ne_ua_ie9&quot;&gt; &lt;![endif]--&gt;\\n&lt;!--[if (gte IE 10)|!(IE)]&gt;&lt;!--&gt; &lt;html id=&quot;ne_wrap&quot; phone=&quot;1&quot;&gt; &lt;!--&lt;![endif]--&gt;\\n&lt;head&gt;\\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;\\n&lt;meta name=&quot;model_url&quot; content=&quot;http://news.163.com/special/index2015/&quot; /&gt;\\n&lt;title&gt;\\xcd\\xf8\\xd2\\xd7\\xd0\\xc2\\xce\\xc5&lt;/title&gt;\\n&lt;base target=&quot;_blank&quot; /&gt;\\n&lt;meta name=&quot;keywords&quot; content=&quot;\\xd0\\xc2\\xce\\xc5,\\xd0\\xc2\\xce\\xc5\\xd6\\xd0\\xd0\\xc4,\\xd0\\xc2\\xce\\xc5\\xc6\\xb5\\xb5\\xc0,\\xca\\xb1\\xca\\xc2\\xb1\\xa8\\xb5\\xc0&quot; /&gt;\\n&lt;meta name=&quot;description&quot; content=&quot;\\xd0\\xc2\\xce\\xc5,\\xd0\\xc2\\xce\\xc5\\xd6\\xd0\\xd0\\xc4,\\xb0\\xfc\\xba\\xac\\xd3\\xd0\\xca\\xb1\\xd5\\xfe\\xd0\\xc2\\xce\\xc5,\\xb9\\xfa\\xc4\\xda\\xd0\\xc2\\xce\\xc5,\\xb9\\xfa\\xbc\\xca\\xd0\\xc2\\xce\\xc5,\\xc9\\xe7\\xbb\\xe1\\xd0\\xc2\\xce\\xc5,\\xca\\xb1\\xca\\xc2\\xc6\\xc0\\xc2\\xdb,\\xd0\\xc2\\xce\\xc5\\xcd\\xbc\\xc6\\xac,\\xd0\\xc2\\xce\\xc5\\xd7\\xa8\\xcc\\xe2,\\xd0\\xc2\\xce\\xc5\\xc2\\xdb\\xcc\\xb3,\\xbe\\xfc\\xca\\xc2,\\xc0\\xfa\\xca\\xb7,\\xb5\\xc4\\xd7\\xa8\\xd2\\xb5\\xca\\xb1\\xca\\xc2\\xb1\\xa8\\xb5\\xc0\\xc3\\xc5\\xbb\\xa7\\xcd\\xf8\\xd5\\xbe&quot; /&gt;\\n  &lt;script type=&quot;text/javascript&quot; _keep=&quot;true&quot;&gt;\\n    var matchStr =window.location.href;\\n    var reURL = /^(https):\\\\/\\\\/.+$/;\\n    if(!reURL.test(matchStr))&#123;\\n        windo&#39;\n</code></pre><h2 id=\"模拟登入\"><a href=\"#模拟登入\" class=\"headerlink\" title=\"模拟登入\"></a>模拟登入</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s = requests.session()</span><br><span class=\"line\">data = &#123;<span class=\"string\">&#x27;user&#x27;</span>:<span class=\"string\">&#x27;用户名&#x27;</span>,<span class=\"string\">&#x27;passdw&#x27;</span>:<span class=\"string\">&#x27;密码&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">#post 换成登录的地址，</span></span><br><span class=\"line\">res=s.post(<span class=\"string\">&#x27;http://www.xxx.net/index.php?action=login&#x27;</span>,data);</span><br><span class=\"line\"><span class=\"comment\">#换成抓取的地址</span></span><br><span class=\"line\">s.get(<span class=\"string\">&#x27;http://www.xxx.net/archives/155/&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"BeautifulSoup\"><a href=\"#BeautifulSoup\" class=\"headerlink\" title=\"BeautifulSoup\"></a>BeautifulSoup</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> warnings</span><br><span class=\"line\">warnings.filterwarnings(<span class=\"string\">&quot;ignore&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\">soup = BeautifulSoup(content, fromEncoding=<span class=\"string\">&quot;GB2312&quot;</span>) <span class=\"comment\">#注意这个地方</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(soup)</span><br></pre></td></tr></table></figure>\n<pre><code>&lt;!DOCTYPE HTML&gt;\n&lt;!--[if IE 6 ]&gt; &lt;html id=&quot;ne_wrap&quot; class=&quot;ne_ua_ie6 ne_ua_ielte8&quot;&gt; &lt;![endif]--&gt;&lt;!--[if IE 7 ]&gt; &lt;html id=&quot;ne_wrap&quot; class=&quot;ne_ua_ie7 ne_ua_ielte8&quot;&gt; &lt;![endif]--&gt;&lt;!--[if IE 8 ]&gt; &lt;html id=&quot;ne_wrap&quot; class=&quot;ne_ua_ie8 ne_ua_ielte8&quot;&gt; &lt;![endif]--&gt;&lt;!--[if IE 9 ]&gt; &lt;html id=&quot;ne_wrap&quot; class=&quot;ne_ua_ie9&quot;&gt; &lt;![endif]--&gt;&lt;!--[if (gte IE 10)|!(IE)]&gt;&lt;!--&gt;&lt;html id=&quot;ne_wrap&quot; phone=&quot;1&quot;&gt; &lt;!--&lt;![endif]--&gt;\n&lt;head&gt;\n&lt;meta content=&quot;text/html; charset=utf-8&quot; http-equiv=&quot;Content-Type&quot;/&gt;\n&lt;meta content=&quot;http://news.163.com/special/index2015/&quot; name=&quot;model_url&quot;/&gt;\n&lt;title&gt;网易新闻&lt;/title&gt;\n&lt;base target=&quot;_blank&quot;/&gt;\n&lt;meta content=&quot;新闻,新闻中心,新闻频道,时事报道&quot; name=&quot;keywords&quot;/&gt;\n&lt;meta content=&quot;新闻,新闻中心,包含有时政新闻,国内新闻,国际新闻,社会新闻,时事评论,新闻图片,新闻专题,新闻论坛,军事,历史,的专业时事报道门户网站&quot; name=&quot;description&quot;/&gt;\n&lt;script _keep=&quot;true&quot; type=&quot;text/javascript&quot;&gt;\n    var matchStr =window.location.href;\n    var reURL = /^(https):\\/\\/.+$/;\n    if(!reURL.test(matchStr))&#123;\n        window.location.href = &quot;https://news.163.com/&quot;;\n    &#125;\n  &lt;/script&gt;\n&lt;!-- 适配3g ie8bug--&gt;\n&lt;!-- 广告样式 --&gt;\n&lt;style&gt;\n.channel_relative_2016&#123;\n    position:relative;\n    line-height: 0px;\n&#125;\n.channel_relative_2016_lh&#123;\n    line-height: 0px;\n&#125;\n.channel_ad_2016&#123;\n    height: 17px;\n    display:none;\n    background: rgba(0,0,0,0.6);\n    background: #000\\9;\n    color: #fff;\n    border-radius: 0 8px 0px 0px;\n    line-height: 17px;\n    width: 30px;\n    text-align: left;\n    overflow: hidden;\n    font-size: 12px;\n    font-family: Arial;\n    position:absolute;\n    left:0;\n    bottom:0;\n    z-index:3;\n&#125;\n.channel_ad_text_2016&#123;\n    position: absolute;\n    right: 1px;\n    bottom: -2px;\n    color: #999999;\n    z-index:3;\n    font-size: 12px;\n    font-family: Arial;\n   display:none;\n  line-height: 18px;\n&#125;\n.channel_relative_2016 .channel_ad_2016,.channel_relative_2016 .channel_ad_text_2016&#123;\n    display: inline-block;\n&#125;\n&lt;/style&gt;\n&lt;!-- channel2019_logo样式 --&gt;\n&lt;style type=&quot;text/css&quot;&gt;\n    .channel2019_logo&#123;\n        background: url(http://cms-bucket.ws.126.net/2019/04/25/09e37a6a4dd349468cd38dd79a3b15b7.png) no-repeat !important;\n        width: 152px !important;\n        height: 37px !important;\n        display: block !important;\n        float: left!important;\n    &#125;\n    /*新闻*/\n    .channel2019_news_logo&#123;\n        background-position: 0px 4px !important;\n    &#125;\n    /*科技*/\n    .channel2019_tech_logo&#123;\n        background-position: 0px -96px !important;\n\n    &#125;\n    /*手机*/\n    .channel2019_mobile_logo&#123;\n        background-position: 0px -196px !important;\n\n    &#125;\n    /*数码*/\n    .channel2019_digi_logo&#123;\n        background-position: 0px -296px !important;\n\n    &#125;\n    /*新闻学院*/\n    .channel2019_college_logo&#123;\n        background-position: 0px -396px !important;\n        width: 213px !important;\n    &#125;\n    /*政务*/\n    .channel2019_gov_logo&#123;\n        background-position: 0px -496px !important;\n    &#125;\n    /*军事*/\n    .channel2019_war_logo&#123;\n        background-position: 0px 0px !important;\n        height: 33px !important;\n    &#125;\n    /*航空*/\n    .channel2019_air_logo&#123;\n        background-position: 0px 0px !important;\n        height: 33px !important;\n    &#125;\n   /*新闻排行榜*/\n    .channel2019_newsrank_logo&#123;\n        background-position: 0px 0px !important;\n        height: 33px !important;\n    &#125;\n      /*新闻图片*/\n    .channel2019_newsphoto_logo&#123;\n        background-position: 0px -2200px !important;\n          width: 213px !important;\n        height: 33px !important;\n    &#125;\n    /*体育*/\n    .channel2019_sports_logo&#123;\n        background-position: 0px -796px !important;\n    &#125;\n      /*体育二级页*/\n    .channel2019_sportssub_logo&#123;\n        height: 33px !important;\n        background-position: 0px -800px !important;\n    &#125;\n    /*娱乐*/\n    .channel2019_ent_logo&#123;\n        background-position: 0px -896px !important;\n    &#125;\n    /*音乐*/\n    .channel2019_music_logo&#123;\n        background-position: 0px -900px !important;\n        height: 32px !important;\n    &#125;\n    /*时尚*/\n    .channel2019_fashion_logo&#123;\n        background-position: 0px -1100px !important;\n        height: 32px !important;\n    &#125;\n    /*女人*/\n    .channel2019_lady_logo&#123;\n        background-position: 0px -1196px !important;\n    &#125;\n    /*财经*/\n    .channel2019_money_logo&#123;\n        background-position: 0px -1300px !important;\n    &#125;\n    /*手机图片*/\n    .channel2019_mobilephoto_logo&#123;\n        background-position: 0px -2300px !important;\n        width: 213px !important;\n        height: 33px !important;\n    &#125;\n    /*汽车*/\n    .channel2019_auto_logo&#123;\n        background-position: 0px -1396px !important;\n    &#125;\n    /*旅游*/\n    .channel2019_travel_logo&#123;\n        background-position: 0px -1496px !important;\n    &#125;\n    /*健康*/\n    .channel2019_jiankang_logo&#123;\n        background-position: 0px -1596px !important;\n    &#125;\n    /*教育*/\n    .channel2019_edu_logo&#123;\n        background-position: 0px -1696px !important;\n    &#125;\n    /*艺术*/\n    .channel2019_art_logo&#123;\n        background-position: 0px -1796px !important;\n    &#125;\n    /*亲子*/\n    .channel2019_baby_logo&#123;\n        background-position: 0px -1896px !important;\n    &#125;\n    /*双创*/\n    .channel2019_shuangchuang_logo&#123;\n        background-position: 0px -1996px !important;\n    &#125;\n    /*酒香*/\n    .channel2019_jiu_logo&#123;\n        background-position: 0px -2096px !important;\n    &#125;\n      /*游戏*/\n    .channel2019_game_logo&#123;\n        background-position: 0px -2400px !important;\n    &#125;\n    &lt;/style&gt;\n&lt;script _keep=&quot;true&quot; type=&quot;text/javascript&quot;&gt;\n(function() &#123;\n    if(/s=noRedirect/i.test(location.search)) return; \n    if(/AppleWebKit.*Mobile/i.test(navigator.userAgent) || (/MIDP|SymbianOS|NOKIA|SAMSUNG|LG|NEC|TCL|Alcatel|BIRD|DBTEL|Dopod|PHILIPS|HAIER|LENOVO|MOT-|Nokia|SonyEricsson|SIE-|Amoi|ZTE/.test(navigator.userAgent))) &#123;\n        try &#123;\n            if(/Android|Windows Phone|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent)) &#123;\n                 window.location.href = &quot;https://3g.163.com/touch/news/&quot;;\n            &#125; else if(/iPad/i.test(navigator.userAgent)) &#123;\n                window.location.href = &quot;https://news.163.com/pad/&quot;\n            &#125;\n        &#125; catch(e) &#123;&#125;\n    &#125;   \n&#125;)();\n&lt;/script&gt;\n&lt;script _keep=&quot;true&quot; charset=&quot;gbk&quot; src=&quot;//news.163.com/special/00015CJL/xw_news_data.js&quot;&gt;&lt;/script&gt;\n&lt;!-- 社交传播统计 --&gt;\n&lt;script src=&quot;//static.ws.126.net/163/frontend/libs/antanalysis.min.js&quot;&gt;&lt;/script&gt;\n&lt;script _keep=&quot;true&quot; src=&quot;//static.ws.126.net/163/frontend/antnest/NTM-KFGT6I8U-38.js&quot;&gt;&lt;/script&gt;\n&lt;script crossorigin=&quot;anonymous&quot; src=&quot;https://static.ws.126.net/163/frontend/libs/raven-3.26.2.min.js&quot;&gt;&lt;/script&gt;\n&lt;link href=&quot;https://static.ws.126.net/163/f2e/news/index2016_rmd/css/head~a2a2093f5d52d.css&quot; rel=&quot;stylesheet&quot;/&gt;\n&lt;/head&gt;\n&lt;body class=&quot;news_pc&quot; ne-class=&quot;&#123;&#123;myState.isNs9 ? 'ns9' : 'ns12'&#125;&#125;&quot; ne-module=&quot;/news/index2016_rmd/index2016.js&quot;&gt;\n&lt;div class=&quot;index2016_wrap&quot; id=&quot;index2016_wrap&quot;&gt;\n&lt;div&gt;\n&lt;!-- 节日动画 start --&gt;\n&lt;!-- 节日动画 end --&gt;\n&lt;div class=&quot;common_nav&quot;&gt;\n&lt;link href=&quot;//static.ws.126.net/163/f2e/commonnav2019/css/commonnav_headcss-61ce66f60e.css&quot; rel=&quot;stylesheet&quot;/&gt;\n&lt;!-- urs --&gt;\n&lt;script _keep=&quot;true&quot; src=&quot;//urswebzj.nosdn.127.net/webzj_cdn101/message.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\n&lt;div class=&quot;ntes_nav_wrap&quot; id=&quot;js_N_NTES_wrap&quot;&gt;\n&lt;div class=&quot;ntes-nav&quot; id=&quot;js_N_nav&quot;&gt;\n&lt;div class=&quot;ntes-nav-main clearfix&quot;&gt;\n&lt;div class=&quot;c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-index-title ntes-nav-entry-wide c-fl&quot; href=&quot;http://www.163.com/&quot; title=&quot;网易首页&quot;&gt;网易首页&lt;/a&gt;\n&lt;!-- 应用 --&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select ntes-nav-select-wide ntes-nav-app c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-select-title ntes-nav-entry-bgblack JS_NTES_LOG_FE&quot; href=&quot;http://www.163.com/#f=topnav&quot;&gt;应用\n            &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-select-pop&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://m.163.com/newsapp/#f=topnav&quot;&gt;\n&lt;span&gt;\n&lt;em class=&quot;ntes-nav-app-newsapp&quot;&gt;网易新闻&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://open.163.com/#f=topnav&quot;&gt;\n&lt;span&gt;\n&lt;em class=&quot;ntes-nav-app-open&quot;&gt;网易公开课&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://hongcai.163.com/?from=pcsy-button&quot;&gt;\n&lt;span&gt;\n&lt;em class=&quot;ntes-nav-app-hongcai&quot;&gt;网易红彩&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://u.163.com/aosoutbdbd8&quot;&gt;\n&lt;span&gt;\n&lt;em class=&quot;ntes-nav-app-yanxuan&quot;&gt;网易严选&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://mail.163.com/client/dl.html?from=mail46&quot;&gt;\n&lt;span&gt;\n&lt;em class=&quot;ntes-nav-app-mail&quot;&gt;邮箱大师&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://study.163.com/client/download.htm?from=163app&amp;amp;utm_source=163.com&amp;amp;utm_medium=web_app&amp;amp;utm_campaign=business&quot;&gt;\n&lt;span&gt;\n&lt;em class=&quot;ntes-nav-app-study&quot;&gt;网易云课堂&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;last&quot;&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece47f92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=6b69bfbfac0db5f335232faa957a27bb&amp;amp;target=https%3A%2F%2Fapp.kaola.com%2F%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;\n&lt;em class=&quot;ntes-nav-app-kaola-hg&quot;&gt;网易考拉&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=&quot;c-fr&quot;&gt;\n&lt;!-- 片段开始 --&gt;\n&lt;div class=&quot;ntes-nav-quick-navigation&quot;&gt;\n&lt;a class=&quot;ntes-nav-quick-navigation-btn&quot; href=&quot;javascript:void(0);&quot; id=&quot;js_N_ntes_nav_quick_navigation_btn&quot; target=&quot;_self&quot;&gt;\n&lt;em&gt;快速导航\n              &lt;span class=&quot;menu1&quot;&gt;&lt;/span&gt;\n&lt;span class=&quot;menu2&quot;&gt;&lt;/span&gt;\n&lt;span class=&quot;menu3&quot;&gt;&lt;/span&gt;\n&lt;/em&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-quicknav-pop&quot; id=&quot;js_N_ntes_quicknav_pop&quot;&gt;\n&lt;div class=&quot;ntes-quicknav-list&quot;&gt;\n&lt;div class=&quot;ntes-quicknav-content&quot;&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-1&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;https://news.163.com&quot;&gt;新闻&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/domestic&quot;&gt;国内&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/world&quot;&gt;国际&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/photo&quot;&gt;图片&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://view.163.com&quot;&gt;评论&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://discovery.163.com&quot;&gt;探索&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://war.163.com&quot;&gt;军事&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/localnews/&quot;&gt;本地新闻&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/special/wangsansanhome/&quot;&gt;王三三&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-2&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://sports.163.com&quot;&gt;体育&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sports.163.com/nba&quot;&gt;NBA&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sports.163.com/cba&quot;&gt;CBA&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sports.163.com/allsports&quot;&gt;综合&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sports.163.com/zc&quot;&gt;中超&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sports.163.com/world&quot;&gt;国际足球&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sports.163.com/yc&quot;&gt;英超&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sports.163.com/xj&quot;&gt;西甲&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sports.163.com/yj&quot;&gt;意甲&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-3&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://ent.163.com&quot;&gt;娱乐&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://ent.163.com/star&quot;&gt;明星&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://ent.163.com/photo&quot;&gt;图片&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://ent.163.com/movie&quot;&gt;电影&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://ent.163.com/tv&quot;&gt;电视&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://ent.163.com/music&quot;&gt;音乐&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://ent.163.com/special/gsbjb/&quot;&gt;稿事编辑部&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://ent.163.com/special/focus_ent/&quot;&gt;娱乐FOCUS&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://ent.163.com/special/xbkhz/&quot;&gt;星捕快&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-4&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://money.163.com&quot;&gt;财经&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://money.163.com/stock&quot;&gt;股票&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://quotes.money.163.com/stock&quot;&gt;行情&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://money.163.com/chanjing&quot;&gt;产经&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://money.163.com/ipo&quot;&gt;新股&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://money.163.com/finance&quot;&gt;金融&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://money.163.com/fund&quot;&gt;基金&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://biz.163.com&quot;&gt;商业&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://money.163.com/licai&quot;&gt;理财&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-5&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://auto.163.com&quot;&gt;汽车&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://auto.163.com/buy&quot;&gt;购车&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://auto.163.com/depreciate&quot;&gt;行情&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://product.auto.163.com/finder&quot;&gt;选车&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://product.auto.163.com&quot;&gt;车型库&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://auto.163.com/news&quot;&gt;行业&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://auto.163.com/chezhu&quot;&gt;用车&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://auto.163.com/photo&quot;&gt;汽车图片&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n\n                  &lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-6&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://tech.163.com&quot;&gt;科技&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://tech.163.com/telecom/&quot;&gt;通信&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://tech.163.com/it&quot;&gt;IT&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://tech.163.com/internet&quot;&gt;互联网&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://tech.163.com/special/ydhlw&quot;&gt;移动互联网&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://tech.163.com/special/chzt&quot;&gt;特别策划&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://tech.163.com/special/wudaokou&quot;&gt;五道口沙龙&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://tech.163.com/special/yyzd&quot;&gt;易语中的&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://tech.163.com/special&quot;&gt;专题&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-7&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://lady.163.com&quot;&gt;女人&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://baby.163.com&quot;&gt;亲子&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://fashion.163.com/art&quot;&gt;艺术&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://fashion.163.com&quot;&gt;时尚&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://shoucang.163.com&quot;&gt;收藏&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://lady.163.com/sense&quot;&gt;情感&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://lady.163.com/astro&quot;&gt;星座&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://lady.163.com/beauty&quot;&gt;美容&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://cosmetic.lady.163.com/trial&quot;&gt;免费试用&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-8&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://mobile.163.com&quot;&gt;手机&lt;/a&gt;&lt;span&gt;/&lt;/span&gt;&lt;a href=&quot;http://digi.163.com/&quot;&gt;数码&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://mobile.163.com/mi&quot;&gt;移动&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://digi.163.com/pc&quot;&gt;电脑&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://product.mobile.163.com&quot;&gt;手机库&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://hea.163.com/&quot;&gt;家电&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://digi.163.com/smart&quot;&gt;智能硬件&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://digi.163.com/dc&quot;&gt;相机&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://v.mobile.163.com&quot;&gt;手机视频&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n\n                  &lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-9&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://house.163.com&quot;&gt;房产&lt;/a&gt;&lt;span&gt;/&lt;/span&gt;&lt;a href=&quot;http://home.163.com&quot;&gt;家居&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://bj.house.163.com&quot;&gt;北京房产&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://sh.house.163.com&quot;&gt;上海房产&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://gz.house.163.com&quot;&gt;广州房产&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://house.163.com/city&quot;&gt;全部分站&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://xf.house.163.com&quot;&gt;楼盘库&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://home.163.com/jiaju/&quot;&gt;家具&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://home.163.com/weiyu/&quot;&gt;卫浴&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://home.163.com/special/jiajuyigui&quot;&gt;衣柜&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-10&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://travel.163.com&quot;&gt;旅游&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://travel.163.com/outdoor&quot;&gt;户外&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://guizhou.travel.163.com&quot;&gt;贵州&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://travel.163.com/food&quot;&gt;美食&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://jingdian.travel.163.com/domestic/1000066937&quot;&gt;四川&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://jingdian.travel.163.com&quot;&gt;景点&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://jingdian.travel.163.com/domestic/1000066944&quot;&gt;新疆&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://travel.163.com/special/travellist/#f=endnav&quot;&gt;专题&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://jingdian.travel.163.com/domestic/1000066926/#f=endnav&quot;&gt;西藏&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=&quot;ntes-quicknav-column ntes-quicknav-column-11&quot;&gt;\n&lt;li&gt;\n&lt;h3&gt;&lt;a href=&quot;http://edu.163.com&quot;&gt;教育&lt;/a&gt;&lt;/h3&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://edu.163.com/yimin&quot;&gt;移民&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://edu.163.com/kaoyan&quot;&gt;考研&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://edu.163.com/liuxue&quot;&gt;留学&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://edu.163.com/special/official&quot;&gt;公务员&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://edu.163.com/en&quot;&gt;外语&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://kids.163.com&quot;&gt;中小学&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://edu.163.com/gaokao&quot;&gt;高考&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://daxue.163.com&quot;&gt;校园&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;div class=&quot;ntes-nav-sitemap&quot;&gt;&lt;a href=&quot;http://sitemap.163.com/&quot;&gt;&lt;i&gt;&lt;/i&gt;查看网易地图&lt;/a&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=&quot;c-fr&quot;&gt;\n&lt;div class=&quot;c-fl&quot; id=&quot;js_N_navLoginBefore&quot;&gt;\n&lt;div class=&quot;js_loginframe ntes-nav-login ntes-nav-login-normal&quot; id=&quot;js_N_navHighlight&quot;&gt;\n&lt;a class=&quot;ntes-nav-login-title&quot; href=&quot;http://reg.163.com/&quot; id=&quot;js_N_nav_login_title&quot;&gt;登录&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-loginframe-pop&quot; id=&quot;js_N_login_wrap&quot;&gt;\n&lt;!--加载登陆组件--&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select ntes-nav-select-wide JS_NTES_LOG_FE c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-register&quot; href=&quot;http://reg.email.163.com/mailregAll/reg0.jsp?from=163navi&amp;amp;regPage=163&quot;&gt;注册免费邮箱\n                &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-select-pop&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot; style=&quot;width:210px;&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://reg.vip.163.com/register.m?from=topnav&quot;&gt;\n&lt;span style=&quot;width:190px;&quot;&gt;注册VIP邮箱（特权邮箱，付费）&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;last JS_NTES_LOG_FE&quot;&gt;\n&lt;a href=&quot;http://mail.163.com/client/dl.html?from=mail46&quot;&gt;\n&lt;span style=&quot;width:190px;&quot;&gt;免费下载网易官方手机邮箱应用&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=&quot;c-fl&quot; id=&quot;js_N_navLoginAfter&quot; style=&quot;display:none&quot;&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select ntes-nav-logined JS_NTES_LOG_FE&quot; id=&quot;js_N_logined_warp&quot;&gt;\n&lt;span class=&quot;ntes-nav-select-title ntes-nav-logined-userinfo&quot;&gt;\n&lt;span class=&quot;ntes-nav-logined-username&quot; id=&quot;js_N_navUsername&quot;&gt;&lt;/span&gt;\n&lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;/span&gt;\n&lt;div class=&quot;ntes-nav-select-pop&quot; id=&quot;js_login_suggest_wrap&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot; id=&quot;js_logined_suggest&quot;&gt;&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;a class=&quot;ntes-nav-entry-wide c-fl&quot; id=&quot;js_N_navLogout&quot; target=&quot;_self&quot;&gt;安全退出&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;ul class=&quot;ntes-nav-inside&quot;&gt;\n&lt;li&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-mobile-title ntes-nav-entry-bgblack&quot; href=&quot;http://www.163.com/newsapp/#f=163nav&quot;&gt;\n&lt;em class=&quot;ntes-nav-entry-mobile&quot;&gt;移动端&lt;/em&gt;\n&lt;/a&gt;\n&lt;div class=&quot;qrcode-img&quot;&gt;\n&lt;a href=&quot;http://www.163.com/newsapp/#f=163nav&quot;&gt;\n&lt;img src=&quot;//static.ws.126.net/f2e/include/common_nav/images/topapp.jpg&quot;/&gt;\n&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-huatian ntes-nav-entry-bgblack&quot; href=&quot;https://open.163.com/&quot; id=&quot;js_love_url&quot;&gt;\n&lt;em class=&quot;ntes-nav-entry-huatian&quot;&gt;网易公开课&lt;/em&gt;\n&lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;span class=&quot;ntes-nav-msg&quot;&gt;\n&lt;em class=&quot;ntes-nav-msg-num&quot;&gt;&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-select-pop ntes-nav-select-pop-huatian&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://vip.open.163.com&quot;&gt;\n&lt;span&gt;付费精品&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://open.163.com/ted/&quot;&gt;\n&lt;span&gt;TED&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://open.163.com/ocw/&quot;&gt;\n&lt;span&gt;国际名校公开课&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://open.163.com/cuvocw/&quot;&gt;\n&lt;span&gt;中国大学视频公开课&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://open.163.com/appreciation&quot;&gt;\n&lt;span&gt;赏课&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://open.163.com/khan/&quot;&gt;\n&lt;span&gt;可汗学院&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;last&quot;&gt;\n&lt;a href=&quot;http://open.163.com/special/appdownload_pc/&quot;&gt;\n&lt;span&gt;下载公开课&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-kaola ntes-nav-entry-bgblack&quot; href=&quot;http://da.kaola.com/redirect?t=5aaebece48792c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=d638f275b1755320e845734e53e897ee&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot; id=&quot;js_kaola_url&quot;&gt;\n&lt;em class=&quot;ntes-nav-entry-kaola&quot;&gt;网易考拉&lt;/em&gt;\n&lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;span class=&quot;ntes-nav-msg ntes-nav-kaola-msg&quot; id=&quot;js_N_navKaolaMsg&quot;&gt;\n&lt;em class=&quot;ntes-nav-msg-num&quot;&gt;&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-select-pop ntes-nav-select-pop-kaola&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece48f92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=b3e224752b2cad85e9831e8c6cf7fbbd&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fbimaibangdan.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;1000元新人大礼包&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece49392c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=fd8e43f4a20a26fbe60f7e7de1f17efe&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;新人专享进口好货&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece49392c01&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=21bcd5b595fc235cfd11e3e1cff14177&amp;amp;target=https%3A%2F%2Factivity.kaola.com%2Factivity%2FflashSaleIndex%2Fshow.html%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;今日限时抢购&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece49792c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=ecc40777cb2d68a3d9fb078b232f081d&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfyrzolcpagerz.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;营养保健&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece49b92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=0cdd5a920c768340ffc12eccd659341d&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fnewpc.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;个人洗护&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4a392c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=ee49a3a793f22e648ac616f5dab061dd&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjpwmb9zcpagesl.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;美容彩妆&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4a792c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=6eb2598fd20963efc203a4e3fe88f4e2&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fmyxrq.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;母婴儿童&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4ab92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=3946ce460ba655c11afac69855dfc02b&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Ffoodnewcustomers.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;环球美食&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;last&quot;&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4af92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=2eee7290051863737a434d44f3c0d46f&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fnewtalent.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;家居生活&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-lofter ntes-nav-entry-bgblack&quot; href=&quot;http://you.163.com/?from=web_fc_menhu_xinrukou_1&quot; id=&quot;js_lofter_icon_url&quot;&gt;\n&lt;em class=&quot;ntes-nav-entry-lofter&quot;&gt;网易严选&lt;/em&gt;\n&lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;span class=&quot;ntes-nav-msg&quot; id=&quot;js_N_navLofterMsg&quot;&gt;\n&lt;em class=&quot;ntes-nav-msg-num&quot;&gt;&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-select-pop ntes-nav-select-pop-lofter&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot; id=&quot;js_lofter_pop_url&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com/act/static/Fb2d1OZ714.html?from=web_fc_menhu_xinrukou_1&quot;&gt;\n&lt;span&gt;888元现金券&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com/manufacturer/list?from=web_fc_menhu_xinrukou_3&quot;&gt;\n&lt;span&gt;品牌制造商爆款&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com/item/recommend?from=web_fc_menhu_xinrukou_4&quot;&gt;\n&lt;span&gt;999+人气好评品&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com/flashSale/index?from=web_fc_menhu_xinrukou_5&quot;&gt;\n&lt;span&gt;限时特惠&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com/item/list?categoryId=1005000&amp;amp;from=web_fc_menhu_xinrukou_7&quot;&gt;\n&lt;span&gt;居家床品&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com/item/list?categoryId=1005001&amp;amp;from=web_fc_menhu_xinrukou_8&quot;&gt;\n&lt;span&gt;精致餐厨&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com/item/list?categoryId=1008000&amp;amp;from=web_fc_menhu_xinrukou_9&quot;&gt;\n&lt;span&gt;箱包鞋类&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com/item/list?categoryId=1010000&amp;amp;from=web_fc_menhu_xinrukou_10&quot;&gt;\n&lt;span&gt;经典服饰&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;last&quot;&gt;\n&lt;a href=&quot;http://you.163.com/item/list?categoryId=1005002&amp;amp;from=web_fc_menhu_xinrukou_11&quot;&gt;\n&lt;span&gt;健康美食&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-money ntes-nav-entry-bgblack&quot; href=&quot;http://pay.163.com/&quot;&gt;\n&lt;em class=&quot;ntes-nav-entry-money&quot;&gt;支付&lt;/em&gt;\n&lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-select-pop ntes-nav-select-pop-temp&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://pay.163.com/#f=topnav&quot;&gt;\n&lt;span&gt;一卡通充值&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://ecard.163.com/script/index#f=topnav&quot;&gt;\n&lt;span&gt;一卡通购买&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://k.163.com/?product=163&amp;amp;trackid=01&quot;&gt;\n&lt;span&gt;网易白金卡&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://epay.163.com/&quot;&gt;\n&lt;span&gt;我的网易支付&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://3c.163.com/?from=wangyimenhu16&quot;&gt;\n&lt;span&gt;网易智造&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;last&quot;&gt;\n&lt;a href=&quot;http://lq.163.com?from=neteasemoney&quot;&gt;\n&lt;span&gt;网易来钱-借现金&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-cart ntes-nav-entry-bgblack&quot; href=&quot;http://baoxian.163.com/car/?from=mhgwc&quot;&gt;\n&lt;em class=&quot;ntes-nav-entry-cart&quot;&gt;电商&lt;/em&gt;\n&lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-select-pop ntes-nav-select-pop-temp&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://you.163.com?from=web_in_wydaohang&quot;&gt;\n&lt;span&gt;严选&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://lq.163.com?from=neteasebuy&quot;&gt;\n&lt;span&gt;我要借钱&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;last&quot;&gt;\n&lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4b392c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=d15f8f9d72ccc507aeefda91b43c0cd2&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n&lt;span&gt;网易考拉&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;div class=&quot;js_N_navSelect ntes-nav-select c-fl&quot;&gt;\n&lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-mail ntes-nav-entry-bgblack&quot; id=&quot;js_mail_url&quot;&gt;\n&lt;em class=&quot;ntes-nav-entry-mail&quot;&gt;邮箱&lt;/em&gt;\n&lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n&lt;span class=&quot;ntes-nav-msg&quot; id=&quot;js_N_navMailMsg&quot;&gt;\n&lt;em class=&quot;ntes-nav-msg-num&quot; id=&quot;js_N_navMailMsgNum&quot;&gt;&lt;/em&gt;\n&lt;/span&gt;\n&lt;/a&gt;\n&lt;div class=&quot;ntes-nav-select-pop ntes-nav-select-pop-mail&quot;&gt;\n&lt;ul class=&quot;ntes-nav-select-list clearfix&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://email.163.com/#f=topnav&quot;&gt;\n&lt;span&gt;免费邮箱&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://vipmail.163.com/#f=topnav&quot;&gt;\n&lt;span&gt;VIP邮箱&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://qiye.163.com/#f=topnav&quot;&gt;\n&lt;span&gt;企业邮箱&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://reg.email.163.com/mailregAll/reg0.jsp?from=ntes_nav&amp;amp;regPage=163&quot;&gt;\n&lt;span&gt;免费注册&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://reg.email.163.com/unireg/call.do?cmd=register.entrance&amp;amp;flow=mobile&amp;amp;from=ntes_nav&quot;&gt;\n&lt;span&gt;快速注册&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;last&quot;&gt;\n&lt;a href=&quot;http://mail.163.com/dashi/dlpro.html?from=mail46&quot;&gt;\n&lt;span&gt;客户端下载&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;script src=&quot;//static.ws.126.net/163/f2e/commonnav2019/js/commonnav_headjs-2f356198e6.js&quot;&gt;&lt;/script&gt;\n&lt;/div&gt;\n&lt;!-- 节日背景 --&gt;\n&lt;div class=&quot;ns-bg-wrap&quot;&gt;\n&lt;div class=&quot;N-nav-channel JS_NTES_LOG_FE&quot; data-module-name=&quot;xwwzy_11_headdaohang&quot;&gt;\n&lt;a class=&quot;first&quot; href=&quot;https://news.163.com/&quot;&gt;新闻&lt;/a&gt;&lt;a href=&quot;http://sports.163.com/&quot;&gt;体育&lt;/a&gt;&lt;a href=&quot;http://sports.163.com/nba/&quot;&gt;NBA&lt;/a&gt;&lt;a href=&quot;http://ent.163.com/&quot;&gt;娱乐&lt;/a&gt;&lt;a href=&quot;http://money.163.com/&quot;&gt;财经&lt;/a&gt;&lt;a href=&quot;http://money.163.com/stock/&quot;&gt;股票&lt;/a&gt;&lt;a href=&quot;http://auto.163.com/&quot; id=&quot;_link_auto&quot;&gt;汽车&lt;/a&gt;&lt;a href=&quot;http://tech.163.com/&quot;&gt;科技&lt;/a&gt;&lt;a href=&quot;http://mobile.163.com/&quot;&gt;手机&lt;/a&gt;&lt;a href=&quot;http://digi.163.com/&quot;&gt;数码&lt;/a&gt;&lt;a href=&quot;http://lady.163.com/&quot;&gt;女人&lt;/a&gt;&lt;a href=&quot;http://v.163.com/&quot;&gt;直播&lt;/a&gt;&lt;a href=&quot;http://v.163.com/special/video/#tuijian&quot;&gt;视频&lt;/a&gt;&lt;a href=&quot;http://travel.163.com/&quot;&gt;旅游&lt;/a&gt;&lt;a href=&quot;http://house.163.com/&quot; id=&quot;houseUrl&quot;&gt;房产&lt;/a&gt;&lt;a href=&quot;http://home.163.com/&quot; id=&quot;homeUrl&quot;&gt;家居&lt;/a&gt;&lt;a href=&quot;http://edu.163.com/&quot;&gt;教育&lt;/a&gt;&lt;a href=&quot;http://book.163.com/&quot;&gt;读书&lt;/a&gt;&lt;a href=&quot;https://news.163.com/&quot; id=&quot;_link_game&quot;&gt;本地&lt;/a&gt;&lt;a href=&quot;http://jiankang.163.com/&quot;&gt;健康&lt;/a&gt;&lt;a href=&quot;http://rd.da.netease.com/redirect?t=5802fb18cf033c80&amp;amp;p=e17af55c&amp;amp;proId=1024&amp;amp;target=https%3A%2F%2Fwww.kaola.com%2F%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;海淘&lt;/a&gt;&lt;a class=&quot;last&quot; href=&quot;http://art.163.com/&quot;&gt;艺术&lt;/a&gt;\n&lt;/div&gt;\n&lt;!-- 游戏替换为本地，并定向 0310--&gt;\n&lt;!-- 配置定向城市 --&gt;\n&lt;script _keep=&quot;true&quot; type=&quot;text/javascript&quot;&gt;\nvar HouseNavBendiTxt = &#123;\n    &quot;province&quot;: [\n        &#123;\n            &quot;name&quot;: &quot;北京市&quot;,\n            &quot;shortName&quot;: &quot;北京&quot;,\n            &quot;url&quot;:&quot;http://bj.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;上海市&quot;,\n            &quot;shortName&quot;: &quot;上海&quot;,\n            &quot;url&quot;:&quot;http://sh.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;天津市&quot;,\n            &quot;shortName&quot;: &quot;天津&quot;,\n            &quot;url&quot;:&quot;http://tj.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;广东省&quot;,\n            &quot;shortName&quot;: &quot;广东&quot;,\n            &quot;url&quot;:&quot;http://gd.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;江苏省&quot;,\n            &quot;shortName&quot;: &quot;江苏&quot;,\n            &quot;url&quot;:&quot;http://js.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;浙江省&quot;,\n            &quot;shortName&quot;: &quot;浙江&quot;,\n            &quot;url&quot;:&quot;http://zj.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;四川省&quot;,\n            &quot;shortName&quot;: &quot;四川&quot;,\n            &quot;url&quot;:&quot;http://sc.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;黑龙江省&quot;,\n            &quot;shortName&quot;: &quot;黑龙江&quot;,\n            &quot;url&quot;:&quot;http://hlj.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;吉林省&quot;,\n            &quot;shortName&quot;: &quot;吉林&quot;,\n            &quot;url&quot;:&quot;http://jl.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;辽宁省&quot;,\n            &quot;shortName&quot;: &quot;辽宁&quot;,\n            &quot;url&quot;:&quot;http://liaoning.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;内蒙古自治区&quot;,\n            &quot;shortName&quot;: &quot;内蒙古&quot;,\n            &quot;url&quot;:&quot;http://hhht.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;河北省&quot;,\n            &quot;shortName&quot;: &quot;河北&quot;,\n            &quot;url&quot;:&quot;http://hebei.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;河南省&quot;,\n            &quot;shortName&quot;: &quot;河南&quot;,\n            &quot;url&quot;:&quot;http://henan.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;山东省&quot;,\n            &quot;shortName&quot;: &quot;山东&quot;,\n            &quot;url&quot;:&quot;http://sd.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;陕西省&quot;,\n            &quot;shortName&quot;: &quot;陕西&quot;,\n            &quot;url&quot;:&quot;http://shanxi.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;甘肃省&quot;,\n            &quot;shortName&quot;: &quot;甘肃&quot;,\n            &quot;url&quot;:&quot;http://gs.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;宁夏回族自治区&quot;,\n            &quot;shortName&quot;: &quot;宁夏&quot;,\n            &quot;url&quot;:&quot;http://ningxia.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;新疆维吾尔自治区&quot;,\n            &quot;shortName&quot;: &quot;新疆&quot;,\n            &quot;url&quot;:&quot;http://xj.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;安徽省&quot;,\n            &quot;shortName&quot;: &quot;安徽&quot;,\n            &quot;url&quot;:&quot;http://ah.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;福建省&quot;,\n            &quot;shortName&quot;: &quot;福建&quot;,\n            &quot;url&quot;:&quot;http://fj.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;广西壮族自治区&quot;,\n            &quot;shortName&quot;: &quot;广西&quot;,\n            &quot;url&quot;:&quot;http://gx.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;重庆市&quot;,\n            &quot;shortName&quot;: &quot;重庆&quot;,\n            &quot;url&quot;:&quot;http://chongqing.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;湖北省&quot;,\n            &quot;shortName&quot;: &quot;湖北&quot;,\n            &quot;url&quot;:&quot;http://hb.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;江西省&quot;,\n            &quot;shortName&quot;: &quot;江西&quot;,\n            &quot;url&quot;:&quot;http://jx.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;海南省&quot;,\n            &quot;shortName&quot;: &quot;海南&quot;,\n            &quot;url&quot;:&quot;http://hn.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;贵州省&quot;,\n            &quot;shortName&quot;: &quot;贵州&quot;,\n            &quot;url&quot;:&quot;http://gz.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;云南省&quot;,\n            &quot;shortName&quot;: &quot;云南&quot;,\n            &quot;url&quot;:&quot;http://yn.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;湖南省&quot;,\n            &quot;shortName&quot;: &quot;上海&quot;,\n            &quot;url&quot;:&quot;http://sh.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;山西省&quot;,\n            &quot;shortName&quot;: &quot;山西&quot;,\n            &quot;url&quot;:&quot;http://sx.news.163.com&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;西藏自治区&quot;,\n            &quot;shortName&quot;: &quot;北京&quot;,\n            &quot;url&quot;:&quot;http://bj.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;香港特别行政区&quot;,\n            &quot;shortName&quot;: &quot;广东&quot;,\n            &quot;url&quot;:&quot;http://gd.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;澳门特别行政区&quot;,\n            &quot;shortName&quot;: &quot;广东&quot;,\n            &quot;url&quot;:&quot;http://gd.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;台湾省&quot;,\n            &quot;shortName&quot;: &quot;广东&quot;,\n            &quot;url&quot;:&quot;http://gd.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;天津市&quot;,\n            &quot;shortName&quot;: &quot;北京&quot;,\n            &quot;url&quot;:&quot;http://bj.news.163.com/&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;青海省&quot;,\n            &quot;shortName&quot;: &quot;北京&quot;,\n            &quot;url&quot;:&quot;http://bj.news.163.com/&quot;\n        &#125;\n    ],\n    &quot;city&quot;: [\n        &#123;\n            &quot;name&quot;: &quot;大连市&quot;,\n            &quot;shortName&quot;: &quot;大连&quot;,\n            &quot;url&quot;:&quot;http://dl.news.163.com&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;青岛市&quot;,\n            &quot;shortName&quot;: &quot;青岛&quot;,\n            &quot;url&quot;:&quot;http://qingdao.news.163.com&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;宁波市&quot;,\n            &quot;shortName&quot;: &quot;宁波&quot;,\n            &quot;url&quot;:&quot;http://ningbo.news.163.com&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;厦门市&quot;,\n            &quot;shortName&quot;: &quot;厦门&quot;,\n            &quot;url&quot;:&quot;http://xiamen.news.163.com&quot;\n        &#125;,\n        &#123;\n            &quot;name&quot;: &quot;深圳市&quot;,\n            &quot;shortName&quot;: &quot;深圳&quot;,\n            &quot;url&quot;:&quot;http://shenzhen.news.163.com/&quot;\n        &#125;\n    ],\n    &quot;defalt&quot;: &#123;\n            &quot;name&quot;: &quot;&quot;,\n            &quot;shortName&quot;: &quot;本地&quot;,\n            &quot;url&quot;:&quot;http://news.163.com/&quot;\n        &#125;\n&#125;;\n&lt;/script&gt;\n&lt;script _keep=&quot;true&quot; type=&quot;text/javascript&quot;&gt;\n    //本地设置定向省份\n    function setBendiName()&#123;\n        var js_nav_bendi = document.getElementById(&quot;_link_game&quot;);\n        var cityname = &quot;&quot;;\n        var cityurl = &quot;&quot;;\n        var _loc = window.localAddress;\n        if(!js_nav_bendi)\n            return;\n        if(HouseNavBendiTxt.city &amp;&amp; _loc)&#123;\n            var citylist = HouseNavBendiTxt.city;\n            var localcity = _loc.city;\n            for(var i=0;i&lt;citylist.length;i++)&#123;\n                if(citylist[i].name == localcity)&#123;\n                    cityname = citylist[i].shortName;\n                    cityurl = citylist[i].url;\n                    break;\n                &#125;\n            &#125;\n        &#125;\n        if(cityname == &quot;&quot; &amp;&amp; cityurl == &quot;&quot; &amp;&amp; HouseNavBendiTxt.province &amp;&amp; _loc)&#123;\n            var provincelist = HouseNavBendiTxt.province;\n            var localprovince = _loc.province;\n            for(var i=0;i&lt;provincelist.length;i++)&#123;\n                if(provincelist[i].name == localprovince)&#123;\n                    cityname = provincelist[i].shortName;\n                    cityurl = provincelist[i].url;\n                    break;\n                &#125;\n            &#125;\n        &#125;\n        if(js_nav_bendi &amp;&amp; cityname != &quot;&quot; &amp;&amp; cityurl != &quot;&quot;)&#123;\n            js_nav_bendi.innerHTML = cityname;\n            js_nav_bendi.href = cityurl;\n        &#125;\n        if(js_nav_bendi &amp;&amp; cityname == &quot;&quot; &amp;&amp; cityurl == &quot;&quot;)&#123;\n            js_nav_bendi.innerHTML = &quot;本地&quot;;\n            js_nav_bendi.href = &quot;http://news.163.com&quot;;\n        &#125;\n    &#125;\n    function BENDI_NAV_CALLBACK(data)&#123;\n       if(data &amp;&amp; data.result)&#123;\n            if(window.HouseNavBendiTxt)&#123;\n                window.localAddress = data.result;\n                setBendiName();\n            &#125; \n       &#125;\n    &#125;;\n\n    if(window.localAddress)&#123;\n        if(window.HouseNavBendiTxt)&#123;\n            setBendiName();\n        &#125; \n    &#125;else&#123;\n        var url = &quot;//ipservice.163.com/locate/api/getLocByIp?key=C6E22B7D480E3312C74EC7EF013E50C5&amp;callback=BENDI_NAV_CALLBACK&quot;;\n        var script = document.createElement(&#39;script&#39;);\n        script.setAttribute(&#39;src&#39;, url);\n        document.getElementsByTagName(&#39;head&#39;)[0].appendChild(script);\n    &#125;\n&lt;/script&gt;\n&lt;div class=&quot;index2016_content&quot;&gt;\n&lt;!-- 头部广告 开始--&gt;\n&lt;div class=&quot;ns_area index_top_ad channel_relative_2016&quot;&gt;\n&lt;!--16新闻首页顶通--&gt;\n&lt;div adtype=&quot;topColumnAd&quot; class=&quot;at_item common_ad_item top_ad_column&quot; requesturl=&quot;https://nex.163.com/q?app=7BE0FC82&amp;amp;c=news&amp;amp;l=11&amp;amp;site=netease&amp;amp;affiliate=news&amp;amp;cat=homepage&amp;amp;type=column1200x125_960x100&amp;amp;location=10&quot;&gt;&lt;/div&gt;\n&lt;span class=&quot;channel_ad_2016&quot;&gt;广告&lt;/span&gt;\n&lt;/div&gt;\n&lt;!-- 头部广告 结束--&gt;\n&lt;!-- 头部导航 开始--&gt;\n&lt;div class=&quot;index_head&quot;&gt;\n&lt;div ne-module=&quot;/news/index2016_rmd/modules/head/head.js&quot;&gt;\n&lt;div class=&quot;ns_area hd&quot;&gt;\n&lt;h1&gt;\n&lt;a class=&quot;channel2019_logo channel2019_news_logo&quot; href=&quot;https://news.163.com/&quot;&gt;网易新闻有态度&lt;/a&gt;\n&lt;/h1&gt;\n&lt;!-- &lt;div class=&quot;top-search&quot;&gt;\n        &lt;form action=&quot;http://news.yodao.com/search&quot; method=&quot;get&quot; name=&quot;nisearch_top&quot; id=&quot;formtop&quot; target=&quot;_blank&quot;&gt;\n            &lt;input type=&quot;hidden&quot; name=&quot;keyfrom&quot; value=&quot;sports.163&quot;&gt;\n            &lt;input type=&quot;hidden&quot; name=&quot;suser&quot; value=&quot;user163&quot;&gt;\n            &lt;input type=&quot;hidden&quot; name=&quot;ue&quot; value=&quot;gbk&quot;&gt;\n            &lt;div class=&quot;search-input&quot;&gt; &lt;span class=&quot;hidden&quot;&gt;搜索&lt;/span&gt;\n                &lt;input type=&quot;text&quot; name=&quot;q&quot; id=&quot;searchInput_top&quot; onfocus=&quot;this.value=&#39;&#39;&quot; value=&quot;输入关键字&quot; class=&quot;text-box &quot;&gt;\n                &lt;input type=&quot;submit&quot; name=&quot;Submit&quot; value=&quot;&quot; tabindex=&quot;0&quot; title=&quot;搜索&quot; class=&quot;search-submit&quot; id=&quot;sb_form_go&quot;&gt;\n            &lt;/div&gt;\n        &lt;/form&gt;\n    &lt;/div&gt; --&gt;\n&lt;!-- 天气 --&gt;\n&lt;div class=&quot;ns-lid-weather&quot; id=&quot;nsWeatherTop&quot;&gt;\n&lt;div class=&quot;ns-weather&quot; id=&quot;nsWeather&quot;&gt;\n&lt;a href=&quot;http://news.163.com/weather/&quot;&gt;\n&lt;script ne-repeat=&quot;weather in weatherInfo&quot; type=&quot;text/template&quot;&gt;\n                &lt;img class=&quot;ns-weather-icon&quot; ne-src=&quot;http://static.ws.126.net/f2e/news/index2015/img/weather/&lt;%=weather.icon%&gt;&quot;&gt;\n                &lt;div class=&quot;ns-weather-text&quot;&gt;&lt;%=weather.weather%&gt;&lt;/div&gt;\n                &lt;div class=&quot;ns-weather-info&quot;&gt;&lt;%=weather.temp2%&gt;°~&lt;%=weather.temp1%&gt;°&lt;/div&gt;\n                &lt;div class=&quot;ns-weather-city&quot;&gt;&lt;%=weather.city%&gt;&lt;/div&gt;\n            &lt;/script&gt;\n&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=&quot;bd&quot;&gt;\n&lt;div class=&quot;ns_area list&quot;&gt;\n&lt;ul&gt;\n&lt;li class=&quot;first&quot;&gt;&lt;a href=&quot;http://www.163.com/&quot;&gt;首页&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://news.163.com/rank/&quot;&gt;排行&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://news.163.com/photo/#Current&quot;&gt;图片&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;menu_guonei&quot;&gt;&lt;a href=&quot;http://news.163.com/domestic/&quot;&gt;国内&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;menu_guoji&quot;&gt;&lt;a href=&quot;http://news.163.com/world/&quot;&gt;国际&lt;/a&gt;&lt;/li&gt;\n&lt;!--&lt;li class=&quot;menu_shehui&quot;&gt;&lt;a href=&quot;http://news.163.com/shehui/&quot;&gt;社会&lt;/a&gt;&lt;/li&gt;--&gt;\n&lt;li&gt;&lt;a href=&quot;http://data.163.com/special/datablog/&quot;&gt;数读&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;menu_war&quot;&gt;&lt;a href=&quot;http://war.163.com/&quot;&gt;军事&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;menu_hangkong&quot;&gt;&lt;a href=&quot;http://news.163.com/air/&quot;&gt;航空&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;menu_wurenji&quot;&gt;&lt;a href=&quot;http://news.163.com/uav/&quot;&gt;无人机&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://news.163.com/college&quot;&gt;新闻学院&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://gov.163.com/&quot;&gt;政务&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://gongyi.163.com/&quot;&gt;公益&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://media.163.com/&quot;&gt;媒体&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;last&quot;&gt;&lt;a href=&quot;http://news.163.com/special/wangsansanhome/&quot;&gt;王三三&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 头部导航 结束--&gt;\n&lt;!-- 内容区域 开始 --&gt;\n&lt;div class=&quot;ns_area clearfix index_main&quot;&gt;\n&lt;!-- 原创栏目 开始 --&gt;\n&lt;div class=&quot;main_origina_column&quot; id=&quot;js_origina_column&quot;&gt;\n&lt;div ne-module=&quot;/news/index2016_rmd/modules/originacolumn/originacolumn.js&quot;&gt;\n&lt;div class=&quot;origina_column_warp&quot;&gt;\n&lt;h2&gt;\n&lt;span&gt;新闻各有态度&lt;/span&gt;\n&lt;/h2&gt;\n&lt;div class=&quot;scroll_bd&quot; ne-role=&quot;scroll_bd&quot;&gt;\n&lt;div class=&quot;scroll_column_bd&quot;&gt;\n&lt;ul class=&quot;scroll_ul&quot;&gt;\n&lt;!-- 回声 开始 --&gt;\n&lt;!-- 回声 结束 --&gt;\n&lt;!-- 数读 开始 --&gt;\n&lt;li class=&quot;cell cell_sd cell_hover&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;a class=&quot;tags tag_sd&quot; href=&quot;http://data.163.com/special/datablog/&quot;&gt;数读&lt;/a&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://data.163.com/19/0626/14/EIJQJG9L000181IU.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                中国哪里的地铁最拥挤？\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;中国哪里的地铁最拥挤？&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/30e8760df3044e29a18fac3514dd22b1.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://data.163.com/19/0625/11/EIH0CQEK00019GOE.html&quot;&gt;娶一个潮汕老婆到底是什么体验&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://data.163.com/19/0621/17/EI7BLS3600019GOE.html&quot;&gt;不瞒你说，成都早餐好吃到爆&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 数读 结束 --&gt;\n&lt;!-- 人间 开始 --&gt;\n&lt;li class=&quot;cell cell_rj&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;a class=&quot;tags tag_rj&quot; href=&quot;http://renjian.163.com/&quot;&gt;人间&lt;/a&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0628/14/EIP21K41000181RV.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                小白作者的变现之路\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;小白作者的变现之路&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/27f33fcbfcec4b42b6837807b7a0883f.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0627/16/EIML2HJO000181RV.html&quot;&gt;被毒虫男友拖下水的女大学生&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0626/13/EIJPJMCH000181RV.html&quot;&gt;领导，求你让我加班吧&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 人间 结束 --&gt;\n&lt;!-- 大国小民 开始 --&gt;\n&lt;li class=&quot;cell cell_dgxm&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_dgxm&quot;&gt;大国小民&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0624/14/EIEOBNCB000181RK.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                当不了官发不了财的读书人\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;当不了官发不了财的读书人&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/24/b77e119ffeca477fa4bd2144b1fcb86c.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0620/16/EI4JRNO7000181RK.html&quot;&gt;四个博士，一地鸡毛&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0618/12/EHV0QRVG000181RK.html&quot;&gt;医闹得逞后，伤害的到底是谁&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 大国小民 结束 --&gt;\n&lt;!-- 三三有梗 开始 --&gt;\n&lt;li class=&quot;cell cell_dada&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_dada&quot;&gt;三三有梗&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0627/11/EIM57O490001885B.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                据说99%的人在图书馆一定会碰上......\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;据说99%的人在图书馆一定会碰上......&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/27/06eb8f4a3d4647bf9360ff5e71f003b8.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0626/15/EIK0IJT40001885B.html&quot;&gt;我可能，得了种，前任病&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0617/09/EHS57H4L0001885B.html&quot;&gt;那些KO不掉我的,最终成了我的OK&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 三三有梗 结束 --&gt;\n&lt;!-- 三三映画 开始 --&gt;\n&lt;!-- 三三映画 结束 --&gt;\n&lt;!-- 我去1990 开始 --&gt;\n&lt;li class=&quot;cell cell_wq1990&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_wq1990&quot;&gt;我去1990&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/11/EIOL94760001885B.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                直男幼稚行为大赏\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;直男幼稚行为大赏&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/0b3890cd2f4b473fa0127b5e33ae6ccf.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0624/12/EIEFGMVL0001885B.html&quot;&gt;打个赌，爱情友情你分不清楚&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0621/12/EI6NKDTU0001885B.html&quot;&gt;不会唱歌的人进 KTV 以后有多惨&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 我去1990 结束 --&gt;\n&lt;!-- 轻松一刻 开始 --&gt;\n&lt;li class=&quot;cell cell_qsyk&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_qsyk&quot;&gt;轻松一刻&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/19/EIPIQT4O000181BR.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                彩票一直都不中，我却忍不住要买\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;彩票一直都不中，我却忍不住要买&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/f44265c5b4ef4a11a99eedbde7c49833.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0627/17/EIMPGJAU000181BR.html&quot;&gt;原来&quot;神仙眷侣&quot;离婚,也是一地鸡毛&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0626/18/EIK95RV0000181BR.html&quot;&gt;我宣布，北大清华这对CP锁死了！&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 轻松一刻 结束 --&gt;\n&lt;!-- 槽值 开始 --&gt;\n&lt;li class=&quot;cell cell_caozhi&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_caozhi&quot;&gt;槽值&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://caozhi.news.163.com/19/0623/22/EID0CBIH000181TI.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                佟丽娅，这次你赢了\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;佟丽娅，这次你赢了&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/23/67d24242d479451ea705e26296187f78.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://caozhi.news.163.com/19/0623/15/EIC9LGSP000181TI.html&quot;&gt;千万别在深夜点开这神作&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://caozhi.news.163.com/19/0618/19/EHVRID7G000181TI.html&quot;&gt;那个发“嗯”的人，已被踢出群聊&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 槽值 结束 --&gt;\n&lt;!-- 谈心社 开始 --&gt;\n&lt;li class=&quot;cell cell_tanxinshe&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_tanxinshe&quot;&gt;谈心社&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/17/EIPCOKEA0001982T.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                王宝强母亲去世：来日方长是人生的错觉\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;王宝强母亲去世：来日方长是人生的错觉&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/ecd0de8b8dc0402da72d814bde76f06e.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0627/13/EIMC0EDH0001982T.html&quot;&gt;宋仲基宋慧乔离婚：再美的爱情也会过期&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0626/17/EIK6AD550001982T.html&quot;&gt;杨紫冰箱藏药，戳穿最怂瞬间&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 谈心社 结束 --&gt;\n&lt;!-- 看客 开始 --&gt;\n&lt;li class=&quot;cell cell_kanke&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;a class=&quot;tags tag_kanke&quot; href=&quot;http://renjian.163.com/special/renjian_kanke/&quot;&gt;看客&lt;/a&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0628/11/EIOMK185000199ET.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                我奶茶都戒了，日本人才知道它的好\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;我奶茶都戒了，日本人才知道它的好&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/f35eceb8d111496693e8f77a71a49cba.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0620/11/EI43PM8Q000199ET.html&quot;&gt;美国堕胎残酷物语&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0613/11/EHI39FML000199ET.html&quot;&gt;跑腿小哥提供的十万种服务&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 看客 结束 --&gt;\n&lt;!-- 身体密码 开始 --&gt;\n&lt;li class=&quot;cell cell_stpwd&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;a class=&quot;tags tag_stpwd&quot; href=&quot;http://jiankang.163.com/special/zhutierji/?type=3&quot;&gt;身体密码&lt;/a&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://jiankang.163.com/19/0625/11/EIH061CM0038804G.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                防晒，99%的人都做错了……\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;防晒，99%的人都做错了……&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/25/f260b6843fca4702bb5e4e316600f113.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://jiankang.163.com/19/0617/14/EHSN7PPV0038804G.html&quot;&gt;当代人减肥：迈不过25岁这道坎&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://jiankang.163.com/19/0608/15/EH5J9IGA00388AD5.html&quot;&gt;多年后 无数中年人仍会被高考吓醒&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 身体密码 结束 --&gt;\n&lt;!-- 哒哒 开始 --&gt;\n&lt;!-- 哒哒 结束 --&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div id=&quot;js_baseline&quot;&gt;&lt;/div&gt;\n&lt;span class=&quot;white_bg&quot; id=&quot;js_white_bg&quot;&gt;&lt;/span&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 原创栏目 结束 --&gt;\n&lt;!-- 中间新闻 开始 --&gt;\n&lt;div class=&quot;main_center_news&quot;&gt;\n&lt;!-- 头条新闻 --&gt;\n&lt;div class=&quot;mod_top_news2&quot; id=&quot;js_top_news&quot;&gt;\n&lt;h2&gt;\n&lt;a href=&quot;https://news.163.com/19/0628/16/EIP8R4SV000189FH.html&quot;&gt;央视独家：习近平会见日本首相&lt;/a&gt;\n&lt;/h2&gt;\n&lt;ul class=&quot;top_news_ul&quot;&gt;\n&lt;li&gt;&lt;a href=&quot;https://news.163.com/19/0628/16/EIP8N52U0001875N.html&quot;&gt;外交部回应中美元首会面&lt;/a&gt;|&lt;a href=&quot;https://news.163.com/19/0628/14/EIOVIP2500018AP1.html&quot; target=&quot;_blank&quot;&gt;特朗普会见普京 笑称:不要干预美国大选哦&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://news.163.com/19/0628/16/EIP7KOH70001875P.html&quot;&gt;住建部:加快垃圾分类处理设施建设&lt;/a&gt;|&lt;a href=&quot;https://news.163.com/19/0628/16/EIP8F9QQ0001875P.html&quot; target=&quot;_blank&quot;&gt;袁仁国被公诉:受贿数额特别巨大&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://news.163.com/19/0628/13/EIOSPGLJ0001899O.html&quot;&gt;湖南耒阳人大常委会原主任携子主动投案&lt;/a&gt;|&lt;a href=&quot;https://news.163.com/19/0628/13/EIOUHOB70001875P.html&quot; target=&quot;_blank&quot;&gt;美的48小时内被骗10亿资金&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;h2 class=&quot;top_news_title&quot;&gt;\n&lt;a href=&quot;https://news.163.com/19/0628/19/EIPH3F1V0001875P.html&quot;&gt;垃圾分类逼疯上海人？别笑！马上轮到这46个城市&lt;/a&gt;\n&lt;/h2&gt;\n&lt;ul class=&quot;top_news_ul&quot;&gt;\n&lt;li&gt;&lt;a href=&quot;https://news.163.com/19/0628/19/EIPILCJ70001875P.html&quot;&gt;女子酒后澡堂一打六被刑拘&lt;/a&gt;|&lt;a href=&quot;https://news.163.com/19/0628/18/EIPFI0KN0001875P.html&quot; target=&quot;_blank&quot;&gt;杀人案嫌犯向警察开枪拒捕 被当场击毙&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://news.163.com/19/0628/16/EIP8RHM70001875P.html&quot;&gt;95后飙摩托车追高铁发抖音被刑拘&lt;/a&gt;|&lt;a href=&quot;https://news.163.com/19/0628/16/EIP7B7RP0001899O.html&quot; target=&quot;_blank&quot;&gt;母亲担心儿子粗心在其手背&quot;刺&quot;字&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;https://news.163.com/19/0628/15/EIP4Q6BQ0001899O.html&quot;&gt;女子高铁上劝老人看好小孩被骂&lt;/a&gt;|&lt;a href=&quot;https://news.163.com/19/0628/16/EIP8QO5Q0001875P.html&quot; target=&quot;_blank&quot;&gt;南京杀妻案死者姑妈：侄女生前要强&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;!-- 广告 开始 --&gt;\n&lt;div class=&quot;mod_top_news_ad&quot;&gt;\n&lt;!-- 16新闻首页01小通栏 --&gt;\n&lt;a class=&quot;ad_hover_href&quot; href=&quot;http://gb.corp.163.com/gb/legal.html&quot;&gt;&lt;/a&gt;\n&lt;iframe border=&quot;0&quot; frameborder=&quot;no&quot; height=&quot;50&quot; marginheight=&quot;0&quot; marginwidth=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;https://g.163.com/r?site=netease&amp;amp;affiliate=news&amp;amp;cat=homepage&amp;amp;type=logo600x50&amp;amp;location=1&quot; width=&quot;600&quot;&gt;&lt;/iframe&gt;\n&lt;/div&gt;\n&lt;!-- 广告 结束 --&gt;\n&lt;!-- 特别报道 开始 --&gt;\n&lt;div class=&quot;mod_important_news none&quot;&gt;\n&lt;h5&gt;&lt;label&gt;特别报道&lt;/label&gt;&lt;/h5&gt;\n&lt;h2&gt;\n&lt;a href=&quot;http://news.163.com/16/0721/19/BSH7V8QF00014JB6.html&quot;&gt;辽宁遭暴雨侵袭致城市内涝 紧急转移12万人&lt;/a&gt;\n&lt;/h2&gt;\n&lt;ul class=&quot;top_news_ul&quot;&gt;\n&lt;li&gt;&lt;a href=&quot;http://news.163.com/16/0721/10/BSG7HOH20001124J.html&quot;&gt;民政部:北方暴雨75人死亡失踪&lt;/a&gt;|&lt;a href=&quot;http://news.163.com/16/0721/12/BSGG5VK300011229.html&quot; target=&quot;_blank&quot;&gt;北京发生山洪灾害 铲车翻倒4人被困&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://news.163.com/16/0721/12/BSGHHVLK00011229.html&quot;&gt;搜救犬水灾救援22天殉职 主人:它太累了&lt;/a&gt;|&lt;a href=&quot;http://news.163.com/16/0721/07/BSFUFFP800014AED.html&quot; target=&quot;_blank&quot;&gt;姐妹被洪水卷走警方拒立案&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;div class=&quot;mod_important_pic&quot;&gt;\n&lt;ul class=&quot;clearfix&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/photoview/00AN0001/2189402.html?from=ph_ss#p=BSG716GE00AN0001&quot;&gt;\n&lt;img height=&quot;120&quot; src=&quot;http://img3.cache.netease.com/news/2016/7/21/20160721131401d35e2.jpg&quot; width=&quot;190&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;河南遇强降雨 9.8万人转移&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/photoview/00AP0001/2189377.html?from=ph_ss#p=BSFTQ99H00AP0001&quot;&gt;\n&lt;img height=&quot;120&quot; src=&quot;http://img3.cache.netease.com/news/2016/7/21/201607211319466e84e.jpg&quot; width=&quot;190&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;女主播直播暴雨 浑身湿透&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/photoview/00AP0001/2189389.html?from=ph_ss#p=BSG1S9AM00AP0001&quot;&gt;\n&lt;img height=&quot;120&quot; src=&quot;http://img5.cache.netease.com/news/2016/7/21/20160721132119ef59b.jpg&quot; width=&quot;190&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;湖北民众省道上趟水摸鱼&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 特别报道 结束 --&gt;\n&lt;!-- 网易公开课 开始--&gt;\n&lt;div class=&quot;mod_netes_origina&quot; ne-module=&quot;/news/index2016_rmd/modules/slide/slide.js&quot;&gt;\n&lt;script _keep=&quot;true&quot; type=&quot;text/javascript&quot;&gt;\n    window.GGKSLIDEDATA = [\n                                                                         &#123;\n            &quot;title&quot;:&quot;你多久没读完一本书了？带你克服读书拖延症&quot;,\n            &quot;imgsrc&quot;:&quot;https://cms-bucket.ws.126.net/2019/06/26/225c40fe7f9141a8852f70d20c381f8b.jpeg?imageView&amp;thumbnail=600y250&quot;,\n            &quot;link&quot;:&quot;https://vip.open.163.com/courses/2531?p=xs_zt04&quot;\n        &#125;\n                                                         ,\n                &#123;\n            &quot;title&quot;:&quot;曾国藩：普通人怎样通过自我努力改写命运？&quot;,\n            &quot;imgsrc&quot;:&quot;https://cms-bucket.ws.126.net/2019/05/16/b0ba21dfb7ef4716a1275a2c1914832a.jpeg?imageView&amp;thumbnail=600y250&quot;,\n            &quot;link&quot;:&quot;https://vip.open.163.com/courses/1047?p=xs_zt03&quot;\n        &#125;\n                                                         ,\n                &#123;\n            &quot;title&quot;:&quot;你单一的收入模式，拖垮的是你财富积累速度&quot;,\n            &quot;imgsrc&quot;:&quot;https://cms-bucket.ws.126.net/2019/03/21/fe5cf147142b414793a6326f654b41ce.jpeg?imageView&amp;thumbnail=600y250&quot;,\n            &quot;link&quot;:&quot;https://vip.open.163.com/courses/3547?p=xs_zt04&quot;\n        &#125;\n                                                         ,\n                &#123;\n            &quot;title&quot;:&quot;健身VS不健身，完全是两种不同的人生&quot;,\n            &quot;imgsrc&quot;:&quot;https://cms-bucket.nosdn.127.net/2018/11/12/94fbcf460348460f9b73300aa1948cb3.jpeg?imageView&amp;thumbnail=600y250&quot;,\n            &quot;link&quot;:&quot;https://vip.open.163.com/courses/192?p=xs_zt02&quot;\n        &#125;\n            ];\n&lt;/script&gt;\n&lt;div class=&quot;mod_idx_focus&quot; ne-module=&quot;/modules/slide/slide.js&quot; ne-props=&quot;events:mouseover;interval:4000;topicid=000501EP;listnum=8;pointstart=80;pointend=100;&quot; ne-state=&quot;slideMethod:left;events=mouseover;interval=4000&quot;&gt;\n&lt;div class=&quot;hd&quot;&gt;\n&lt;h2&gt;&lt;a href=&quot;https://open.163.com/&quot;&gt;网易公开课&lt;/a&gt;&lt;/h2&gt;\n&lt;div class=&quot;focus_ctrl&quot;&gt;\n&lt;span ne-role=&quot;slide-nav&quot;&gt;&lt;/span&gt;\n&lt;span ne-role=&quot;slide-nav&quot;&gt;&lt;/span&gt;\n&lt;span ne-role=&quot;slide-nav&quot;&gt;&lt;/span&gt;\n&lt;span ne-role=&quot;slide-nav&quot;&gt;&lt;/span&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;a class=&quot;focus_prev&quot; ne-role=&quot;slide-prev&quot;&gt;&lt;/a&gt;\n&lt;a class=&quot;focus_next&quot; ne-role=&quot;slide-next&quot;&gt;&lt;/a&gt;\n&lt;div class=&quot;focus_body&quot; ne-role=&quot;slide-body&quot;&gt;\n&lt;ul ne-role=&quot;slide-scroll&quot;&gt;\n&lt;script ne-foreach=&quot;gkkdatalist&quot; type=&quot;text/template&quot;&gt;\n            &lt;li &lt;%if(__i == 0)&#123;%>class=\"current\"<%&#125;%&gt; ne-role=&quot;slide-page&quot;&gt;\n                &lt;a href=&quot;&lt;%=link%&gt;&quot; title=&quot;&lt;%=title%&gt;&quot; class=&quot;photo&quot;&gt;&lt;img src=&quot;&lt;%=imgsrc%&gt;&quot; width=&quot;600&quot; height=&quot;250&quot; alt=&quot;&lt;%=title%&gt;&quot;/&gt;&lt;/a&gt;\n                &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n                &lt;h3&gt;\n                    &lt;a href=&quot;&lt;%=link%&gt;&quot;&gt;&lt;%=title%&gt;&lt;/a&gt;\n                &lt;/h3&gt;\n            &lt;/li&gt;\n            &lt;/script&gt;\n&lt;/ul&gt;\n&lt;span class=&quot;ad_hover_pic&quot;&gt;广告&lt;/span&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 网易公开课 结束--&gt;\n&lt;!-- 信息流 开始--&gt;\n&lt;div class=&quot;mod_datalist&quot; ne-extend=&quot;/news/index2016_rmd/modules/datalist2016/config.js&quot; ne-module=&quot;/news/index2016_rmd/modules/datalist2016/datalist2016.js&quot;&gt;\n&lt;div class=&quot;newsdata_wrap&quot; ne-module=&quot;/modules/tabs/tabs.js&quot; ne-on=&quot;showed:changepanel&quot; ne-state=&quot;showhide:true;delay:400;&quot;&gt;\n&lt;div class=&quot;newsdata_nav&quot; ne-class=&quot;&#123;&#123;myState.fixedTop ? 'fixed_top':''&#125;&#125;&quot;&gt;\n&lt;ul class=&quot;clearfix&quot;&gt;\n&lt;li class=&quot;nav_item&quot;&gt;\n&lt;a class=&quot;nav_name no_cursor&quot; href=&quot;javascript:;&quot; ne-role=&quot;tab-nav&quot; target=&quot;_self&quot;&gt;\n                    要闻\n                    &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;nav_item&quot;&gt;\n&lt;a class=&quot;nav_name no_cursor&quot; href=&quot;&#123;&#123;myState.channelbendiurl&#125;&#125;&quot; ne-class=&quot;&#123;&#123;myState.bendiTstyle ? 'bendistyle' : ''&#125;&#125;&quot; ne-role=&quot;tab-nav&quot; target=&quot;&#123;&#123;myState.channelbendiurl == 'javascript:;' ? '_self' : '_blank'&#125;&#125;&quot;&gt;\n&lt;strong ne-text=&quot;&#123;&#123;myState.bendiCity&#125;&#125;&quot;&gt;&lt;/strong&gt;\n&lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;!-- &lt;li class=&quot;nav_item&quot;&gt;\n                &lt;a class=&quot;nav_name&quot; ne-role=&quot;tab-nav&quot; href=&quot;http://news.163.com/shehui/&quot;&gt;\n                    社会\n                    &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n                &lt;/a&gt;\n            &lt;/li&gt; --&gt;\n&lt;li class=&quot;nav_item&quot;&gt;\n&lt;a class=&quot;nav_name&quot; href=&quot;http://news.163.com/domestic/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                    国内\n                    &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;nav_item&quot;&gt;\n&lt;a class=&quot;nav_name&quot; href=&quot;http://news.163.com/world/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                    国际\n                    &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;nav_item&quot;&gt;\n&lt;a class=&quot;nav_name no_cursor&quot; href=&quot;javascript:;&quot; ne-role=&quot;tab-nav&quot; target=&quot;_self&quot;&gt;\n                    独家\n                    &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;nav_item&quot;&gt;\n&lt;a class=&quot;nav_name&quot; href=&quot;http://war.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                    军事\n                    &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;nav_item&quot;&gt;\n&lt;a class=&quot;nav_name&quot; href=&quot;http://money.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                    财经\n                    &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=&quot;nav_item&quot;&gt;\n&lt;a class=&quot;nav_name&quot; href=&quot;http://tech.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                    科技\n                    &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;a class=&quot;more&quot; href=&quot;javascript:;&quot; ne-class=&quot;&#123;&#123;myState.morechannel ? 'more_hover': ''&#125;&#125;&quot; ne-mouseout=&quot;morehideChannel()&quot; ne-mouseover=&quot;moreShowChannel()&quot; ne-role=&quot;morebtn&quot; target=&quot;_self&quot;&gt;更多&lt;/a&gt;\n&lt;div class=&quot;more_list&quot; ne-click=&quot;moreList($event)&quot; ne-role=&quot;more_list&quot; ne-show=&quot;&#123;&#123;myState.morechannel&#125;&#125;&quot;&gt;\n&lt;!-- &lt;a ne-role=&quot;tab-nav&quot; href=&quot;http://tech.163.com/&quot;&gt;科技&lt;/a&gt; --&gt;\n&lt;a href=&quot;http://sports.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;体育&lt;/a&gt;\n&lt;a href=&quot;http://ent.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;娱乐&lt;/a&gt;\n&lt;a href=&quot;http://lady.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;时尚&lt;/a&gt;\n&lt;a href=&quot;http://auto.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;汽车&lt;/a&gt;\n&lt;a href=&quot;&#123;&#123;myState.channelhouseurl&#125;&#125;&quot; ne-role=&quot;tab-nav&quot;&gt;房产&lt;/a&gt;\n&lt;a href=&quot;http://news.163.com/air/&quot; ne-role=&quot;tab-nav&quot;&gt;航空&lt;/a&gt;\n&lt;a href=&quot;http://jiankang.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;健康&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;a class=&quot;newsdata_prev&quot; href=&quot;#prev&quot; ne-class=&quot;&#123;&#123;myState.fixedTop ? 'fixed_data_show': ''&#125;&#125;&quot; ne-click=&quot;tabPrevFn($event);&quot; ne-hide=&quot;&#123;&#123;myState.iPad&#125;&#125;&quot;&gt;\n&lt;span&gt;&lt;/span&gt;\n&lt;div class=&quot;newsdata_btn_name&quot;&gt;&#123;&#123;myState.preBtnName&#125;&#125;&lt;/div&gt;\n&lt;/a&gt;\n&lt;a class=&quot;newsdata_next&quot; href=&quot;#next&quot; ne-class=&quot;&#123;&#123;myState.fixedTop ? 'fixed_data_show': ''&#125;&#125;&quot; ne-click=&quot;tabNextFn($event);&quot; ne-hide=&quot;&#123;&#123;myState.iPad&#125;&#125;&quot;&gt;\n&lt;span&gt;&lt;/span&gt;\n&lt;div class=&quot;newsdata_btn_name&quot;&gt;&#123;&#123;myState.nextBtnName&#125;&#125;&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul class=&quot;newsdata_list&quot; ne-class=&quot;&#123;&#123;myState.fixedTop ? 'fixed_bar_padding': ''&#125;&#125; &#123;&#123;myState.bgLoading ? 'bgloading': 'noloading'&#125;&#125;&quot;&gt;\n&lt;li class=&quot;newsdata_item&quot; ne-repeat=&quot;body in navList&quot; ne-role=&quot;tab-body&quot;&gt;\n&lt;div class=&quot;ndi_main&quot; ne-class=&quot;&#123;&#123;myState.message &gt; 0 ? 'show_message':''&#125;&#125;&quot;&gt;\n&lt;script ne-repeat=&quot;newrow in datalist[__i]&quot; type=&quot;text/template&quot;&gt;\n                &lt;%if(newrow.style == &quot;iframe&quot;)&#123;%>\n                        <div class=\"at_item info_ad_item news_iframe_ad\" adType=\"infoAd\" ne-click=\"adClickTracker(<%=newrow.infoAdIdx%>,'infoAd')\">\n                            <iframe src=\"<%=newrow.iframe[0].link%>\" width=\"<%=newrow.iframe[0].iframewidth || 600 %>\" height=\"<%=newrow.iframe[0].iframeheight || 100 %>\" frameborder=\"0\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe>\n                        </div>\n                    <%&#125;else if(newrow.style == &quot;docAD&quot;)&#123;%>\n                        <div class=\"at_item info_ad_item news_article clearfix\" adType=\"infoAd\" ne-click=\"adClickTracker(<%=newrow.infoAdIdx%>,'infoAd')\">\n                            <a href=\"<%=newrow.relatedActionLinks[0].url%>\" class=\"na_pic\">\n                                <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.resources[0].urls[0]%>\"\n                      width=\"140\" height=\"88\"\n                >\n                            </a>\n                            <div class=\"na_detail clearfix\">\n                                <div class=\"news_title\">\n                                    <h3><strong><a href=\"<%=newrow.relatedActionLinks[0].url%>\"><%=newrow.title%></a>\n                                    </strong></h3>\n                                </div>\n                            </div>\n                            <div class=\"ad_detail clearfix\">\n                                <span class=\"tg_tag\"><%=newrow.source%></span>\n                                <span class=\"keywords\" ne-html=\"<%=newrow.content%>\"></span>\n                            </div>\n                        </div>\n                    <%&#125; else if(newrow.style == &quot;photosetAD&quot;)&#123;%>\n                        <div class=\"at_item info_ad_item news_photoview clearfix news_ad_photoview\" adType=\"infoAd\" ne-click=\"adClickTracker(<%=newrow.infoAdIdx%>,'infoAd')\">\n                            <div class=\"news_title\">\n                                <h3><strong><a href=\"<%=newrow.relatedActionLinks[0].url%>\"><%=newrow.title%></a></strong></h3>\n                            </div>\n                            <div class=\"np_pic\">\n                                <a href=\"<%=newrow.relatedActionLinks[0].url%>\">\n                                    <span class=\"p_img3\">\n                                        <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.resources[0].urls[0]%>\"\n                      width=\"190\" height=\"120\"\n                >\n                                    </span>\n                                    <span class=\"p_img3\">\n                                        <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.resources[0].urls[1]%>\"\n                      width=\"190\" height=\"120\"\n                >\n                                    </span>\n                                    <span class=\"p_img3\">\n                                        <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.resources[0].urls[2]%>\"\n                      width=\"190\" height=\"120\" class=\"pic_last\"\n                >\n                                    </span>\n                                </a>\n                            </div>\n                            <div class=\"ad_detail clearfix\">\n                                <span class=\"tg_tag\"><%=newrow.source%></span>\n                                <span class=\"keywords\" ne-html=\"<%=newrow.content%>\"></span>\n                            </div>\n                        </div>\n                    <%&#125; else if(newrow.style == &quot;columsAD&quot;)&#123;%>\n                        <div class=\"at_item info_ad_item news_special clearfix news_ad_special\" adType=\"infoAd\" ne-click=\"adClickTracker(<%=newrow.infoAdIdx%>,'infoAd')\">\n                            <div class=\"news_title\">\n                                <h3><strong><a href=\"<%=newrow.relatedActionLinks[0].url%>\"><%=newrow.title%></a></strong></h3>\n                            </div>\n                            <a href=\"<%=newrow.relatedActionLinks[0].url%>\" class=\"ns_pic\"><img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.resources[0].urls[0]%>\"\n                      width=\"600\" height=\"200\"\n                ></a>\n                            <div class=\"ad_detail clearfix\">\n                                <span class=\"tg_tag\"><%=newrow.source%></span>\n                                <span class=\"keywords\" ne-html=\"<%=newrow.content%>\"></span>\n                            </div>\n                        </div>\n                    <%&#125; else if(newrow.imgurl &amp;&amp; newrow.add1 &amp;&amp; newrow.add2 &amp;&amp; /\\.jpg$|\\.png$|\\.jpeg$|\\.gif$/.test(newrow.imgurl) &amp;&amp; /\\.jpg$|\\.png$|\\.jpeg$|\\.gif$/.test(newrow.add1) &amp;&amp; /\\.jpg$|\\.png$|\\.jpeg$|\\.gif$/.test(newrow.add2))&#123;%>\n                        <div class=\"data_row news_photoview clearfix <%if(__i == 0)&#123;%>news_first <%&#125;%&gt;&quot;&gt;\n                        &lt;div class=&quot;news_title&quot;&gt;\n                            &lt;h3&gt;&lt;a href=&quot;&lt;%=newrow.docurl%&gt;&quot;&gt;&lt;%=newrow.title%&gt;&lt;/a&gt;&lt;/h3&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;np_pic&quot;&gt;\n                            &lt;a href=&quot;&lt;%=newrow.docurl%&gt;&quot;&gt;\n                                &lt;span class=&quot;p_img3&quot;&gt;\n                                &lt;%if(newrow.imgurl.indexOf(&#39;gif&#39;) != -1)&#123;%>\n                                    <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.imgurl%>\"\n                      width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\"\n                >\n                                    <%&#125; else &#123;%> \n                                    <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.imgurl%>?imageView&thumbnail=190y120&quality=85\"\n                      width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\"\n                >\n                                    <%&#125;%&gt; \n                                &lt;/span&gt;\n                                &lt;span class=&quot;p_img3&quot;&gt;\n                                &lt;%if(newrow.add1.indexOf(&#39;gif&#39;) != -1)&#123;%>\n                                    <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.add1%>\"\n                      width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\"\n                >\n                                    <%&#125; else &#123;%> \n                                    <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.add1%>?imageView&thumbnail=190y120&quality=85\"\n                      width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/index2016_rmd/images/pic3_error0106.jpg';\"\n                >\n                                    <%&#125;%&gt; \n                                &lt;/span&gt;\n                                &lt;span class=&quot;p_img3&quot;&gt;\n                                &lt;%if(newrow.add2.indexOf(&#39;gif&#39;) != -1)&#123;%>\n                                    <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.add2%>\"\n                      width=\"190\" height=\"120\" class=\"pic_last\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\"\n                >\n                                    <%&#125; else &#123;%> \n                                    <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.add2%>?imageView&thumbnail=190y120&quality=85\"\n                      width=\"190\" height=\"120\" class=\"pic_last\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\"\n                >\n                                    <%&#125;%&gt; \n                                &lt;/span&gt;\n                            &lt;/a&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;np_detail clearfix&quot;&gt;\n                            &lt;div class=&quot;news_tag&quot;&gt;\n                                &lt;%if(newrow.channelname &amp;&amp; newrow.channelname != &quot;shehui&quot; &amp;&amp; newrow.channelname != &quot;guonei&quot; &amp;&amp; newrow.channelname != &quot;guoji&quot; &amp;&amp; newrow.channelname != &quot;dada&quot; &amp;&amp; newrow.channelname != &quot;war&quot; &amp;&amp; newrow.channelname != &quot;hangkong&quot;)&#123;%>\n                                        <%if(newrow.tlastid != \"\")&#123;%>\n                                            <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                        <%&#125;else if(newrow.label != &quot;&quot;)&#123;%>\n                                            <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                            <em><%=newrow.label%></em></a>\n                                        <%&#125;%&gt; \n                                &lt;%&#125;%&gt;\n                                &lt;%if(newrow.keywords.length &gt; 0)&#123;%>\n                                        <div class=\"keywords\">\n                                        <%bowlder.each(newrow.keywords,function(k)&#123;%>\n                                            <a href=\"<%=k.akey_link%>\"><%=k.keyname%></a>\n                                        <%&#125;)%&gt; \n                                    &lt;/div&gt;\n                                &lt;%&#125;%&gt; \n                                &lt;%if(newrow.time)&#123;%>\n                                        <span class=\"time\"><%=formatTime(newrow.time)%></span>\n                                    <%&#125;%&gt; \n                            &lt;/div&gt;\n                            &lt;div class=&quot;share-join clearfix&quot;&gt;\n                                &lt;%if(newrow.tienum != &quot;&quot;)&#123;%>\n                                    <a class=\"post_recommend_tie right\" href=\"<%=newrow.commenturl%>\" >\n                                        <div class=\"post_recommend_tie_wrap\">\n                                            <span class=\"post_recommend_tie_icon icons\"><%=newrow.tienum%></span> \n                                            <span class=\"post_recommend_tie_text\"><i>跟贴</i><%=newrow.tienum%></span>\n                                        </div>\n                                    </a>\n                                    <%&#125;%&gt;\n                                &lt;div class=&quot;ne-shares-parent right&quot;&gt;\n                                    &lt;span href=&quot;#share&quot; title=&quot;分享&quot; class=&quot;ne-shares-arr&quot;&gt;&lt;/span&gt;\n                                    &lt;div class=&quot;share-join-item&quot; ne-module=&quot;/modules/shares/shares.js&quot; ne-state=&quot;cls.hover:ne-shares-open;title:&lt;%=newrow.title%&gt;;url:&lt;%=newrow.docurl%&gt;;pic:&lt;%=newrow.imgurl%&gt;&quot; &gt;\n&lt;div class=&quot;ne-shares-pop6x1wrap&quot; ne-role=&quot;share-wrap&quot;&gt;\n&lt;ul class=&quot;ne-shares-pop6x1&quot;&gt;\n    &lt;li&gt;\n        &lt;a ne-click=&quot;share(&#39;yixin&#39;)&quot; href=&quot;http://yixin.im/#f=www&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-yixin&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;易信&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a ne-mouseover=&quot;initWeixin()&quot; href=&quot;javascript:&quot; target=&quot;_self&quot; class=&quot;ne-shares-weixin&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-weixin&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;微信&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a ne-click=&quot;share(&#39;sina&#39;)&quot; href=&quot;javascript:&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-sina&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;微博&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li class=&quot;last&quot;&gt;\n        &lt;a ne-click=&quot;share(&#39;qzone&#39;)&quot; href=&quot;javascript:&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-qzone&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;QQ空间&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div class=&quot;ne-shares-qrwrap&quot;&gt;\n  &lt;div class=&quot;ne-shares-qrarr&quot;&gt;&lt;/div&gt;\n  &lt;div ne-role=&quot;qrcode&quot; class=&quot;ne-shares-qrcode&quot;&gt;&lt;/div&gt;\n  &lt;p&gt;用微信扫码二维码&lt;/p&gt;&lt;p&gt;分享至好友和朋友圈&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n                                &lt;/div&gt;\n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;%&#125; else if(newrow.add1 &amp;&amp; /\\.jpg$|\\.png$|\\.jpeg$|\\.gif$/.test(newrow.add1))&#123;%>\n                        <div class=\"data_row news_special clearfix <%if(__i == 0)&#123;%>news_first <%&#125;%&gt;&quot;&gt;\n                        &lt;div class=&quot;news_title&quot;&gt;\n                            &lt;h3&gt;&lt;a href=&quot;&lt;%=newrow.docurl%&gt;&quot;&gt;&lt;%=newrow.title%&gt;&lt;/a&gt;&lt;/h3&gt;\n                            &lt;%if(newrow.channelname &amp;&amp; newrow.channelname != &quot;shehui&quot; &amp;&amp; newrow.channelname != &quot;guonei&quot; &amp;&amp; newrow.channelname != &quot;guoji&quot; &amp;&amp; newrow.channelname != &quot;dada&quot; &amp;&amp; newrow.channelname != &quot;war&quot; &amp;&amp; newrow.channelname != &quot;hangkong&quot;)&#123;%>\n                                    <%if(newrow.tlastid != \"\")&#123;%>\n                                        <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                    <%&#125;else if(newrow.label != &quot;&quot;)&#123;%>\n                                        <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                        <em><%=newrow.label%></em></a>\n                                    <%&#125;%&gt; \n                            &lt;%&#125;%&gt;\n                        &lt;/div&gt;\n                        &lt;a href=&quot;&lt;%=newrow.docurl%&gt;&quot; class=&quot;ns_pic&quot;&gt;\n                            &lt;%if(newrow.add1.indexOf(&#39;gif&#39;) != -1)&#123;%>\n                                <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.add1%>\"\n                      alt=\"<%=newrow.title%\n                >\" width=\"600\" height=\"300\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/special_error0106.jpg';\">\n                                <%&#125; else &#123;%> \n                                <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.add1%>?imageView&thumbnail=600y300&quality=85\"\n                      alt=\"<%=newrow.title%\n                >\" width=\"600\" height=\"300\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/special_error0106.jpg';\">\n                                <%&#125;%&gt; \n                        &lt;/a&gt;\n                    &lt;/div&gt;\n                &lt;%&#125; else if(newrow.imgurl &amp;&amp; newrow.imgurl != &quot;&quot;)&#123;%>\n                        <div class=\"data_row news_article clearfix <%if(__i == 0)&#123;%>news_first<%&#125;%&gt;&quot;&gt;\n                        &lt;%if(newrow.imgurl != &quot;&quot;)&#123;%>\n                                <a href=\"<%=newrow.docurl%>\" class=\"na_pic\">\n                                    <%if(newrow.imgurl.indexOf('gif') != -1)&#123;%>\n                                    <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.imgurl%>\"\n                      alt=\"<%=newrow.title%\n                >\" width=\"140\" height=\"88\" onerror=\"imgError(this)\">\n                                    <%&#125; else &#123;%> \n                                    <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=newrow.imgurl%>?imageView&thumbnail=140y88&quality=85\"\n                      alt=\"<%=newrow.title%\n                >\" width=\"140\" height=\"88\" onerror=\"imgError(this)\">\n                                    <%&#125;%&gt; \n                            &lt;/a&gt;\n                        &lt;%&#125;%&gt; \n                        &lt;div class=&quot;na_detail clearfix &lt;%if(newrow.imgurl == &quot;&quot;)&#123;%>no_pic<%&#125;%&gt;&quot;&gt;\n                            &lt;div class=&quot;news_title&quot;&gt;\n                                &lt;h3&gt;&lt;a href=&quot;&lt;%=newrow.docurl%&gt;&quot;&gt;&lt;%=newrow.title%&gt;&lt;/a&gt;&lt;/h3&gt;\n                            &lt;/div&gt;\n                            &lt;div class=&quot;news_tag&quot;&gt;\n                                &lt;%if(newrow.channelname &amp;&amp; newrow.channelname != &quot;shehui&quot; &amp;&amp; newrow.channelname != &quot;guonei&quot; &amp;&amp; newrow.channelname != &quot;guoji&quot; &amp;&amp; newrow.channelname != &quot;dada&quot; &amp;&amp; newrow.channelname != &quot;war&quot; &amp;&amp; newrow.channelname != &quot;hangkong&quot;)&#123;%>\n                                        <%if(newrow.tlastid != \"\")&#123;%>\n                                            <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                        <%&#125;else if(newrow.label != &quot;&quot;)&#123;%>\n                                            <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                            <em><%=newrow.label%></em></a>\n                                        <%&#125;%&gt; \n                                &lt;%&#125;%&gt;\n                                &lt;%if(newrow.keywords &amp;&amp; newrow.keywords.length &gt; 0)&#123;%>\n                                        <div class=\"keywords\">\n                                        <%bowlder.each(newrow.keywords,function(k)&#123;%>\n                                            <a href=\"<%=k.akey_link%>\"><%=k.keyname%></a>\n                                        <%&#125;)%&gt; \n                                    &lt;/div&gt;\n                                &lt;%&#125;%&gt; \n                                &lt;%if(newrow.time)&#123;%>\n                                        <span class=\"time\"><%=formatTime(newrow.time)%></span>\n                                    <%&#125;%&gt; \n                            &lt;/div&gt;\n                            &lt;div class=&quot;share-join clearfix&quot;&gt;\n                                &lt;a class=&quot;post_recommend_tie right&quot; href=&quot;&lt;%=newrow.commenturl%&gt;&quot; &gt;\n                                    &lt;div class=&quot;post_recommend_tie_wrap&quot;&gt;\n                                        &lt;span class=&quot;post_recommend_tie_icon icons&quot;&gt;&lt;%=newrow.tienum ? newrow.tienum : 0%&gt;&lt;/span&gt; \n                                        &lt;span class=&quot;post_recommend_tie_text&quot;&gt;&lt;i&gt;跟贴&lt;/i&gt;&lt;%=newrow.tienum%&gt;&lt;/span&gt;\n                                    &lt;/div&gt;\n                                &lt;/a&gt;\n                                &lt;div class=&quot;ne-shares-parent right&quot;&gt;\n                                    &lt;span href=&quot;#share&quot; title=&quot;分享&quot; class=&quot;ne-shares-arr&quot;&gt;&lt;/span&gt;\n                                    &lt;div class=&quot;share-join-item&quot; ne-module=&quot;/modules/shares/shares.js&quot; ne-state=&quot;cls.hover:ne-shares-open;title:&lt;%=newrow.title%&gt;;url:&lt;%=newrow.docurl%&gt;;pic:&lt;%=newrow.imgurl%&gt;&quot; &gt;\n&lt;div class=&quot;ne-shares-pop6x1wrap&quot; ne-role=&quot;share-wrap&quot;&gt;\n&lt;ul class=&quot;ne-shares-pop6x1&quot;&gt;\n    &lt;li&gt;\n        &lt;a ne-click=&quot;share(&#39;yixin&#39;)&quot; href=&quot;http://yixin.im/#f=www&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-yixin&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;易信&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a ne-mouseover=&quot;initWeixin()&quot; href=&quot;javascript:&quot; target=&quot;_self&quot; class=&quot;ne-shares-weixin&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-weixin&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;微信&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a ne-click=&quot;share(&#39;sina&#39;)&quot; href=&quot;javascript:&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-sina&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;微博&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li class=&quot;last&quot;&gt;\n        &lt;a ne-click=&quot;share(&#39;qzone&#39;)&quot; href=&quot;javascript:&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-qzone&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;QQ空间&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div class=&quot;ne-shares-qrwrap&quot;&gt;\n  &lt;div class=&quot;ne-shares-qrarr&quot;&gt;&lt;/div&gt;\n  &lt;div ne-role=&quot;qrcode&quot; class=&quot;ne-shares-qrcode&quot;&gt;&lt;/div&gt;\n  &lt;p&gt;用微信扫码二维码&lt;/p&gt;&lt;p&gt;分享至好友和朋友圈&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n                                &lt;/div&gt;\n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;%&#125; else if(newrow.pics3 &amp;&amp; newrow.pics3.length &gt;= 3)&#123;%>\n                        <div class=\"data_row news_photoview clearfix <%if(__i == 0)&#123;%>news_first <%&#125;%&gt;&quot;&gt;\n                        &lt;div class=&quot;news_title&quot;&gt;\n                            &lt;h3&gt;&lt;a href=&quot;&lt;%=newrow.docurl%&gt;&quot;&gt;&lt;%=newrow.title%&gt;&lt;/a&gt;&lt;/h3&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;np_pic&quot;&gt;\n                            &lt;a href=&quot;&lt;%=newrow.docurl%&gt;&quot;&gt;\n                                &lt;%bowlder.each(newrow.pics3,function(n)&#123;%>\n                                        <span class=\"p_img3\">\n                                        <img  \n                     lazyload\n                     src=\"/images/loading.svg\"\n                     data-src=\"<%=n.pic%>\"\n                      width=\"190\" height=\"120\" onerror=\"javascript:this.src='https://static.ws.126.net/f2e/news/index2016_rmd/images/pic3_error0106.jpg';\"\n                >\n                                        </span>\n                                    <%&#125;)%&gt; \n                            &lt;/a&gt;\n                        &lt;/div&gt;\n                        &lt;div class=&quot;np_detail clearfix&quot;&gt;\n                            &lt;div class=&quot;news_tag&quot;&gt;\n                                &lt;%if(newrow.channelname &amp;&amp; newrow.channelname != &quot;shehui&quot; &amp;&amp; newrow.channelname != &quot;guonei&quot; &amp;&amp; newrow.channelname != &quot;guoji&quot; &amp;&amp; newrow.channelname != &quot;dada&quot; &amp;&amp; newrow.channelname != &quot;war&quot; &amp;&amp; newrow.channelname != &quot;hangkong&quot;)&#123;%>\n                                        <%if(newrow.tlastid != \"\")&#123;%>\n                                            <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                        <%&#125;else if(newrow.label != &quot;&quot;)&#123;%>\n                                            <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                            <em><%=newrow.label%></em></a>\n                                        <%&#125;%&gt; \n                                &lt;%&#125;%&gt;\n                                &lt;%if(newrow.keywords &amp;&amp; newrow.keywords.length &gt; 0)&#123;%>\n                                        <div class=\"keywords\">\n                                        <%bowlder.each(newrow.keywords,function(k)&#123;%>\n                                            <a href=\"<%=k.akey_link%>\"><%=k.keyname%></a>\n                                        <%&#125;)%&gt; \n                                    &lt;/div&gt;\n                                &lt;%&#125;%&gt; \n                                &lt;%if(newrow.time)&#123;%>\n                                        <span class=\"time\"><%=formatTime(newrow.time)%></span>\n                                    <%&#125;%&gt; \n                            &lt;/div&gt;\n                            &lt;div class=&quot;share-join clearfix&quot;&gt;\n                                &lt;a class=&quot;post_recommend_tie right&quot; href=&quot;&lt;%=newrow.commenturl%&gt;&quot; &gt;\n                                    &lt;div class=&quot;post_recommend_tie_wrap&quot;&gt;\n                                        &lt;span class=&quot;post_recommend_tie_icon icons&quot;&gt;&lt;%=newrow.tienum%&gt;&lt;/span&gt; \n                                        &lt;span class=&quot;post_recommend_tie_text&quot;&gt;&lt;i&gt;跟贴&lt;/i&gt;&lt;%=newrow.tienum%&gt;&lt;/span&gt;\n                                    &lt;/div&gt;\n                                &lt;/a&gt;\n                                &lt;div class=&quot;ne-shares-parent right&quot;&gt;\n                                    &lt;span href=&quot;#share&quot; title=&quot;分享&quot; class=&quot;ne-shares-arr&quot;&gt;&lt;/span&gt;\n                                    &lt;div class=&quot;share-join-item&quot; ne-module=&quot;/modules/shares/shares.js&quot; ne-state=&quot;cls.hover:ne-shares-open;title:&lt;%=newrow.title%&gt;;url:&lt;%=newrow.docurl%&gt;;pic:&lt;%=newrow.imgurl%&gt;&quot; &gt;\n&lt;div class=&quot;ne-shares-pop6x1wrap&quot; ne-role=&quot;share-wrap&quot;&gt;\n&lt;ul class=&quot;ne-shares-pop6x1&quot;&gt;\n    &lt;li&gt;\n        &lt;a ne-click=&quot;share(&#39;yixin&#39;)&quot; href=&quot;http://yixin.im/#f=www&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-yixin&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;易信&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a ne-mouseover=&quot;initWeixin()&quot; href=&quot;javascript:&quot; target=&quot;_self&quot; class=&quot;ne-shares-weixin&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-weixin&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;微信&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a ne-click=&quot;share(&#39;sina&#39;)&quot; href=&quot;javascript:&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-sina&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;微博&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li class=&quot;last&quot;&gt;\n        &lt;a ne-click=&quot;share(&#39;qzone&#39;)&quot; href=&quot;javascript:&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-qzone&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;QQ空间&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div class=&quot;ne-shares-qrwrap&quot;&gt;\n  &lt;div class=&quot;ne-shares-qrarr&quot;&gt;&lt;/div&gt;\n  &lt;div ne-role=&quot;qrcode&quot; class=&quot;ne-shares-qrcode&quot;&gt;&lt;/div&gt;\n  &lt;p&gt;用微信扫码二维码&lt;/p&gt;&lt;p&gt;分享至好友和朋友圈&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n                                &lt;/div&gt;\n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;%&#125; else &#123;%>\n                        <div class=\"data_row news_article clearfix <%if(__i == 0)&#123;%>news_first<%&#125;%&gt;&quot; i=&#123;&#123;__i&#125;&#125;&gt;\n                        &lt;div class=&quot;na_detail clearfix no_pic&quot;&gt;\n                            &lt;div class=&quot;news_title&quot;&gt;\n                                &lt;h3&gt;&lt;a href=&quot;&lt;%=newrow.docurl%&gt;&quot;&gt;&lt;%=newrow.title%&gt;&lt;/a&gt;&lt;/h3&gt;\n                            &lt;/div&gt;\n                            &lt;div class=&quot;news_tag&quot;&gt;\n                                &lt;%if(newrow.channelname &amp;&amp; newrow.channelname != &quot;shehui&quot; &amp;&amp; newrow.channelname != &quot;guonei&quot; &amp;&amp; newrow.channelname != &quot;guoji&quot; &amp;&amp; newrow.channelname != &quot;dada&quot; &amp;&amp; newrow.channelname != &quot;war&quot; &amp;&amp; newrow.channelname != &quot;hangkong&quot;)&#123;%>\n                                        <%if(newrow.tlastid != \"\")&#123;%>\n                                            <strong class=\"barlink\"><%=newrow.tlastid%></strong>\n                                        <%&#125;else if(newrow.label != &quot;&quot;)&#123;%>\n                                            <a href=\"<%=newrow.tlink%>\" class=\"link link_more\">\n                                            <em><%=newrow.label%></em></a>\n                                        <%&#125;%&gt; \n                                &lt;%&#125;%&gt;\n                                &lt;%if(newrow.keywords &amp;&amp; newrow.keywords.length &gt; 0)&#123;%>\n                                        <div class=\"keywords\">\n                                        <%bowlder.each(newrow.keywords,function(k)&#123;%>\n                                            <a href=\"<%=k.akey_link%>\"><%=k.keyname%></a>\n                                        <%&#125;)%&gt; \n                                    &lt;/div&gt;\n                                &lt;%&#125;%&gt; \n                                &lt;%if(newrow.time)&#123;%>\n                                        <span class=\"time\"><%=formatTime(newrow.time)%></span>\n                                    <%&#125;%&gt; \n                            &lt;/div&gt;\n                            &lt;div class=&quot;share-join clearfix&quot;&gt;\n                                &lt;a class=&quot;post_recommend_tie right&quot; href=&quot;&lt;%=newrow.commenturl%&gt;&quot; &gt;\n                                    &lt;div class=&quot;post_recommend_tie_wrap&quot;&gt;\n                                        &lt;span class=&quot;post_recommend_tie_icon icons&quot;&gt;&lt;%=newrow.tienum ? newrow.tienum : 0%&gt;&lt;/span&gt; \n                                        &lt;span class=&quot;post_recommend_tie_text&quot;&gt;&lt;i&gt;跟贴&lt;/i&gt;&lt;%=newrow.tienum%&gt;&lt;/span&gt;\n                                    &lt;/div&gt;\n                                &lt;/a&gt;\n                                &lt;div class=&quot;ne-shares-parent right&quot;&gt;\n                                    &lt;span href=&quot;#share&quot; title=&quot;分享&quot; class=&quot;ne-shares-arr&quot;&gt;&lt;/span&gt;\n                                    &lt;div class=&quot;share-join-item&quot; ne-module=&quot;/modules/shares/shares.js&quot; ne-state=&quot;cls.hover:ne-shares-open;title:&lt;%=newrow.title%&gt;;url:&lt;%=newrow.docurl%&gt;;pic:&lt;%=newrow.imgurl%&gt;&quot; &gt;\n&lt;div class=&quot;ne-shares-pop6x1wrap&quot; ne-role=&quot;share-wrap&quot;&gt;\n&lt;ul class=&quot;ne-shares-pop6x1&quot;&gt;\n    &lt;li&gt;\n        &lt;a ne-click=&quot;share(&#39;yixin&#39;)&quot; href=&quot;http://yixin.im/#f=www&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-yixin&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;易信&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a ne-mouseover=&quot;initWeixin()&quot; href=&quot;javascript:&quot; target=&quot;_self&quot; class=&quot;ne-shares-weixin&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-weixin&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;微信&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n        &lt;a ne-click=&quot;share(&#39;sina&#39;)&quot; href=&quot;javascript:&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-sina&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;微博&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li class=&quot;last&quot;&gt;\n        &lt;a ne-click=&quot;share(&#39;qzone&#39;)&quot; href=&quot;javascript:&quot;&gt;\n            &lt;span class=&quot;inner&quot;&gt;\n                &lt;i class=&quot;ep-share-icon ep-share-qzone&quot;&gt;&lt;/i&gt;\n                &lt;span class=&quot;ep-share-name&quot;&gt;QQ空间&lt;/span&gt;\n            &lt;/span&gt;\n        &lt;/a&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div class=&quot;ne-shares-qrwrap&quot;&gt;\n  &lt;div class=&quot;ne-shares-qrarr&quot;&gt;&lt;/div&gt;\n  &lt;div ne-role=&quot;qrcode&quot; class=&quot;ne-shares-qrcode&quot;&gt;&lt;/div&gt;\n  &lt;p&gt;用微信扫码二维码&lt;/p&gt;&lt;p&gt;分享至好友和朋友圈&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n                                &lt;/div&gt;\n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;%&#125;%&gt;\n                &lt;/script&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;div class=&quot;load_more_foot&quot; id=&quot;load_more_foot&quot;&gt;&lt;/div&gt;\n&lt;a class=&quot;load_more_btn&quot; ne-click=&quot;clickLoadMore();&quot; ne-hide=&quot;&#123;&#123;myState.counter &gt;= navList[myState.ndNavIndex].totalPage || myState.counter == 0&#125;&#125;&quot; target=&quot;_self&quot;&gt;\n&lt;div class=&quot;post_addmore&quot; ne-visible=&quot;&#123;&#123;myState.counter &lt; navList[myState.ndNavIndex].totalPage &amp;&amp; !myState.loading&#125;&#125;&quot;&gt;\n&lt;i&gt;+&lt;/i&gt;\n&lt;span&gt;加载更多&lt;/span&gt;\n&lt;/div&gt;\n&lt;div class=&quot;post_adding&quot; ne-show=&quot;&#123;&#123;myState.loading&#125;&#125;&quot;&gt;\n&lt;i&gt;+&lt;/i&gt;\n&lt;span&gt;加载中...&lt;/span&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;div class=&quot;load_more_tip&quot; ne-show=&quot;&#123;&#123;myState.counter &gt;= navList[myState.ndNavIndex].totalPage&#125;&#125;&quot;&gt;:-)已经到最后啦~&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 信息流 结束 --&gt;\n&lt;/div&gt;\n&lt;!-- 中间新闻 结束 --&gt;\n&lt;!-- 右侧栏目 开始 --&gt;\n&lt;div class=&quot;main_right_channel&quot;&gt;\n&lt;!-- 广告 --&gt;\n&lt;!-- 300*30 --&gt;\n&lt;!-- 新闻首页焦点图上方L特殊标识广告 开始--&gt;\n&lt;!-- &lt;div class=&quot;mod_newsr_ad1&quot;&gt;\n&lt;a href=&quot;http://g.163.com/a?CID=45744&amp;Values=2901173312&amp;Redirect=http://clickc.admaster.com.cn/c/a73960,b1279435,c369,i0,m101,8a1,8b2,h&quot;&gt;&lt;img class=&quot;block mb10&quot; width=&quot;300&quot; height=&quot;30&quot; src=&quot;http://img1.126.net/channel11/024018300301009.jpg&quot; alt=&quot;广告&quot;&gt;&lt;/a&gt;\n&lt;/div&gt; --&gt;\n&lt;!--新闻首页焦点图上方L特殊标识广告 结束--&gt;\n&lt;!-- 焦点图 开始--&gt;\n&lt;div class=&quot;mod_right_focus&quot;&gt;\n&lt;div ne-module=&quot;&quot;&gt;\n&lt;div class=&quot;mod_focus&quot; ne-module=&quot;/modules/slide/slide.js&quot; ne-state=&quot;slideMethod:left;events=mouseover;interval=4000;loop=true;&quot;&gt;\n&lt;div class=&quot;f_body&quot; ne-role=&quot;slide-body&quot;&gt;\n&lt;ul class=&quot;f_main clearfix&quot; ne-role=&quot;slide-scroll&quot;&gt;\n&lt;li ne-role=&quot;slide-page&quot;&gt;\n&lt;a href=&quot;http://g.163.com/a?CID=68685&amp;amp;Values=1366894002&amp;amp;Redirect=http://clk.gentags.net/clk/iv-10648/st-31/cr-2/oi-1303641/or-7535/adv-158/pcon-0/https%253A%252F%252Fent.163.com%252F19%252F0625%252F16%252FEIHG8HLF000398QL.html&quot;&gt;\n&lt;img height=&quot;400&quot; src=&quot;http://nimg.ws.126.net/?url=https://yt-adp.ws.126.net/channel21/037408_300400_axry_20190626.jpg&amp;amp;thumbnail=300x2147483647&amp;amp;quality=75&amp;amp;type=jpg&quot; width=&quot;300&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;三金西瓜霜独家冠名网易封面故事&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li ne-role=&quot;slide-page&quot;&gt;\n&lt;a href=&quot;http://news.163.com/photoview/00AP0001/2302561.html&quot;&gt;\n&lt;img height=&quot;400&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/e5b070c1f96349b0829da88b41105903.jpeg?imageView&amp;amp;thumbnail=300y400&quot; width=&quot;300&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;浒苔绿潮开始在山东沿海登陆&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li ne-role=&quot;slide-page&quot;&gt;\n&lt;a href=&quot;http://news.163.com/photoview/00AP0001/2302559.html&quot;&gt;\n&lt;img height=&quot;400&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/2792654fe66f4985879a8cc30a89a6cc.jpeg?imageView&amp;amp;thumbnail=300y400&quot; width=&quot;300&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;广西南宁抓获涉传人员286名&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;li ne-role=&quot;slide-page&quot;&gt;\n&lt;a href=&quot;http://news.163.com/photoview/00AO0001/2302560.html&quot;&gt;\n&lt;img height=&quot;400&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/202e20527525474cac861ba7e56a2dde.jpeg?imageView&amp;amp;thumbnail=300y400&quot; width=&quot;300&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;民主党初选辩论次日:拜登现身&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div class=&quot;f_title&quot;&gt;\n&lt;span class=&quot;current&quot; ne-role=&quot;slide-nav&quot;&gt;1&lt;/span&gt;\n&lt;span class=&quot;&quot; ne-role=&quot;slide-nav&quot;&gt;2&lt;/span&gt;\n&lt;span class=&quot;&quot; ne-role=&quot;slide-nav&quot;&gt;3&lt;/span&gt;\n&lt;span class=&quot;&quot; ne-role=&quot;slide-nav&quot;&gt;4&lt;/span&gt;\n&lt;/div&gt;\n&lt;a class=&quot;f_prev&quot; ne-role=&quot;slide-prev&quot;&gt;&amp;lt;&lt;/a&gt;\n&lt;a class=&quot;f_next&quot; ne-role=&quot;slide-next&quot;&gt;&amp;gt;&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 焦点图 结束--&gt;\n&lt;!-- 广告 开始--&gt;\n&lt;div class=&quot;mod_ad_toutu channel_relative_2016&quot;&gt;\n&lt;ul class=&quot;clearfix&quot;&gt;\n&lt;li&gt;&lt;a href=&quot;http://baoxian.163.com/activity/act1605/index.html?from=mhds1605&quot;&gt;免费领取iPhone6s&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://mall.163.com/mobile/fill.jsp?from=wwwtext&quot;&gt;手机费快充超低折扣&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://baoxian.163.com/car/activitylist.html?from=mhdstbl&quot;&gt;免费送现金红包！&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=&quot;http://piao.163.com/movie/47080.html?from=newsword&quot;&gt;镜中多奇境依旧爱丽丝&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;span class=&quot;channel_ad_text_2016&quot;&gt;广告&lt;/span&gt;\n&lt;/div&gt;\n&lt;!-- 广告 结束--&gt;\n&lt;!-- 右侧960原创栏目 开始 --&gt;\n&lt;div class=&quot;origina_column_960&quot; id=&quot;js_origina_column_960&quot;&gt;\n&lt;div ne-module=&quot;/news/index2016_rmd/modules/originacolumn/originacolumn.js&quot;&gt;\n&lt;div class=&quot;origina_column_warp&quot;&gt;\n&lt;h2&gt;\n&lt;span&gt;新闻各有态度&lt;/span&gt;\n&lt;/h2&gt;\n&lt;div class=&quot;scroll_bd&quot; ne-role=&quot;scroll_bd&quot;&gt;\n&lt;div class=&quot;scroll_column_bd&quot;&gt;\n&lt;ul class=&quot;scroll_ul&quot;&gt;\n&lt;!-- 回声 开始 --&gt;\n&lt;!-- 回声 结束 --&gt;\n&lt;!-- 数读 开始 --&gt;\n&lt;li class=&quot;cell cell_sd cell_hover&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;a class=&quot;tags tag_sd&quot; href=&quot;http://data.163.com/special/datablog/&quot;&gt;数读&lt;/a&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://data.163.com/19/0626/14/EIJQJG9L000181IU.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                中国哪里的地铁最拥挤？\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;中国哪里的地铁最拥挤？&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/30e8760df3044e29a18fac3514dd22b1.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://data.163.com/19/0625/11/EIH0CQEK00019GOE.html&quot;&gt;娶一个潮汕老婆到底是什么体验&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://data.163.com/19/0621/17/EI7BLS3600019GOE.html&quot;&gt;不瞒你说，成都早餐好吃到爆&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 数读 结束 --&gt;\n&lt;!-- 人间 开始 --&gt;\n&lt;li class=&quot;cell cell_rj&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;a class=&quot;tags tag_rj&quot; href=&quot;http://renjian.163.com/&quot;&gt;人间&lt;/a&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0628/14/EIP21K41000181RV.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                小白作者的变现之路\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;小白作者的变现之路&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/27f33fcbfcec4b42b6837807b7a0883f.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0627/16/EIML2HJO000181RV.html&quot;&gt;被毒虫男友拖下水的女大学生&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0626/13/EIJPJMCH000181RV.html&quot;&gt;领导，求你让我加班吧&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 人间 结束 --&gt;\n&lt;!-- 大国小民 开始 --&gt;\n&lt;li class=&quot;cell cell_dgxm&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_dgxm&quot;&gt;大国小民&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0624/14/EIEOBNCB000181RK.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                当不了官发不了财的读书人\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;当不了官发不了财的读书人&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/24/b77e119ffeca477fa4bd2144b1fcb86c.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0620/16/EI4JRNO7000181RK.html&quot;&gt;四个博士，一地鸡毛&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0618/12/EHV0QRVG000181RK.html&quot;&gt;医闹得逞后，伤害的到底是谁&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 大国小民 结束 --&gt;\n&lt;!-- 三三有梗 开始 --&gt;\n&lt;li class=&quot;cell cell_dada&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_dada&quot;&gt;三三有梗&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0627/11/EIM57O490001885B.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                据说99%的人在图书馆一定会碰上......\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;据说99%的人在图书馆一定会碰上......&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/27/06eb8f4a3d4647bf9360ff5e71f003b8.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0626/15/EIK0IJT40001885B.html&quot;&gt;我可能，得了种，前任病&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0617/09/EHS57H4L0001885B.html&quot;&gt;那些KO不掉我的,最终成了我的OK&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 三三有梗 结束 --&gt;\n&lt;!-- 三三映画 开始 --&gt;\n&lt;!-- 三三映画 结束 --&gt;\n&lt;!-- 我去1990 开始 --&gt;\n&lt;li class=&quot;cell cell_wq1990&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_wq1990&quot;&gt;我去1990&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/11/EIOL94760001885B.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                直男幼稚行为大赏\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;直男幼稚行为大赏&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/0b3890cd2f4b473fa0127b5e33ae6ccf.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0624/12/EIEFGMVL0001885B.html&quot;&gt;打个赌，爱情友情你分不清楚&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0621/12/EI6NKDTU0001885B.html&quot;&gt;不会唱歌的人进 KTV 以后有多惨&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 我去1990 结束 --&gt;\n&lt;!-- 轻松一刻 开始 --&gt;\n&lt;li class=&quot;cell cell_qsyk&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_qsyk&quot;&gt;轻松一刻&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/19/EIPIQT4O000181BR.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                彩票一直都不中，我却忍不住要买\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;彩票一直都不中，我却忍不住要买&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/f44265c5b4ef4a11a99eedbde7c49833.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0627/17/EIMPGJAU000181BR.html&quot;&gt;原来&quot;神仙眷侣&quot;离婚,也是一地鸡毛&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0626/18/EIK95RV0000181BR.html&quot;&gt;我宣布，北大清华这对CP锁死了！&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 轻松一刻 结束 --&gt;\n&lt;!-- 槽值 开始 --&gt;\n&lt;li class=&quot;cell cell_caozhi&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_caozhi&quot;&gt;槽值&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://caozhi.news.163.com/19/0623/22/EID0CBIH000181TI.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                佟丽娅，这次你赢了\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;佟丽娅，这次你赢了&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/23/67d24242d479451ea705e26296187f78.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://caozhi.news.163.com/19/0623/15/EIC9LGSP000181TI.html&quot;&gt;千万别在深夜点开这神作&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://caozhi.news.163.com/19/0618/19/EHVRID7G000181TI.html&quot;&gt;那个发“嗯”的人，已被踢出群聊&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 槽值 结束 --&gt;\n&lt;!-- 谈心社 开始 --&gt;\n&lt;li class=&quot;cell cell_tanxinshe&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;span class=&quot;tags tag_tanxinshe&quot;&gt;谈心社&lt;/span&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/17/EIPCOKEA0001982T.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                王宝强母亲去世：来日方长是人生的错觉\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;王宝强母亲去世：来日方长是人生的错觉&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/ecd0de8b8dc0402da72d814bde76f06e.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0627/13/EIMC0EDH0001982T.html&quot;&gt;宋仲基宋慧乔离婚：再美的爱情也会过期&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://news.163.com/19/0626/17/EIK6AD550001982T.html&quot;&gt;杨紫冰箱藏药，戳穿最怂瞬间&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 谈心社 结束 --&gt;\n&lt;!-- 看客 开始 --&gt;\n&lt;li class=&quot;cell cell_kanke&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;a class=&quot;tags tag_kanke&quot; href=&quot;http://renjian.163.com/special/renjian_kanke/&quot;&gt;看客&lt;/a&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0628/11/EIOMK185000199ET.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                我奶茶都戒了，日本人才知道它的好\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;我奶茶都戒了，日本人才知道它的好&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/f35eceb8d111496693e8f77a71a49cba.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0620/11/EI43PM8Q000199ET.html&quot;&gt;美国堕胎残酷物语&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;http://renjian.163.com/19/0613/11/EHI39FML000199ET.html&quot;&gt;跑腿小哥提供的十万种服务&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 看客 结束 --&gt;\n&lt;!-- 身体密码 开始 --&gt;\n&lt;li class=&quot;cell cell_stpwd&quot;&gt;\n&lt;p class=&quot;tag_line&quot;&gt;\n&lt;a class=&quot;tags tag_stpwd&quot; href=&quot;http://jiankang.163.com/special/zhutierji/?type=3&quot;&gt;身体密码&lt;/a&gt;\n&lt;/p&gt;\n&lt;div class=&quot;column_main&quot;&gt;\n&lt;a class=&quot;detail&quot; href=&quot;https://jiankang.163.com/19/0625/11/EIH061CM0038804G.html&quot; ne-role=&quot;detail&quot;&gt;\n&lt;h3&gt;\n                                防晒，99%的人都做错了……\n                            &lt;/h3&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;img alt=&quot;防晒，99%的人都做错了……&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/25/f260b6843fca4702bb5e4e316600f113.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n&lt;/div&gt;\n&lt;/a&gt;\n&lt;ul&gt;\n&lt;li class=&quot;&quot;&gt;&lt;a href=&quot;https://jiankang.163.com/19/0617/14/EHSN7PPV0038804G.html&quot;&gt;当代人减肥：迈不过25岁这道坎&lt;/a&gt;&lt;/li&gt;\n&lt;li class=&quot;twoli&quot;&gt;&lt;a href=&quot;https://jiankang.163.com/19/0608/15/EH5J9IGA00388AD5.html&quot;&gt;多年后 无数中年人仍会被高考吓醒&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/li&gt;\n&lt;!-- 身体密码 结束 --&gt;\n&lt;!-- 哒哒 开始 --&gt;\n&lt;!-- 哒哒 结束 --&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;div id=&quot;js_baseline&quot;&gt;&lt;/div&gt;\n&lt;span class=&quot;white_bg&quot; id=&quot;js_white_bg&quot;&gt;&lt;/span&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 右侧960原创栏目 结束 --&gt;\n&lt;div class=&quot;mt12 mod_ad_1 mod_ad_r&quot;&gt;\n&lt;!-- 300*250 --&gt;\n&lt;div adtype=&quot;rightAd&quot; class=&quot;at_item right_ad_item&quot; requesturl=&quot;https://nex.163.com/q?app=7BE0FC82&amp;amp;c=news&amp;amp;l=31&amp;amp;site=netease&amp;amp;affiliate=news&amp;amp;cat=homepage&amp;amp;type=logo300x250&amp;amp;location=1&quot;&gt;&lt;/div&gt;\n&lt;a class=&quot;ad_hover_href&quot; href=&quot;javascript:;&quot; target=&quot;_self&quot;&gt;&lt;/a&gt;\n&lt;/div&gt;\n&lt;!-- 新闻策划 开始 --&gt;\n&lt;div class=&quot;mt35 mod_pageh5&quot;&gt;\n&lt;div ne-module=&quot;/news/index2016_rmd/modules/modh5/modh5.js&quot;&gt;\n&lt;div class=&quot;idx_cm_title&quot;&gt;\n&lt;a class=&quot;title&quot; href=&quot;https://open.163.com/&quot;&gt;网易公开课&lt;/a&gt;\n&lt;/div&gt;\n&lt;div class=&quot;wrap&quot; ne-module=&quot;/modules/slide/slide.js&quot; ne-state=&quot;slideMethod:left;events=mouseover;interval=4000;loop=true;&quot;&gt;\n&lt;div class=&quot;h5_bg h5_border&quot;&gt;\n&lt;div class=&quot;h5_body&quot; ne-role=&quot;slide-body&quot;&gt;\n&lt;div class=&quot;h5_main clearfix&quot; ne-role=&quot;slide-scroll&quot;&gt;\n&lt;div class=&quot;h5_item&quot; ne-role=&quot;slide-page&quot;&gt;\n&lt;div class=&quot;h5_item_poster&quot;&gt;\n&lt;a href=&quot;https://vip.open.163.com/courses/2698?p=xs_yt01&quot;&gt;\n&lt;img height=&quot;436&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/b2ef8c1d0fed49078cb104f94c9f253e.jpeg&quot; width=&quot;280&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;他凭什么甩开同龄人，做职场前5%？&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=&quot;h5_item&quot; ne-role=&quot;slide-page&quot;&gt;\n&lt;div class=&quot;h5_item_poster&quot;&gt;\n&lt;a href=&quot;https://vip.open.163.com/courses/2249?p=xs_yt02&quot;&gt;\n&lt;img height=&quot;436&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/27/ffa8db82492446c88efe2d540ed64d6a.jpeg&quot; width=&quot;280&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;一个人成熟的标志：与负面情绪和解&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=&quot;h5_item&quot; ne-role=&quot;slide-page&quot;&gt;\n&lt;div class=&quot;h5_item_poster&quot;&gt;\n&lt;a href=&quot;https://vip.open.163.com/courses/1078?p=xs_yt03&quot;&gt;\n&lt;img height=&quot;436&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/893a6ecab816408cb5971de6ec236dde.jpeg&quot; width=&quot;280&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;情商高的人，走到哪儿都大受欢迎&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=&quot;h5_item&quot; ne-role=&quot;slide-page&quot;&gt;\n&lt;div class=&quot;h5_item_poster&quot;&gt;\n&lt;a href=&quot;https://vip.open.163.com/courses/2019?p=xs_yt04&quot;&gt;\n&lt;img height=&quot;436&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/f48048d211e44c889e241e545b29a000.jpeg&quot; width=&quot;280&quot;/&gt;\n&lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n&lt;h3&gt;每天5分钟，告别办公室综合症&lt;/h3&gt;\n&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;span class=&quot;ad_hover_pic&quot;&gt;广告&lt;/span&gt;\n&lt;/div&gt;\n&lt;!-- &lt;div class=&quot;scrollbtn scrollbtl&quot; ne-role=&quot;scrollbtn&quot;&gt;&lt;a ne-role=&quot;slide-prev&quot; class=&quot;f_prev&quot;&gt;&amp;lt;&lt;/a&gt;&lt;/div&gt;\n        &lt;div class=&quot;scrollbtn scrollbtnr&quot; ne-role=&quot;scrollbtn&quot;&gt;&lt;a ne-role=&quot;slide-next&quot; class=&quot;f_next&quot;&gt;&amp;gt;&lt;/a&gt;&lt;/div&gt; --&gt;\n&lt;div class=&quot;nav clearfix&quot;&gt;\n&lt;span ne-repeat=&quot;1..state.total&quot; ne-role=&quot;slide-nav&quot;&gt;&lt;/span&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- &lt;div class=&quot;nav clearfix&quot;&gt;\n        &lt;span ne-role=&quot;slide-nav&quot; ne-repeat=&quot;1..state.total&quot;&gt;&lt;/span&gt;\n    &lt;/div&gt; --&gt;\n&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 新闻策划 结束 --&gt;\n&lt;!-- 新闻专题 开始 --&gt;\n&lt;div class=&quot;mt30 mod_news_special&quot;&gt;\n&lt;div class=&quot;idx_cm_title&quot;&gt;\n&lt;h2 class=&quot;title&quot;&gt;&lt;a href=&quot;http://news.163.com/special/&quot;&gt;新闻专题&lt;/a&gt;&lt;/h2&gt;\n&lt;/div&gt;\n&lt;div class=&quot;bd&quot;&gt;\n&lt;div class=&quot;photo&quot;&gt;\n&lt;a href=&quot;http://news.163.com/special/2019qglh/&quot;&gt;\n&lt;img alt=&quot;2019年全国两会&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/03/07/c8134391d38245dc849b99fbf1ce33b0.png?imageView&amp;amp;thumbnail=300y90&quot; width=&quot;300&quot;/&gt;\n&lt;/a&gt;\n&lt;/div&gt;\n&lt;h3&gt;\n&lt;span&gt;HOT&lt;/span&gt;\n&lt;strong&gt;&lt;a href=&quot;http://news.163.com/special/2019qglh/&quot;&gt;2019年全国两会&lt;/a&gt;&lt;/strong&gt;\n&lt;/h3&gt;\n&lt;ul class=&quot;idx_cm_list&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/special/zghj70/&quot;&gt;海军成立70周年&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/special/chunyun_2019/&quot;&gt;2019年春运春节&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://news.163.com/special/chang_e4/&quot;&gt;嫦娥四号登月&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;http://cms-bucket.ws.126.net/2019/06/26/080a0e9f8b014dd5b261f9e988f7f7f9.jpeg&quot;&gt;声明&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;!-- 新闻专题 结束 --&gt;\n&lt;!-- 高层动态 开始--&gt;\n&lt;div class=&quot;mt27 mod_high_dynamic&quot;&gt;\n&lt;div class=&quot;idx_cm_title&quot;&gt;\n&lt;h2 class=&quot;title&quot;&gt;&lt;a href=&quot;http://news.163.com/special/00011269/gdmore.html&quot;&gt;高层动态&lt;/a&gt;&lt;/h2&gt;\n&lt;/div&gt;\n&lt;ul class=&quot;idx_cm_list idx_cm_list_h&quot;&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://news.163.com/19/0628/11/EIOL0214000189FH.html&quot;&gt;习近平会见联合国秘书长古特雷斯&lt;/a&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;a href=&quot;https://news.163.com/19/0620/14/EI4ESVV9000189FH.html&quot;&gt;习近平抵达平壤 开始对朝鲜进行国事访问&lt;/a&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;\n&lt;!-- 高层动态 结束--&gt;\n&lt;div class=&quot;mt25 mod_ad_2 mod_ad_r&quot;&gt;\n&lt;!-- 300*250 --&gt;\n&lt;div adtype=&quot;rightAd&quot; class=&quot;at_item right_ad_item&quot; requesturl=&quot;https://nex.163.com/q?app=7BE0FC82&amp;amp;c=news&amp;amp;l=32&amp;amp;site=netease&amp;amp;affiliate=news&amp;amp;cat=homepage&amp;amp;type=logo300x250&amp;amp;location=2&quot;&gt;&lt;/div&gt;\n&lt;a class=&quot;ad_hover_href&quot; href=&quot;javascript:;&quot; target=&quot;_self&quot;&gt;&lt;/a&gt;\n&lt;/div&gt;\n&lt;!-- 军事 航空  开始 --&gt;\n&lt;div class=&quot;mt35 mod_war&quot;&gt;\n&lt;div class=&quot;idx_cm_title&quot;&gt;\n&lt;h2 class=&quot;title&quot;&gt;\n&lt;a href=&quot;http://war.163.com/&quot;&gt;军事&lt;/a&gt;\n&lt;i&gt;・&lt;/i&gt;\n&lt;a href=&quot;http://news.163.com/air/&quot;&gt;航空&lt;/a&gt;\n&lt;/h2&gt;\n&lt;/div&gt;\n&lt;div class=&quot;idx_cm_img&quot;&gt;\n&lt;a href=&quot;http://war.163.com/photoview/4T8E0001/2301528.html&quot;&gt;\n&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;\n</code></pre><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">samples = soup.find_all(<span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\">samples</span><br></pre></td></tr></table></figure>\n<pre><code>[&lt;a class=&quot;ntes-nav-index-title ntes-nav-entry-wide c-fl&quot; href=&quot;http://www.163.com/&quot; title=&quot;网易首页&quot;&gt;网易首页&lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-select-title ntes-nav-entry-bgblack JS_NTES_LOG_FE&quot; href=&quot;http://www.163.com/#f=topnav&quot;&gt;应用\n             &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://m.163.com/newsapp/#f=topnav&quot;&gt;\n &lt;span&gt;\n &lt;em class=&quot;ntes-nav-app-newsapp&quot;&gt;网易新闻&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://open.163.com/#f=topnav&quot;&gt;\n &lt;span&gt;\n &lt;em class=&quot;ntes-nav-app-open&quot;&gt;网易公开课&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://hongcai.163.com/?from=pcsy-button&quot;&gt;\n &lt;span&gt;\n &lt;em class=&quot;ntes-nav-app-hongcai&quot;&gt;网易红彩&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://u.163.com/aosoutbdbd8&quot;&gt;\n &lt;span&gt;\n &lt;em class=&quot;ntes-nav-app-yanxuan&quot;&gt;网易严选&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://mail.163.com/client/dl.html?from=mail46&quot;&gt;\n &lt;span&gt;\n &lt;em class=&quot;ntes-nav-app-mail&quot;&gt;邮箱大师&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://study.163.com/client/download.htm?from=163app&amp;amp;utm_source=163.com&amp;amp;utm_medium=web_app&amp;amp;utm_campaign=business&quot;&gt;\n &lt;span&gt;\n &lt;em class=&quot;ntes-nav-app-study&quot;&gt;网易云课堂&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece47f92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=6b69bfbfac0db5f335232faa957a27bb&amp;amp;target=https%3A%2F%2Fapp.kaola.com%2F%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;\n &lt;em class=&quot;ntes-nav-app-kaola-hg&quot;&gt;网易考拉&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-quick-navigation-btn&quot; href=&quot;javascript:void(0);&quot; id=&quot;js_N_ntes_nav_quick_navigation_btn&quot; target=&quot;_self&quot;&gt;\n &lt;em&gt;快速导航\n               &lt;span class=&quot;menu1&quot;&gt;&lt;/span&gt;\n &lt;span class=&quot;menu2&quot;&gt;&lt;/span&gt;\n &lt;span class=&quot;menu3&quot;&gt;&lt;/span&gt;\n &lt;/em&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com&quot;&gt;新闻&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/domestic&quot;&gt;国内&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/world&quot;&gt;国际&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/photo&quot;&gt;图片&lt;/a&gt;,\n &lt;a href=&quot;http://view.163.com&quot;&gt;评论&lt;/a&gt;,\n &lt;a href=&quot;http://discovery.163.com&quot;&gt;探索&lt;/a&gt;,\n &lt;a href=&quot;http://war.163.com&quot;&gt;军事&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/localnews/&quot;&gt;本地新闻&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/wangsansanhome/&quot;&gt;王三三&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com&quot;&gt;体育&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/nba&quot;&gt;NBA&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/cba&quot;&gt;CBA&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/allsports&quot;&gt;综合&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/zc&quot;&gt;中超&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/world&quot;&gt;国际足球&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/yc&quot;&gt;英超&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/xj&quot;&gt;西甲&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/yj&quot;&gt;意甲&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com&quot;&gt;娱乐&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/star&quot;&gt;明星&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/photo&quot;&gt;图片&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/movie&quot;&gt;电影&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/tv&quot;&gt;电视&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/music&quot;&gt;音乐&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/special/gsbjb/&quot;&gt;稿事编辑部&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/special/focus_ent/&quot;&gt;娱乐FOCUS&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/special/xbkhz/&quot;&gt;星捕快&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com&quot;&gt;财经&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com/stock&quot;&gt;股票&lt;/a&gt;,\n &lt;a href=&quot;http://quotes.money.163.com/stock&quot;&gt;行情&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com/chanjing&quot;&gt;产经&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com/ipo&quot;&gt;新股&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com/finance&quot;&gt;金融&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com/fund&quot;&gt;基金&lt;/a&gt;,\n &lt;a href=&quot;http://biz.163.com&quot;&gt;商业&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com/licai&quot;&gt;理财&lt;/a&gt;,\n &lt;a href=&quot;http://auto.163.com&quot;&gt;汽车&lt;/a&gt;,\n &lt;a href=&quot;http://auto.163.com/buy&quot;&gt;购车&lt;/a&gt;,\n &lt;a href=&quot;http://auto.163.com/depreciate&quot;&gt;行情&lt;/a&gt;,\n &lt;a href=&quot;http://product.auto.163.com/finder&quot;&gt;选车&lt;/a&gt;,\n &lt;a href=&quot;http://product.auto.163.com&quot;&gt;车型库&lt;/a&gt;,\n &lt;a href=&quot;http://auto.163.com/news&quot;&gt;行业&lt;/a&gt;,\n &lt;a href=&quot;http://auto.163.com/chezhu&quot;&gt;用车&lt;/a&gt;,\n &lt;a href=&quot;http://auto.163.com/photo&quot;&gt;汽车图片&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com&quot;&gt;科技&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/telecom/&quot;&gt;通信&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/it&quot;&gt;IT&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/internet&quot;&gt;互联网&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/special/ydhlw&quot;&gt;移动互联网&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/special/chzt&quot;&gt;特别策划&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/special/wudaokou&quot;&gt;五道口沙龙&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/special/yyzd&quot;&gt;易语中的&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/special&quot;&gt;专题&lt;/a&gt;,\n &lt;a href=&quot;http://lady.163.com&quot;&gt;女人&lt;/a&gt;,\n &lt;a href=&quot;http://baby.163.com&quot;&gt;亲子&lt;/a&gt;,\n &lt;a href=&quot;http://fashion.163.com/art&quot;&gt;艺术&lt;/a&gt;,\n &lt;a href=&quot;http://fashion.163.com&quot;&gt;时尚&lt;/a&gt;,\n &lt;a href=&quot;http://shoucang.163.com&quot;&gt;收藏&lt;/a&gt;,\n &lt;a href=&quot;http://lady.163.com/sense&quot;&gt;情感&lt;/a&gt;,\n &lt;a href=&quot;http://lady.163.com/astro&quot;&gt;星座&lt;/a&gt;,\n &lt;a href=&quot;http://lady.163.com/beauty&quot;&gt;美容&lt;/a&gt;,\n &lt;a href=&quot;http://cosmetic.lady.163.com/trial&quot;&gt;免费试用&lt;/a&gt;,\n &lt;a href=&quot;http://mobile.163.com&quot;&gt;手机&lt;/a&gt;,\n &lt;a href=&quot;http://digi.163.com/&quot;&gt;数码&lt;/a&gt;,\n &lt;a href=&quot;http://mobile.163.com/mi&quot;&gt;移动&lt;/a&gt;,\n &lt;a href=&quot;http://digi.163.com/pc&quot;&gt;电脑&lt;/a&gt;,\n &lt;a href=&quot;http://product.mobile.163.com&quot;&gt;手机库&lt;/a&gt;,\n &lt;a href=&quot;http://hea.163.com/&quot;&gt;家电&lt;/a&gt;,\n &lt;a href=&quot;http://digi.163.com/smart&quot;&gt;智能硬件&lt;/a&gt;,\n &lt;a href=&quot;http://digi.163.com/dc&quot;&gt;相机&lt;/a&gt;,\n &lt;a href=&quot;http://v.mobile.163.com&quot;&gt;手机视频&lt;/a&gt;,\n &lt;a href=&quot;http://house.163.com&quot;&gt;房产&lt;/a&gt;,\n &lt;a href=&quot;http://home.163.com&quot;&gt;家居&lt;/a&gt;,\n &lt;a href=&quot;http://bj.house.163.com&quot;&gt;北京房产&lt;/a&gt;,\n &lt;a href=&quot;http://sh.house.163.com&quot;&gt;上海房产&lt;/a&gt;,\n &lt;a href=&quot;http://gz.house.163.com&quot;&gt;广州房产&lt;/a&gt;,\n &lt;a href=&quot;http://house.163.com/city&quot;&gt;全部分站&lt;/a&gt;,\n &lt;a href=&quot;http://xf.house.163.com&quot;&gt;楼盘库&lt;/a&gt;,\n &lt;a href=&quot;http://home.163.com/jiaju/&quot;&gt;家具&lt;/a&gt;,\n &lt;a href=&quot;http://home.163.com/weiyu/&quot;&gt;卫浴&lt;/a&gt;,\n &lt;a href=&quot;http://home.163.com/special/jiajuyigui&quot;&gt;衣柜&lt;/a&gt;,\n &lt;a href=&quot;http://travel.163.com&quot;&gt;旅游&lt;/a&gt;,\n &lt;a href=&quot;http://travel.163.com/outdoor&quot;&gt;户外&lt;/a&gt;,\n &lt;a href=&quot;http://guizhou.travel.163.com&quot;&gt;贵州&lt;/a&gt;,\n &lt;a href=&quot;http://travel.163.com/food&quot;&gt;美食&lt;/a&gt;,\n &lt;a href=&quot;http://jingdian.travel.163.com/domestic/1000066937&quot;&gt;四川&lt;/a&gt;,\n &lt;a href=&quot;http://jingdian.travel.163.com&quot;&gt;景点&lt;/a&gt;,\n &lt;a href=&quot;http://jingdian.travel.163.com/domestic/1000066944&quot;&gt;新疆&lt;/a&gt;,\n &lt;a href=&quot;http://travel.163.com/special/travellist/#f=endnav&quot;&gt;专题&lt;/a&gt;,\n &lt;a href=&quot;http://jingdian.travel.163.com/domestic/1000066926/#f=endnav&quot;&gt;西藏&lt;/a&gt;,\n &lt;a href=&quot;http://edu.163.com&quot;&gt;教育&lt;/a&gt;,\n &lt;a href=&quot;http://edu.163.com/yimin&quot;&gt;移民&lt;/a&gt;,\n &lt;a href=&quot;http://edu.163.com/kaoyan&quot;&gt;考研&lt;/a&gt;,\n &lt;a href=&quot;http://edu.163.com/liuxue&quot;&gt;留学&lt;/a&gt;,\n &lt;a href=&quot;http://edu.163.com/special/official&quot;&gt;公务员&lt;/a&gt;,\n &lt;a href=&quot;http://edu.163.com/en&quot;&gt;外语&lt;/a&gt;,\n &lt;a href=&quot;http://kids.163.com&quot;&gt;中小学&lt;/a&gt;,\n &lt;a href=&quot;http://edu.163.com/gaokao&quot;&gt;高考&lt;/a&gt;,\n &lt;a href=&quot;http://daxue.163.com&quot;&gt;校园&lt;/a&gt;,\n &lt;a href=&quot;http://sitemap.163.com/&quot;&gt;&lt;i&gt;&lt;/i&gt;查看网易地图&lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-login-title&quot; href=&quot;http://reg.163.com/&quot; id=&quot;js_N_nav_login_title&quot;&gt;登录&lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-register&quot; href=&quot;http://reg.email.163.com/mailregAll/reg0.jsp?from=163navi&amp;amp;regPage=163&quot;&gt;注册免费邮箱\n                 &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://reg.vip.163.com/register.m?from=topnav&quot;&gt;\n &lt;span style=&quot;width:190px;&quot;&gt;注册VIP邮箱（特权邮箱，付费）&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://mail.163.com/client/dl.html?from=mail46&quot;&gt;\n &lt;span style=&quot;width:190px;&quot;&gt;免费下载网易官方手机邮箱应用&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-entry-wide c-fl&quot; id=&quot;js_N_navLogout&quot; target=&quot;_self&quot;&gt;安全退出&lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-mobile-title ntes-nav-entry-bgblack&quot; href=&quot;http://www.163.com/newsapp/#f=163nav&quot;&gt;\n &lt;em class=&quot;ntes-nav-entry-mobile&quot;&gt;移动端&lt;/em&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://www.163.com/newsapp/#f=163nav&quot;&gt;\n &lt;img src=&quot;//static.ws.126.net/f2e/include/common_nav/images/topapp.jpg&quot;/&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-huatian ntes-nav-entry-bgblack&quot; href=&quot;https://open.163.com/&quot; id=&quot;js_love_url&quot;&gt;\n &lt;em class=&quot;ntes-nav-entry-huatian&quot;&gt;网易公开课&lt;/em&gt;\n &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n &lt;span class=&quot;ntes-nav-msg&quot;&gt;\n &lt;em class=&quot;ntes-nav-msg-num&quot;&gt;&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://vip.open.163.com&quot;&gt;\n &lt;span&gt;付费精品&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://open.163.com/ted/&quot;&gt;\n &lt;span&gt;TED&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://open.163.com/ocw/&quot;&gt;\n &lt;span&gt;国际名校公开课&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://open.163.com/cuvocw/&quot;&gt;\n &lt;span&gt;中国大学视频公开课&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://open.163.com/appreciation&quot;&gt;\n &lt;span&gt;赏课&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://open.163.com/khan/&quot;&gt;\n &lt;span&gt;可汗学院&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://open.163.com/special/appdownload_pc/&quot;&gt;\n &lt;span&gt;下载公开课&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-kaola ntes-nav-entry-bgblack&quot; href=&quot;http://da.kaola.com/redirect?t=5aaebece48792c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=d638f275b1755320e845734e53e897ee&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot; id=&quot;js_kaola_url&quot;&gt;\n &lt;em class=&quot;ntes-nav-entry-kaola&quot;&gt;网易考拉&lt;/em&gt;\n &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n &lt;span class=&quot;ntes-nav-msg ntes-nav-kaola-msg&quot; id=&quot;js_N_navKaolaMsg&quot;&gt;\n &lt;em class=&quot;ntes-nav-msg-num&quot;&gt;&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece48f92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=b3e224752b2cad85e9831e8c6cf7fbbd&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fbimaibangdan.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;1000元新人大礼包&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece49392c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=fd8e43f4a20a26fbe60f7e7de1f17efe&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;新人专享进口好货&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece49392c01&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=21bcd5b595fc235cfd11e3e1cff14177&amp;amp;target=https%3A%2F%2Factivity.kaola.com%2Factivity%2FflashSaleIndex%2Fshow.html%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;今日限时抢购&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece49792c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=ecc40777cb2d68a3d9fb078b232f081d&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfyrzolcpagerz.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;营养保健&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece49b92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=0cdd5a920c768340ffc12eccd659341d&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fnewpc.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;个人洗护&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4a392c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=ee49a3a793f22e648ac616f5dab061dd&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjpwmb9zcpagesl.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;美容彩妆&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4a792c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=6eb2598fd20963efc203a4e3fe88f4e2&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fmyxrq.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;母婴儿童&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4ab92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=3946ce460ba655c11afac69855dfc02b&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Ffoodnewcustomers.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;环球美食&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4af92c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=2eee7290051863737a434d44f3c0d46f&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fnewtalent.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;家居生活&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-lofter ntes-nav-entry-bgblack&quot; href=&quot;http://you.163.com/?from=web_fc_menhu_xinrukou_1&quot; id=&quot;js_lofter_icon_url&quot;&gt;\n &lt;em class=&quot;ntes-nav-entry-lofter&quot;&gt;网易严选&lt;/em&gt;\n &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n &lt;span class=&quot;ntes-nav-msg&quot; id=&quot;js_N_navLofterMsg&quot;&gt;\n &lt;em class=&quot;ntes-nav-msg-num&quot;&gt;&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/act/static/Fb2d1OZ714.html?from=web_fc_menhu_xinrukou_1&quot;&gt;\n &lt;span&gt;888元现金券&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/manufacturer/list?from=web_fc_menhu_xinrukou_3&quot;&gt;\n &lt;span&gt;品牌制造商爆款&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/item/recommend?from=web_fc_menhu_xinrukou_4&quot;&gt;\n &lt;span&gt;999+人气好评品&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/flashSale/index?from=web_fc_menhu_xinrukou_5&quot;&gt;\n &lt;span&gt;限时特惠&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/item/list?categoryId=1005000&amp;amp;from=web_fc_menhu_xinrukou_7&quot;&gt;\n &lt;span&gt;居家床品&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/item/list?categoryId=1005001&amp;amp;from=web_fc_menhu_xinrukou_8&quot;&gt;\n &lt;span&gt;精致餐厨&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/item/list?categoryId=1008000&amp;amp;from=web_fc_menhu_xinrukou_9&quot;&gt;\n &lt;span&gt;箱包鞋类&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/item/list?categoryId=1010000&amp;amp;from=web_fc_menhu_xinrukou_10&quot;&gt;\n &lt;span&gt;经典服饰&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com/item/list?categoryId=1005002&amp;amp;from=web_fc_menhu_xinrukou_11&quot;&gt;\n &lt;span&gt;健康美食&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-money ntes-nav-entry-bgblack&quot; href=&quot;http://pay.163.com/&quot;&gt;\n &lt;em class=&quot;ntes-nav-entry-money&quot;&gt;支付&lt;/em&gt;\n &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://pay.163.com/#f=topnav&quot;&gt;\n &lt;span&gt;一卡通充值&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://ecard.163.com/script/index#f=topnav&quot;&gt;\n &lt;span&gt;一卡通购买&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://k.163.com/?product=163&amp;amp;trackid=01&quot;&gt;\n &lt;span&gt;网易白金卡&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://epay.163.com/&quot;&gt;\n &lt;span&gt;我的网易支付&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://3c.163.com/?from=wangyimenhu16&quot;&gt;\n &lt;span&gt;网易智造&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://lq.163.com?from=neteasemoney&quot;&gt;\n &lt;span&gt;网易来钱-借现金&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-cart ntes-nav-entry-bgblack&quot; href=&quot;http://baoxian.163.com/car/?from=mhgwc&quot;&gt;\n &lt;em class=&quot;ntes-nav-entry-cart&quot;&gt;电商&lt;/em&gt;\n &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://you.163.com?from=web_in_wydaohang&quot;&gt;\n &lt;span&gt;严选&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://lq.163.com?from=neteasebuy&quot;&gt;\n &lt;span&gt;我要借钱&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://da.kaola.com/redirect?t=5aaebece4b392c00&amp;amp;p=c901ea7c&amp;amp;proId=1024&amp;amp;code=d15f8f9d72ccc507aeefda91b43c0cd2&amp;amp;target=https%3A%2F%2Fpages.kaola.com%2Fpages%2Factivity%2Fjfccri80pages1.shtml%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;\n &lt;span&gt;网易考拉&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;ntes-nav-select-title ntes-nav-select-title-mail ntes-nav-entry-bgblack&quot; id=&quot;js_mail_url&quot;&gt;\n &lt;em class=&quot;ntes-nav-entry-mail&quot;&gt;邮箱&lt;/em&gt;\n &lt;em class=&quot;ntes-nav-select-arr&quot;&gt;&lt;/em&gt;\n &lt;span class=&quot;ntes-nav-msg&quot; id=&quot;js_N_navMailMsg&quot;&gt;\n &lt;em class=&quot;ntes-nav-msg-num&quot; id=&quot;js_N_navMailMsgNum&quot;&gt;&lt;/em&gt;\n &lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://email.163.com/#f=topnav&quot;&gt;\n &lt;span&gt;免费邮箱&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://vipmail.163.com/#f=topnav&quot;&gt;\n &lt;span&gt;VIP邮箱&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://qiye.163.com/#f=topnav&quot;&gt;\n &lt;span&gt;企业邮箱&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://reg.email.163.com/mailregAll/reg0.jsp?from=ntes_nav&amp;amp;regPage=163&quot;&gt;\n &lt;span&gt;免费注册&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://reg.email.163.com/unireg/call.do?cmd=register.entrance&amp;amp;flow=mobile&amp;amp;from=ntes_nav&quot;&gt;\n &lt;span&gt;快速注册&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://mail.163.com/dashi/dlpro.html?from=mail46&quot;&gt;\n &lt;span&gt;客户端下载&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;first&quot; href=&quot;https://news.163.com/&quot;&gt;新闻&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/&quot;&gt;体育&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/nba/&quot;&gt;NBA&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/&quot;&gt;娱乐&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com/&quot;&gt;财经&lt;/a&gt;,\n &lt;a href=&quot;http://money.163.com/stock/&quot;&gt;股票&lt;/a&gt;,\n &lt;a href=&quot;http://auto.163.com/&quot; id=&quot;_link_auto&quot;&gt;汽车&lt;/a&gt;,\n &lt;a href=&quot;http://tech.163.com/&quot;&gt;科技&lt;/a&gt;,\n &lt;a href=&quot;http://mobile.163.com/&quot;&gt;手机&lt;/a&gt;,\n &lt;a href=&quot;http://digi.163.com/&quot;&gt;数码&lt;/a&gt;,\n &lt;a href=&quot;http://lady.163.com/&quot;&gt;女人&lt;/a&gt;,\n &lt;a href=&quot;http://v.163.com/&quot;&gt;直播&lt;/a&gt;,\n &lt;a href=&quot;http://v.163.com/special/video/#tuijian&quot;&gt;视频&lt;/a&gt;,\n &lt;a href=&quot;http://travel.163.com/&quot;&gt;旅游&lt;/a&gt;,\n &lt;a href=&quot;http://house.163.com/&quot; id=&quot;houseUrl&quot;&gt;房产&lt;/a&gt;,\n &lt;a href=&quot;http://home.163.com/&quot; id=&quot;homeUrl&quot;&gt;家居&lt;/a&gt;,\n &lt;a href=&quot;http://edu.163.com/&quot;&gt;教育&lt;/a&gt;,\n &lt;a href=&quot;http://book.163.com/&quot;&gt;读书&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/&quot; id=&quot;_link_game&quot;&gt;本地&lt;/a&gt;,\n &lt;a href=&quot;http://jiankang.163.com/&quot;&gt;健康&lt;/a&gt;,\n &lt;a href=&quot;http://rd.da.netease.com/redirect?t=5802fb18cf033c80&amp;amp;p=e17af55c&amp;amp;proId=1024&amp;amp;target=https%3A%2F%2Fwww.kaola.com%2F%3Ftag%3Dbe3d8d027a530881037ef01d304eb505&quot;&gt;海淘&lt;/a&gt;,\n &lt;a class=&quot;last&quot; href=&quot;http://art.163.com/&quot;&gt;艺术&lt;/a&gt;,\n &lt;a class=&quot;channel2019_logo channel2019_news_logo&quot; href=&quot;https://news.163.com/&quot;&gt;网易新闻有态度&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/weather/&quot;&gt;\n &lt;script ne-repeat=&quot;weather in weatherInfo&quot; type=&quot;text/template&quot;&gt;\n                 &lt;img class=&quot;ns-weather-icon&quot; ne-src=&quot;http://static.ws.126.net/f2e/news/index2015/img/weather/&lt;%=weather.icon%&gt;&quot;&gt;\n                 &lt;div class=&quot;ns-weather-text&quot;&gt;&lt;%=weather.weather%&gt;&lt;/div&gt;\n                 &lt;div class=&quot;ns-weather-info&quot;&gt;&lt;%=weather.temp2%&gt;°~&lt;%=weather.temp1%&gt;°&lt;/div&gt;\n                 &lt;div class=&quot;ns-weather-city&quot;&gt;&lt;%=weather.city%&gt;&lt;/div&gt;\n             &lt;/script&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://www.163.com/&quot;&gt;首页&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/rank/&quot;&gt;排行&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/photo/#Current&quot;&gt;图片&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/domestic/&quot;&gt;国内&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/world/&quot;&gt;国际&lt;/a&gt;,\n &lt;a href=&quot;http://data.163.com/special/datablog/&quot;&gt;数读&lt;/a&gt;,\n &lt;a href=&quot;http://war.163.com/&quot;&gt;军事&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/air/&quot;&gt;航空&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/uav/&quot;&gt;无人机&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/college&quot;&gt;新闻学院&lt;/a&gt;,\n &lt;a href=&quot;http://gov.163.com/&quot;&gt;政务&lt;/a&gt;,\n &lt;a href=&quot;http://gongyi.163.com/&quot;&gt;公益&lt;/a&gt;,\n &lt;a href=&quot;http://media.163.com/&quot;&gt;媒体&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/wangsansanhome/&quot;&gt;王三三&lt;/a&gt;,\n &lt;a class=&quot;tags tag_sd&quot; href=&quot;http://data.163.com/special/datablog/&quot;&gt;数读&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://data.163.com/19/0626/14/EIJQJG9L000181IU.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 中国哪里的地铁最拥挤？\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;中国哪里的地铁最拥挤？&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/30e8760df3044e29a18fac3514dd22b1.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://data.163.com/19/0625/11/EIH0CQEK00019GOE.html&quot;&gt;娶一个潮汕老婆到底是什么体验&lt;/a&gt;,\n &lt;a href=&quot;http://data.163.com/19/0621/17/EI7BLS3600019GOE.html&quot;&gt;不瞒你说，成都早餐好吃到爆&lt;/a&gt;,\n &lt;a class=&quot;tags tag_rj&quot; href=&quot;http://renjian.163.com/&quot;&gt;人间&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0628/14/EIP21K41000181RV.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 小白作者的变现之路\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;小白作者的变现之路&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/27f33fcbfcec4b42b6837807b7a0883f.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0627/16/EIML2HJO000181RV.html&quot;&gt;被毒虫男友拖下水的女大学生&lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0626/13/EIJPJMCH000181RV.html&quot;&gt;领导，求你让我加班吧&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0624/14/EIEOBNCB000181RK.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 当不了官发不了财的读书人\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;当不了官发不了财的读书人&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/24/b77e119ffeca477fa4bd2144b1fcb86c.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0620/16/EI4JRNO7000181RK.html&quot;&gt;四个博士，一地鸡毛&lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0618/12/EHV0QRVG000181RK.html&quot;&gt;医闹得逞后，伤害的到底是谁&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0627/11/EIM57O490001885B.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 据说99%的人在图书馆一定会碰上......\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;据说99%的人在图书馆一定会碰上......&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/27/06eb8f4a3d4647bf9360ff5e71f003b8.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0626/15/EIK0IJT40001885B.html&quot;&gt;我可能，得了种，前任病&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0617/09/EHS57H4L0001885B.html&quot;&gt;那些KO不掉我的,最终成了我的OK&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/11/EIOL94760001885B.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 直男幼稚行为大赏\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;直男幼稚行为大赏&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/0b3890cd2f4b473fa0127b5e33ae6ccf.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0624/12/EIEFGMVL0001885B.html&quot;&gt;打个赌，爱情友情你分不清楚&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0621/12/EI6NKDTU0001885B.html&quot;&gt;不会唱歌的人进 KTV 以后有多惨&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/19/EIPIQT4O000181BR.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 彩票一直都不中，我却忍不住要买\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;彩票一直都不中，我却忍不住要买&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/f44265c5b4ef4a11a99eedbde7c49833.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0627/17/EIMPGJAU000181BR.html&quot;&gt;原来&quot;神仙眷侣&quot;离婚,也是一地鸡毛&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0626/18/EIK95RV0000181BR.html&quot;&gt;我宣布，北大清华这对CP锁死了！&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://caozhi.news.163.com/19/0623/22/EID0CBIH000181TI.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 佟丽娅，这次你赢了\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;佟丽娅，这次你赢了&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/23/67d24242d479451ea705e26296187f78.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://caozhi.news.163.com/19/0623/15/EIC9LGSP000181TI.html&quot;&gt;千万别在深夜点开这神作&lt;/a&gt;,\n &lt;a href=&quot;http://caozhi.news.163.com/19/0618/19/EHVRID7G000181TI.html&quot;&gt;那个发“嗯”的人，已被踢出群聊&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/17/EIPCOKEA0001982T.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 王宝强母亲去世：来日方长是人生的错觉\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;王宝强母亲去世：来日方长是人生的错觉&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/ecd0de8b8dc0402da72d814bde76f06e.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0627/13/EIMC0EDH0001982T.html&quot;&gt;宋仲基宋慧乔离婚：再美的爱情也会过期&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0626/17/EIK6AD550001982T.html&quot;&gt;杨紫冰箱藏药，戳穿最怂瞬间&lt;/a&gt;,\n &lt;a class=&quot;tags tag_kanke&quot; href=&quot;http://renjian.163.com/special/renjian_kanke/&quot;&gt;看客&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0628/11/EIOMK185000199ET.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 我奶茶都戒了，日本人才知道它的好\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;我奶茶都戒了，日本人才知道它的好&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/f35eceb8d111496693e8f77a71a49cba.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0620/11/EI43PM8Q000199ET.html&quot;&gt;美国堕胎残酷物语&lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0613/11/EHI39FML000199ET.html&quot;&gt;跑腿小哥提供的十万种服务&lt;/a&gt;,\n &lt;a class=&quot;tags tag_stpwd&quot; href=&quot;http://jiankang.163.com/special/zhutierji/?type=3&quot;&gt;身体密码&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://jiankang.163.com/19/0625/11/EIH061CM0038804G.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 防晒，99%的人都做错了……\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;防晒，99%的人都做错了……&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/25/f260b6843fca4702bb5e4e316600f113.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://jiankang.163.com/19/0617/14/EHSN7PPV0038804G.html&quot;&gt;当代人减肥：迈不过25岁这道坎&lt;/a&gt;,\n &lt;a href=&quot;https://jiankang.163.com/19/0608/15/EH5J9IGA00388AD5.html&quot;&gt;多年后 无数中年人仍会被高考吓醒&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/16/EIP8R4SV000189FH.html&quot;&gt;央视独家：习近平会见日本首相&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/16/EIP8N52U0001875N.html&quot;&gt;外交部回应中美元首会面&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/14/EIOVIP2500018AP1.html&quot; target=&quot;_blank&quot;&gt;特朗普会见普京 笑称:不要干预美国大选哦&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/16/EIP7KOH70001875P.html&quot;&gt;住建部:加快垃圾分类处理设施建设&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/16/EIP8F9QQ0001875P.html&quot; target=&quot;_blank&quot;&gt;袁仁国被公诉:受贿数额特别巨大&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/13/EIOSPGLJ0001899O.html&quot;&gt;湖南耒阳人大常委会原主任携子主动投案&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/13/EIOUHOB70001875P.html&quot; target=&quot;_blank&quot;&gt;美的48小时内被骗10亿资金&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/19/EIPH3F1V0001875P.html&quot;&gt;垃圾分类逼疯上海人？别笑！马上轮到这46个城市&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/19/EIPILCJ70001875P.html&quot;&gt;女子酒后澡堂一打六被刑拘&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/18/EIPFI0KN0001875P.html&quot; target=&quot;_blank&quot;&gt;杀人案嫌犯向警察开枪拒捕 被当场击毙&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/16/EIP8RHM70001875P.html&quot;&gt;95后飙摩托车追高铁发抖音被刑拘&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/16/EIP7B7RP0001899O.html&quot; target=&quot;_blank&quot;&gt;母亲担心儿子粗心在其手背&quot;刺&quot;字&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/15/EIP4Q6BQ0001899O.html&quot;&gt;女子高铁上劝老人看好小孩被骂&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/16/EIP8QO5Q0001875P.html&quot; target=&quot;_blank&quot;&gt;南京杀妻案死者姑妈：侄女生前要强&lt;/a&gt;,\n &lt;a class=&quot;ad_hover_href&quot; href=&quot;http://gb.corp.163.com/gb/legal.html&quot;&gt;&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/16/0721/19/BSH7V8QF00014JB6.html&quot;&gt;辽宁遭暴雨侵袭致城市内涝 紧急转移12万人&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/16/0721/10/BSG7HOH20001124J.html&quot;&gt;民政部:北方暴雨75人死亡失踪&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/16/0721/12/BSGG5VK300011229.html&quot; target=&quot;_blank&quot;&gt;北京发生山洪灾害 铲车翻倒4人被困&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/16/0721/12/BSGHHVLK00011229.html&quot;&gt;搜救犬水灾救援22天殉职 主人:它太累了&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/16/0721/07/BSFUFFP800014AED.html&quot; target=&quot;_blank&quot;&gt;姐妹被洪水卷走警方拒立案&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/photoview/00AN0001/2189402.html?from=ph_ss#p=BSG716GE00AN0001&quot;&gt;\n &lt;img height=&quot;120&quot; src=&quot;http://img3.cache.netease.com/news/2016/7/21/20160721131401d35e2.jpg&quot; width=&quot;190&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;河南遇强降雨 9.8万人转移&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/photoview/00AP0001/2189377.html?from=ph_ss#p=BSFTQ99H00AP0001&quot;&gt;\n &lt;img height=&quot;120&quot; src=&quot;http://img3.cache.netease.com/news/2016/7/21/201607211319466e84e.jpg&quot; width=&quot;190&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;女主播直播暴雨 浑身湿透&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/photoview/00AP0001/2189389.html?from=ph_ss#p=BSG1S9AM00AP0001&quot;&gt;\n &lt;img height=&quot;120&quot; src=&quot;http://img5.cache.netease.com/news/2016/7/21/20160721132119ef59b.jpg&quot; width=&quot;190&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;湖北民众省道上趟水摸鱼&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://open.163.com/&quot;&gt;网易公开课&lt;/a&gt;,\n &lt;a class=&quot;focus_prev&quot; ne-role=&quot;slide-prev&quot;&gt;&lt;/a&gt;,\n &lt;a class=&quot;focus_next&quot; ne-role=&quot;slide-next&quot;&gt;&lt;/a&gt;,\n &lt;a class=&quot;nav_name no_cursor&quot; href=&quot;javascript:;&quot; ne-role=&quot;tab-nav&quot; target=&quot;_self&quot;&gt;\n                     要闻\n                     &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;nav_name no_cursor&quot; href=&quot;&#123;&#123;myState.channelbendiurl&#125;&#125;&quot; ne-class=&quot;&#123;&#123;myState.bendiTstyle ? 'bendistyle' : ''&#125;&#125;&quot; ne-role=&quot;tab-nav&quot; target=&quot;&#123;&#123;myState.channelbendiurl == 'javascript:;' ? '_self' : '_blank'&#125;&#125;&quot;&gt;\n &lt;strong ne-text=&quot;&#123;&#123;myState.bendiCity&#125;&#125;&quot;&gt;&lt;/strong&gt;\n &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;nav_name&quot; href=&quot;http://news.163.com/domestic/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                     国内\n                     &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;nav_name&quot; href=&quot;http://news.163.com/world/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                     国际\n                     &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;nav_name no_cursor&quot; href=&quot;javascript:;&quot; ne-role=&quot;tab-nav&quot; target=&quot;_self&quot;&gt;\n                     独家\n                     &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;nav_name&quot; href=&quot;http://war.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                     军事\n                     &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;nav_name&quot; href=&quot;http://money.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                     财经\n                     &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;nav_name&quot; href=&quot;http://tech.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;\n                     科技\n                     &lt;span class=&quot;nav_item_ink&quot;&gt;&lt;/span&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;more&quot; href=&quot;javascript:;&quot; ne-class=&quot;&#123;&#123;myState.morechannel ? 'more_hover': ''&#125;&#125;&quot; ne-mouseout=&quot;morehideChannel()&quot; ne-mouseover=&quot;moreShowChannel()&quot; ne-role=&quot;morebtn&quot; target=&quot;_self&quot;&gt;更多&lt;/a&gt;,\n &lt;a href=&quot;http://sports.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;体育&lt;/a&gt;,\n &lt;a href=&quot;http://ent.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;娱乐&lt;/a&gt;,\n &lt;a href=&quot;http://lady.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;时尚&lt;/a&gt;,\n &lt;a href=&quot;http://auto.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;汽车&lt;/a&gt;,\n &lt;a href=&quot;&#123;&#123;myState.channelhouseurl&#125;&#125;&quot; ne-role=&quot;tab-nav&quot;&gt;房产&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/air/&quot; ne-role=&quot;tab-nav&quot;&gt;航空&lt;/a&gt;,\n &lt;a href=&quot;http://jiankang.163.com/&quot; ne-role=&quot;tab-nav&quot;&gt;健康&lt;/a&gt;,\n &lt;a class=&quot;newsdata_prev&quot; href=&quot;#prev&quot; ne-class=&quot;&#123;&#123;myState.fixedTop ? 'fixed_data_show': ''&#125;&#125;&quot; ne-click=&quot;tabPrevFn($event);&quot; ne-hide=&quot;&#123;&#123;myState.iPad&#125;&#125;&quot;&gt;\n &lt;span&gt;&lt;/span&gt;\n &lt;div class=&quot;newsdata_btn_name&quot;&gt;&#123;&#123;myState.preBtnName&#125;&#125;&lt;/div&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;newsdata_next&quot; href=&quot;#next&quot; ne-class=&quot;&#123;&#123;myState.fixedTop ? 'fixed_data_show': ''&#125;&#125;&quot; ne-click=&quot;tabNextFn($event);&quot; ne-hide=&quot;&#123;&#123;myState.iPad&#125;&#125;&quot;&gt;\n &lt;span&gt;&lt;/span&gt;\n &lt;div class=&quot;newsdata_btn_name&quot;&gt;&#123;&#123;myState.nextBtnName&#125;&#125;&lt;/div&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;load_more_btn&quot; ne-click=&quot;clickLoadMore();&quot; ne-hide=&quot;&#123;&#123;myState.counter &gt;= navList[myState.ndNavIndex].totalPage || myState.counter == 0&#125;&#125;&quot; target=&quot;_self&quot;&gt;\n &lt;div class=&quot;post_addmore&quot; ne-visible=&quot;&#123;&#123;myState.counter &lt; navList[myState.ndNavIndex].totalPage &amp;&amp; !myState.loading&#125;&#125;&quot;&gt;\n &lt;i&gt;+&lt;/i&gt;\n &lt;span&gt;加载更多&lt;/span&gt;\n &lt;/div&gt;\n &lt;div class=&quot;post_adding&quot; ne-show=&quot;&#123;&#123;myState.loading&#125;&#125;&quot;&gt;\n &lt;i&gt;+&lt;/i&gt;\n &lt;span&gt;加载中...&lt;/span&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://g.163.com/a?CID=68685&amp;amp;Values=1366894002&amp;amp;Redirect=http://clk.gentags.net/clk/iv-10648/st-31/cr-2/oi-1303641/or-7535/adv-158/pcon-0/https%253A%252F%252Fent.163.com%252F19%252F0625%252F16%252FEIHG8HLF000398QL.html&quot;&gt;\n &lt;img height=&quot;400&quot; src=&quot;http://nimg.ws.126.net/?url=https://yt-adp.ws.126.net/channel21/037408_300400_axry_20190626.jpg&amp;amp;thumbnail=300x2147483647&amp;amp;quality=75&amp;amp;type=jpg&quot; width=&quot;300&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;三金西瓜霜独家冠名网易封面故事&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/photoview/00AP0001/2302561.html&quot;&gt;\n &lt;img height=&quot;400&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/e5b070c1f96349b0829da88b41105903.jpeg?imageView&amp;amp;thumbnail=300y400&quot; width=&quot;300&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;浒苔绿潮开始在山东沿海登陆&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/photoview/00AP0001/2302559.html&quot;&gt;\n &lt;img height=&quot;400&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/2792654fe66f4985879a8cc30a89a6cc.jpeg?imageView&amp;amp;thumbnail=300y400&quot; width=&quot;300&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;广西南宁抓获涉传人员286名&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/photoview/00AO0001/2302560.html&quot;&gt;\n &lt;img height=&quot;400&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/202e20527525474cac861ba7e56a2dde.jpeg?imageView&amp;amp;thumbnail=300y400&quot; width=&quot;300&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;民主党初选辩论次日:拜登现身&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a class=&quot;f_prev&quot; ne-role=&quot;slide-prev&quot;&gt;&amp;lt;&lt;/a&gt;,\n &lt;a class=&quot;f_next&quot; ne-role=&quot;slide-next&quot;&gt;&amp;gt;&lt;/a&gt;,\n &lt;a href=&quot;http://baoxian.163.com/activity/act1605/index.html?from=mhds1605&quot;&gt;免费领取iPhone6s&lt;/a&gt;,\n &lt;a href=&quot;http://mall.163.com/mobile/fill.jsp?from=wwwtext&quot;&gt;手机费快充超低折扣&lt;/a&gt;,\n &lt;a href=&quot;http://baoxian.163.com/car/activitylist.html?from=mhdstbl&quot;&gt;免费送现金红包！&lt;/a&gt;,\n &lt;a href=&quot;http://piao.163.com/movie/47080.html?from=newsword&quot;&gt;镜中多奇境依旧爱丽丝&lt;/a&gt;,\n &lt;a class=&quot;tags tag_sd&quot; href=&quot;http://data.163.com/special/datablog/&quot;&gt;数读&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://data.163.com/19/0626/14/EIJQJG9L000181IU.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 中国哪里的地铁最拥挤？\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;中国哪里的地铁最拥挤？&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/30e8760df3044e29a18fac3514dd22b1.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://data.163.com/19/0625/11/EIH0CQEK00019GOE.html&quot;&gt;娶一个潮汕老婆到底是什么体验&lt;/a&gt;,\n &lt;a href=&quot;http://data.163.com/19/0621/17/EI7BLS3600019GOE.html&quot;&gt;不瞒你说，成都早餐好吃到爆&lt;/a&gt;,\n &lt;a class=&quot;tags tag_rj&quot; href=&quot;http://renjian.163.com/&quot;&gt;人间&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0628/14/EIP21K41000181RV.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 小白作者的变现之路\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;小白作者的变现之路&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/27f33fcbfcec4b42b6837807b7a0883f.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0627/16/EIML2HJO000181RV.html&quot;&gt;被毒虫男友拖下水的女大学生&lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0626/13/EIJPJMCH000181RV.html&quot;&gt;领导，求你让我加班吧&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0624/14/EIEOBNCB000181RK.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 当不了官发不了财的读书人\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;当不了官发不了财的读书人&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/24/b77e119ffeca477fa4bd2144b1fcb86c.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0620/16/EI4JRNO7000181RK.html&quot;&gt;四个博士，一地鸡毛&lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0618/12/EHV0QRVG000181RK.html&quot;&gt;医闹得逞后，伤害的到底是谁&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0627/11/EIM57O490001885B.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 据说99%的人在图书馆一定会碰上......\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;据说99%的人在图书馆一定会碰上......&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/27/06eb8f4a3d4647bf9360ff5e71f003b8.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0626/15/EIK0IJT40001885B.html&quot;&gt;我可能，得了种，前任病&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0617/09/EHS57H4L0001885B.html&quot;&gt;那些KO不掉我的,最终成了我的OK&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/11/EIOL94760001885B.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 直男幼稚行为大赏\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;直男幼稚行为大赏&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/0b3890cd2f4b473fa0127b5e33ae6ccf.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0624/12/EIEFGMVL0001885B.html&quot;&gt;打个赌，爱情友情你分不清楚&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0621/12/EI6NKDTU0001885B.html&quot;&gt;不会唱歌的人进 KTV 以后有多惨&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/19/EIPIQT4O000181BR.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 彩票一直都不中，我却忍不住要买\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;彩票一直都不中，我却忍不住要买&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/f44265c5b4ef4a11a99eedbde7c49833.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0627/17/EIMPGJAU000181BR.html&quot;&gt;原来&quot;神仙眷侣&quot;离婚,也是一地鸡毛&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0626/18/EIK95RV0000181BR.html&quot;&gt;我宣布，北大清华这对CP锁死了！&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://caozhi.news.163.com/19/0623/22/EID0CBIH000181TI.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 佟丽娅，这次你赢了\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;佟丽娅，这次你赢了&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/23/67d24242d479451ea705e26296187f78.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://caozhi.news.163.com/19/0623/15/EIC9LGSP000181TI.html&quot;&gt;千万别在深夜点开这神作&lt;/a&gt;,\n &lt;a href=&quot;http://caozhi.news.163.com/19/0618/19/EHVRID7G000181TI.html&quot;&gt;那个发“嗯”的人，已被踢出群聊&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://news.163.com/19/0628/17/EIPCOKEA0001982T.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 王宝强母亲去世：来日方长是人生的错觉\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;王宝强母亲去世：来日方长是人生的错觉&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/ecd0de8b8dc0402da72d814bde76f06e.jpeg?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0627/13/EIMC0EDH0001982T.html&quot;&gt;宋仲基宋慧乔离婚：再美的爱情也会过期&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0626/17/EIK6AD550001982T.html&quot;&gt;杨紫冰箱藏药，戳穿最怂瞬间&lt;/a&gt;,\n &lt;a class=&quot;tags tag_kanke&quot; href=&quot;http://renjian.163.com/special/renjian_kanke/&quot;&gt;看客&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;http://renjian.163.com/19/0628/11/EIOMK185000199ET.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 我奶茶都戒了，日本人才知道它的好\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;我奶茶都戒了，日本人才知道它的好&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/28/f35eceb8d111496693e8f77a71a49cba.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0620/11/EI43PM8Q000199ET.html&quot;&gt;美国堕胎残酷物语&lt;/a&gt;,\n &lt;a href=&quot;http://renjian.163.com/19/0613/11/EHI39FML000199ET.html&quot;&gt;跑腿小哥提供的十万种服务&lt;/a&gt;,\n &lt;a class=&quot;tags tag_stpwd&quot; href=&quot;http://jiankang.163.com/special/zhutierji/?type=3&quot;&gt;身体密码&lt;/a&gt;,\n &lt;a class=&quot;detail&quot; href=&quot;https://jiankang.163.com/19/0625/11/EIH061CM0038804G.html&quot; ne-role=&quot;detail&quot;&gt;\n &lt;h3&gt;\n                                 防晒，99%的人都做错了……\n                             &lt;/h3&gt;\n &lt;div class=&quot;photo&quot;&gt;\n &lt;img alt=&quot;防晒，99%的人都做错了……&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/25/f260b6843fca4702bb5e4e316600f113.png?imageView&amp;amp;thumbnail=200y90&quot; width=&quot;200&quot;/&gt;\n &lt;/div&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://jiankang.163.com/19/0617/14/EHSN7PPV0038804G.html&quot;&gt;当代人减肥：迈不过25岁这道坎&lt;/a&gt;,\n &lt;a href=&quot;https://jiankang.163.com/19/0608/15/EH5J9IGA00388AD5.html&quot;&gt;多年后 无数中年人仍会被高考吓醒&lt;/a&gt;,\n &lt;a class=&quot;ad_hover_href&quot; href=&quot;javascript:;&quot; target=&quot;_self&quot;&gt;&lt;/a&gt;,\n &lt;a class=&quot;title&quot; href=&quot;https://open.163.com/&quot;&gt;网易公开课&lt;/a&gt;,\n &lt;a href=&quot;https://vip.open.163.com/courses/2698?p=xs_yt01&quot;&gt;\n &lt;img height=&quot;436&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/b2ef8c1d0fed49078cb104f94c9f253e.jpeg&quot; width=&quot;280&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;他凭什么甩开同龄人，做职场前5%？&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://vip.open.163.com/courses/2249?p=xs_yt02&quot;&gt;\n &lt;img height=&quot;436&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/27/ffa8db82492446c88efe2d540ed64d6a.jpeg&quot; width=&quot;280&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;一个人成熟的标志：与负面情绪和解&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://vip.open.163.com/courses/1078?p=xs_yt03&quot;&gt;\n &lt;img height=&quot;436&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/893a6ecab816408cb5971de6ec236dde.jpeg&quot; width=&quot;280&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;情商高的人，走到哪儿都大受欢迎&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;https://vip.open.163.com/courses/2019?p=xs_yt04&quot;&gt;\n &lt;img height=&quot;436&quot; src=&quot;https://cms-bucket.ws.126.net/2019/06/26/f48048d211e44c889e241e545b29a000.jpeg&quot; width=&quot;280&quot;/&gt;\n &lt;span class=&quot;bg&quot;&gt;&lt;/span&gt;\n &lt;h3&gt;每天5分钟，告别办公室综合症&lt;/h3&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/&quot;&gt;新闻专题&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/2019qglh/&quot;&gt;\n &lt;img alt=&quot;2019年全国两会&quot; height=&quot;90&quot; src=&quot;https://cms-bucket.ws.126.net/2019/03/07/c8134391d38245dc849b99fbf1ce33b0.png?imageView&amp;amp;thumbnail=300y90&quot; width=&quot;300&quot;/&gt;\n &lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/2019qglh/&quot;&gt;2019年全国两会&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/zghj70/&quot;&gt;海军成立70周年&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/chunyun_2019/&quot;&gt;2019年春运春节&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/chang_e4/&quot;&gt;嫦娥四号登月&lt;/a&gt;,\n &lt;a href=&quot;http://cms-bucket.ws.126.net/2019/06/26/080a0e9f8b014dd5b261f9e988f7f7f9.jpeg&quot;&gt;声明&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/special/00011269/gdmore.html&quot;&gt;高层动态&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0628/11/EIOL0214000189FH.html&quot;&gt;习近平会见联合国秘书长古特雷斯&lt;/a&gt;,\n &lt;a href=&quot;https://news.163.com/19/0620/14/EI4ESVV9000189FH.html&quot;&gt;习近平抵达平壤 开始对朝鲜进行国事访问&lt;/a&gt;,\n &lt;a class=&quot;ad_hover_href&quot; href=&quot;javascript:;&quot; target=&quot;_self&quot;&gt;&lt;/a&gt;,\n &lt;a href=&quot;http://war.163.com/&quot;&gt;军事&lt;/a&gt;,\n &lt;a href=&quot;http://news.163.com/air/&quot;&gt;航空&lt;/a&gt;,\n &lt;a href=&quot;http://war.163.com/photoview/4T8E0001/2301528.html&quot;&gt;\n &lt;/a&gt;]\n</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a class=\"link\"   href=\"https://www.julyedu.com/course/getDetail/66/\" >廖雪峰Python数据分析<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckn6zi5pz00019ohz7abvhwc5","category_id":"ckn6zi5q500049ohz7jma0dpq","_id":"ckn6zi5qf000c9ohz5t1idvmz"},{"post_id":"ckn6zi5qd00099ohzcqp0cj4j","category_id":"ckn6zi5q500049ohz7jma0dpq","_id":"ckn6zi5qi000f9ohzbbpx6ovm"},{"post_id":"ckn6zi5q300039ohz9ob7des9","category_id":"ckn6zi5q500049ohz7jma0dpq","_id":"ckn6zi5qk000i9ohzc6g0hfa8"},{"post_id":"ckn6zi5qg000d9ohzh5vm4fgj","category_id":"ckn6zi5q500049ohz7jma0dpq","_id":"ckn6zi5ql000k9ohzg0q164bp"},{"post_id":"ckn6zi5q700059ohz0xbtcbnm","category_id":"ckn6zi5q500049ohz7jma0dpq","_id":"ckn6zi5qn000n9ohza43r28tv"},{"post_id":"ckn6zi5qt000u9ohz2q8r2mfe","category_id":"ckn6zi5q500049ohz7jma0dpq","_id":"ckn6zi5qz00109ohz0xhoh70y"},{"post_id":"ckn6zi5q900069ohzhly7brdq","category_id":"ckn6zi5qi000g9ohz2043h6j2","_id":"ckn6zi5r200149ohzhpb40hbb"},{"post_id":"ckn6zi5q900069ohzhly7brdq","category_id":"ckn6zi5qw000y9ohzg34j4ci9","_id":"ckn6zi5r200159ohz0idr5fi1"},{"post_id":"ckn6zi5qa00079ohz09m83j4v","category_id":"ckn6zi5qi000g9ohz2043h6j2","_id":"ckn6zi5r400199ohz4uze9bhc"},{"post_id":"ckn6zi5qa00079ohz09m83j4v","category_id":"ckn6zi5r200169ohz7ixpe9hj","_id":"ckn6zi5r4001a9ohz8ce9047d"},{"post_id":"ckn6zi5qp000q9ohz0p081kc5","category_id":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5r5001c9ohza5dt71wc"},{"post_id":"ckn6zi5qp000q9ohz0p081kc5","category_id":"ckn6zi5r300189ohz7lkma8ry","_id":"ckn6zi5r5001e9ohz75mi1sar"},{"post_id":"ckn6zi5qe000a9ohz84u9dgd2","category_id":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5r6001g9ohzdv0k8g37"},{"post_id":"ckn6zi5qe000a9ohz84u9dgd2","category_id":"ckn6zi5r4001b9ohzh7yc8k5l","_id":"ckn6zi5r6001h9ohz3yondesd"},{"post_id":"ckn6zi5qq000r9ohzhpxa6wir","category_id":"ckn6zi5qi000g9ohz2043h6j2","_id":"ckn6zi5r6001i9ohzgppmf7su"},{"post_id":"ckn6zi5qq000r9ohzhpxa6wir","category_id":"ckn6zi5r200169ohz7ixpe9hj","_id":"ckn6zi5r7001k9ohzfk1j4m80"},{"post_id":"ckn6zi5qs000t9ohzenqs0sks","category_id":"ckn6zi5r6001f9ohzfip083a6","_id":"ckn6zi5r7001l9ohz2pj3homu"},{"post_id":"ckn6zi5qh000e9ohz0r936c2j","category_id":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5r8001o9ohz334savfq"},{"post_id":"ckn6zi5qh000e9ohz0r936c2j","category_id":"ckn6zi5r6001j9ohz4ecu3phi","_id":"ckn6zi5r8001p9ohz5fh80wem"},{"post_id":"ckn6zi5qu000w9ohzbdypev0g","category_id":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5r9001q9ohzao5pekrs"},{"post_id":"ckn6zi5qu000w9ohzbdypev0g","category_id":"ckn6zi5r300189ohz7lkma8ry","_id":"ckn6zi5r9001s9ohz9exm6cq2"},{"post_id":"ckn6zi5qi000h9ohz7p8l2w52","category_id":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5ra001u9ohz3iliadu6"},{"post_id":"ckn6zi5qi000h9ohz7p8l2w52","category_id":"ckn6zi5r8001n9ohz3jd3eb32","_id":"ckn6zi5ra001v9ohz2dl9a8cc"},{"post_id":"ckn6zi5qv000x9ohz41ncevfz","category_id":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5ra001w9ohz63g6h5z8"},{"post_id":"ckn6zi5qv000x9ohz41ncevfz","category_id":"ckn6zi5r300189ohz7lkma8ry","_id":"ckn6zi5rb001y9ohz2phc2fno"},{"post_id":"ckn6zi5qw000z9ohzgz6x32ar","category_id":"ckn6zi5qi000g9ohz2043h6j2","_id":"ckn6zi5rc00209ohzca89bm7w"},{"post_id":"ckn6zi5qw000z9ohzgz6x32ar","category_id":"ckn6zi5ra001t9ohzdrnv9tbc","_id":"ckn6zi5rc00219ohz2ow18h3r"},{"post_id":"ckn6zi5qz00119ohzgua2e2lj","category_id":"ckn6zi5qi000g9ohz2043h6j2","_id":"ckn6zi5rc00229ohz9twr4ezu"},{"post_id":"ckn6zi5qz00119ohzgua2e2lj","category_id":"ckn6zi5ra001t9ohzdrnv9tbc","_id":"ckn6zi5rd00249ohz9k0tba9d"},{"post_id":"ckn6zi5ql000j9ohzaent89vr","category_id":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5rd00259ohz12gk1awe"},{"post_id":"ckn6zi5ql000j9ohzaent89vr","category_id":"ckn6zi5rb001z9ohz5fm6c80l","_id":"ckn6zi5re00279ohzhajjaxo3"},{"post_id":"ckn6zi5qm000m9ohzd9tfe21o","category_id":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5re00289ohzg9roh4in"},{"post_id":"ckn6zi5qm000m9ohzd9tfe21o","category_id":"ckn6zi5rc00239ohz72wbadxb","_id":"ckn6zi5re00299ohzhg2u78c0"},{"post_id":"ckn6zi5qn000o9ohzg4kddxuh","category_id":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5re002a9ohz59xle7gd"},{"post_id":"ckn6zi5qn000o9ohzg4kddxuh","category_id":"ckn6zi5r6001j9ohz4ecu3phi","_id":"ckn6zi5rf002b9ohzgjrr6eox"},{"post_id":"ckn6zi5rh002c9ohz2y218pgg","category_id":"ckn6zi5qi000g9ohz2043h6j2","_id":"ckn6zi5rl002g9ohzhref6a3f"},{"post_id":"ckn6zi5rh002c9ohz2y218pgg","category_id":"ckn6zi5ra001t9ohzdrnv9tbc","_id":"ckn6zi5rn002j9ohz4h755wkc"},{"post_id":"ckn6zi5rl002f9ohz5m58b4du","category_id":"ckn6zi5q500049ohz7jma0dpq","_id":"ckn6zi5rq002m9ohzbqiicul7"},{"post_id":"ckn6zi5rm002h9ohz074a5yri","category_id":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5rq002n9ohz4045hi1n"},{"post_id":"ckn6zi5rm002h9ohz074a5yri","category_id":"ckn6zi5r6001j9ohz4ecu3phi","_id":"ckn6zi5rr002o9ohza44l511y"},{"post_id":"ckn6zi5rn002k9ohz0gen0f8d","category_id":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5rr002p9ohzd1lp4gl4"},{"post_id":"ckn6zi5rn002k9ohz0gen0f8d","category_id":"ckn6zi5r6001j9ohz4ecu3phi","_id":"ckn6zi5rr002q9ohza1c6fbox"},{"post_id":"ckn6zi5rk002e9ohzbk4yfkxo","category_id":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5rr002r9ohzgkphfljx"},{"post_id":"ckn6zi5rk002e9ohzbk4yfkxo","category_id":"ckn6zi5rn002i9ohz8j02fd2r","_id":"ckn6zi5rr002s9ohzg1px1511"},{"post_id":"ckn6zi5rp002l9ohzaj4b1c6h","category_id":"ckn6zi5q500049ohz7jma0dpq","_id":"ckn6zi5rr002t9ohzeuksczv1"},{"post_id":"ckn6zi5rt002u9ohz89y8a0f7","category_id":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5rv002x9ohz875oai05"},{"post_id":"ckn6zi5rt002u9ohz89y8a0f7","category_id":"ckn6zi5r6001j9ohz4ecu3phi","_id":"ckn6zi5rw002y9ohzcd73ei1n"},{"post_id":"ckn6zi5ru002v9ohz4uvzecqv","category_id":"ckn6zi5qi000g9ohz2043h6j2","_id":"ckn6zi5rw002z9ohz3csa1wwb"},{"post_id":"ckn6zi5ru002v9ohz4uvzecqv","category_id":"ckn6zi5rv002w9ohzfz0s7vt6","_id":"ckn6zi5rw00309ohzecbt05b2"},{"post_id":"ckn6zi5rx00319ohz0ya99ckp","category_id":"ckn6zi5qo000p9ohzcb9sbxj7","_id":"ckn6zi5ry00329ohz6xuh19px"},{"post_id":"ckn6zi5rx00319ohz0ya99ckp","category_id":"ckn6zi5r6001j9ohz4ecu3phi","_id":"ckn6zi5ry00339ohz89we6pre"},{"post_id":"ckn6zi5s000349ohz5f3ac2us","category_id":"ckn6zi5q500049ohz7jma0dpq","_id":"ckn6zi5s000359ohz2t3d8xp7"}],"PostTag":[],"Tag":[]}}