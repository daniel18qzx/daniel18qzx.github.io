{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/js/affix.js","path":"js/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/exturl.js","path":"js/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/js.cookie.js","path":"js/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/post-details.js","path":"js/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/scrollspy.js","path":"js/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/scroll-cookie.js","path":"js/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"df79c3db4d294f27806202602b1d3851d2a12871","modified":1561300950224},{"_id":"themes/next/.all-contributorsrc","hash":"d139a3b623b2e40bbff5c96ad44adf7dbdbc5be1","modified":1561044050258},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1561044050259},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1561044050259},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1561044050259},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1561044050259},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1561044050264},{"_id":"themes/next/.gitignore","hash":"b80cec1d5e6a73d1cec382aad8046d1352a1e963","modified":1561044050263},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1561044050263},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1561044050264},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1561044050267},{"_id":"themes/next/bower.json","hash":"dbabc4b5b186070d425777562587de19848b1d56","modified":1561044050267},{"_id":"themes/next/_config.yml","hash":"3fd43ba16682b189bdd6d84bb602eea41930b85c","modified":1561218820221},{"_id":"themes/next/README.md","hash":"7958c3f70b2133b479ddaf525cc4b6d87a37e04a","modified":1561044050265},{"_id":"themes/next/gulpfile.coffee","hash":"23bd9587807edc4dbecb5c5a29ab96ade24458b5","modified":1561044050273},{"_id":"themes/next/package.json","hash":"d1fc59c32d27178d53f9d2c479443ed682e5bd91","modified":1561044050302},{"_id":"source/_posts/.DS_Store","hash":"fe4eb9671ed88449215ba6846cde6db298de8a29","modified":1561303047962},{"_id":"source/_posts/2019-06-22_两股票历史价格比较.md","hash":"435d0421b4848d42c64ddb93cd976d93dc8286dc","modified":1561300480212},{"_id":"source/_posts/2019-06-23_Python基本语法.md","hash":"1f09f551fbbb4e3110cd5703e64604a8d242d352","modified":1561303015966},{"_id":"source/archives/index.md","hash":"4902d455a0827213771602038c227370c9af1600","modified":1561045697730},{"_id":"source/categories/index.md","hash":"602c1caee51c47a02e72ed2c001d1f17adbed69f","modified":1561218583972},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"7ce6cdc8adcbfda68fcbcc54c8b9fd3434a37993","modified":1561044050259},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"c149f003d03501565e7688915cd8f2e99fbf8f42","modified":1561044050259},{"_id":"themes/next/.github/auto_assign.yml","hash":"cb68a1dca1c4623448c2ca899614a9f21df1b036","modified":1561044050261},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"3239625bb2573e61f7bcce27a74882a9ff7021e9","modified":1561044050261},{"_id":"themes/next/.github/eslint-disable-bot.yml","hash":"16541fb7b80f5ab90135db96285badb63c4d7d3e","modified":1561044050261},{"_id":"themes/next/.github/lock.yml","hash":"585d2c471047be320aa62f2b74dad797bf09c530","modified":1561044050262},{"_id":"themes/next/.github/config.yml","hash":"8a5cbf5aa9529390fe0a782758aca9c3a02f9dcf","modified":1561044050261},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1561044050262},{"_id":"themes/next/.github/release-drafter.yml","hash":"c9fdbbdf712327a8ae1ed5972973a75802e245bc","modified":1561044050262},{"_id":"themes/next/.github/stale.yml","hash":"41bf97ee86b8940a0b2e754499ec77fd2b44b717","modified":1561044050262},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1561044050263},{"_id":"themes/next/.github/topissuebot.yml","hash":"10665bf2b5aba351725715c71e94ad183a0e8f18","modified":1561044050263},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1561044050247},{"_id":"themes/next/.github/weekly-digest.yml","hash":"404e4ccb7fcd6587bc9b0247a7a7ff256d21f2cb","modified":1561044050263},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1561044050260},{"_id":"themes/next/.git/config","hash":"e2ca9fa6f115d4406d24bf0df53fc26ce13e0c9b","modified":1561044050249},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1561044036232},{"_id":"themes/next/.git/packed-refs","hash":"96b920b123d407f3d4dc389361c452d95fd98756","modified":1561044050243},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1561044050268},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1561044050268},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"0d2f22ea09dd1ef63c66164e048d8239d2ccb2b8","modified":1561044050268},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1561044050269},{"_id":"themes/next/.git/index","hash":"9f2c443398d289fe5509d7c47cc366c80eec1046","modified":1561127833797},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1561044050269},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1561044050269},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"212a36d57495990b5f56e46ca8dce1d76c199660","modified":1561044050269},{"_id":"themes/next/docs/MATH.md","hash":"026d2cff73c22a30ea39c50783557ff4913aceac","modified":1561044050270},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1561044050270},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1561044050274},{"_id":"themes/next/languages/de.yml","hash":"9e524b2bdfb848504b93a51c5650e76bba5fa9e0","modified":1561044050274},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1561044050274},{"_id":"themes/next/languages/fa.yml","hash":"cd41db832af5e399590b70a5227cfe0b0e98e101","modified":1561044050274},{"_id":"themes/next/languages/id.yml","hash":"1c4868837f5109f1df863b04fe627352c31d404b","modified":1561044050275},{"_id":"themes/next/languages/es.yml","hash":"1752429687861b5cedd063c6ebe5dacefbe7e5a7","modified":1561044050274},{"_id":"themes/next/languages/fr.yml","hash":"7005c2b42c2c6e82bd7a1be5cc2f443b5fc79105","modified":1561044050275},{"_id":"themes/next/languages/it.yml","hash":"b30ff77ad8044e3b021a3b09187cd377dc789fd2","modified":1561044050275},{"_id":"themes/next/languages/ja.yml","hash":"1dc35e436da6214cdb3c2ff44bc4a06d0be5b9a0","modified":1561044050275},{"_id":"themes/next/languages/nl.yml","hash":"1c44b3cb2f817808607f3bf6ef47f58ce7599995","modified":1561044050276},{"_id":"themes/next/languages/pt-BR.yml","hash":"08b913a5cf4cc160083069cb4dfb2d66eecd1218","modified":1561044050276},{"_id":"themes/next/languages/ko.yml","hash":"20bfaa7600d35235996c18e5c13dcef89c119626","modified":1561044050275},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1561044050276},{"_id":"themes/next/languages/pt.yml","hash":"8ddac820e2c17b484b56c0da8881e142b10e221b","modified":1561044050276},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1561044050276},{"_id":"themes/next/languages/uk.yml","hash":"1eb59e581568da9a81d6e20541b4ada5fc1c55c0","modified":1561044050277},{"_id":"themes/next/languages/vi.yml","hash":"ba7aff8f88e03f69a0acf7f1b90ee03e077ee88e","modified":1561044050277},{"_id":"themes/next/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1561044050277},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1561044050278},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1561044050278},{"_id":"themes/next/layout/_layout.swig","hash":"74701fcf2303d59400587436ab4c244e04df7ad9","modified":1561044050279},{"_id":"themes/next/layout/archive.swig","hash":"7e8f3a41a68e912f2b2aaba905d314306ccaf794","modified":1561044050300},{"_id":"themes/next/layout/category.swig","hash":"dda0e6b2139decaf5e865d22ec9d45fdb615a703","modified":1561044050300},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1561044050300},{"_id":"themes/next/layout/page.swig","hash":"29c64c7031aaf276d3d11cdf2e95025996fd6eed","modified":1561044050301},{"_id":"themes/next/layout/post.swig","hash":"f74929fd792541916eb25c2addfb35431be071ba","modified":1561044050301},{"_id":"themes/next/layout/schedule.swig","hash":"3268dd3d90d8b0e142cfa1a2ebb23355baeda148","modified":1561044050301},{"_id":"themes/next/layout/tag.swig","hash":"a6be69a90924c9d2f4d90fb4867234859bd2c2e9","modified":1561044050301},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1561044050303},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1561044050304},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1561044050353},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1561044050353},{"_id":"themes/next/source/.DS_Store","hash":"495dc0d217dbc3e7cb0c015a4aa9af3e7011d37f","modified":1561045367592},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1561044050353},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1561044050330},{"_id":"source/_posts/.ipynb_checkpoints/2019-06-23_Python基本语法-checkpoint.ipynb","hash":"250db2d4db4de1145dd28f2b7fd9cbfae7ceab7e","modified":1561303010415},{"_id":"source/_posts/2019-06-22_两股票历史价格比较/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1561300320972},{"_id":"source/_posts/2019-06-23_Python基本语法/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1561300748452},{"_id":"source/_posts/2019-06-23_Python基本语法/2019-06-23_Python基本语法.ipynb","hash":"250db2d4db4de1145dd28f2b7fd9cbfae7ceab7e","modified":1561303010415},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c37a60580c901c79ccb22564b228a46e06207445","modified":1561044050260},{"_id":"themes/next/.github/ISSUE_TEMPLATE/custom-issue-template.md","hash":"57e1e06e845193e80c7df4a4454af28352526f7a","modified":1561044050260},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"07c423cce4157b8e2dbf60907ccbf3f18c4cf98a","modified":1561044050260},{"_id":"themes/next/.github/ISSUE_TEMPLATE/non-english.md","hash":"0b0727ff4d5180ae67f930fb4f8e9488e33eda9f","modified":1561044050260},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"caa624092175d44e3d3a8c6ca23922718da2354c","modified":1561044050271},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"b218e30df4126b6adc87684775ac4c86ea7f7958","modified":1561044050272},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1561044050272},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"650fcb9135b6f09d48e866c19e0dbccd831367f1","modified":1561044050272},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1561044050272},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"115ffbde2b3ce01ef1f8c2b3833e6f6794650132","modified":1561044050272},{"_id":"themes/next/docs/zh-CN/README.md","hash":"cdd7a8bdcf4a83ff4c74ee6c95c6bcc0b8c1831c","modified":1561044050273},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"83feca62190abcca0332915ffe0eefe582573085","modified":1561044050272},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1561044050273},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1561044050270},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1561044050271},{"_id":"themes/next/docs/ru/README.md","hash":"4d7ef717d0b57288e606996ee56c20ffd59d5a99","modified":1561044050271},{"_id":"themes/next/.git/info/exclude","hash":"bb5a85730dcf100facee799c05cc4f6affec0745","modified":1561044036231},{"_id":"themes/next/.git/logs/HEAD","hash":"2d9297b26c7b7035cd995470ba154da6d6ab6827","modified":1561044050249},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1561044036237},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1561044036236},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1561044036239},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1561044036240},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1561044036237},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1561044036240},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1561044036236},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1561044036239},{"_id":"themes/next/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1561044036241},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1561044050271},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1561044050278},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1561044050278},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1561044050279},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"50be1762f60222379a8bef5e42ab1a0f3872b7ff","modified":1561044050287},{"_id":"themes/next/layout/_scripts/exturl.swig","hash":"61ae10d41f67ece004a025077fdb28724af05090","modified":1561044050288},{"_id":"themes/next/layout/_scripts/next-boot.swig","hash":"012e3ece672cc3b13d5e032139f328d3426d7d65","modified":1561044050288},{"_id":"themes/next/layout/_scripts/scroll-cookie.swig","hash":"ccd13d73429ef91ef5e8b7d9fa43c8188facdf41","modified":1561044050290},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9cd491b8ff2dc9d6976cd9e89c4e56678e3bcefa","modified":1561044050290},{"_id":"themes/next/scripts/filters/exturl.js","hash":"79ad823ca803cb00e0bfc648aa6c9d59711e0519","modified":1561044050302},{"_id":"themes/next/scripts/helpers/engine.js","hash":"60eb1554456d9d0e5afc4a2d16f1580a0aa02da8","modified":1561044050303},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"799a042bbf497a4c7a2981aa2014ff28fa1bb382","modified":1561044050303},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"edaff4766e0c05fd5c889d9dd32884d376bef9d9","modified":1561044050288},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5352f96f4544c1520babf1cec7b44ddf2f8057b3","modified":1561044050281},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"89b0a0e64637bf5b0cfea0a23642df3d95eedfa4","modified":1561044050280},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"480d93619479dcfcbec6906803bb38b2dfbeae53","modified":1561044050280},{"_id":"themes/next/layout/_macro/post.swig","hash":"ca89a2a95c149f759274ab68dbc1e9581baadf4a","modified":1561044050280},{"_id":"themes/next/layout/_partials/github-banner.swig","hash":"6357537ac0bb114aed4d61bafb39e6690a413697","modified":1561044050281},{"_id":"themes/next/layout/_partials/footer.swig","hash":"589f545333e21a8c7823bce89ab45cf1eb7db6e2","modified":1561044050281},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1561044050284},{"_id":"themes/next/layout/_partials/post-edit.swig","hash":"06dac109504812b63766a80ede9ddacbd42d227d","modified":1561044050284},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"4ccf2abbfd070874265b0436a3eff21f7c998dfb","modified":1561044050295},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"10b61a8bac671e375916a4d234c120117098a78f","modified":1561044050295},{"_id":"themes/next/layout/_third-party/chatra.swig","hash":"eefb68b69b4b0ed558ee0324ccd711990059b20d","modified":1561044050295},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"a7126355227236f9433615edfd89e86fd51ed676","modified":1561044050297},{"_id":"themes/next/layout/_third-party/mermaid.swig","hash":"d6e6ddda836bd9e2e8d9767a910c7d3280080e81","modified":1561044050298},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"2c4a66be4677d3e4dec3f169ac8a769098dad1fe","modified":1561044050298},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"c28f9dc96ab735daeb7f599f86470aa5a83c03cf","modified":1561044050298},{"_id":"themes/next/layout/_third-party/pdf.swig","hash":"810a9b2a6059f46c4a2ddb178f1eaa4c5e23750b","modified":1561044050298},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"7757bd285732e857996b99af9d917953589fac5e","modified":1561044050298},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"cbe40cb67dad15ade967b0f396c1a95b6871f76a","modified":1561044050299},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"2398e5cd0cb466953b6e7a42c2b2caddebf3c348","modified":1561044050299},{"_id":"themes/next/layout/_third-party/tidio.swig","hash":"912368c41de675f458b267a49a99ae3e7e420ebb","modified":1561044050300},{"_id":"themes/next/scripts/tags/button.js","hash":"f3b4f7ae7e58072bbf410d950a99a0b53cbc866d","modified":1561044050304},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1561044050304},{"_id":"themes/next/scripts/tags/exturl.js","hash":"d605918cf819887e9555212dbe12da97fd887a0b","modified":1561044050304},{"_id":"themes/next/scripts/tags/full-image.js","hash":"fcb41c1c81560ed49dc4024654388a28ee7d32b0","modified":1561044050304},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"598220fa92ff3540dcab74f633ba41523daa8364","modified":1561044050304},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1561044050305},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1561044050305},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1561044050305},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1561044050305},{"_id":"themes/next/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1561044050305},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1561044050305},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1561044050306},{"_id":"themes/next/source/css/main.styl","hash":"e010ec8ac73268a0f137204c89e0080ab8d59b3d","modified":1561044050330},{"_id":"source/_posts/2019-06-22_两股票历史价格比较/2019-06-22_两股票历史价格比较.ipynb","hash":"b1dba2c5c47bacd397b3f4be89c298f2f4c3732f","modified":1561301051619},{"_id":"themes/next/source/js/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1561044050335},{"_id":"themes/next/source/js/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1561044050335},{"_id":"themes/next/source/js/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1561044050335},{"_id":"source/_posts/.ipynb_checkpoints/两股票历史价格比较-checkpoint.ipynb","hash":"b1dba2c5c47bacd397b3f4be89c298f2f4c3732f","modified":1561296812952},{"_id":"themes/next/source/js/next-boot.js","hash":"e0615efab5f81ba0fd39c0527eac31144deac7ce","modified":1561044050336},{"_id":"themes/next/source/js/motion.js","hash":"a16bc0b701646bf6653484675f4d5dc0f892d184","modified":1561044050336},{"_id":"themes/next/source/js/js.cookie.js","hash":"e0afce539f1fb81d59e3c6f0a68d736e2fb45d93","modified":1561044050335},{"_id":"source/_posts/2019-06-22_两股票历史价格比较/output_10_1.png","hash":"e634abcd2aab890c42e07de71d19df7eaad0c682","modified":1561296826000},{"_id":"themes/next/source/js/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1561044050336},{"_id":"themes/next/source/js/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1561044050338},{"_id":"themes/next/source/js/utils.js","hash":"81913c5f75d0949443833cf4269ad63bd7f9be6f","modified":1561044050339},{"_id":"themes/next/source/js/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1561044050338},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1561044050330},{"_id":"themes/next/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1561045164084},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1561044050330},{"_id":"themes/next/source/images/avatar.gif","hash":"239a38e20fea08d0fe07dc128b77a3e6bf584247","modified":1561036478101},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1561044050331},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1561044050331},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1561044050332},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1561044050332},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1561044050332},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1561044050332},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1561044050332},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"4ca20cdec1acef9070f232a35dac77ee204dba54","modified":1561044889007},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"4ca20cdec1acef9070f232a35dac77ee204dba54","modified":1561044889007},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1561044050333},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1561044050333},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1561044050333},{"_id":"themes/next/source/images/searchicon.png","hash":"025d64ba0160a3a2257dd2b3032b5f7c9dd9b82b","modified":1561044050334},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1561044050334},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1561044050334},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1561044050323},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1561044050323},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1561044050323},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1561044050329},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1561044050330},{"_id":"themes/next/.git/refs/heads/master","hash":"3abb29b573538473d2534d1cd4033cbd80315f73","modified":1561044050248},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"5b05f165547391bf231e52f56f3d925efc09bc44","modified":1561044050288},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1561044050289},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"e42604fbb17648484e5f12afe230d826de089388","modified":1561044050289},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1561044050279},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"fb33f499022cd02722f834fcef1a0e193362cfde","modified":1561044050279},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"fc6bafc8c633afadc538c5afa5620ea2a1cdcb84","modified":1561044050282},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1561044050283},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"71af31fea5913fd30c233e555ef13cf2c9768f72","modified":1561044050283},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1561044050289},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"5adc60100e129c1d0307bdcaa0c7b8e8375a6ea4","modified":1561044050283},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"f537846ace6a1afdacf122848dd01a32ceb66006","modified":1561044050282},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"648bf7eda66629592cb915c4004534b3913cbc22","modified":1561044050282},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"0fa4fadb39467b01cede49f21b22e86b1a2da805","modified":1561044050283},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0097e45e7b671f8006b8b2d3c4f95cacc76a983c","modified":1561044050289},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"eea95b785c9c36d28e1839619793f66e89773bee","modified":1561044050284},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"2940df694fff28e8bf71b6546b4162f1e38227db","modified":1561044050284},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"3615db591dd910fb9fa96542734c7ec0ef05019c","modified":1561044050284},{"_id":"themes/next/layout/_partials/post/wechat-subscriber.swig","hash":"ef11b5be5bfb2f0affe82cf521c002b37fef9819","modified":1561044050285},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"7d1693416a5dc098f4723a53da2e2d1fc2d6e075","modified":1561044050285},{"_id":"themes/next/layout/_partials/post/reward.swig","hash":"d44f025eb93c99ddf90202d8293ccf80689a00c7","modified":1561044050285},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1561044050286},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1561044050285},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"6f181cc188ecbe5e607fd989756e470d4cb9765d","modified":1561044050287},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a5587bd1f60d35e58618576cec45e662aa44ea1f","modified":1561044050286},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"a5723950c343d220270bfd27bd30050eda6c3fb3","modified":1561044050290},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"798d67e4a736613ab899eabe6529091bbcda7850","modified":1561044050290},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"15b542f5b06b7532234af367340b9ed9fcebb0ac","modified":1561044050287},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"591b2ccd9713ccb922b9fcf5e278b6de9c5ec30b","modified":1561044050290},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"08cd47ef8572121b7811342d3c9a84a338a18191","modified":1561044050291},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"3d01fa6edc0ad73f81813613f2e8a610777f1852","modified":1561044050291},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"8eadb929c9e50e58502ccad2dc2657746f8c592a","modified":1561044050291},{"_id":"themes/next/layout/_partials/share/likely.swig","hash":"b45e934d24d76ec6b6a790e92bdb3d56186b0e2a","modified":1561044050287},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"02bb5748e8540b024e7f4008a9e640890b45280f","modified":1561044050282},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"9fa1ca7059243197d8fbbd35108c36629a254570","modified":1561044050293},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"4a966b7ffe2d80ff1b3dd0fd14b355766dc5c70f","modified":1561044050293},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"438c6f5e6665d72f4ea7ee206011d669246f6102","modified":1561044050293},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"92e04a2b9e0c3df594bc22235d1894e5ad458dfc","modified":1561044050294},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"f240a50cd9b627620d9a374a29cf95f0c5e99d7c","modified":1561044050294},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"147f1b28313e2dca56e8530456f5fd1711e847e4","modified":1561044050293},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"0dd5b315d1da55dbfc10f51a1f8952f72eba2720","modified":1561044050294},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1561044050292},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"1a00b1b78c429721d6477c2d8f6f68f005285cc8","modified":1561044050295},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"3533167c4295637b91d90f3bae7c651cd128bb6e","modified":1561044050295},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"e8f91c571ceb4b80aafebc4d36b89fb41b1ae040","modified":1561044050296},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"5856d5f701e51dfae1fd6fb486cefde67effd555","modified":1561044050296},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"074a995cd630f56fc4a3135173515c86f2cb34b6","modified":1561044050296},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"2cbaae65a020bbb0e9265364488aff8bf84fa48d","modified":1561044050296},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"388efc86af7f19c05ad0e26720cd24ee012d20b9","modified":1561044050296},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4a908b613518878b9b69576c5dba4a5185f552ab","modified":1561044050297},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a7e304b05a44279d3e4f611908d7faef9dc14d7c","modified":1561044050297},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"0a13dfd2de52a96901039098c6fc7b515edfc50b","modified":1561044050299},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"ea94aa85034c6d1b6bb865aecea55c73f8a14501","modified":1561044050299},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b3eaab6a269aa3fcbafe24fd06f0c9206dc12716","modified":1561044050300},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1561044050322},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1561044050322},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2e8fb29aa92325df39054b5450757858c6cebc41","modified":1561044050323},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"2036bbb73afd43251982ce824f06c6e88d35a2ef","modified":1561044050323},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"a8aa41625b94cf17a7f473ed10dcbe683b1db705","modified":1561044050329},{"_id":"source/_posts/2019-06-22_两股票历史价格比较/.ipynb_checkpoints/2019-06-22_两股票历史价格比较-checkpoint.ipynb","hash":"b1dba2c5c47bacd397b3f4be89c298f2f4c3732f","modified":1561301051619},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"fc15e277d1504532a09b7b1bd31f900ad95ec4b8","modified":1561044050329},{"_id":"themes/next/source/css/_variables/base.styl","hash":"640f25a63770af5566ccc9cec79c40a4f1c0b29e","modified":1561044050330},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"c2cb2f384bc30d31cdccf9794a729c03e687b45c","modified":1561044050297},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"601774d8672577aefbcefac82c94b01f0338da31","modified":1561044050298},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1561044050329},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1561044050339},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1561044050340},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1561044050340},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1561044050340},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1561044050340},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1561044050352},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1561044050353},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1561044050353},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1561044050338},{"_id":"themes/next/source/js/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1561044050337},{"_id":"themes/next/source/lib/jquery/index.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1561044050348},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1561044050246},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"2d9297b26c7b7035cd995470ba154da6d6ab6827","modified":1561044050249},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7e51ea64611ab5d678c112b4688d4db4fd2737e2","modified":1561044050321},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"6d900b4159eeb869196a619602578bf4d83a117b","modified":1561044050321},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"8e0740a9ad349ce5555122325da872923135a698","modified":1561044050321},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"9a190ef2f49bdbf69604b48ad1dc7197895ee9b6","modified":1561044050321},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"7ffde343bdf10add1f052f3c4308a15180eb4404","modified":1561044050322},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1561044050322},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"33456264a74d1bba38264d14713544d67d003733","modified":1561044050322},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"fe5ff961b86004a306778c7d33a85b32e5e00e48","modified":1561044050306},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"b98c65006e2546fbf3870c16fbbcbc009dbaab15","modified":1561044050306},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1561044050307},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"9d71f34fa13a41b8c8cd2fbdf3fdea608385277c","modified":1561044050307},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"ce826aedf42b9eca424a044452f5d193866726a6","modified":1561044050311},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"c8b3225396cb444d8baeb94bac78e5216b992a81","modified":1561044050306},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"9a2d298dbdcbfd758518fd74b63897bc80ce15a5","modified":1561044050323},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"ce2aae8f3ed8ceac3a2417e0481044cf69c788aa","modified":1561044050314},{"_id":"themes/next/source/css/_common/components/scrollbar.styl","hash":"d7b8bcf2a6031296c84bb4f4ecfb037af01d2d82","modified":1561044050314},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1561044050324},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"24230e46fc9fb7b8551f97bb36e9bc1f7423098e","modified":1561044050324},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1561044050324},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"75d2d92af070eb10273558b2436972d3f12b361c","modified":1561044050324},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fa33213aceed7bf4bf25437ca9c1a00f7734ae65","modified":1561044050324},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"7359880e8d85312861fe0871f58b662e627dae0c","modified":1561044050325},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a96e46a6ae86c423f932bc2bc78b9f7453e4e4e5","modified":1561044050325},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6565b4a309325596768d0d32e022c80ef23066cb","modified":1561044050326},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"1edf4e69d0ec0dc9cefed6c35d3e803e0da4093d","modified":1561044050326},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"57044a6d19eb418c1c3d28787e82c69efa9e0ca6","modified":1561044050327},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"fc160583f742c94316a0fee05c18468033173534","modified":1561044050326},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"75737591682a2bafa71db4c03fb79e970ac0e7aa","modified":1561044050328},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"b6dac5bbf20f090cf4b67d156f030d7170dfb39c","modified":1561044050328},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"6400c98a9fd2b9a8502269f33355bd7ab3ff793b","modified":1561044050328},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5b936dddb7b4de4720cd1e8428b30a2f06d63fb","modified":1561044050328},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"7359880e8d85312861fe0871f58b662e627dae0c","modified":1561044050327},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1561044050327},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"232aedbd44243b3b80c4503c947060d3269c1afc","modified":1561044050328},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1561044050343},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1561044050344},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1561044050342},{"_id":"themes/next/.git/objects/pack/pack-e05ea471d9833094bc25d523bf72204ca1b4c045.idx","hash":"1442dd2913852f0a2ce40d33ef4a412f14fb9916","modified":1561044050229},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1561044050347},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1561044050351},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1561044050347},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4cfeec9434a72d5efc6ca225d3445d084d4590f7","modified":1561044050307},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"6904fd7ea6455e008d9884558b68254608af9a3c","modified":1561044050310},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"2d142c6f39853916256ad8fc79eb6b85f4001ae8","modified":1561044050310},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1561044050310},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f1d52954b9a5d1ca8e224382349f525e598dd923","modified":1561044050311},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1561044050311},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"80addb9b725e329915c05c27b9fadaf56457a9b3","modified":1561044050311},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"61ca40856e5cacd48e0fa9728fde4605c7dd4c94","modified":1561044050311},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1561044050311},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"6a75bb1f2435f4e895cbbb5abbddf6e8f7257804","modified":1561044050312},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"c961d37190d9bec58a36306c7e716c4e72c4582f","modified":1561044050312},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"1385862a5c0bd845015d165aadbd1a6add7b72d7","modified":1561044050312},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0bf899fab331add63f0c8ead31ca3a3db2ad74d9","modified":1561044050312},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"b082d07b13a3d55b4c032fd351dfa9a4fd74edec","modified":1561044050312},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"496f931e3a7e313ba8088fb91bb20789cace72c9","modified":1561044050312},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"2d9297b26c7b7035cd995470ba154da6d6ab6827","modified":1561044050247},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1561044050313},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1561044050313},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"8e058c99dd7d41f0bd34c7c28b6ac9fbb17dcb5e","modified":1561044050313},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"d5c8ffed7f2c701052b7a53abaf5ef437374ea72","modified":1561044050314},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"3f33bb862c2aa993f54987fbb345da067b79b112","modified":1561044050313},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"a6c24393dffbdd94dd5c01cdbec5e180b0bfbbbd","modified":1561044050314},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a3170630d8e085889a4bdc20eb7f09c5a0479c47","modified":1561044050314},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"5440013a081201ca791582db98159dce93ea9e75","modified":1561044050313},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"71d8d1cc22a2a7627a6db7240f0c4902a14f9bea","modified":1561044050309},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"e9dd8de7d98f1478ac7d351624fffd3d8738c905","modified":1561044050309},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"58ec00eebe68d0eebd2eea435c710063877447df","modified":1561044050317},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1561044050309},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1561044050317},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1561044050317},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"d7501ae01fc45fa15b00d1bc5233b9fffa20a3c9","modified":1561044050317},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"21b32840d8b3a14b10770153114778304ba6d1b0","modified":1561044050317},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"6e4400d6704dee076434726b7a03ac464eb7bcb4","modified":1561044050318},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"cbc0be5a3285b469858ec9ead48e2ea90bd47ae1","modified":1561044050319},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"9224b566cd2632f64c1a964e2c786cee93b93286","modified":1561044050315},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"707527c9950a7459355c8abcf4751c0964de0bc1","modified":1561044050315},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"cc83816614f21c7e1d8d3f867d547ff7c658cec4","modified":1561044050315},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-button.styl","hash":"517d541a80d59ad99a3f648be74891e0c7bc72a8","modified":1561044050315},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"9a3bfc878ca797946815bed23cd6f92b24a16358","modified":1561044050316},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"8a24b56524a388fbabd408ffc8ba9b56eb9e01ce","modified":1561044050316},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"c01609176929590f8f347075a9a12b661acd661e","modified":1561044050316},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"2356226157e8068b0e9bbe2f7d0f74e1ab49199b","modified":1561044050312},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"8e5c884fb950937afa350c608545455c87aa6129","modified":1561044050316},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"967fb3a3c6c851b34ec5df2d945dc266ed63d146","modified":1561044050316},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"c2d9c3b6fbfa65544e6b5a55d3cb2149df04a8a9","modified":1561044050315},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fc58498d4f5081fcf6218e9e18c5bf2328275bef","modified":1561044050319},{"_id":"themes/next/source/css/_common/components/tags/pdf.styl","hash":"da8d34729fb6eb0fcb8ee81e67d2be3c02bc1bc4","modified":1561044050318},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"f1d9ee1f86a179741f2478f8c70ca11ab578810e","modified":1561044050320},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"9fac89c8146eb2675721a26f528d7d0f8be7debe","modified":1561044050320},{"_id":"themes/next/source/css/_common/components/third-party/copy-code.styl","hash":"688ca3eccc26727d050ad098b32b40934719588a","modified":1561044050319},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"3ae3f3c276d444862033fd3434c632ad0d2f84e6","modified":1561044050320},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"07cb7e9485ef12d9a22a0f821180770e621d084c","modified":1561044050321},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"ac7753d536341aa824d7bce0332735e838916995","modified":1561044050319},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1561044050320},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"61466e3e5459960b5802a267751a0c8018918b0b","modified":1561044050320},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"6c4990d375b640ee4551e62c48c1cbe4c3d62212","modified":1561044050307},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1561044050308},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"c0d9e18a9210fdcaf33e488518b3b288eb58c0a1","modified":1561044050308},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"a410ed529afd46ddf4a96ecf0de6599488716887","modified":1561044050308},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"cc6ee18f47f2e1e06df6fa0eadb37079e580fd11","modified":1561044050308},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ca97f0b6990eef947039faede80c56d9c4381ee1","modified":1561044050307},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1561044050325},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1561044050325},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1561044050327},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1561044050346},{"_id":"themes/next/.git/objects/pack/pack-e05ea471d9833094bc25d523bf72204ca1b4c045.pack","hash":"afaba6f2df2bb98584f54f85334315bb5f0c9d5b","modified":1561044050225},{"_id":"public/search.xml","hash":"27a26c04fb47912af80f51fbde021cf9423e529f","modified":1561303170813},{"_id":"public/archives/index.html","hash":"0eac1dc519a576f322776cf58e8f0079c34cd3df","modified":1561303170827},{"_id":"public/categories/index.html","hash":"1f5a292f7f100fdcfdbb2e173a1ce7f778bb10b9","modified":1561303170827},{"_id":"public/基本语法/2019/06/23/1/index.html","hash":"f27c3a730cad12fd3fbd99a2e42c97c5b7eb3115","modified":1561303170827},{"_id":"public/Quant量化交易/项目/2019/06/22/1/index.html","hash":"223c3fa891ad750c5036ce804eb05e97a24aa0f4","modified":1561303170827},{"_id":"public/archives/2019/index.html","hash":"428d3ae41667fed4d43dc40a088501b9f06a01c6","modified":1561303170827},{"_id":"public/archives/2019/06/index.html","hash":"1e5f1e2411b2bf122ab1eb91441c22a6c8d67c40","modified":1561303170827},{"_id":"public/index.html","hash":"7a2ec8e58fc86c9800c0d099248eb908bc278bac","modified":1561303170828},{"_id":"public/categories/Quant量化交易/index.html","hash":"b9e25e80ef3f5bea43ee3a6ee8deccf7a510699a","modified":1561303170828},{"_id":"public/categories/基本语法/index.html","hash":"b4a2e0c6804e3c73b3ef7ecd8accf0cb431e34ba","modified":1561303170828},{"_id":"public/categories/Quant量化交易/项目/index.html","hash":"da78c506a0f23c3e1ede92f0fa178ed475b8566b","modified":1561303170828},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1561303170833},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1561303170833},{"_id":"public/images/avatar.gif","hash":"239a38e20fea08d0fe07dc128b77a3e6bf584247","modified":1561303170833},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1561303170833},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1561303170833},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1561303170833},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1561303170833},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1561303170833},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1561303170834},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1561303170834},{"_id":"public/images/favicon-32x32-next.png","hash":"4ca20cdec1acef9070f232a35dac77ee204dba54","modified":1561303170834},{"_id":"public/images/favicon-16x16-next.png","hash":"4ca20cdec1acef9070f232a35dac77ee204dba54","modified":1561303170834},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1561303170834},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1561303170834},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1561303170834},{"_id":"public/images/searchicon.png","hash":"025d64ba0160a3a2257dd2b3032b5f7c9dd9b82b","modified":1561303170834},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1561303170834},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1561303170834},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1561303170834},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1561303170834},{"_id":"public/基本语法/2019/06/23/1/2019-06-23_Python基本语法.ipynb","hash":"250db2d4db4de1145dd28f2b7fd9cbfae7ceab7e","modified":1561303170834},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1561303172012},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1561303172015},{"_id":"public/Quant量化交易/项目/2019/06/22/1/2019-06-22_两股票历史价格比较.ipynb","hash":"b1dba2c5c47bacd397b3f4be89c298f2f4c3732f","modified":1561303172015},{"_id":"public/Quant量化交易/项目/2019/06/22/1/output_10_1.png","hash":"e634abcd2aab890c42e07de71d19df7eaad0c682","modified":1561303172015},{"_id":"public/js/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1561303172020},{"_id":"public/js/motion.js","hash":"a16bc0b701646bf6653484675f4d5dc0f892d184","modified":1561303172020},{"_id":"public/js/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1561303172021},{"_id":"public/js/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1561303172021},{"_id":"public/js/js.cookie.js","hash":"e0afce539f1fb81d59e3c6f0a68d736e2fb45d93","modified":1561303172021},{"_id":"public/js/next-boot.js","hash":"e0615efab5f81ba0fd39c0527eac31144deac7ce","modified":1561303172021},{"_id":"public/js/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1561303172021},{"_id":"public/js/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1561303172021},{"_id":"public/js/utils.js","hash":"81913c5f75d0949443833cf4269ad63bd7f9be6f","modified":1561303172021},{"_id":"public/js/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1561303172022},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1561303172022},{"_id":"public/js/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1561303172022},{"_id":"public/js/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1561303172022},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1561303172022},{"_id":"public/css/main.css","hash":"2f14e5072aaaaa0904e45ae79d0c9b5edee3bdb2","modified":1561303172022},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1561303172022},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1561303172022},{"_id":"public/lib/jquery/index.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1561303172023},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1561303172023},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1561303172023},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1561303172023},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1561303172023}],"Category":[{"name":"Quant量化交易","_id":"cjx93lf2s00043fs9qoi0ui0q"},{"name":"基本语法","_id":"cjx93lf2v00053fs9vc2l44ck"},{"name":"项目","parent":"cjx93lf2s00043fs9qoi0ui0q","_id":"cjx93lf2w00063fs9cwpihj7e"}],"Data":[],"Page":[{"title":"archives","date":"2019-06-20T15:48:17.000Z","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2019-06-20 23:48:17\n---\n","updated":"2019-06-20T15:48:17.730Z","path":"archives/index.html","comments":1,"layout":"page","_id":"cjx93lf2n00013fs9grs46m6u","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"categories","date":"2019-06-22T15:40:38.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-06-22 23:40:38\ntype: \"categories\"\ncomments: false\n---\n","updated":"2019-06-22T15:49:43.972Z","path":"categories/index.html","layout":"page","_id":"cjx93lf2r00033fs96nftqogp","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"两股票历史价格比较","date":"2019-06-21T16:00:00.000Z","id":"1","_content":"\n## 项目任务\n1. 获取财务数据\n2. 填充缺失值\n3. 数据归一化\n4. 折线图\n\n## 代码\n\n### 依赖\n\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport tushare as ts\nimport ssl\ncontext = ssl._create_unverified_context()\n```\n\n### 获取财务数据\n\n\n```python\ns_pf = '600000'\ns_gd = '601818'\nsdate = '2018-01-01'\nedate = '2018-12-31'\n\ndf_pf = ts.get_hist_data(s_pf, start = sdate, end = edate).sort_index(axis = 0, ascending = True)\ndf_gd = ts.get_hist_data(s_gd, start = sdate, end = edate).sort_index(axis = 0, ascending = True)\n```\n\n### 数据处理\n\n\n```python\ndf = pd.concat([df_pf.close, df_gd.close], axis = 1, keys = ['pf_clse','gd_close'])\ndf.ffill(axis = 0, inplace = True)\n\ndf['pf_one'] = df_pf.close / float(df_pf.close[0]) * 100\ndf['gd_one'] = df_gd.close / float(df_gd.close[0]) * 100\n\ndisplay(df.corr(method = 'pearson', min_periods = 1))\n```\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pf_clse</th>\n      <th>gd_close</th>\n      <th>pf_one</th>\n      <th>gd_one</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>pf_clse</th>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n    </tr>\n    <tr>\n      <th>gd_close</th>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>pf_one</th>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n    </tr>\n    <tr>\n      <th>gd_one</th>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n### 画图\n\n\n```python\ndf.pf_one.plot(figsize = (20,15))\ndf.gd_one.plot(figsize = (20,15))\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x11bcdfef0>\n\n\n\n\n![png](2019-06-22_两股票历史价格比较/output_10_1.png)\n\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n2. [Tushare官网](http://tushare.org/)\n","source":"_posts/2019-06-22_两股票历史价格比较.md","raw":"\n---\ntitle: 两股票历史价格比较\ndate: 2019-06-22\nid: 1\ncategories: [Quant量化交易, 项目]\n---\n\n## 项目任务\n1. 获取财务数据\n2. 填充缺失值\n3. 数据归一化\n4. 折线图\n\n## 代码\n\n### 依赖\n\n\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport tushare as ts\nimport ssl\ncontext = ssl._create_unverified_context()\n```\n\n### 获取财务数据\n\n\n```python\ns_pf = '600000'\ns_gd = '601818'\nsdate = '2018-01-01'\nedate = '2018-12-31'\n\ndf_pf = ts.get_hist_data(s_pf, start = sdate, end = edate).sort_index(axis = 0, ascending = True)\ndf_gd = ts.get_hist_data(s_gd, start = sdate, end = edate).sort_index(axis = 0, ascending = True)\n```\n\n### 数据处理\n\n\n```python\ndf = pd.concat([df_pf.close, df_gd.close], axis = 1, keys = ['pf_clse','gd_close'])\ndf.ffill(axis = 0, inplace = True)\n\ndf['pf_one'] = df_pf.close / float(df_pf.close[0]) * 100\ndf['gd_one'] = df_gd.close / float(df_gd.close[0]) * 100\n\ndisplay(df.corr(method = 'pearson', min_periods = 1))\n```\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pf_clse</th>\n      <th>gd_close</th>\n      <th>pf_one</th>\n      <th>gd_one</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>pf_clse</th>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n    </tr>\n    <tr>\n      <th>gd_close</th>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>pf_one</th>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n    </tr>\n    <tr>\n      <th>gd_one</th>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n### 画图\n\n\n```python\ndf.pf_one.plot(figsize = (20,15))\ndf.gd_one.plot(figsize = (20,15))\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x11bcdfef0>\n\n\n\n\n![png](2019-06-22_两股票历史价格比较/output_10_1.png)\n\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n2. [Tushare官网](http://tushare.org/)\n","slug":"2019-06-22_两股票历史价格比较","published":1,"updated":"2019-06-23T14:34:40.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx93lf2j00003fs9kogwy4dz","content":"<h2 id=\"项目任务\"><a href=\"#项目任务\" class=\"headerlink\" title=\"项目任务\"></a>项目任务</h2><ol>\n<li>获取财务数据</li>\n<li>填充缺失值</li>\n<li>数据归一化</li>\n<li>折线图</li>\n</ol>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> tushare <span class=\"keyword\">as</span> ts</span><br><span class=\"line\"><span class=\"keyword\">import</span> ssl</span><br><span class=\"line\">context = ssl._create_unverified_context()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取财务数据\"><a href=\"#获取财务数据\" class=\"headerlink\" title=\"获取财务数据\"></a>获取财务数据</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s_pf = <span class=\"string\">'600000'</span></span><br><span class=\"line\">s_gd = <span class=\"string\">'601818'</span></span><br><span class=\"line\">sdate = <span class=\"string\">'2018-01-01'</span></span><br><span class=\"line\">edate = <span class=\"string\">'2018-12-31'</span></span><br><span class=\"line\"></span><br><span class=\"line\">df_pf = ts.get_hist_data(s_pf, start = sdate, end = edate).sort_index(axis = <span class=\"number\">0</span>, ascending = <span class=\"literal\">True</span>)</span><br><span class=\"line\">df_gd = ts.get_hist_data(s_gd, start = sdate, end = edate).sort_index(axis = <span class=\"number\">0</span>, ascending = <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数据处理\"><a href=\"#数据处理\" class=\"headerlink\" title=\"数据处理\"></a>数据处理</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df = pd.concat([df_pf.close, df_gd.close], axis = <span class=\"number\">1</span>, keys = [<span class=\"string\">'pf_clse'</span>,<span class=\"string\">'gd_close'</span>])</span><br><span class=\"line\">df.ffill(axis = <span class=\"number\">0</span>, inplace = <span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df[<span class=\"string\">'pf_one'</span>] = df_pf.close / float(df_pf.close[<span class=\"number\">0</span>]) * <span class=\"number\">100</span></span><br><span class=\"line\">df[<span class=\"string\">'gd_one'</span>] = df_gd.close / float(df_gd.close[<span class=\"number\">0</span>]) * <span class=\"number\">100</span></span><br><span class=\"line\"></span><br><span class=\"line\">display(df.corr(method = <span class=\"string\">'pearson'</span>, min_periods = <span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure>\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}</code></pre><p></style><p></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pf_clse</th>\n      <th>gd_close</th>\n      <th>pf_one</th>\n      <th>gd_one</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>pf_clse</th>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n    </tr>\n    <tr>\n      <th>gd_close</th>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>pf_one</th>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n    </tr>\n    <tr>\n      <th>gd_one</th>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<h3 id=\"画图\"><a href=\"#画图\" class=\"headerlink\" title=\"画图\"></a>画图</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.pf_one.plot(figsize = (<span class=\"number\">20</span>,<span class=\"number\">15</span>))</span><br><span class=\"line\">df.gd_one.plot(figsize = (<span class=\"number\">20</span>,<span class=\"number\">15</span>))</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x11bcdfef0&gt;</code></pre><p><img src=\"/Quant量化交易/项目/2019/06/22/1/output_10_1.png\" alt=\"png\"></p>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a href=\"https://www.julyedu.com/course/getDetail/66/\" target=\"_blank\" rel=\"noopener\">廖雪峰Python数据分析</a></li>\n<li><a href=\"http://tushare.org/\" target=\"_blank\" rel=\"noopener\">Tushare官网</a></li>\n</ol>\n","site":{"data":{}},"length":1505,"excerpt":"","more":"<h2 id=\"项目任务\"><a href=\"#项目任务\" class=\"headerlink\" title=\"项目任务\"></a>项目任务</h2><ol>\n<li>获取财务数据</li>\n<li>填充缺失值</li>\n<li>数据归一化</li>\n<li>折线图</li>\n</ol>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"依赖\"><a href=\"#依赖\" class=\"headerlink\" title=\"依赖\"></a>依赖</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> pandas <span class=\"keyword\">as</span> pd</span><br><span class=\"line\"><span class=\"keyword\">import</span> tushare <span class=\"keyword\">as</span> ts</span><br><span class=\"line\"><span class=\"keyword\">import</span> ssl</span><br><span class=\"line\">context = ssl._create_unverified_context()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取财务数据\"><a href=\"#获取财务数据\" class=\"headerlink\" title=\"获取财务数据\"></a>获取财务数据</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s_pf = <span class=\"string\">'600000'</span></span><br><span class=\"line\">s_gd = <span class=\"string\">'601818'</span></span><br><span class=\"line\">sdate = <span class=\"string\">'2018-01-01'</span></span><br><span class=\"line\">edate = <span class=\"string\">'2018-12-31'</span></span><br><span class=\"line\"></span><br><span class=\"line\">df_pf = ts.get_hist_data(s_pf, start = sdate, end = edate).sort_index(axis = <span class=\"number\">0</span>, ascending = <span class=\"literal\">True</span>)</span><br><span class=\"line\">df_gd = ts.get_hist_data(s_gd, start = sdate, end = edate).sort_index(axis = <span class=\"number\">0</span>, ascending = <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数据处理\"><a href=\"#数据处理\" class=\"headerlink\" title=\"数据处理\"></a>数据处理</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df = pd.concat([df_pf.close, df_gd.close], axis = <span class=\"number\">1</span>, keys = [<span class=\"string\">'pf_clse'</span>,<span class=\"string\">'gd_close'</span>])</span><br><span class=\"line\">df.ffill(axis = <span class=\"number\">0</span>, inplace = <span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">df[<span class=\"string\">'pf_one'</span>] = df_pf.close / float(df_pf.close[<span class=\"number\">0</span>]) * <span class=\"number\">100</span></span><br><span class=\"line\">df[<span class=\"string\">'gd_one'</span>] = df_gd.close / float(df_gd.close[<span class=\"number\">0</span>]) * <span class=\"number\">100</span></span><br><span class=\"line\"></span><br><span class=\"line\">display(df.corr(method = <span class=\"string\">'pearson'</span>, min_periods = <span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure>\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}</code></pre><p></style><p></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pf_clse</th>\n      <th>gd_close</th>\n      <th>pf_one</th>\n      <th>gd_one</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>pf_clse</th>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n    </tr>\n    <tr>\n      <th>gd_close</th>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>pf_one</th>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n    </tr>\n    <tr>\n      <th>gd_one</th>\n      <td>0.912252</td>\n      <td>1.000000</td>\n      <td>0.912252</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n<h3 id=\"画图\"><a href=\"#画图\" class=\"headerlink\" title=\"画图\"></a>画图</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df.pf_one.plot(figsize = (<span class=\"number\">20</span>,<span class=\"number\">15</span>))</span><br><span class=\"line\">df.gd_one.plot(figsize = (<span class=\"number\">20</span>,<span class=\"number\">15</span>))</span><br></pre></td></tr></table></figure>\n\n<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x11bcdfef0&gt;</code></pre><p><img src=\"/Quant量化交易/项目/2019/06/22/1/output_10_1.png\" alt=\"png\"></p>\n<blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a href=\"https://www.julyedu.com/course/getDetail/66/\" target=\"_blank\" rel=\"noopener\">廖雪峰Python数据分析</a></li>\n<li><a href=\"http://tushare.org/\" target=\"_blank\" rel=\"noopener\">Tushare官网</a></li>\n</ol>\n"},{"title":"Python基本语法","date":"2019-06-22T16:00:00.000Z","id":"1","_content":"\n## 数组\n\n\n```python\nprint(\"===一维数组===\")\nprint([i * 2 for i in range(10)])\nprint([i * i for i in range(10)])\nprint([i * i for i in range(10) if (i % 3) == 0])\nprint([(x, y) for x in range(3) for y in range(3)])\nprint('')\n\nprint(\"===二维数组===\")\na = [[3] * (i + 1) for i in range(3)]\nprint(a[2])\nprint('')\n\nprint(\"===乘法的问题===\")\na = [[1, 2, 3]] * 3\na[1][1] = 100\nprint(a)\nprint('')\n\nprint(\"===解决方法===\")\na = [[1, 2, 3] for i in range(3)]\na[1][1] = 100\nprint(a)\n\n```\n\n    ===一维数组===\n    [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n    [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n    [0, 9, 36, 81]\n    [(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]\n    \n    ===二维数组===\n    [3, 3, 3]\n    \n    ===乘法的问题===\n    [[1, 100, 3], [1, 100, 3], [1, 100, 3]]\n    \n    ===解决方法===\n    [[1, 2, 3], [1, 100, 3], [1, 2, 3]]\n\n\n## 字典\n\n\n```python\nprint(\"===初始化===\")\nd = {'a':1, 2:'b', 'c':3, 4:'d'}\nprint(d)\nprint('')\n\nprint(\"===获取长度===\")\nprint(len(d))\nprint('')\n\nprint(\"===根据key读写===\")\nd['a'] = 100\nd[4] = 'dd'\nprint(d)\nprint('')\n\nprint(\"===添加元素===\")\nd['e'] = 5\nd[6] = 'f'\nprint(d)\nprint('')\n\nprint(\"===删除元素===\")\nd = {'a':1, 2:'b', 'c':3, 4:'d'}\ndel(d['a'])\ndel(d[2])\nprint(d)\nprint('')\n\nprint(\"===判断key是否存在===\")\nd = {'a':1, 2:'b', 'c':3, 4:'d'}\nif 'a' in d:\n    print('a in d')\nif 2 in d:\n    print('2 in d')\nif not ('x' in d):\n    print('x not in d')\nprint('')\n\nprint(\"===判断字典是否为空===\")\nd = {}\nif not d:\n    print('d is empty')\nprint('')\n\nprint(\"===遍历===\")\nd = {'a':1, 2:'b', 'c':3, 4:'d'}\nfor k in d.keys():\n    print(str(k) + ': ' + str(d[k]))\nfor k, v in d.items():\n    print(str(k) + ': ' + str(v))\n\n```\n\n    ===初始化===\n    {'a': 1, 2: 'b', 'c': 3, 4: 'd'}\n    \n    ===获取长度===\n    4\n    \n    ===根据key读写===\n    {'a': 100, 2: 'b', 'c': 3, 4: 'dd'}\n    \n    ===添加元素===\n    {'a': 100, 2: 'b', 'c': 3, 4: 'dd', 'e': 5, 6: 'f'}\n    \n    ===删除元素===\n    {'c': 3, 4: 'd'}\n    \n    ===判断key是否存在===\n    a in d\n    2 in d\n    x not in d\n    \n    ===判断字典是否为空===\n    d is empty\n    \n    ===遍历===\n    a: 1\n    2: b\n    c: 3\n    4: d\n    a: 1\n    2: b\n    c: 3\n    4: d\n\n\n## 集合\n\n\n```python\nprint(\"===初始化===\")\ns_a = set([1, 2, 3, 4, 5])\ns_b = set([1, 1, 2, 2, 3, 4, 5])\nprint(s_a)\nprint(s_b)\nprint('')\n\nprint(\"===获取长度===\")\nprint(len(s_a))\nprint(len(s_b))\nprint('')\n\nprint(\"===添加元素===\")\ns_a.add(6)\ns_a.add(6)\ns_a.update([5, 6, 7, 8, 9])\nprint(s_a)\nprint('')\n\nprint(\"===删除元素===\")\ns_a.remove(8)\ns_a.remove(9)\nprint(s_a)\nprint('')\n\nprint(\"===判断元素是否存在===\")\nprint(1 in s_a)\nprint(10 in s_a)\nprint('')\n\nprint(\"===判断集合是否为空===\")\ns_a = set([])\nif not s_a:\n    print('set is empty')\nelse:\n    print('set is not empty')\nprint('')\n\nprint(\"===遍历===\")\ns_a = set([1, 2, 3, 4, 5])\nfor i in s_a:\n    print(i)\nprint('')\n\nprint(\"===集合操作===\")\ns_a = set([1, 2, 3, 4, 5])\ns_b = set([4, 5, 6, 7, 8])\n\nprint(\"===并集===\")\nprint(s_a | s_b)\nprint(s_a.union(s_b))\nprint(\"\")\n\nprint(\"===交集===\")\nprint(s_a & s_b)\nprint(s_a.intersection(s_b))\nprint(\"\")\n\nprint(\"===差集 s_a - (s_a and s_b)===\")\nprint(s_a - s_b)\nprint(s_a.difference(s_b))\nprint(\"\")\n\nprint(\"===对称差===\")\nprint(s_a ^ s_b)\nprint((s_a | s_b) - (s_a & s_b))\nprint(s_a.symmetric_difference(s_b))\n```\n\n    ===初始化===\n    {1, 2, 3, 4, 5}\n    {1, 2, 3, 4, 5}\n    \n    ===获取长度===\n    5\n    5\n    \n    ===添加元素===\n    {1, 2, 3, 4, 5, 6, 7, 8, 9}\n    \n    ===删除元素===\n    {1, 2, 3, 4, 5, 6, 7}\n    \n    ===判断元素是否存在===\n    True\n    False\n    \n    ===判断集合是否为空===\n    set is empty\n    \n    ===遍历===\n    1\n    2\n    3\n    4\n    5\n    \n    ===集合操作===\n    ===并集===\n    {1, 2, 3, 4, 5, 6, 7, 8}\n    {1, 2, 3, 4, 5, 6, 7, 8}\n    \n    ===交集===\n    {4, 5}\n    {4, 5}\n    \n    ===差集 s_a - (s_a and s_b)===\n    {1, 2, 3}\n    {1, 2, 3}\n    \n    ===对称差===\n    {1, 2, 3, 6, 7, 8}\n    {1, 2, 3, 6, 7, 8}\n    {1, 2, 3, 6, 7, 8}\n\n\n## 列表\n\n\n```python\nprint(\"===初始化列表===\")\nli = [1, 2, 3, 'abc', 4.5, [2, 3, 4], {1:'one'}]\n\nprint(\"===获取长度===\")\nprint(len(li))\nprint('')\n\nprint(\"===根据索引读写===\")\nprint(li[0])\nprint(li[3])\nprint(li[-1])\nprint('')\n\nprint(\"===添加元素===\")\nli = [1, 2, 3]\nli.append('a')\nli.append('b')\nprint(li)\nli.append([4, 5, 6])\nprint(li)\nli = [1, 2, 3]\nli.extend([4, 5, 6])\nprint(li)\nprint('')\n\nprint(\"===删除元素===\")\nli = [1, 2, 3, 4, 5]\nli.pop()\nprint(li)\ndel(li[0])\ndel(li[1])\nprint(li)\nprint('')\n\nprint(\"===元素是否存在===\")\nli = [1, 2, 3, 4, 5]\nprint(1 in li)\nprint(6 in li)\nprint('')\n\nprint(\"===列表是否为空===\")\nli = []\nif not li:\n    print('Empty')\nelse:\n    print('Not empty')\nprint('')\n\nprint(\"===字符串===\")\ns = 'abcdefg'\nli = list(s)\nli[4] = 'E'\nli[5] = 'F'\nprint(li)\ns = ''.join(li)\nprint(s)\nprint('')\n\nprint(\"===遍历===\")\nli = [1, 2, 3]\nfor i in li:\n    print(i)\nfor i in range(len(li)):\n    print(li[i])\n\n```\n\n    ===初始化列表===\n    ===获取长度===\n    7\n    \n    ===根据索引读写===\n    1\n    abc\n    {1: 'one'}\n    \n    ===添加元素===\n    [1, 2, 3, 'a', 'b']\n    [1, 2, 3, 'a', 'b', [4, 5, 6]]\n    [1, 2, 3, 4, 5, 6]\n    \n    ===删除元素===\n    [1, 2, 3, 4]\n    [2, 4]\n    \n    ===元素是否存在===\n    True\n    False\n    \n    ===列表是否为空===\n    Empty\n    \n    ===字符串===\n    ['a', 'b', 'c', 'd', 'E', 'F', 'g']\n    abcdEFg\n    \n    ===遍历===\n    1\n    2\n    3\n    1\n    2\n    3\n\n\n## 切片\n\n\n```python\nli = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nprint(\"===切片===\")\nprint(li[2:5])\nprint(li[:4])\nprint(li[5:])\nprint(li[:])\nprint(li[0:6:2])\nprint(li[3::2])\nprint('')\n\nprint(\"===负数索引和step===\")\nprint(li[::-1])\nprint(li[::-2])\nprint(li[-6:-1:1])\nprint(li[-1::-1])\n```\n\n    ===切片===\n    [2, 3, 4]\n    [0, 1, 2, 3]\n    [5, 6, 7, 8, 9, 10]\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    [0, 2, 4]\n    [3, 5, 7, 9]\n    \n    ===负数索引和step===\n    [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n    [10, 8, 6, 4, 2, 0]\n    [5, 6, 7, 8, 9]\n    [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n\n\n## json处理\n\n\n```python\nimport json\n\nprint(\"===dict与json互转===\")\nd = {'Python':100, 'C++':70, 'Basic':60, 'others':{'C':65, 'Java':50}}\njtxt = json.dumps(d)\ndd = json.loads(jtxt)\nprint(jtxt)\nprint(dd)\nprint('')\n\nprint(\"===用json序列化非dict对象===\")\nclass Student:\n    def __init__(self, name, age, score):\n        self.name = name\n        self.age = age\n        self.score = score\n\n    def __str__(self):\n        return '%s: %d, %d' % (self.name, self.age, self.score)\n\ns = Student('Tom', 15, 85)\nprint(s)\nprint(s.__dict__)\nprint(\"\")\n\nprint(\"===方法1===\")\njtxt = json.dumps(s, default = lambda obj: obj.__dict__)\nprint(jtxt)\ndef d2s(d):\n    return Student(d['name'], d['age'], d['score'])\nprint(json.loads(jtxt, object_hook = d2s))\nprint(\"\")\n\nprint(\"===方法2===\")\ndef s2d(s):\n    return s.__dict__\njtxt = json.dumps(s, default = s2d)\nprint(jtxt)\n\n```\n\n    ===dict与json互转===\n    {\"Python\": 100, \"C++\": 70, \"Basic\": 60, \"others\": {\"C\": 65, \"Java\": 50}}\n    {'Python': 100, 'C++': 70, 'Basic': 60, 'others': {'C': 65, 'Java': 50}}\n    \n    ===用json序列化非dict对象===\n    Tom: 15, 85\n    {'name': 'Tom', 'age': 15, 'score': 85}\n    \n    ===方法1===\n    {\"name\": \"Tom\", \"age\": 15, \"score\": 85}\n    Tom: 15, 85\n    \n    ===方法2===\n    {\"name\": \"Tom\", \"age\": 15, \"score\": 85}\n\n\n## class\n\n\n```python\nclass MyClass:\n    def __init__(self, val):\n        self.val = val\n\n    def display(self, s):\n        print('%s: %d' % (s, self.val))\n\nm = MyClass(100)\nprint(m.val)\nm.display('hello')\nprint('')\n\nm2 = m\nprint(id(m))\nprint(id(m2))\n\nfn = m.display\nfn('hey')\n```\n\n    100\n    hello: 100\n    \n    4539482520\n    4539482520\n    hey: 100\n\n\n## generator\n\n\n```python\ndef fab(max): \n    n, a, b = 0, 0, 1 \n    while n < max: \n        yield b \n        # print b \n        a, b = b, a + b \n        n = n + 1\n    return n\n        \nfor n in fab(5):\n    print(n)\n```\n\n    1\n    1\n    2\n    3\n    5\n\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n2. [yield讲解](https://www.ibm.com/developerworks/cn/opensource/os-cn-python-yield/)\n","source":"_posts/2019-06-23_Python基本语法.md","raw":"\n---\ntitle: Python基本语法\ndate: 2019-06-23\nid: 1\ncategories: [基本语法]\n---\n\n## 数组\n\n\n```python\nprint(\"===一维数组===\")\nprint([i * 2 for i in range(10)])\nprint([i * i for i in range(10)])\nprint([i * i for i in range(10) if (i % 3) == 0])\nprint([(x, y) for x in range(3) for y in range(3)])\nprint('')\n\nprint(\"===二维数组===\")\na = [[3] * (i + 1) for i in range(3)]\nprint(a[2])\nprint('')\n\nprint(\"===乘法的问题===\")\na = [[1, 2, 3]] * 3\na[1][1] = 100\nprint(a)\nprint('')\n\nprint(\"===解决方法===\")\na = [[1, 2, 3] for i in range(3)]\na[1][1] = 100\nprint(a)\n\n```\n\n    ===一维数组===\n    [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n    [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n    [0, 9, 36, 81]\n    [(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]\n    \n    ===二维数组===\n    [3, 3, 3]\n    \n    ===乘法的问题===\n    [[1, 100, 3], [1, 100, 3], [1, 100, 3]]\n    \n    ===解决方法===\n    [[1, 2, 3], [1, 100, 3], [1, 2, 3]]\n\n\n## 字典\n\n\n```python\nprint(\"===初始化===\")\nd = {'a':1, 2:'b', 'c':3, 4:'d'}\nprint(d)\nprint('')\n\nprint(\"===获取长度===\")\nprint(len(d))\nprint('')\n\nprint(\"===根据key读写===\")\nd['a'] = 100\nd[4] = 'dd'\nprint(d)\nprint('')\n\nprint(\"===添加元素===\")\nd['e'] = 5\nd[6] = 'f'\nprint(d)\nprint('')\n\nprint(\"===删除元素===\")\nd = {'a':1, 2:'b', 'c':3, 4:'d'}\ndel(d['a'])\ndel(d[2])\nprint(d)\nprint('')\n\nprint(\"===判断key是否存在===\")\nd = {'a':1, 2:'b', 'c':3, 4:'d'}\nif 'a' in d:\n    print('a in d')\nif 2 in d:\n    print('2 in d')\nif not ('x' in d):\n    print('x not in d')\nprint('')\n\nprint(\"===判断字典是否为空===\")\nd = {}\nif not d:\n    print('d is empty')\nprint('')\n\nprint(\"===遍历===\")\nd = {'a':1, 2:'b', 'c':3, 4:'d'}\nfor k in d.keys():\n    print(str(k) + ': ' + str(d[k]))\nfor k, v in d.items():\n    print(str(k) + ': ' + str(v))\n\n```\n\n    ===初始化===\n    {'a': 1, 2: 'b', 'c': 3, 4: 'd'}\n    \n    ===获取长度===\n    4\n    \n    ===根据key读写===\n    {'a': 100, 2: 'b', 'c': 3, 4: 'dd'}\n    \n    ===添加元素===\n    {'a': 100, 2: 'b', 'c': 3, 4: 'dd', 'e': 5, 6: 'f'}\n    \n    ===删除元素===\n    {'c': 3, 4: 'd'}\n    \n    ===判断key是否存在===\n    a in d\n    2 in d\n    x not in d\n    \n    ===判断字典是否为空===\n    d is empty\n    \n    ===遍历===\n    a: 1\n    2: b\n    c: 3\n    4: d\n    a: 1\n    2: b\n    c: 3\n    4: d\n\n\n## 集合\n\n\n```python\nprint(\"===初始化===\")\ns_a = set([1, 2, 3, 4, 5])\ns_b = set([1, 1, 2, 2, 3, 4, 5])\nprint(s_a)\nprint(s_b)\nprint('')\n\nprint(\"===获取长度===\")\nprint(len(s_a))\nprint(len(s_b))\nprint('')\n\nprint(\"===添加元素===\")\ns_a.add(6)\ns_a.add(6)\ns_a.update([5, 6, 7, 8, 9])\nprint(s_a)\nprint('')\n\nprint(\"===删除元素===\")\ns_a.remove(8)\ns_a.remove(9)\nprint(s_a)\nprint('')\n\nprint(\"===判断元素是否存在===\")\nprint(1 in s_a)\nprint(10 in s_a)\nprint('')\n\nprint(\"===判断集合是否为空===\")\ns_a = set([])\nif not s_a:\n    print('set is empty')\nelse:\n    print('set is not empty')\nprint('')\n\nprint(\"===遍历===\")\ns_a = set([1, 2, 3, 4, 5])\nfor i in s_a:\n    print(i)\nprint('')\n\nprint(\"===集合操作===\")\ns_a = set([1, 2, 3, 4, 5])\ns_b = set([4, 5, 6, 7, 8])\n\nprint(\"===并集===\")\nprint(s_a | s_b)\nprint(s_a.union(s_b))\nprint(\"\")\n\nprint(\"===交集===\")\nprint(s_a & s_b)\nprint(s_a.intersection(s_b))\nprint(\"\")\n\nprint(\"===差集 s_a - (s_a and s_b)===\")\nprint(s_a - s_b)\nprint(s_a.difference(s_b))\nprint(\"\")\n\nprint(\"===对称差===\")\nprint(s_a ^ s_b)\nprint((s_a | s_b) - (s_a & s_b))\nprint(s_a.symmetric_difference(s_b))\n```\n\n    ===初始化===\n    {1, 2, 3, 4, 5}\n    {1, 2, 3, 4, 5}\n    \n    ===获取长度===\n    5\n    5\n    \n    ===添加元素===\n    {1, 2, 3, 4, 5, 6, 7, 8, 9}\n    \n    ===删除元素===\n    {1, 2, 3, 4, 5, 6, 7}\n    \n    ===判断元素是否存在===\n    True\n    False\n    \n    ===判断集合是否为空===\n    set is empty\n    \n    ===遍历===\n    1\n    2\n    3\n    4\n    5\n    \n    ===集合操作===\n    ===并集===\n    {1, 2, 3, 4, 5, 6, 7, 8}\n    {1, 2, 3, 4, 5, 6, 7, 8}\n    \n    ===交集===\n    {4, 5}\n    {4, 5}\n    \n    ===差集 s_a - (s_a and s_b)===\n    {1, 2, 3}\n    {1, 2, 3}\n    \n    ===对称差===\n    {1, 2, 3, 6, 7, 8}\n    {1, 2, 3, 6, 7, 8}\n    {1, 2, 3, 6, 7, 8}\n\n\n## 列表\n\n\n```python\nprint(\"===初始化列表===\")\nli = [1, 2, 3, 'abc', 4.5, [2, 3, 4], {1:'one'}]\n\nprint(\"===获取长度===\")\nprint(len(li))\nprint('')\n\nprint(\"===根据索引读写===\")\nprint(li[0])\nprint(li[3])\nprint(li[-1])\nprint('')\n\nprint(\"===添加元素===\")\nli = [1, 2, 3]\nli.append('a')\nli.append('b')\nprint(li)\nli.append([4, 5, 6])\nprint(li)\nli = [1, 2, 3]\nli.extend([4, 5, 6])\nprint(li)\nprint('')\n\nprint(\"===删除元素===\")\nli = [1, 2, 3, 4, 5]\nli.pop()\nprint(li)\ndel(li[0])\ndel(li[1])\nprint(li)\nprint('')\n\nprint(\"===元素是否存在===\")\nli = [1, 2, 3, 4, 5]\nprint(1 in li)\nprint(6 in li)\nprint('')\n\nprint(\"===列表是否为空===\")\nli = []\nif not li:\n    print('Empty')\nelse:\n    print('Not empty')\nprint('')\n\nprint(\"===字符串===\")\ns = 'abcdefg'\nli = list(s)\nli[4] = 'E'\nli[5] = 'F'\nprint(li)\ns = ''.join(li)\nprint(s)\nprint('')\n\nprint(\"===遍历===\")\nli = [1, 2, 3]\nfor i in li:\n    print(i)\nfor i in range(len(li)):\n    print(li[i])\n\n```\n\n    ===初始化列表===\n    ===获取长度===\n    7\n    \n    ===根据索引读写===\n    1\n    abc\n    {1: 'one'}\n    \n    ===添加元素===\n    [1, 2, 3, 'a', 'b']\n    [1, 2, 3, 'a', 'b', [4, 5, 6]]\n    [1, 2, 3, 4, 5, 6]\n    \n    ===删除元素===\n    [1, 2, 3, 4]\n    [2, 4]\n    \n    ===元素是否存在===\n    True\n    False\n    \n    ===列表是否为空===\n    Empty\n    \n    ===字符串===\n    ['a', 'b', 'c', 'd', 'E', 'F', 'g']\n    abcdEFg\n    \n    ===遍历===\n    1\n    2\n    3\n    1\n    2\n    3\n\n\n## 切片\n\n\n```python\nli = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nprint(\"===切片===\")\nprint(li[2:5])\nprint(li[:4])\nprint(li[5:])\nprint(li[:])\nprint(li[0:6:2])\nprint(li[3::2])\nprint('')\n\nprint(\"===负数索引和step===\")\nprint(li[::-1])\nprint(li[::-2])\nprint(li[-6:-1:1])\nprint(li[-1::-1])\n```\n\n    ===切片===\n    [2, 3, 4]\n    [0, 1, 2, 3]\n    [5, 6, 7, 8, 9, 10]\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    [0, 2, 4]\n    [3, 5, 7, 9]\n    \n    ===负数索引和step===\n    [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n    [10, 8, 6, 4, 2, 0]\n    [5, 6, 7, 8, 9]\n    [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n\n\n## json处理\n\n\n```python\nimport json\n\nprint(\"===dict与json互转===\")\nd = {'Python':100, 'C++':70, 'Basic':60, 'others':{'C':65, 'Java':50}}\njtxt = json.dumps(d)\ndd = json.loads(jtxt)\nprint(jtxt)\nprint(dd)\nprint('')\n\nprint(\"===用json序列化非dict对象===\")\nclass Student:\n    def __init__(self, name, age, score):\n        self.name = name\n        self.age = age\n        self.score = score\n\n    def __str__(self):\n        return '%s: %d, %d' % (self.name, self.age, self.score)\n\ns = Student('Tom', 15, 85)\nprint(s)\nprint(s.__dict__)\nprint(\"\")\n\nprint(\"===方法1===\")\njtxt = json.dumps(s, default = lambda obj: obj.__dict__)\nprint(jtxt)\ndef d2s(d):\n    return Student(d['name'], d['age'], d['score'])\nprint(json.loads(jtxt, object_hook = d2s))\nprint(\"\")\n\nprint(\"===方法2===\")\ndef s2d(s):\n    return s.__dict__\njtxt = json.dumps(s, default = s2d)\nprint(jtxt)\n\n```\n\n    ===dict与json互转===\n    {\"Python\": 100, \"C++\": 70, \"Basic\": 60, \"others\": {\"C\": 65, \"Java\": 50}}\n    {'Python': 100, 'C++': 70, 'Basic': 60, 'others': {'C': 65, 'Java': 50}}\n    \n    ===用json序列化非dict对象===\n    Tom: 15, 85\n    {'name': 'Tom', 'age': 15, 'score': 85}\n    \n    ===方法1===\n    {\"name\": \"Tom\", \"age\": 15, \"score\": 85}\n    Tom: 15, 85\n    \n    ===方法2===\n    {\"name\": \"Tom\", \"age\": 15, \"score\": 85}\n\n\n## class\n\n\n```python\nclass MyClass:\n    def __init__(self, val):\n        self.val = val\n\n    def display(self, s):\n        print('%s: %d' % (s, self.val))\n\nm = MyClass(100)\nprint(m.val)\nm.display('hello')\nprint('')\n\nm2 = m\nprint(id(m))\nprint(id(m2))\n\nfn = m.display\nfn('hey')\n```\n\n    100\n    hello: 100\n    \n    4539482520\n    4539482520\n    hey: 100\n\n\n## generator\n\n\n```python\ndef fab(max): \n    n, a, b = 0, 0, 1 \n    while n < max: \n        yield b \n        # print b \n        a, b = b, a + b \n        n = n + 1\n    return n\n        \nfor n in fab(5):\n    print(n)\n```\n\n    1\n    1\n    2\n    3\n    5\n\n\n> 参考：\n\n1. [廖雪峰Python数据分析](https://www.julyedu.com/course/getDetail/66/)\n2. [yield讲解](https://www.ibm.com/developerworks/cn/opensource/os-cn-python-yield/)\n","slug":"2019-06-23_Python基本语法","published":1,"updated":"2019-06-23T15:16:55.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx93lf2p00023fs9h7tr52ad","content":"<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">\"===一维数组===\"</span>)</span><br><span class=\"line\">print([i * <span class=\"number\">2</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>)])</span><br><span class=\"line\">print([i * i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>)])</span><br><span class=\"line\">print([i * i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>) <span class=\"keyword\">if</span> (i % <span class=\"number\">3</span>) == <span class=\"number\">0</span>])</span><br><span class=\"line\">print([(x, y) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">3</span>) <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> range(<span class=\"number\">3</span>)])</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===二维数组===\"</span>)</span><br><span class=\"line\">a = [[<span class=\"number\">3</span>] * (i + <span class=\"number\">1</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">3</span>)]</span><br><span class=\"line\">print(a[<span class=\"number\">2</span>])</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===乘法的问题===\"</span>)</span><br><span class=\"line\">a = [[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]] * <span class=\"number\">3</span></span><br><span class=\"line\">a[<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"number\">100</span></span><br><span class=\"line\">print(a)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===解决方法===\"</span>)</span><br><span class=\"line\">a = [[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">3</span>)]</span><br><span class=\"line\">a[<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"number\">100</span></span><br><span class=\"line\">print(a)</span><br></pre></td></tr></table></figure>\n\n<pre><code>===一维数组===\n[0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n[0, 9, 36, 81]\n[(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]\n\n===二维数组===\n[3, 3, 3]\n\n===乘法的问题===\n[[1, 100, 3], [1, 100, 3], [1, 100, 3]]\n\n===解决方法===\n[[1, 2, 3], [1, 100, 3], [1, 2, 3]]</code></pre><h2 id=\"字典\"><a href=\"#字典\" class=\"headerlink\" title=\"字典\"></a>字典</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">\"===初始化===\"</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">'a'</span>:<span class=\"number\">1</span>, <span class=\"number\">2</span>:<span class=\"string\">'b'</span>, <span class=\"string\">'c'</span>:<span class=\"number\">3</span>, <span class=\"number\">4</span>:<span class=\"string\">'d'</span>&#125;</span><br><span class=\"line\">print(d)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===获取长度===\"</span>)</span><br><span class=\"line\">print(len(d))</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===根据key读写===\"</span>)</span><br><span class=\"line\">d[<span class=\"string\">'a'</span>] = <span class=\"number\">100</span></span><br><span class=\"line\">d[<span class=\"number\">4</span>] = <span class=\"string\">'dd'</span></span><br><span class=\"line\">print(d)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===添加元素===\"</span>)</span><br><span class=\"line\">d[<span class=\"string\">'e'</span>] = <span class=\"number\">5</span></span><br><span class=\"line\">d[<span class=\"number\">6</span>] = <span class=\"string\">'f'</span></span><br><span class=\"line\">print(d)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===删除元素===\"</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">'a'</span>:<span class=\"number\">1</span>, <span class=\"number\">2</span>:<span class=\"string\">'b'</span>, <span class=\"string\">'c'</span>:<span class=\"number\">3</span>, <span class=\"number\">4</span>:<span class=\"string\">'d'</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">del</span>(d[<span class=\"string\">'a'</span>])</span><br><span class=\"line\"><span class=\"keyword\">del</span>(d[<span class=\"number\">2</span>])</span><br><span class=\"line\">print(d)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===判断key是否存在===\"</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">'a'</span>:<span class=\"number\">1</span>, <span class=\"number\">2</span>:<span class=\"string\">'b'</span>, <span class=\"string\">'c'</span>:<span class=\"number\">3</span>, <span class=\"number\">4</span>:<span class=\"string\">'d'</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"string\">'a'</span> <span class=\"keyword\">in</span> d:</span><br><span class=\"line\">    print(<span class=\"string\">'a in d'</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"number\">2</span> <span class=\"keyword\">in</span> d:</span><br><span class=\"line\">    print(<span class=\"string\">'2 in d'</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> (<span class=\"string\">'x'</span> <span class=\"keyword\">in</span> d):</span><br><span class=\"line\">    print(<span class=\"string\">'x not in d'</span>)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===判断字典是否为空===\"</span>)</span><br><span class=\"line\">d = &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> d:</span><br><span class=\"line\">    print(<span class=\"string\">'d is empty'</span>)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===遍历===\"</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">'a'</span>:<span class=\"number\">1</span>, <span class=\"number\">2</span>:<span class=\"string\">'b'</span>, <span class=\"string\">'c'</span>:<span class=\"number\">3</span>, <span class=\"number\">4</span>:<span class=\"string\">'d'</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> d.keys():</span><br><span class=\"line\">    print(str(k) + <span class=\"string\">': '</span> + str(d[k]))</span><br><span class=\"line\"><span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> d.items():</span><br><span class=\"line\">    print(str(k) + <span class=\"string\">': '</span> + str(v))</span><br></pre></td></tr></table></figure>\n\n<pre><code>===初始化===\n{&apos;a&apos;: 1, 2: &apos;b&apos;, &apos;c&apos;: 3, 4: &apos;d&apos;}\n\n===获取长度===\n4\n\n===根据key读写===\n{&apos;a&apos;: 100, 2: &apos;b&apos;, &apos;c&apos;: 3, 4: &apos;dd&apos;}\n\n===添加元素===\n{&apos;a&apos;: 100, 2: &apos;b&apos;, &apos;c&apos;: 3, 4: &apos;dd&apos;, &apos;e&apos;: 5, 6: &apos;f&apos;}\n\n===删除元素===\n{&apos;c&apos;: 3, 4: &apos;d&apos;}\n\n===判断key是否存在===\na in d\n2 in d\nx not in d\n\n===判断字典是否为空===\nd is empty\n\n===遍历===\na: 1\n2: b\nc: 3\n4: d\na: 1\n2: b\nc: 3\n4: d</code></pre><h2 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">\"===初始化===\"</span>)</span><br><span class=\"line\">s_a = set([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>])</span><br><span class=\"line\">s_b = set([<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>])</span><br><span class=\"line\">print(s_a)</span><br><span class=\"line\">print(s_b)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===获取长度===\"</span>)</span><br><span class=\"line\">print(len(s_a))</span><br><span class=\"line\">print(len(s_b))</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===添加元素===\"</span>)</span><br><span class=\"line\">s_a.add(<span class=\"number\">6</span>)</span><br><span class=\"line\">s_a.add(<span class=\"number\">6</span>)</span><br><span class=\"line\">s_a.update([<span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>])</span><br><span class=\"line\">print(s_a)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===删除元素===\"</span>)</span><br><span class=\"line\">s_a.remove(<span class=\"number\">8</span>)</span><br><span class=\"line\">s_a.remove(<span class=\"number\">9</span>)</span><br><span class=\"line\">print(s_a)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===判断元素是否存在===\"</span>)</span><br><span class=\"line\">print(<span class=\"number\">1</span> <span class=\"keyword\">in</span> s_a)</span><br><span class=\"line\">print(<span class=\"number\">10</span> <span class=\"keyword\">in</span> s_a)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===判断集合是否为空===\"</span>)</span><br><span class=\"line\">s_a = set([])</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> s_a:</span><br><span class=\"line\">    print(<span class=\"string\">'set is empty'</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">'set is not empty'</span>)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===遍历===\"</span>)</span><br><span class=\"line\">s_a = set([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s_a:</span><br><span class=\"line\">    print(i)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===集合操作===\"</span>)</span><br><span class=\"line\">s_a = set([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>])</span><br><span class=\"line\">s_b = set([<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===并集===\"</span>)</span><br><span class=\"line\">print(s_a | s_b)</span><br><span class=\"line\">print(s_a.union(s_b))</span><br><span class=\"line\">print(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===交集===\"</span>)</span><br><span class=\"line\">print(s_a &amp; s_b)</span><br><span class=\"line\">print(s_a.intersection(s_b))</span><br><span class=\"line\">print(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===差集 s_a - (s_a and s_b)===\"</span>)</span><br><span class=\"line\">print(s_a - s_b)</span><br><span class=\"line\">print(s_a.difference(s_b))</span><br><span class=\"line\">print(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===对称差===\"</span>)</span><br><span class=\"line\">print(s_a ^ s_b)</span><br><span class=\"line\">print((s_a | s_b) - (s_a &amp; s_b))</span><br><span class=\"line\">print(s_a.symmetric_difference(s_b))</span><br></pre></td></tr></table></figure>\n\n<pre><code>===初始化===\n{1, 2, 3, 4, 5}\n{1, 2, 3, 4, 5}\n\n===获取长度===\n5\n5\n\n===添加元素===\n{1, 2, 3, 4, 5, 6, 7, 8, 9}\n\n===删除元素===\n{1, 2, 3, 4, 5, 6, 7}\n\n===判断元素是否存在===\nTrue\nFalse\n\n===判断集合是否为空===\nset is empty\n\n===遍历===\n1\n2\n3\n4\n5\n\n===集合操作===\n===并集===\n{1, 2, 3, 4, 5, 6, 7, 8}\n{1, 2, 3, 4, 5, 6, 7, 8}\n\n===交集===\n{4, 5}\n{4, 5}\n\n===差集 s_a - (s_a and s_b)===\n{1, 2, 3}\n{1, 2, 3}\n\n===对称差===\n{1, 2, 3, 6, 7, 8}\n{1, 2, 3, 6, 7, 8}\n{1, 2, 3, 6, 7, 8}</code></pre><h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">\"===初始化列表===\"</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"string\">'abc'</span>, <span class=\"number\">4.5</span>, [<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], &#123;<span class=\"number\">1</span>:<span class=\"string\">'one'</span>&#125;]</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===获取长度===\"</span>)</span><br><span class=\"line\">print(len(li))</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===根据索引读写===\"</span>)</span><br><span class=\"line\">print(li[<span class=\"number\">0</span>])</span><br><span class=\"line\">print(li[<span class=\"number\">3</span>])</span><br><span class=\"line\">print(li[<span class=\"number\">-1</span>])</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===添加元素===\"</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">li.append(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">li.append(<span class=\"string\">'b'</span>)</span><br><span class=\"line\">print(li)</span><br><span class=\"line\">li.append([<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>])</span><br><span class=\"line\">print(li)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">li.extend([<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>])</span><br><span class=\"line\">print(li)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===删除元素===\"</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\">li.pop()</span><br><span class=\"line\">print(li)</span><br><span class=\"line\"><span class=\"keyword\">del</span>(li[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">del</span>(li[<span class=\"number\">1</span>])</span><br><span class=\"line\">print(li)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===元素是否存在===\"</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\">print(<span class=\"number\">1</span> <span class=\"keyword\">in</span> li)</span><br><span class=\"line\">print(<span class=\"number\">6</span> <span class=\"keyword\">in</span> li)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===列表是否为空===\"</span>)</span><br><span class=\"line\">li = []</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> li:</span><br><span class=\"line\">    print(<span class=\"string\">'Empty'</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">'Not empty'</span>)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===字符串===\"</span>)</span><br><span class=\"line\">s = <span class=\"string\">'abcdefg'</span></span><br><span class=\"line\">li = list(s)</span><br><span class=\"line\">li[<span class=\"number\">4</span>] = <span class=\"string\">'E'</span></span><br><span class=\"line\">li[<span class=\"number\">5</span>] = <span class=\"string\">'F'</span></span><br><span class=\"line\">print(li)</span><br><span class=\"line\">s = <span class=\"string\">''</span>.join(li)</span><br><span class=\"line\">print(s)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===遍历===\"</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> li:</span><br><span class=\"line\">    print(i)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(li)):</span><br><span class=\"line\">    print(li[i])</span><br></pre></td></tr></table></figure>\n\n<pre><code>===初始化列表===\n===获取长度===\n7\n\n===根据索引读写===\n1\nabc\n{1: &apos;one&apos;}\n\n===添加元素===\n[1, 2, 3, &apos;a&apos;, &apos;b&apos;]\n[1, 2, 3, &apos;a&apos;, &apos;b&apos;, [4, 5, 6]]\n[1, 2, 3, 4, 5, 6]\n\n===删除元素===\n[1, 2, 3, 4]\n[2, 4]\n\n===元素是否存在===\nTrue\nFalse\n\n===列表是否为空===\nEmpty\n\n===字符串===\n[&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;E&apos;, &apos;F&apos;, &apos;g&apos;]\nabcdEFg\n\n===遍历===\n1\n2\n3\n1\n2\n3</code></pre><h2 id=\"切片\"><a href=\"#切片\" class=\"headerlink\" title=\"切片\"></a>切片</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">li = [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===切片===\"</span>)</span><br><span class=\"line\">print(li[<span class=\"number\">2</span>:<span class=\"number\">5</span>])</span><br><span class=\"line\">print(li[:<span class=\"number\">4</span>])</span><br><span class=\"line\">print(li[<span class=\"number\">5</span>:])</span><br><span class=\"line\">print(li[:])</span><br><span class=\"line\">print(li[<span class=\"number\">0</span>:<span class=\"number\">6</span>:<span class=\"number\">2</span>])</span><br><span class=\"line\">print(li[<span class=\"number\">3</span>::<span class=\"number\">2</span>])</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===负数索引和step===\"</span>)</span><br><span class=\"line\">print(li[::<span class=\"number\">-1</span>])</span><br><span class=\"line\">print(li[::<span class=\"number\">-2</span>])</span><br><span class=\"line\">print(li[<span class=\"number\">-6</span>:<span class=\"number\">-1</span>:<span class=\"number\">1</span>])</span><br><span class=\"line\">print(li[<span class=\"number\">-1</span>::<span class=\"number\">-1</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>===切片===\n[2, 3, 4]\n[0, 1, 2, 3]\n[5, 6, 7, 8, 9, 10]\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n[0, 2, 4]\n[3, 5, 7, 9]\n\n===负数索引和step===\n[10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n[10, 8, 6, 4, 2, 0]\n[5, 6, 7, 8, 9]\n[10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]</code></pre><h2 id=\"json处理\"><a href=\"#json处理\" class=\"headerlink\" title=\"json处理\"></a>json处理</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===dict与json互转===\"</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">'Python'</span>:<span class=\"number\">100</span>, <span class=\"string\">'C++'</span>:<span class=\"number\">70</span>, <span class=\"string\">'Basic'</span>:<span class=\"number\">60</span>, <span class=\"string\">'others'</span>:&#123;<span class=\"string\">'C'</span>:<span class=\"number\">65</span>, <span class=\"string\">'Java'</span>:<span class=\"number\">50</span>&#125;&#125;</span><br><span class=\"line\">jtxt = json.dumps(d)</span><br><span class=\"line\">dd = json.loads(jtxt)</span><br><span class=\"line\">print(jtxt)</span><br><span class=\"line\">print(dd)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===用json序列化非dict对象===\"</span>)</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, name, age, score)</span>:</span></span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\">        self.score = score</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'%s: %d, %d'</span> % (self.name, self.age, self.score)</span><br><span class=\"line\"></span><br><span class=\"line\">s = Student(<span class=\"string\">'Tom'</span>, <span class=\"number\">15</span>, <span class=\"number\">85</span>)</span><br><span class=\"line\">print(s)</span><br><span class=\"line\">print(s.__dict__)</span><br><span class=\"line\">print(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===方法1===\"</span>)</span><br><span class=\"line\">jtxt = json.dumps(s, default = <span class=\"keyword\">lambda</span> obj: obj.__dict__)</span><br><span class=\"line\">print(jtxt)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">d2s</span><span class=\"params\">(d)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> Student(d[<span class=\"string\">'name'</span>], d[<span class=\"string\">'age'</span>], d[<span class=\"string\">'score'</span>])</span><br><span class=\"line\">print(json.loads(jtxt, object_hook = d2s))</span><br><span class=\"line\">print(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===方法2===\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">s2d</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.__dict__</span><br><span class=\"line\">jtxt = json.dumps(s, default = s2d)</span><br><span class=\"line\">print(jtxt)</span><br></pre></td></tr></table></figure>\n\n<pre><code>===dict与json互转===\n{&quot;Python&quot;: 100, &quot;C++&quot;: 70, &quot;Basic&quot;: 60, &quot;others&quot;: {&quot;C&quot;: 65, &quot;Java&quot;: 50}}\n{&apos;Python&apos;: 100, &apos;C++&apos;: 70, &apos;Basic&apos;: 60, &apos;others&apos;: {&apos;C&apos;: 65, &apos;Java&apos;: 50}}\n\n===用json序列化非dict对象===\nTom: 15, 85\n{&apos;name&apos;: &apos;Tom&apos;, &apos;age&apos;: 15, &apos;score&apos;: 85}\n\n===方法1===\n{&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;: 15, &quot;score&quot;: 85}\nTom: 15, 85\n\n===方法2===\n{&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;: 15, &quot;score&quot;: 85}</code></pre><h2 id=\"class\"><a href=\"#class\" class=\"headerlink\" title=\"class\"></a>class</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, val)</span>:</span></span><br><span class=\"line\">        self.val = val</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">display</span><span class=\"params\">(self, s)</span>:</span></span><br><span class=\"line\">        print(<span class=\"string\">'%s: %d'</span> % (s, self.val))</span><br><span class=\"line\"></span><br><span class=\"line\">m = MyClass(<span class=\"number\">100</span>)</span><br><span class=\"line\">print(m.val)</span><br><span class=\"line\">m.display(<span class=\"string\">'hello'</span>)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">m2 = m</span><br><span class=\"line\">print(id(m))</span><br><span class=\"line\">print(id(m2))</span><br><span class=\"line\"></span><br><span class=\"line\">fn = m.display</span><br><span class=\"line\">fn(<span class=\"string\">'hey'</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>100\nhello: 100\n\n4539482520\n4539482520\nhey: 100</code></pre><h2 id=\"generator\"><a href=\"#generator\" class=\"headerlink\" title=\"generator\"></a>generator</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fab</span><span class=\"params\">(max)</span>:</span> </span><br><span class=\"line\">    n, a, b = <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span> </span><br><span class=\"line\">    <span class=\"keyword\">while</span> n &lt; max: </span><br><span class=\"line\">        <span class=\"keyword\">yield</span> b </span><br><span class=\"line\">        <span class=\"comment\"># print b </span></span><br><span class=\"line\">        a, b = b, a + b </span><br><span class=\"line\">        n = n + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> n</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> fab(<span class=\"number\">5</span>):</span><br><span class=\"line\">    print(n)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1\n1\n2\n3\n5</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a href=\"https://www.julyedu.com/course/getDetail/66/\" target=\"_blank\" rel=\"noopener\">廖雪峰Python数据分析</a></li>\n<li><a href=\"https://www.ibm.com/developerworks/cn/opensource/os-cn-python-yield/\" target=\"_blank\" rel=\"noopener\">yield讲解</a></li>\n</ol>\n","site":{"data":{}},"length":6949,"excerpt":"","more":"<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">\"===一维数组===\"</span>)</span><br><span class=\"line\">print([i * <span class=\"number\">2</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>)])</span><br><span class=\"line\">print([i * i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>)])</span><br><span class=\"line\">print([i * i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>) <span class=\"keyword\">if</span> (i % <span class=\"number\">3</span>) == <span class=\"number\">0</span>])</span><br><span class=\"line\">print([(x, y) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">3</span>) <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> range(<span class=\"number\">3</span>)])</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===二维数组===\"</span>)</span><br><span class=\"line\">a = [[<span class=\"number\">3</span>] * (i + <span class=\"number\">1</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">3</span>)]</span><br><span class=\"line\">print(a[<span class=\"number\">2</span>])</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===乘法的问题===\"</span>)</span><br><span class=\"line\">a = [[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]] * <span class=\"number\">3</span></span><br><span class=\"line\">a[<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"number\">100</span></span><br><span class=\"line\">print(a)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===解决方法===\"</span>)</span><br><span class=\"line\">a = [[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">3</span>)]</span><br><span class=\"line\">a[<span class=\"number\">1</span>][<span class=\"number\">1</span>] = <span class=\"number\">100</span></span><br><span class=\"line\">print(a)</span><br></pre></td></tr></table></figure>\n\n<pre><code>===一维数组===\n[0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n[0, 9, 36, 81]\n[(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]\n\n===二维数组===\n[3, 3, 3]\n\n===乘法的问题===\n[[1, 100, 3], [1, 100, 3], [1, 100, 3]]\n\n===解决方法===\n[[1, 2, 3], [1, 100, 3], [1, 2, 3]]</code></pre><h2 id=\"字典\"><a href=\"#字典\" class=\"headerlink\" title=\"字典\"></a>字典</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">\"===初始化===\"</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">'a'</span>:<span class=\"number\">1</span>, <span class=\"number\">2</span>:<span class=\"string\">'b'</span>, <span class=\"string\">'c'</span>:<span class=\"number\">3</span>, <span class=\"number\">4</span>:<span class=\"string\">'d'</span>&#125;</span><br><span class=\"line\">print(d)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===获取长度===\"</span>)</span><br><span class=\"line\">print(len(d))</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===根据key读写===\"</span>)</span><br><span class=\"line\">d[<span class=\"string\">'a'</span>] = <span class=\"number\">100</span></span><br><span class=\"line\">d[<span class=\"number\">4</span>] = <span class=\"string\">'dd'</span></span><br><span class=\"line\">print(d)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===添加元素===\"</span>)</span><br><span class=\"line\">d[<span class=\"string\">'e'</span>] = <span class=\"number\">5</span></span><br><span class=\"line\">d[<span class=\"number\">6</span>] = <span class=\"string\">'f'</span></span><br><span class=\"line\">print(d)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===删除元素===\"</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">'a'</span>:<span class=\"number\">1</span>, <span class=\"number\">2</span>:<span class=\"string\">'b'</span>, <span class=\"string\">'c'</span>:<span class=\"number\">3</span>, <span class=\"number\">4</span>:<span class=\"string\">'d'</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">del</span>(d[<span class=\"string\">'a'</span>])</span><br><span class=\"line\"><span class=\"keyword\">del</span>(d[<span class=\"number\">2</span>])</span><br><span class=\"line\">print(d)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===判断key是否存在===\"</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">'a'</span>:<span class=\"number\">1</span>, <span class=\"number\">2</span>:<span class=\"string\">'b'</span>, <span class=\"string\">'c'</span>:<span class=\"number\">3</span>, <span class=\"number\">4</span>:<span class=\"string\">'d'</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"string\">'a'</span> <span class=\"keyword\">in</span> d:</span><br><span class=\"line\">    print(<span class=\"string\">'a in d'</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"number\">2</span> <span class=\"keyword\">in</span> d:</span><br><span class=\"line\">    print(<span class=\"string\">'2 in d'</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> (<span class=\"string\">'x'</span> <span class=\"keyword\">in</span> d):</span><br><span class=\"line\">    print(<span class=\"string\">'x not in d'</span>)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===判断字典是否为空===\"</span>)</span><br><span class=\"line\">d = &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> d:</span><br><span class=\"line\">    print(<span class=\"string\">'d is empty'</span>)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===遍历===\"</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">'a'</span>:<span class=\"number\">1</span>, <span class=\"number\">2</span>:<span class=\"string\">'b'</span>, <span class=\"string\">'c'</span>:<span class=\"number\">3</span>, <span class=\"number\">4</span>:<span class=\"string\">'d'</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> d.keys():</span><br><span class=\"line\">    print(str(k) + <span class=\"string\">': '</span> + str(d[k]))</span><br><span class=\"line\"><span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> d.items():</span><br><span class=\"line\">    print(str(k) + <span class=\"string\">': '</span> + str(v))</span><br></pre></td></tr></table></figure>\n\n<pre><code>===初始化===\n{&apos;a&apos;: 1, 2: &apos;b&apos;, &apos;c&apos;: 3, 4: &apos;d&apos;}\n\n===获取长度===\n4\n\n===根据key读写===\n{&apos;a&apos;: 100, 2: &apos;b&apos;, &apos;c&apos;: 3, 4: &apos;dd&apos;}\n\n===添加元素===\n{&apos;a&apos;: 100, 2: &apos;b&apos;, &apos;c&apos;: 3, 4: &apos;dd&apos;, &apos;e&apos;: 5, 6: &apos;f&apos;}\n\n===删除元素===\n{&apos;c&apos;: 3, 4: &apos;d&apos;}\n\n===判断key是否存在===\na in d\n2 in d\nx not in d\n\n===判断字典是否为空===\nd is empty\n\n===遍历===\na: 1\n2: b\nc: 3\n4: d\na: 1\n2: b\nc: 3\n4: d</code></pre><h2 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">\"===初始化===\"</span>)</span><br><span class=\"line\">s_a = set([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>])</span><br><span class=\"line\">s_b = set([<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>])</span><br><span class=\"line\">print(s_a)</span><br><span class=\"line\">print(s_b)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===获取长度===\"</span>)</span><br><span class=\"line\">print(len(s_a))</span><br><span class=\"line\">print(len(s_b))</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===添加元素===\"</span>)</span><br><span class=\"line\">s_a.add(<span class=\"number\">6</span>)</span><br><span class=\"line\">s_a.add(<span class=\"number\">6</span>)</span><br><span class=\"line\">s_a.update([<span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>])</span><br><span class=\"line\">print(s_a)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===删除元素===\"</span>)</span><br><span class=\"line\">s_a.remove(<span class=\"number\">8</span>)</span><br><span class=\"line\">s_a.remove(<span class=\"number\">9</span>)</span><br><span class=\"line\">print(s_a)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===判断元素是否存在===\"</span>)</span><br><span class=\"line\">print(<span class=\"number\">1</span> <span class=\"keyword\">in</span> s_a)</span><br><span class=\"line\">print(<span class=\"number\">10</span> <span class=\"keyword\">in</span> s_a)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===判断集合是否为空===\"</span>)</span><br><span class=\"line\">s_a = set([])</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> s_a:</span><br><span class=\"line\">    print(<span class=\"string\">'set is empty'</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">'set is not empty'</span>)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===遍历===\"</span>)</span><br><span class=\"line\">s_a = set([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>])</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s_a:</span><br><span class=\"line\">    print(i)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===集合操作===\"</span>)</span><br><span class=\"line\">s_a = set([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>])</span><br><span class=\"line\">s_b = set([<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===并集===\"</span>)</span><br><span class=\"line\">print(s_a | s_b)</span><br><span class=\"line\">print(s_a.union(s_b))</span><br><span class=\"line\">print(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===交集===\"</span>)</span><br><span class=\"line\">print(s_a &amp; s_b)</span><br><span class=\"line\">print(s_a.intersection(s_b))</span><br><span class=\"line\">print(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===差集 s_a - (s_a and s_b)===\"</span>)</span><br><span class=\"line\">print(s_a - s_b)</span><br><span class=\"line\">print(s_a.difference(s_b))</span><br><span class=\"line\">print(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===对称差===\"</span>)</span><br><span class=\"line\">print(s_a ^ s_b)</span><br><span class=\"line\">print((s_a | s_b) - (s_a &amp; s_b))</span><br><span class=\"line\">print(s_a.symmetric_difference(s_b))</span><br></pre></td></tr></table></figure>\n\n<pre><code>===初始化===\n{1, 2, 3, 4, 5}\n{1, 2, 3, 4, 5}\n\n===获取长度===\n5\n5\n\n===添加元素===\n{1, 2, 3, 4, 5, 6, 7, 8, 9}\n\n===删除元素===\n{1, 2, 3, 4, 5, 6, 7}\n\n===判断元素是否存在===\nTrue\nFalse\n\n===判断集合是否为空===\nset is empty\n\n===遍历===\n1\n2\n3\n4\n5\n\n===集合操作===\n===并集===\n{1, 2, 3, 4, 5, 6, 7, 8}\n{1, 2, 3, 4, 5, 6, 7, 8}\n\n===交集===\n{4, 5}\n{4, 5}\n\n===差集 s_a - (s_a and s_b)===\n{1, 2, 3}\n{1, 2, 3}\n\n===对称差===\n{1, 2, 3, 6, 7, 8}\n{1, 2, 3, 6, 7, 8}\n{1, 2, 3, 6, 7, 8}</code></pre><h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">\"===初始化列表===\"</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"string\">'abc'</span>, <span class=\"number\">4.5</span>, [<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], &#123;<span class=\"number\">1</span>:<span class=\"string\">'one'</span>&#125;]</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===获取长度===\"</span>)</span><br><span class=\"line\">print(len(li))</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===根据索引读写===\"</span>)</span><br><span class=\"line\">print(li[<span class=\"number\">0</span>])</span><br><span class=\"line\">print(li[<span class=\"number\">3</span>])</span><br><span class=\"line\">print(li[<span class=\"number\">-1</span>])</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===添加元素===\"</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">li.append(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">li.append(<span class=\"string\">'b'</span>)</span><br><span class=\"line\">print(li)</span><br><span class=\"line\">li.append([<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>])</span><br><span class=\"line\">print(li)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\">li.extend([<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>])</span><br><span class=\"line\">print(li)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===删除元素===\"</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\">li.pop()</span><br><span class=\"line\">print(li)</span><br><span class=\"line\"><span class=\"keyword\">del</span>(li[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">del</span>(li[<span class=\"number\">1</span>])</span><br><span class=\"line\">print(li)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===元素是否存在===\"</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\">print(<span class=\"number\">1</span> <span class=\"keyword\">in</span> li)</span><br><span class=\"line\">print(<span class=\"number\">6</span> <span class=\"keyword\">in</span> li)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===列表是否为空===\"</span>)</span><br><span class=\"line\">li = []</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> li:</span><br><span class=\"line\">    print(<span class=\"string\">'Empty'</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">'Not empty'</span>)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===字符串===\"</span>)</span><br><span class=\"line\">s = <span class=\"string\">'abcdefg'</span></span><br><span class=\"line\">li = list(s)</span><br><span class=\"line\">li[<span class=\"number\">4</span>] = <span class=\"string\">'E'</span></span><br><span class=\"line\">li[<span class=\"number\">5</span>] = <span class=\"string\">'F'</span></span><br><span class=\"line\">print(li)</span><br><span class=\"line\">s = <span class=\"string\">''</span>.join(li)</span><br><span class=\"line\">print(s)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===遍历===\"</span>)</span><br><span class=\"line\">li = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> li:</span><br><span class=\"line\">    print(i)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(li)):</span><br><span class=\"line\">    print(li[i])</span><br></pre></td></tr></table></figure>\n\n<pre><code>===初始化列表===\n===获取长度===\n7\n\n===根据索引读写===\n1\nabc\n{1: &apos;one&apos;}\n\n===添加元素===\n[1, 2, 3, &apos;a&apos;, &apos;b&apos;]\n[1, 2, 3, &apos;a&apos;, &apos;b&apos;, [4, 5, 6]]\n[1, 2, 3, 4, 5, 6]\n\n===删除元素===\n[1, 2, 3, 4]\n[2, 4]\n\n===元素是否存在===\nTrue\nFalse\n\n===列表是否为空===\nEmpty\n\n===字符串===\n[&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;E&apos;, &apos;F&apos;, &apos;g&apos;]\nabcdEFg\n\n===遍历===\n1\n2\n3\n1\n2\n3</code></pre><h2 id=\"切片\"><a href=\"#切片\" class=\"headerlink\" title=\"切片\"></a>切片</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">li = [<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===切片===\"</span>)</span><br><span class=\"line\">print(li[<span class=\"number\">2</span>:<span class=\"number\">5</span>])</span><br><span class=\"line\">print(li[:<span class=\"number\">4</span>])</span><br><span class=\"line\">print(li[<span class=\"number\">5</span>:])</span><br><span class=\"line\">print(li[:])</span><br><span class=\"line\">print(li[<span class=\"number\">0</span>:<span class=\"number\">6</span>:<span class=\"number\">2</span>])</span><br><span class=\"line\">print(li[<span class=\"number\">3</span>::<span class=\"number\">2</span>])</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===负数索引和step===\"</span>)</span><br><span class=\"line\">print(li[::<span class=\"number\">-1</span>])</span><br><span class=\"line\">print(li[::<span class=\"number\">-2</span>])</span><br><span class=\"line\">print(li[<span class=\"number\">-6</span>:<span class=\"number\">-1</span>:<span class=\"number\">1</span>])</span><br><span class=\"line\">print(li[<span class=\"number\">-1</span>::<span class=\"number\">-1</span>])</span><br></pre></td></tr></table></figure>\n\n<pre><code>===切片===\n[2, 3, 4]\n[0, 1, 2, 3]\n[5, 6, 7, 8, 9, 10]\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n[0, 2, 4]\n[3, 5, 7, 9]\n\n===负数索引和step===\n[10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n[10, 8, 6, 4, 2, 0]\n[5, 6, 7, 8, 9]\n[10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]</code></pre><h2 id=\"json处理\"><a href=\"#json处理\" class=\"headerlink\" title=\"json处理\"></a>json处理</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===dict与json互转===\"</span>)</span><br><span class=\"line\">d = &#123;<span class=\"string\">'Python'</span>:<span class=\"number\">100</span>, <span class=\"string\">'C++'</span>:<span class=\"number\">70</span>, <span class=\"string\">'Basic'</span>:<span class=\"number\">60</span>, <span class=\"string\">'others'</span>:&#123;<span class=\"string\">'C'</span>:<span class=\"number\">65</span>, <span class=\"string\">'Java'</span>:<span class=\"number\">50</span>&#125;&#125;</span><br><span class=\"line\">jtxt = json.dumps(d)</span><br><span class=\"line\">dd = json.loads(jtxt)</span><br><span class=\"line\">print(jtxt)</span><br><span class=\"line\">print(dd)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===用json序列化非dict对象===\"</span>)</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, name, age, score)</span>:</span></span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.age = age</span><br><span class=\"line\">        self.score = score</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'%s: %d, %d'</span> % (self.name, self.age, self.score)</span><br><span class=\"line\"></span><br><span class=\"line\">s = Student(<span class=\"string\">'Tom'</span>, <span class=\"number\">15</span>, <span class=\"number\">85</span>)</span><br><span class=\"line\">print(s)</span><br><span class=\"line\">print(s.__dict__)</span><br><span class=\"line\">print(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===方法1===\"</span>)</span><br><span class=\"line\">jtxt = json.dumps(s, default = <span class=\"keyword\">lambda</span> obj: obj.__dict__)</span><br><span class=\"line\">print(jtxt)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">d2s</span><span class=\"params\">(d)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> Student(d[<span class=\"string\">'name'</span>], d[<span class=\"string\">'age'</span>], d[<span class=\"string\">'score'</span>])</span><br><span class=\"line\">print(json.loads(jtxt, object_hook = d2s))</span><br><span class=\"line\">print(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"===方法2===\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">s2d</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.__dict__</span><br><span class=\"line\">jtxt = json.dumps(s, default = s2d)</span><br><span class=\"line\">print(jtxt)</span><br></pre></td></tr></table></figure>\n\n<pre><code>===dict与json互转===\n{&quot;Python&quot;: 100, &quot;C++&quot;: 70, &quot;Basic&quot;: 60, &quot;others&quot;: {&quot;C&quot;: 65, &quot;Java&quot;: 50}}\n{&apos;Python&apos;: 100, &apos;C++&apos;: 70, &apos;Basic&apos;: 60, &apos;others&apos;: {&apos;C&apos;: 65, &apos;Java&apos;: 50}}\n\n===用json序列化非dict对象===\nTom: 15, 85\n{&apos;name&apos;: &apos;Tom&apos;, &apos;age&apos;: 15, &apos;score&apos;: 85}\n\n===方法1===\n{&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;: 15, &quot;score&quot;: 85}\nTom: 15, 85\n\n===方法2===\n{&quot;name&quot;: &quot;Tom&quot;, &quot;age&quot;: 15, &quot;score&quot;: 85}</code></pre><h2 id=\"class\"><a href=\"#class\" class=\"headerlink\" title=\"class\"></a>class</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, val)</span>:</span></span><br><span class=\"line\">        self.val = val</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">display</span><span class=\"params\">(self, s)</span>:</span></span><br><span class=\"line\">        print(<span class=\"string\">'%s: %d'</span> % (s, self.val))</span><br><span class=\"line\"></span><br><span class=\"line\">m = MyClass(<span class=\"number\">100</span>)</span><br><span class=\"line\">print(m.val)</span><br><span class=\"line\">m.display(<span class=\"string\">'hello'</span>)</span><br><span class=\"line\">print(<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">m2 = m</span><br><span class=\"line\">print(id(m))</span><br><span class=\"line\">print(id(m2))</span><br><span class=\"line\"></span><br><span class=\"line\">fn = m.display</span><br><span class=\"line\">fn(<span class=\"string\">'hey'</span>)</span><br></pre></td></tr></table></figure>\n\n<pre><code>100\nhello: 100\n\n4539482520\n4539482520\nhey: 100</code></pre><h2 id=\"generator\"><a href=\"#generator\" class=\"headerlink\" title=\"generator\"></a>generator</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fab</span><span class=\"params\">(max)</span>:</span> </span><br><span class=\"line\">    n, a, b = <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span> </span><br><span class=\"line\">    <span class=\"keyword\">while</span> n &lt; max: </span><br><span class=\"line\">        <span class=\"keyword\">yield</span> b </span><br><span class=\"line\">        <span class=\"comment\"># print b </span></span><br><span class=\"line\">        a, b = b, a + b </span><br><span class=\"line\">        n = n + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> n</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> fab(<span class=\"number\">5</span>):</span><br><span class=\"line\">    print(n)</span><br></pre></td></tr></table></figure>\n\n<pre><code>1\n1\n2\n3\n5</code></pre><blockquote>\n<p>参考：</p>\n</blockquote>\n<ol>\n<li><a href=\"https://www.julyedu.com/course/getDetail/66/\" target=\"_blank\" rel=\"noopener\">廖雪峰Python数据分析</a></li>\n<li><a href=\"https://www.ibm.com/developerworks/cn/opensource/os-cn-python-yield/\" target=\"_blank\" rel=\"noopener\">yield讲解</a></li>\n</ol>\n"}],"PostAsset":[{"_id":"source/_posts/2019-06-23_Python基本语法/2019-06-23_Python基本语法.ipynb","post":"cjx93lf2p00023fs9h7tr52ad","slug":"2019-06-23_Python基本语法.ipynb","modified":1,"renderable":1},{"_id":"source/_posts/2019-06-22_两股票历史价格比较/2019-06-22_两股票历史价格比较.ipynb","post":"cjx93lf2j00003fs9kogwy4dz","slug":"2019-06-22_两股票历史价格比较.ipynb","modified":1,"renderable":1},{"_id":"source/_posts/2019-06-22_两股票历史价格比较/output_10_1.png","post":"cjx93lf2j00003fs9kogwy4dz","slug":"output_10_1.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cjx93lf2p00023fs9h7tr52ad","category_id":"cjx93lf2v00053fs9vc2l44ck","_id":"cjx93lf2x00073fs9c8spfuf9"},{"post_id":"cjx93lf2j00003fs9kogwy4dz","category_id":"cjx93lf2s00043fs9qoi0ui0q","_id":"cjx93lf2x00083fs9z1ytqvyi"},{"post_id":"cjx93lf2j00003fs9kogwy4dz","category_id":"cjx93lf2w00063fs9cwpihj7e","_id":"cjx93lf2x00093fs9qhkk4mmg"}],"PostTag":[],"Tag":[]}}